>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (811.6015625 MB free)
Uptime: 51386.0 sec
Load Avg:  1.0166015625  0.97802734375  0.958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    3086012 s       6465 s     279676 s    1180996 s        110 s
#2  3498 MHz    1148673 s        107 s     135421 s    3723440 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.29.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.032888 0.144062; -0.032888 0.0 -0.161255; -0.144062 0.161255 0.0])
dAA = TransformUtils.so3([0.0 0.0351464 0.193306; -0.0351464 0.0 -0.0550624; -0.193306 0.0550624 0.0])
dAA = TransformUtils.so3([0.0 -0.137927 0.0449594; 0.137927 0.0 0.280466; -0.0449594 -0.280466 0.0])
dAA = TransformUtils.Quaternion(0.9926725843908912,[-0.0665477,-0.0996491,-0.0155759])
dAA = TransformUtils.SO3([0.968314 -0.00514195 -0.249682; -0.0167404 0.996203 -0.0854382; 0.249173 0.0869107 0.964551])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.940393 -0.195879 0.278015; 0.228062 0.969639 -0.0882526; -0.252287 0.146397 0.956514]),[2.15014,-0.456979,0.219735])
xj = TransformUtils.SE3(TransformUtils.SO3([0.898489 -0.421269 0.123491; 0.388899 0.894313 0.221272; -0.203655 -0.150784 0.967362]),[0.917922,1.37459,-0.713071])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.985005 -0.154159 -0.0774592; 0.171282 0.927604 0.331983; 0.0206734 -0.340272 0.9401]),[-0.505725,1.88077,-1.39646])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
