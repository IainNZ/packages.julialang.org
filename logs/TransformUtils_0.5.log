>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (883.54296875 MB free)
Uptime: 38576.0 sec
Load Avg:  0.890625  0.91650390625  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2255998 s        141 s     223474 s     930487 s         68 s
#2  3500 MHz     792814 s       6747 s     104321 s    2860444 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0692517 -0.178232; 0.0692517 0.0 0.0435578; 0.178232 -0.0435578 0.0])
dAA = TransformUtils.so3([0.0 -0.124383 -0.024487; 0.124383 0.0 -0.179962; 0.024487 0.179962 0.0])
dAA = TransformUtils.so3([0.0 -0.0479266 -0.125611; 0.0479266 0.0 0.128802; 0.125611 -0.128802 0.0])
dAA = TransformUtils.Quaternion(0.9983006313289083,[-0.00896095,-0.0090321,-0.056868])
dAA = TransformUtils.SO3([0.988011 -0.140769 0.0633831; 0.141255 0.989968 -0.00323271; -0.0622921 0.0121472 0.997984])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.999027 -0.00946808 0.0430684; 0.0144803 0.992955 -0.117601; -0.0416516 0.11811 0.992127]),[0.662213,0.64696,2.49967])
xj = TransformUtils.SE3(TransformUtils.SO3([0.710561 -0.418429 -0.565704; 0.498395 0.866818 -0.0151339; 0.496694 -0.27119 0.82447]),[-0.432837,0.313082,1.50252])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.696399 -0.394174 -0.599713; 0.546821 0.832643 0.0877068; 0.464775 -0.389015 0.795394]),[-1.05729,-0.438931,-0.997196])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
