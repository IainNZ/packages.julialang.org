>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (639.5234375 MB free)
Uptime: 43341.0 sec
Load Avg:  1.00634765625  0.96435546875  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    2606366 s        126 s     246561 s     939935 s         86 s
#2  3498 MHz     789302 s       6237 s     106190 s    3317298 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0225299 0.150926; 0.0225299 0.0 0.105303; -0.150926 -0.105303 0.0])
dAA = TransformUtils.so3([0.0 -0.0436698 -0.0574433; 0.0436698 0.0 -0.00507465; 0.0574433 0.00507465 0.0])
dAA = TransformUtils.so3([0.0 -0.103041 -0.0594771; 0.103041 0.0 -0.00501196; 0.0594771 0.00501196 0.0])
dAA = TransformUtils.Quaternion(0.9974638352039779,[-0.0524375,0.00251807,0.0480611])
dAA = TransformUtils.SO3([0.987773 -0.153265 -0.0285299; 0.155501 0.981668 0.110217; 0.0111144 -0.113306 0.993498])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.965783 -0.188236 -0.178411; 0.170202 0.979065 -0.111637; 0.19569 0.0774512 0.977603]),[-0.138888,-0.348397,-0.721864])
xj = TransformUtils.SE3(TransformUtils.SO3([0.923608 0.0884142 0.373004; -0.216338 0.923497 0.316783; -0.31646 -0.373278 0.872076]),[-0.15693,0.149483,-0.130138])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.793255 0.169523 0.584815; -0.410176 0.85861 0.307482; -0.450002 -0.483788 0.750631]),[0.183111,0.536682,0.52611])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
