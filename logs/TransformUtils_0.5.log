>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (575.4140625 MB free)
Uptime: 45427.0 sec
Load Avg:  1.0029296875  1.00634765625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2689934 s       4342 s     245633 s    1048362 s        115 s
#2  3500 MHz     827662 s       2267 s     110421 s    3500158 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0846044 0.0799335; 0.0846044 0.0 0.0704999; -0.0799335 -0.0704999 0.0])
dAA = TransformUtils.so3([0.0 0.0125719 0.0554103; -0.0125719 0.0 -0.0578079; -0.0554103 0.0578079 0.0])
dAA = TransformUtils.so3([0.0 0.164516 -0.0299376; -0.164516 0.0 -0.276454; 0.0299376 0.276454 0.0])
dAA = TransformUtils.Quaternion(0.9955204494409116,[-0.026558,0.0812557,0.0403883])
dAA = TransformUtils.SO3([0.99295 -0.0516977 0.106669; 0.0497241 0.99854 0.0210809; -0.107603 -0.0156283 0.994071])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.890263 -0.255589 0.376969; 0.0456566 0.873605 0.48449; -0.453152 -0.414112 0.789407]),[-1.0579,-1.10874,-0.307624])
xj = TransformUtils.SE3(TransformUtils.SO3([0.992185 0.0492064 0.114663; -0.0743795 0.971078 0.226881; -0.100183 -0.233637 0.967149]),[0.931921,1.02267,-0.754603])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.925308 0.194016 -0.325827; -0.277083 0.932514 -0.231611; 0.258902 0.304592 0.916621]),[2.07133,1.53853,1.4299])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
