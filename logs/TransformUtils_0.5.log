>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (403.33203125 MB free)
Uptime: 48678.0 sec
Load Avg:  0.923828125  1.02197265625  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3091743 s       2898 s     244650 s     942517 s         99 s
#2  3499 MHz    1040372 s       3322 s     121368 s    3584134 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0901636 0.0389906; -0.0901636 0.0 0.244852; -0.0389906 -0.244852 0.0])
dAA = TransformUtils.so3([0.0 -0.187671 -0.0916383; 0.187671 0.0 -0.0995229; 0.0916383 0.0995229 0.0])
dAA = TransformUtils.so3([0.0 0.0101385 0.0112304; -0.0101385 0.0 0.22041; -0.0112304 -0.22041 0.0])
dAA = TransformUtils.Quaternion(0.9967194364926911,[0.0293269,0.0740558,-0.0143538])
dAA = TransformUtils.SO3([0.995224 -0.0922723 -0.0318474; 0.0961855 0.982608 0.158842; 0.0166368 -0.161147 0.98679])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.970384 0.0375476 0.238632; -0.13206 0.909622 0.393889; -0.202275 -0.413737 0.887641]),[-0.460963,-1.35943,-0.528468])
xj = TransformUtils.SE3(TransformUtils.SO3([0.963746 -0.00500025 0.266775; -0.00572421 0.999207 0.0394076; -0.266761 -0.039506 0.962953]),[-0.136142,0.180539,-0.916334])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.989918 -0.128816 0.0588888; 0.141348 0.925058 -0.352547; -0.00906191 0.357316 0.93394]),[0.190289,1.57346,0.339806])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
