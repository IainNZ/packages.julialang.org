>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (414.18359375 MB free)
Uptime: 51557.0 sec
Load Avg:  0.9794921875  0.99072265625  1.04150390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3238986 s        123 s     349788 s     979672 s         94 s
#2  3500 MHz    1081251 s       6641 s     140715 s    3804031 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.30.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0021815 0.0396282; -0.0021815 0.0 -0.00765704; -0.0396282 0.00765704 0.0])
dAA = TransformUtils.so3([0.0 -0.0479564 -0.125661; 0.0479564 0.0 -0.0648618; 0.125661 0.0648618 0.0])
dAA = TransformUtils.so3([0.0 -0.0466137 -0.0742192; 0.0466137 0.0 0.050519; 0.0742192 -0.050519 0.0])
dAA = TransformUtils.Quaternion(0.9979163509686881,[-0.0248976,-0.0532345,0.02663])
dAA = TransformUtils.SO3([0.989185 0.0670599 0.130446; -0.0601604 0.996609 -0.0561362; -0.133768 0.0476814 0.989865])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.983056 0.106143 0.149448; -0.10908 0.993966 0.0115742; -0.147318 -0.02768 0.988702]),[-0.997361,-0.812853,0.44442])
xj = TransformUtils.SE3(TransformUtils.SO3([0.908307 -0.411953 -0.0726177; 0.417885 0.901387 0.113458; 0.0187173 -0.133401 0.990885]),[0.372468,0.455348,-2.30114])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.844576 -0.483644 -0.229738; 0.511256 0.855915 0.077638; 0.159087 -0.183026 0.970151]),[1.61275,1.48194,-2.49515])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
