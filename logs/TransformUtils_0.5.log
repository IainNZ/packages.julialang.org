>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (415.5234375 MB free)
Uptime: 50870.0 sec
Load Avg:  1.12353515625  1.06494140625  1.0224609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3220024 s        131 s     312990 s     966033 s        106 s
#2  3500 MHz    1085005 s       6295 s     138653 s    3734659 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.27.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0941252 0.084776; -0.0941252 0.0 -0.0676521; -0.084776 0.0676521 0.0])
dAA = TransformUtils.so3([0.0 -0.000937538 0.0626768; 0.000937538 0.0 0.0366422; -0.0626768 -0.0366422 0.0])
dAA = TransformUtils.so3([0.0 0.0420406 -0.0314961; -0.0420406 0.0 0.114123; 0.0314961 -0.114123 0.0])
dAA = TransformUtils.Quaternion(0.9988649462396411,[-0.0355582,0.0108212,-0.0297882])
dAA = TransformUtils.SO3([0.995553 -0.00900977 -0.0937759; -0.00646415 0.986537 -0.16341; 0.0939857 0.163289 0.982091])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.78134 0.565098 0.264899; -0.533106 0.825007 -0.187514; -0.324507 0.0052926 0.945868]),[0.804088,-0.527873,-0.452367])
xj = TransformUtils.SE3(TransformUtils.SO3([0.989152 -0.108155 0.099401; 0.0884099 0.978726 0.185147; -0.117311 -0.17435 0.977671]),[-0.993156,0.648317,-0.244942])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.763801 -0.549693 -0.338298; 0.631286 0.745414 0.214093; 0.134487 -0.377087 0.916362]),[-2.0986,-0.0441557,-0.500444])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
