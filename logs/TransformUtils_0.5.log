>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (405.6484375 MB free)
Uptime: 48235.0 sec
Load Avg:  1.04052734375  1.0283203125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2927071 s       1547 s     266683 s    1065183 s         92 s
#2  3500 MHz    1047506 s       4983 s     119012 s    3526063 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.077996 -0.221486; -0.077996 0.0 -0.0841628; 0.221486 0.0841628 0.0])
dAA = TransformUtils.so3([0.0 0.127915 -0.0799827; -0.127915 0.0 0.0504209; 0.0799827 -0.0504209 0.0])
dAA = TransformUtils.so3([0.0 -0.0843431 -0.0333911; 0.0843431 0.0 0.0129015; 0.0333911 -0.0129015 0.0])
dAA = TransformUtils.Quaternion(0.9987421866619437,[-0.016868,0.0152369,-0.0446917])
dAA = TransformUtils.SO3([0.998723 0.0048573 0.0502935; 0.00044451 0.994485 -0.104873; -0.0505256 0.104762 0.993213])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.995148 0.0544497 0.0819456; -0.0770138 0.949426 0.304401; -0.0612267 -0.309235 0.949013]),[-0.413815,0.72805,0.490097])
xj = TransformUtils.SE3(TransformUtils.SO3([0.93238 -0.359308 0.0395736; 0.335476 0.900876 0.27546; -0.134626 -0.243558 0.960498]),[0.859053,-0.823859,0.27237])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.910262 -0.412032 -0.0406408; 0.410908 0.911067 -0.0333352; 0.0507617 0.0136441 0.998618]),[1.39954,-1.33679,-0.574721])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
