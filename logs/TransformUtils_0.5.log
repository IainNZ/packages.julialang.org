>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (878.86328125 MB free)
Uptime: 45973.0 sec
Load Avg:  1.01318359375  0.9970703125  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2734231 s       4734 s     217059 s    1080809 s        182 s
#2  3500 MHz     934174 s       2108 s     110777 s    3383625 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.00238089 -0.0550542; -0.00238089 0.0 0.079088; 0.0550542 -0.079088 0.0])
dAA = TransformUtils.so3([0.0 0.178575 -0.194961; -0.178575 0.0 0.160719; 0.194961 -0.160719 0.0])
dAA = TransformUtils.so3([0.0 -0.0595842 0.0422337; 0.0595842 0.0 0.0301362; -0.0422337 -0.0301362 0.0])
dAA = TransformUtils.Quaternion(0.998274503029919,[-0.0318444,0.0263989,0.0416779])
dAA = TransformUtils.SO3([0.995789 0.0190032 -0.0896825; -0.0206295 0.999639 -0.0172417; 0.0893224 0.0190193 0.995821])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.978383 -0.0460149 0.201614; 0.0729357 0.989062 -0.128202; -0.19351 0.140136 0.971038]),[2.14079,-2.18315,1.25881])
xj = TransformUtils.SE3(TransformUtils.SO3([0.982464 -0.184048 -0.029864; 0.185961 0.955567 0.228712; -0.0135569 -0.230255 0.973036]),[-1.41733,-1.02424,0.19265])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.977413 -0.0658176 -0.200829; 0.13682 0.921318 0.363942; 0.161074 -0.383199 0.909513]),[-3.19036,1.16055,-1.90123])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
