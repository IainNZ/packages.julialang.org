>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (807.93359375 MB free)
Uptime: 51181.0 sec
Load Avg:  1.015625  1.01318359375  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3181038 s         78 s     344745 s     993923 s        106 s
#2  3500 MHz    1082491 s       6340 s     148534 s    3726625 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.112602 -0.0411617; 0.112602 0.0 -0.0617285; 0.0411617 0.0617285 0.0])
dAA = TransformUtils.so3([0.0 -0.000810565 -0.09308; 0.000810565 0.0 -0.0451997; 0.09308 0.0451997 0.0])
dAA = TransformUtils.so3([0.0 -0.135389 0.00329787; 0.135389 0.0 0.0414616; -0.00329787 -0.0414616 0.0])
dAA = TransformUtils.Quaternion(0.9989687369670571,[0.0375931,0.0252979,0.00287077])
dAA = TransformUtils.SO3([0.989821 0.135086 0.0447838; -0.138336 0.98716 0.0798663; -0.03342 -0.0852486 0.995799])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.939594 -0.342168 0.00920238; 0.272753 0.764682 0.583839; -0.206808 -0.546061 0.811817]),[-2.13325,-0.873591,-0.685099])
xj = TransformUtils.SE3(TransformUtils.SO3([0.912035 -0.00218035 0.410106; -0.0575605 0.989407 0.133269; -0.406052 -0.145152 0.902249]),[-0.566192,0.743679,-0.481812])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.925218 0.297833 0.235091; -0.134355 0.836589 -0.5311; -0.354853 0.459797 0.814043]),[1.87147,0.589494,1.12368])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
