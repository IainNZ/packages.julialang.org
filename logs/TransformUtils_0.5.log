>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (416.32421875 MB free)
Uptime: 50150.0 sec
Load Avg:  0.9755859375  0.97900390625  0.97021484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3190849 s       4532 s     317241 s     895216 s         99 s
#2  3500 MHz    1000748 s       3906 s     136328 s    3749279 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0236984 -0.0684819; 0.0236984 0.0 0.0663192; 0.0684819 -0.0663192 0.0])
dAA = TransformUtils.so3([0.0 -0.0261278 -0.0143548; 0.0261278 0.0 -0.0721035; 0.0143548 0.0721035 0.0])
dAA = TransformUtils.so3([0.0 -0.0778097 0.153377; 0.0778097 0.0 -0.00180207; -0.153377 0.00180207 0.0])
dAA = TransformUtils.Quaternion(0.9977795388357289,[0.0353899,0.05633,0.00323663])
dAA = TransformUtils.SO3([0.997322 0.0607765 -0.0406709; -0.0564835 0.993437 0.0994645; 0.046449 -0.0969009 0.99421])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.969908 0.1873 0.155555; -0.212977 0.96228 0.169289; -0.11798 -0.197324 0.973213]),[-0.8635,-1.11943,-3.14121])
xj = TransformUtils.SE3(TransformUtils.SO3([0.988726 0.0185777 0.148577; 0.0418877 0.918338 -0.393575; -0.143755 0.395362 0.907206]),[0.769935,0.224766,-0.573633])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.967013 -0.224211 0.120896; 0.253862 0.809163 -0.529915; 0.0209878 0.543125 0.839389]),[0.995076,1.09279,2.98045])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
