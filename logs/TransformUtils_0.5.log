>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (568.078125 MB free)
Uptime: 46098.0 sec
Load Avg:  0.9580078125  1.00390625  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2842221 s       3586 s     237097 s     935552 s         81 s
#2  3500 MHz     791821 s       2388 s     106367 s    3592490 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0287256 0.0755223; 0.0287256 0.0 -0.0176954; -0.0755223 0.0176954 0.0])
dAA = TransformUtils.so3([0.0 0.023448 0.202023; -0.023448 0.0 -0.069723; -0.202023 0.069723 0.0])
dAA = TransformUtils.so3([0.0 0.120898 0.18178; -0.120898 0.0 -0.183009; -0.18178 0.183009 0.0])
dAA = TransformUtils.Quaternion(0.9957458238789291,[0.0757585,0.0523759,-0.00277012])
dAA = TransformUtils.SO3([0.98989 -0.102313 0.098231; 0.106999 0.993299 -0.0436754; -0.0931043 0.0537445 0.994205])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.978865 0.0741821 0.190578; -0.0963334 0.989283 0.10972; -0.180397 -0.12576 0.975521]),[0.877481,-0.419421,0.426185])
xj = TransformUtils.SE3(TransformUtils.SO3([0.975536 -0.217817 -0.0297636; 0.170533 0.835208 -0.522824; 0.138739 0.504958 0.851921]),[1.49285,0.428519,-0.837881])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.913462 -0.384765 -0.132453; 0.223625 0.746596 -0.626567; 0.33997 0.542725 0.76803]),[0.748711,1.04347,-1.02281])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
