>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (865.2734375 MB free)
Uptime: 45543.0 sec
Load Avg:  0.98583984375  1.0322265625  1.01904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2877781 s        137 s     253032 s     843359 s         88 s
#2  3499 MHz     719950 s       6030 s     110545 s    3622926 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0474268 -0.201403; 0.0474268 0.0 0.0608615; 0.201403 -0.0608615 0.0])
dAA = TransformUtils.so3([0.0 -0.0332641 -0.00990781; 0.0332641 0.0 -0.0783474; 0.00990781 0.0783474 0.0])
dAA = TransformUtils.so3([0.0 0.1228 0.0412669; -0.1228 0.0 -0.117645; -0.0412669 0.117645 0.0])
dAA = TransformUtils.Quaternion(0.9969832114016469,[-0.0611145,0.0437707,-0.019329])
dAA = TransformUtils.SO3([0.994849 -0.0439754 0.0913365; 0.0309506 0.98975 0.139413; -0.096531 -0.135868 0.986013])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.93112 0.342315 -0.125842; -0.296246 0.91113 0.286495; 0.21273 -0.229481 0.949781]),[0.443131,1.07674,0.208624])
xj = TransformUtils.SE3(TransformUtils.SO3([0.900839 0.433916 -0.0143766; -0.411594 0.843024 -0.346268; -0.138131 0.317849 0.938026]),[1.94545,-0.161922,-0.992157])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.931337 0.2219 0.28874; -0.034946 0.843701 -0.535675; -0.362477 0.488804 0.793525]),[1.51035,-0.338762,-1.68441])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
