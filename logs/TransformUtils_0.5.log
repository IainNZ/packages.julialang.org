>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (484.20703125 MB free)
Uptime: 46041.0 sec
Load Avg:  1.0830078125  1.04150390625  1.041015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz    2767033 s        126 s     307484 s     982264 s        120 s
#2  3497 MHz     840019 s       6941 s     127994 s    3515319 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0744982 -0.10251; 0.0744982 0.0 -0.0214412; 0.10251 0.0214412 0.0])
dAA = TransformUtils.so3([0.0 -0.0741552 0.138373; 0.0741552 0.0 -0.0949598; -0.138373 0.0949598 0.0])
dAA = TransformUtils.so3([0.0 -0.0407154 0.00513105; 0.0407154 0.0 -0.0605412; -0.00513105 0.0605412 0.0])
dAA = TransformUtils.Quaternion(0.9883934409824054,[-0.0055829,-0.144477,-0.0466211])
dAA = TransformUtils.SO3([0.998027 0.0594921 0.0200449; -0.0576935 0.995063 -0.0807548; -0.0247502 0.079439 0.996532])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.846134 0.216171 -0.487163; -0.265372 0.963569 -0.0333447; 0.462207 0.157493 0.872674]),[-0.680648,0.37413,-1.28277])
xj = TransformUtils.SE3(TransformUtils.SO3([0.91376 0.262552 0.310015; -0.160542 0.934359 -0.318118; -0.373188 0.240913 0.895931]),[0.660528,0.8899,-0.640995])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.643276 0.0855533 0.760839; -0.0159395 0.995018 -0.0984092; -0.765468 0.0511769 0.641435]),[1.29458,0.887979,-0.110508])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
