>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (870.67578125 MB free)
Uptime: 49738.0 sec
Load Avg:  1.04638671875  1.0146484375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3155786 s         82 s     282103 s     949542 s         82 s
#2  3499 MHz    1049877 s       6828 s     125833 s    3644495 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.184565 -0.377721; -0.184565 0.0 0.0513577; 0.377721 -0.0513577 0.0])
dAA = TransformUtils.so3([0.0 -0.014502 -0.159115; 0.014502 0.0 -0.110267; 0.159115 0.110267 0.0])
dAA = TransformUtils.so3([0.0 0.143251 0.0268922; -0.143251 0.0 0.0635517; -0.0268922 -0.0635517 0.0])
dAA = TransformUtils.Quaternion(0.9978308692815172,[-0.0429259,0.00356555,-0.0497816])
dAA = TransformUtils.SO3([0.997982 0.0193646 0.060475; -0.0168416 0.998978 -0.0419549; -0.0612256 0.0408517 0.997288])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.949347 0.160622 0.270077; -0.203555 0.969124 0.139151; -0.239387 -0.187078 0.95273]),[1.73162,0.0748499,0.671884])
xj = TransformUtils.SE3(TransformUtils.SO3([0.936317 0.237942 -0.258254; -0.152989 0.938379 0.309901; 0.316078 -0.250655 0.915023]),[-1.21778,0.369947,-0.438068])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.844366 0.0948806 -0.527299; -0.0570038 0.994517 0.0876699; 0.532726 -0.0439674 0.845145]),[-2.59436,0.0198958,-1.81299])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
