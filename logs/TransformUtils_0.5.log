>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (916.69921875 MB free)
Uptime: 44359.0 sec
Load Avg:  1.0361328125  1.07666015625  1.05419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2683454 s         63 s     264054 s     938576 s         97 s
#2  3500 MHz     795902 s       6444 s     118950 s    3411070 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0485085 0.00934709; -0.0485085 0.0 0.0787171; -0.00934709 -0.0787171 0.0])
dAA = TransformUtils.so3([0.0 -0.0703215 0.0926606; 0.0703215 0.0 0.0253214; -0.0926606 -0.0253214 0.0])
dAA = TransformUtils.so3([0.0 -0.0878935 0.0490019; 0.0878935 0.0 0.01285; -0.0490019 -0.01285 0.0])
dAA = TransformUtils.Quaternion(0.9979671078305112,[-0.0424175,-0.0284532,0.0381159])
dAA = TransformUtils.SO3([0.994649 0.0486257 0.0911534; -0.0536501 0.997125 0.0535041; -0.0882897 -0.0581081 0.994398])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.925526 0.195713 -0.32419; -0.0645896 0.925134 0.374105; 0.373136 -0.325305 0.868876]),[-0.0769664,1.09642,-2.62807])
xj = TransformUtils.SE3(TransformUtils.SO3([0.962565 -0.182308 0.20058; 0.159243 0.979192 0.125798; -0.219341 -0.0891477 0.971567]),[0.0856069,-0.36374,0.0357955])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.798749 -0.26524 0.540044; 0.40706 0.899204 -0.160419; -0.44306 0.347965 0.826207]),[1.23876,-2.18559,1.71562])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
