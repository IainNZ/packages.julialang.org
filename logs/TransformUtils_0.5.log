>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (845.73828125 MB free)
Uptime: 45477.0 sec
Load Avg:  0.978515625  1.037109375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2732459 s       5406 s     236442 s    1012727 s         95 s
#2  3500 MHz     854142 s       3378 s     107091 s    3462004 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0859323 0.00441639; -0.0859323 0.0 0.00673818; -0.00441639 -0.00673818 0.0])
dAA = TransformUtils.so3([0.0 0.155072 -0.0867906; -0.155072 0.0 -0.0568188; 0.0867906 0.0568188 0.0])
dAA = TransformUtils.so3([0.0 -0.0100465 -0.0765723; 0.0100465 0.0 0.0316497; 0.0765723 -0.0316497 0.0])
dAA = TransformUtils.Quaternion(0.9990932222587371,[-0.0118368,-0.0306921,0.0270299])
dAA = TransformUtils.SO3([0.989888 -0.121469 -0.0732568; 0.122018 0.992523 0.00305169; 0.0723384 -0.0119595 0.997308])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.907542 -0.0433437 0.417718; 0.0717577 0.996037 -0.0525504; -0.413785 0.0776662 0.907056]),[-0.514148,0.40238,0.197792])
xj = TransformUtils.SE3(TransformUtils.SO3([0.982408 -0.00333623 -0.186718; -0.0141514 0.995636 -0.0922465; 0.186211 0.093266 0.978073]),[0.411652,1.70791,-0.794288])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.81351 0.0298247 -0.580786; -0.0422142 0.999078 -0.00782466; 0.580017 0.0308828 0.814019]),[1.34439,1.18318,-0.581755])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
