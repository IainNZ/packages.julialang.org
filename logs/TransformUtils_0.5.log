>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (629.78125 MB free)
Uptime: 40838.0 sec
Load Avg:  0.86767578125  1.01416015625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2454896 s       6337 s     240612 s     915283 s        203 s
#2  3499 MHz     735733 s         46 s     137150 s    3073383 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0392365 0.0394217; 0.0392365 0.0 0.0564513; -0.0394217 -0.0564513 0.0])
dAA = TransformUtils.so3([0.0 -0.105335 -0.10282; 0.105335 0.0 0.0409646; 0.10282 -0.0409646 0.0])
dAA = TransformUtils.so3([0.0 0.0889666 0.0173647; -0.0889666 0.0 0.00375984; -0.0173647 -0.00375984 0.0])
dAA = TransformUtils.Quaternion(0.9971184774897147,[-0.0293618,0.0655047,-0.0245308])
dAA = TransformUtils.SO3([0.998637 0.0483597 -0.0196168; -0.0486832 0.99868 -0.0163653; 0.0187995 0.017298 0.999674])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.956854 -0.21987 -0.189965; 0.203793 0.973829 -0.100623; 0.207118 0.0575682 0.976621]),[-1.19159,0.447397,-1.44417])
xj = TransformUtils.SE3(TransformUtils.SO3([0.96417 -0.0765446 0.254001; -0.0511234 0.885909 0.461034; -0.260312 -0.457501 0.850254]),[0.0103297,-0.31829,0.946137])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.858237 0.0125439 0.5131; -0.276763 0.853216 0.442069; -0.43224 -0.521407 0.735733]),[1.48909,-0.872307,2.18315])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
