>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (864.3359375 MB free)
Uptime: 45405.0 sec
Load Avg:  1.10693359375  1.068359375  1.05029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2643275 s       6046 s     245642 s    1114747 s        106 s
#2  3499 MHz     949321 s       2344 s     113213 s    3342344 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1843 0.01986; 0.1843 0.0 -0.0699714; -0.01986 0.0699714 0.0])
dAA = TransformUtils.so3([0.0 0.0288671 -0.0959108; -0.0288671 0.0 -0.117316; 0.0959108 0.117316 0.0])
dAA = TransformUtils.so3([0.0 0.0179038 -0.126095; -0.0179038 0.0 0.0164758; 0.126095 -0.0164758 0.0])
dAA = TransformUtils.Quaternion(0.9989615359992163,[0.024509,0.0284284,-0.025826])
dAA = TransformUtils.SO3([0.998067 0.0594141 0.0182271; -0.0596004 0.998174 0.00985617; -0.0176083 -0.0109235 0.999785])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.994999 -0.0776055 -0.0628853; 0.0740357 0.995612 -0.057239; 0.0670514 0.052297 0.996378]),[1.21225,0.309657,-0.687779])
xj = TransformUtils.SE3(TransformUtils.SO3([0.943431 -0.232983 0.235916; 0.302594 0.895873 -0.325345; -0.135551 0.378327 0.915693]),[-0.552592,0.652081,0.172205])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.952027 -0.140123 0.272047; 0.220962 0.929807 -0.294337; -0.211708 0.340329 0.916164]),[-1.673,0.522857,0.948252])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
