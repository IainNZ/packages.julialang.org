>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (863.9453125 MB free)
Uptime: 45946.0 sec
Load Avg:  0.9541015625  0.9853515625  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2746393 s       7321 s     233890 s    1024255 s         99 s
#2  3500 MHz     834901 s         92 s     112878 s    3523604 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.116088 -0.0903355; 0.116088 0.0 0.11233; 0.0903355 -0.11233 0.0])
dAA = TransformUtils.so3([0.0 -0.00416903 0.014511; 0.00416903 0.0 0.0681855; -0.014511 -0.0681855 0.0])
dAA = TransformUtils.so3([0.0 -0.0453911 -0.002084; 0.0453911 0.0 -0.206185; 0.002084 0.206185 0.0])
dAA = TransformUtils.Quaternion(0.9983560239105645,[-0.0266182,0.0343804,0.0373458])
dAA = TransformUtils.SO3([0.996585 0.0348222 -0.0748731; -0.0283262 0.995881 0.0861372; 0.0775641 -0.0837222 0.993466])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.940077 0.0828639 0.330739; -0.151762 0.970324 0.188255; -0.305324 -0.227168 0.924755]),[2.75889,-1.87131,-0.0488593])
xj = TransformUtils.SE3(TransformUtils.SO3([0.968993 0.216168 -0.119684; -0.128512 0.854616 0.503107; 0.211039 -0.472126 0.855897]),[-0.935915,0.360873,-0.473934])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.865996 0.217668 -0.45019; -0.0923449 0.954418 0.283827; 0.49145 -0.204221 0.846623]),[-3.68238,1.95633,-1.19489])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
