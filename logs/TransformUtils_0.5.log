>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (881.0546875 MB free)
Uptime: 41024.0 sec
Load Avg:  1.1259765625  1.0458984375  0.98779296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    2358015 s       1317 s     216109 s    1035215 s        201 s
#2  3502 MHz     888731 s       5427 s     126532 s    2925527 s         13 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.22.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.059842 -0.0412066; -0.059842 0.0 -0.0386794; 0.0412066 0.0386794 0.0])
dAA = TransformUtils.so3([0.0 0.0845617 0.0205549; -0.0845617 0.0 -0.106051; -0.0205549 0.106051 0.0])
dAA = TransformUtils.so3([0.0 -0.00350807 0.0441406; 0.00350807 0.0 -0.116144; -0.0441406 0.116144 0.0])
dAA = TransformUtils.Quaternion(0.9947701404170697,[-0.0544085,-0.02181,0.0836445])
dAA = TransformUtils.SO3([0.988409 -0.00517542 0.151728; 0.0202387 0.99499 -0.097903; -0.150462 0.0998389 0.983562])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.889218 0.247472 0.384771; -0.23036 0.968863 -0.0907716; -0.395254 -0.00792011 0.918538]),[-1.0897,0.313293,-1.23684])
xj = TransformUtils.SE3(TransformUtils.SO3([0.887503 -0.45637 0.0637481; 0.45326 0.889511 0.0576775; -0.0830269 -0.0222945 0.996298]),[0.609475,-0.322262,-0.507362])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.717588 -0.601908 -0.350391; 0.659436 0.749051 0.0637666; 0.22408 -0.276819 0.93443]),[1.36902,-0.201045,1.38153])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
