>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (821.59765625 MB free)
Uptime: 48495.0 sec
Load Avg:  1.025390625  0.98046875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3014384 s       4706 s     253261 s    1010389 s        107 s
#2  3499 MHz    1157073 s       2877 s     122422 s    3435828 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.200402 -0.122443; 0.200402 0.0 -0.0455692; 0.122443 0.0455692 0.0])
dAA = TransformUtils.so3([0.0 0.00493311 0.0324842; -0.00493311 0.0 0.0451959; -0.0324842 -0.0451959 0.0])
dAA = TransformUtils.so3([0.0 -0.00658945 -0.00394995; 0.00658945 0.0 0.0725856; 0.00394995 -0.0725856 0.0])
dAA = TransformUtils.Quaternion(0.9958224729085844,[0.0891989,-0.0109438,0.0161675])
dAA = TransformUtils.SO3([0.999554 -0.0223299 -0.0198046; 0.0222091 0.999734 -0.00629703; 0.0199399 0.00585438 0.999784])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.959268 -0.261546 -0.106767; 0.277863 0.941731 0.189567; 0.0509649 -0.211512 0.976046]),[-0.037274,-0.774699,-0.10081])
xj = TransformUtils.SE3(TransformUtils.SO3([0.947851 0.0499377 -0.314777; 0.0230725 0.974306 0.224044; 0.317877 -0.219623 0.922345]),[-0.818367,-0.799806,-0.364577])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.931855 0.307434 -0.192694; -0.293413 0.950926 0.0982309; 0.213438 -0.0349978 0.97633]),[-0.769696,0.236437,-0.178813])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
