>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (509.36328125 MB free)
Uptime: 49224.0 sec
Load Avg:  1.0068359375  1.01953125  0.99951171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3075968 s       1975 s     260674 s    1021829 s        119 s
#2  3500 MHz    1166934 s       5046 s     129088 s    3478879 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.122368 0.223268; -0.122368 0.0 -0.337412; -0.223268 0.337412 0.0])
dAA = TransformUtils.so3([0.0 0.0800441 -0.167046; -0.0800441 0.0 0.0479059; 0.167046 -0.0479059 0.0])
dAA = TransformUtils.so3([0.0 -0.0177969 -0.235588; 0.0177969 0.0 -0.0854176; 0.235588 0.0854176 0.0])
dAA = TransformUtils.Quaternion(0.9994246898002547,[0.000555869,-0.0135056,0.0311059])
dAA = TransformUtils.SO3([0.999257 1.75798e-6 -0.0385497; 0.00415546 0.994168 0.10776; 0.0383251 -0.10784 0.993429])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.968324 -0.0162291 0.249169; 0.118459 0.9083 -0.401196; -0.219809 0.418004 0.881451]),[0.0921742,-0.370447,0.0842178])
xj = TransformUtils.SE3(TransformUtils.SO3([0.945685 -0.284437 -0.1574; 0.315748 0.918884 0.236549; 0.0773491 -0.2734 0.958786]),[-0.138045,-0.0174393,0.453441])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.936131 -0.106482 -0.335143; 0.303778 0.724956 0.618188; 0.177139 -0.680514 0.711001]),[-0.262269,0.47871,0.126463])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
