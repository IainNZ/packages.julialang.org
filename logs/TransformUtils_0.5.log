>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (861.625 MB free)
Uptime: 44509.0 sec
Load Avg:  1.0517578125  1.046875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3493 MHz    2751568 s       6064 s     223435 s     934465 s         86 s
#2  3493 MHz     773922 s        163 s     104334 s    3440994 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.00367233 -0.153277; 0.00367233 0.0 -0.210796; 0.153277 0.210796 0.0])
dAA = TransformUtils.so3([0.0 -0.0667636 0.0447801; 0.0667636 0.0 -0.0717457; -0.0447801 0.0717457 0.0])
dAA = TransformUtils.so3([0.0 0.0204475 0.159417; -0.0204475 0.0 0.0801; -0.159417 -0.0801 0.0])
dAA = TransformUtils.Quaternion(0.9995055700872194,[0.0171885,0.0086956,-0.0248507])
dAA = TransformUtils.SO3([0.998773 0.0111463 0.0482555; -0.0056769 0.993689 -0.112029; -0.0491996 0.111618 0.992533])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.837174 0.346329 0.423315; -0.47162 0.849059 0.23806; -0.276973 -0.398942 0.874146]),[1.19622,1.02385,0.457035])
xj = TransformUtils.SE3(TransformUtils.SO3([0.88397 -0.454484 0.109734; 0.460094 0.887317 -0.0313327; -0.0831284 0.078185 0.993467]),[1.22893,-0.297027,-0.983001])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.546071 -0.820614 -0.16852; 0.729955 0.564793 -0.384935; 0.411062 0.0871901 0.907428]),[1.04919,-0.535678,-1.5594])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
