>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (914.9296875 MB free)
Uptime: 49234.0 sec
Load Avg:  1.10400390625  1.05859375  1.05224609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3043981 s       1863 s     309102 s    1012615 s        112 s
#2  3500 MHz    1113823 s       5688 s     141506 s    3535938 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.144465 -0.0393442; 0.144465 0.0 -0.103483; 0.0393442 0.103483 0.0])
dAA = TransformUtils.so3([0.0 -0.0171421 0.19189; 0.0171421 0.0 0.0350204; -0.19189 -0.0350204 0.0])
dAA = TransformUtils.so3([0.0 0.101591 0.191475; -0.101591 0.0 -0.0559659; -0.191475 0.0559659 0.0])
dAA = TransformUtils.Quaternion(0.9944270307099485,[-0.00149752,-0.103581,0.0195838])
dAA = TransformUtils.SO3([0.992153 0.125029 -0.000304726; -0.12497 0.991603 -0.0332575; -0.00385597 0.0330346 0.999447])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.952379 0.148226 0.266466; -0.111189 0.982543 -0.149151; -0.283923 0.11242 0.952234]),[1.19494,-0.867252,0.110991])
xj = TransformUtils.SE3(TransformUtils.SO3([0.966265 -0.110584 0.232599; 0.12535 0.99087 -0.0496469; -0.224985 0.0771284 0.971305]),[0.717447,1.65894,0.359064])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.970191 -0.23739 -0.0487327; 0.241095 0.965851 0.0948912; 0.0245423 -0.103812 0.994294]),[-0.806075,2.4392,-0.267797])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
