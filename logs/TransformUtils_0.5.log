>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (881.85546875 MB free)
Uptime: 42835.0 sec
Load Avg:  0.99462890625  1.0146484375  1.03759765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz    2737564 s       1217 s     204102 s     775379 s         96 s
#2  3508 MHz     687065 s       5888 s     100057 s    3400958 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.118636 -0.0338245; -0.118636 0.0 -0.12614; 0.0338245 0.12614 0.0])
dAA = TransformUtils.so3([0.0 0.0386813 0.089882; -0.0386813 0.0 -0.160948; -0.089882 0.160948 0.0])
dAA = TransformUtils.so3([0.0 0.221915 -0.148487; -0.221915 0.0 0.0744893; 0.148487 -0.0744893 0.0])
dAA = TransformUtils.Quaternion(0.9949152746201124,[0.0838683,-0.0403385,0.0385034])
dAA = TransformUtils.SO3([0.995927 0.053624 -0.0724838; -0.0454176 0.992841 0.110473; 0.0778889 -0.106731 0.991232])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.988764 0.0705768 0.131779; -0.084784 0.990797 0.10551; -0.123119 -0.115498 0.985648]),[-0.58843,-0.885128,-0.287071])
xj = TransformUtils.SE3(TransformUtils.SO3([0.967614 0.244676 0.0621006; -0.250124 0.962499 0.105043; -0.0340702 -0.117174 0.992527]),[-1.37338,0.713166,1.55326])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.982143 0.174749 -0.0697022; -0.175596 0.984443 -0.00617491; 0.0675388 0.0183041 0.997549]),[-1.13822,1.31563,1.87911])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
