>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (850.64453125 MB free)
Uptime: 53062.0 sec
Load Avg:  0.935546875  0.9853515625  0.98828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3286626 s       2178 s     359335 s    1051780 s         91 s
#2  3499 MHz    1135718 s       6656 s     146271 s    3885753 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.29.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0420423 -0.00493362; 0.0420423 0.0 0.0947147; 0.00493362 -0.0947147 0.0])
dAA = TransformUtils.so3([0.0 -0.0325337 -0.159873; 0.0325337 0.0 -0.0212799; 0.159873 0.0212799 0.0])
dAA = TransformUtils.so3([0.0 -0.015465 -0.0500544; 0.015465 0.0 -0.146106; 0.0500544 0.146106 0.0])
dAA = TransformUtils.Quaternion(0.9963878403806133,[-0.0480832,0.0661685,-0.0228256])
dAA = TransformUtils.SO3([0.989892 0.077822 0.118566; -0.0735891 0.996499 -0.0396761; -0.121238 0.0305499 0.992153])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.785045 -0.205038 -0.58452; 0.231888 0.972291 -0.0296215; 0.574397 -0.112289 0.810838]),[0.299048,0.506806,0.618229])
xj = TransformUtils.SE3(TransformUtils.SO3([0.900927 0.147135 -0.408267; -0.076022 0.979732 0.185326; 0.42726 -0.135928 0.893853]),[0.350989,-0.506306,0.0607321])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.935057 0.264619 0.235894; -0.306617 0.93768 0.163532; -0.177919 -0.22524 0.95792]),[-0.514377,-0.933089,-0.45239])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
