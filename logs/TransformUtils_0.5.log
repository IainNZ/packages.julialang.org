>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (407.0703125 MB free)
Uptime: 51630.0 sec
Load Avg:  1.01806640625  0.98486328125  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3242698 s       7386 s     354141 s     995289 s         93 s
#2  3500 MHz    1109420 s        142 s     147000 s    3799435 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.30.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.00282321 0.0641342; 0.00282321 0.0 -0.104957; -0.0641342 0.104957 0.0])
dAA = TransformUtils.so3([0.0 -0.0197675 0.0526842; 0.0197675 0.0 -0.0566461; -0.0526842 0.0566461 0.0])
dAA = TransformUtils.so3([0.0 -0.0311646 0.0830165; 0.0311646 0.0 -0.0999608; -0.0830165 0.0999608 0.0])
dAA = TransformUtils.Quaternion(0.9946104587511627,[-0.016248,0.102399,-0.000636033])
dAA = TransformUtils.SO3([0.994992 -0.0987421 0.0155217; 0.0987458 0.995113 0.000528832; -0.015498 0.00100652 0.999879])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.911805 0.245444 0.329196; -0.176714 0.958208 -0.224965; -0.370654 0.14695 0.917072]),[0.700172,0.0084464,-1.44862])
xj = TransformUtils.SE3(TransformUtils.SO3([0.918332 0.194178 -0.344909; -0.275088 0.939652 -0.203422; 0.284594 0.281689 0.916328]),[0.480394,0.556207,-0.940002])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.780465 -0.0934065 -0.618183; 0.00362819 0.989436 -0.144922; 0.625189 0.110864 0.772559]),[-0.485712,0.545667,0.270862])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
