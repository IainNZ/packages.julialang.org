>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (900.56640625 MB free)
Uptime: 44706.0 sec
Load Avg:  1.005859375  1.0263671875  1.0361328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2683891 s       1586 s     247420 s     966273 s        111 s
#2  3500 MHz     836486 s       5028 s     114224 s    3400119 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.111265 0.116028; -0.111265 0.0 -0.0949646; -0.116028 0.0949646 0.0])
dAA = TransformUtils.so3([0.0 -0.0417509 0.133755; 0.0417509 0.0 0.123614; -0.133755 -0.123614 0.0])
dAA = TransformUtils.so3([0.0 0.0269407 0.0321341; -0.0269407 0.0 0.127282; -0.0321341 -0.127282 0.0])
dAA = TransformUtils.Quaternion(0.9949854261858377,[0.0629088,0.0323022,-0.0707323])
dAA = TransformUtils.SO3([0.997422 0.0330671 0.0636835; -0.036205 0.998154 0.0487664; -0.0619534 -0.0509463 0.996778])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.975723 0.0378132 0.215721; -0.00521019 0.988711 -0.149743; -0.218949 0.144983 0.964905]),[-0.109174,2.36414,1.29263])
xj = TransformUtils.SE3(TransformUtils.SO3([0.921842 0.36788 0.121951; -0.380107 0.919614 0.0991432; -0.0756746 -0.137749 0.987572]),[0.910865,0.47072,0.776046])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.918011 0.384318 -0.0977541; -0.35193 0.903172 0.245817; 0.18276 -0.19126 0.964375]),[1.11824,-1.90837,0.00511887])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
