>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (622.88671875 MB free)
Uptime: 43701.0 sec
Load Avg:  0.98193359375  0.9765625  1.02783203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2635514 s       2490 s     222260 s     979440 s         88 s
#2  3499 MHz     857580 s       3357 s     109228 s    3295821 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0536842 0.0317821; -0.0536842 0.0 0.0447183; -0.0317821 -0.0447183 0.0])
dAA = TransformUtils.so3([0.0 0.0445761 -0.0992856; -0.0445761 0.0 -0.0355676; 0.0992856 0.0355676 0.0])
dAA = TransformUtils.so3([0.0 -0.00969373 -0.0707257; 0.00969373 0.0 0.129853; 0.0707257 -0.129853 0.0])
dAA = TransformUtils.Quaternion(0.9983385984948326,[0.0201924,-0.0462663,0.0277803])
dAA = TransformUtils.SO3([0.98915 -0.13749 -0.0517594; 0.138218 0.990344 0.0107285; 0.0497845 -0.0177662 0.998602])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.982429 0.174675 0.0657475; -0.176391 0.984091 0.0212171; -0.0609954 -0.0324416 0.997611]),[0.194211,0.15988,-1.7085])
xj = TransformUtils.SE3(TransformUtils.SO3([0.997211 0.0512466 -0.0542652; -0.059305 0.985468 -0.159175; 0.0453195 0.161949 0.985758]),[0.136909,0.534585,-0.739831])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.987385 -0.13336 -0.0853614; 0.114356 0.973488 -0.198101; 0.109517 0.18584 0.976458]),[-0.181474,0.32731,0.970535])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
