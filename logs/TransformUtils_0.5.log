>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (903.37890625 MB free)
Uptime: 42330.0 sec
Load Avg:  1.0703125  1.0078125  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2625101 s       4892 s     216164 s     828560 s         98 s
#2  3500 MHz     702266 s       2387 s     104260 s    3312933 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.043867 0.0426864; -0.043867 0.0 0.0389897; -0.0426864 -0.0389897 0.0])
dAA = TransformUtils.so3([0.0 -0.0561067 0.0103271; 0.0561067 0.0 0.0795859; -0.0103271 -0.0795859 0.0])
dAA = TransformUtils.so3([0.0 -0.0846123 -0.00029629; 0.0846123 0.0 -0.211933; 0.00029629 0.211933 0.0])
dAA = TransformUtils.Quaternion(0.99396606055569,[-0.0759029,-0.0656265,0.04431])
dAA = TransformUtils.SO3([0.994698 -0.0537616 -0.0876688; 0.0694741 0.979824 0.187397; 0.0758252 -0.192494 0.978364])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.803265 0.399742 0.441557; -0.314653 0.914241 -0.255257; -0.505727 0.066102 0.860158]),[-0.372565,0.996787,-1.74729])
xj = TransformUtils.SE3(TransformUtils.SO3([0.941993 -0.333629 0.0366108; 0.30456 0.895523 0.324471; -0.141039 -0.294499 0.945187]),[-0.658978,0.155658,0.0500422])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.732166 -0.400835 -0.550694; 0.645672 0.665892 0.373758; 0.216887 -0.629221 0.746352]),[-0.874361,-0.764678,1.63423])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
