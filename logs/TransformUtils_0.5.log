>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (891.71875 MB free)
Uptime: 52468.0 sec
Load Avg:  1.0419921875  0.986328125  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3076087 s       1136 s     258748 s    1298842 s         98 s
#2  3499 MHz    1060427 s       5515 s     126358 s    3909584 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.30.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.00608546 -0.0515133; -0.00608546 0.0 0.166534; 0.0515133 -0.166534 0.0])
dAA = TransformUtils.so3([0.0 0.0172237 -0.147142; -0.0172237 0.0 -0.035687; 0.147142 0.035687 0.0])
dAA = TransformUtils.so3([0.0 -0.0260241 -0.0165604; 0.0260241 0.0 -0.109568; 0.0165604 0.109568 0.0])
dAA = TransformUtils.Quaternion(0.9979306629458298,[0.0299749,-0.0568834,0.000416284])
dAA = TransformUtils.SO3([0.995737 0.0544168 -0.0744819; -0.0506485 0.997384 0.0515811; 0.0770939 -0.0475888 0.995887])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.954717 -0.290843 0.062654; 0.291579 0.956543 -0.00273546; -0.0591356 0.0208802 0.998032]),[-0.779686,-0.688092,0.892298])
xj = TransformUtils.SE3(TransformUtils.SO3([0.99044 -0.125877 -0.0564227; 0.109036 0.964943 -0.238737; 0.0844962 0.230302 0.969444]),[0.595935,0.0650489,-0.296414])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.972386 0.147561 -0.180807; -0.182001 0.964429 -0.19171; 0.146087 0.219323 0.964653]),[1.60322,0.295501,-1.10224])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
