>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (493.578125 MB free)
Uptime: 44658.0 sec
Load Avg:  0.97216796875  0.962890625  1.0107421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2743178 s       1514 s     232974 s     901411 s         99 s
#2  3500 MHz     774515 s       5127 s     109259 s    3474095 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.1
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.00216193 -0.086699; 0.00216193 0.0 -0.0463421; 0.086699 0.0463421 0.0])
dAA = TransformUtils.so3([0.0 -0.00603798 -0.0573664; 0.00603798 0.0 0.013371; 0.0573664 -0.013371 0.0])
dAA = TransformUtils.so3([0.0 -0.015525 -0.0334076; 0.015525 0.0 0.00126019; 0.0334076 -0.00126019 0.0])
dAA = TransformUtils.Quaternion(0.998069250420214,[0.0412871,0.0408609,0.0219896])
dAA = TransformUtils.SO3([0.985807 0.127169 0.1096; -0.115693 0.987678 -0.105394; -0.121653 0.0912186 0.988372])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.842235 0.206813 0.497864; -0.229833 0.973108 -0.0154211; -0.487665 -0.101437 0.867118]),[1.77423,-0.894393,0.375394])
xj = TransformUtils.SE3(TransformUtils.SO3([0.80733 -0.0746581 0.585359; 0.246185 0.944128 -0.219123; -0.536294 0.321011 0.780602]),[1.07886,-1.54758,-0.522677])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.884912 -0.436417 0.162699; 0.460931 0.870736 -0.171353; -0.0668867 0.226626 0.971683]),[0.00241838,-0.688334,-1.11486])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
