>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (587.23828125 MB free)
Uptime: 40008.0 sec
Load Avg:  1.017578125  0.99951171875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2336651 s        418 s     198295 s     993693 s        215 s
#2  3499 MHz     826679 s       5722 s     105405 s    2919888 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.22.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.156306 -0.0347841; 0.156306 0.0 -0.0715512; 0.0347841 0.0715512 0.0])
dAA = TransformUtils.so3([0.0 -0.0193696 0.0872517; 0.0193696 0.0 0.0666525; -0.0872517 -0.0666525 0.0])
dAA = TransformUtils.so3([0.0 0.0480654 0.0153228; -0.0480654 0.0 -0.178752; -0.0153228 0.178752 0.0])
dAA = TransformUtils.Quaternion(0.9979715882232578,[0.0630155,0.00411275,-0.00805206])
dAA = TransformUtils.SO3([0.978013 0.1539 -0.140732; -0.147451 0.987527 0.0552219; 0.147475 -0.0332567 0.988507])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.80195 -0.420373 0.424457; 0.32311 0.902841 0.283685; -0.50247 -0.0903548 0.85986]),[1.34431,0.794088,-0.604598])
xj = TransformUtils.SE3(TransformUtils.SO3([0.989641 -0.0272881 0.140947; 0.0105765 0.99296 0.117981; -0.143174 -0.115268 0.982962]),[0.210186,-0.273782,1.26958])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.869 0.35687 -0.342757; -0.393533 0.918371 -0.0415476; 0.299951 0.170991 0.938505]),[-2.19627,-0.656703,0.827203])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
