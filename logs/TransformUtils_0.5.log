>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (401.53515625 MB free)
Uptime: 49377.0 sec
Load Avg:  0.958984375  0.96630859375  1.00830078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3114876 s       4388 s     273308 s     964464 s         90 s
#2  3499 MHz    1093160 s       2808 s     129941 s    3577964 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0484655 0.0527978; 0.0484655 0.0 0.00541338; -0.0527978 -0.00541338 0.0])
dAA = TransformUtils.so3([0.0 0.0462337 0.00578031; -0.0462337 0.0 0.11473; -0.00578031 -0.11473 0.0])
dAA = TransformUtils.so3([0.0 0.119112 -0.0949038; -0.119112 0.0 0.00698372; 0.0949038 -0.00698372 0.0])
dAA = TransformUtils.Quaternion(0.9954334290543051,[-0.080755,-0.00830391,-0.0502192])
dAA = TransformUtils.SO3([0.98801 0.0395692 -0.149231; -0.0548547 0.9935 -0.099745; 0.144314 0.106735 0.983759])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.99607 0.0624417 -0.0628154; -0.0613268 0.997927 0.0195248; 0.0639043 -0.0155958 0.997834]),[1.41021,0.453025,-0.577973])
xj = TransformUtils.SE3(TransformUtils.SO3([0.946297 -0.257365 -0.195667; 0.289462 0.944022 0.158224; 0.143992 -0.206366 0.967822]),[-0.00929649,0.765169,-1.6714])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.934028 -0.327435 -0.142753; 0.345705 0.929212 0.130585; 0.0898903 -0.17132 0.981106]),[-1.50294,0.239913,-0.995793])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
