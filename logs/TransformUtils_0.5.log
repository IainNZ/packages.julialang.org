>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (884.2890625 MB free)
Uptime: 48960.0 sec
Load Avg:  1.0419921875  1.060546875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3081776 s       6296 s     277634 s     954619 s        100 s
#2  3500 MHz    1067051 s         92 s     134147 s    3563531 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.00327325 0.0442926; 0.00327325 0.0 0.0530641; -0.0442926 -0.0530641 0.0])
dAA = TransformUtils.so3([0.0 0.0565942 0.157381; -0.0565942 0.0 -0.0455383; -0.157381 0.0455383 0.0])
dAA = TransformUtils.so3([0.0 0.128254 -0.137638; -0.128254 0.0 0.00627564; 0.137638 -0.00627564 0.0])
dAA = TransformUtils.Quaternion(0.9899520897576634,[0.0637585,0.023099,-0.124081])
dAA = TransformUtils.SO3([0.959152 -0.268594 0.0888013; 0.273574 0.960578 -0.0494761; -0.0720116 0.0717488 0.99482])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.966927 0.235333 0.09834; -0.254263 0.919726 0.299088; -0.0200607 -0.3142 0.949145]),[-0.512982,0.307568,0.0110132])
xj = TransformUtils.SE3(TransformUtils.SO3([0.994274 0.0383478 0.099742; -0.0805163 0.882526 0.463319; -0.0702577 -0.468697 0.880561]),[-0.286136,0.803845,-0.270321])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.983272 -0.177912 -0.0390265; 0.182007 0.967972 0.172927; 0.00701077 -0.177137 0.984161]),[0.0988021,0.598219,-0.0962882])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
