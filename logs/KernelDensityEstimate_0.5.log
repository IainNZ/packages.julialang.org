>>> 'Pkg.add("KernelDensityEstimate")' log
INFO: Installing AxisAlgorithms v0.1.6
INFO: Installing BinDeps v0.4.7
INFO: Installing Cairo v0.3.0
INFO: Installing Calculus v0.2.2
INFO: Installing ColorTypes v0.4.0
INFO: Installing Colors v0.7.3
INFO: Installing Compose v0.4.5
INFO: Installing Contour v0.2.0
INFO: Installing DataArrays v0.3.12
INFO: Installing DataFrames v0.9.0
INFO: Installing DiffBase v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing Distributions v0.12.2
INFO: Installing DualNumbers v0.3.0
INFO: Installing FileIO v0.3.1
INFO: Installing FixedPointNumbers v0.3.6
INFO: Installing FixedSizeArrays v0.2.5
INFO: Installing Fontconfig v0.1.1
INFO: Installing ForwardDiff v0.4.1
INFO: Installing GZip v0.3.0
INFO: Installing Gadfly v0.6.0
INFO: Installing Graphics v0.2.0
INFO: Installing Hexagons v0.0.4
INFO: Installing Hiccup v0.1.1
INFO: Installing Interpolations v0.3.8
INFO: Installing Iterators v0.3.0
INFO: Installing Juno v0.2.7
INFO: Installing KernelDensity v0.3.2
INFO: Installing KernelDensityEstimate v0.2.3
INFO: Installing LineSearches v0.1.5
INFO: Installing Loess v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Measures v0.0.3
INFO: Installing Media v0.2.6
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.5.6
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ratios v0.0.4
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Installing WoodburyMatrices v0.2.2
INFO: Building Cairo
INFO: Building Rmath
INFO: Building Fontconfig
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KernelDensityEstimate
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KernelDensityEstimate")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1327.45703125 MB free)
Uptime: 47904.0 sec
Load Avg:  1.0712890625  1.02783203125  1.01513671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2927158 s       6730 s     226896 s    1065802 s        210 s
#2  3500 MHz    1235183 s         45 s     137832 s    3242524 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - KernelDensityEstimate         0.2.3
55 additional packages:
 - AxisAlgorithms                0.1.6
 - BinDeps                       0.4.7
 - Cairo                         0.3.0
 - Calculus                      0.2.2
 - ColorTypes                    0.4.0
 - Colors                        0.7.3
 - Compat                        0.22.0
 - CompilerTools                 0.2.1
 - Compose                       0.4.5
 - Contour                       0.2.0
 - DataArrays                    0.3.12
 - DataFrames                    0.9.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - Distances                     0.4.1
 - Distributions                 0.12.2
 - DocOpt                        0.2.1
 - DualNumbers                   0.3.0
 - FileIO                        0.3.1
 - FixedPointNumbers             0.3.6
 - FixedSizeArrays               0.2.5
 - Fontconfig                    0.1.1
 - ForwardDiff                   0.4.1
 - GZip                          0.3.0
 - Gadfly                        0.6.0
 - Graphics                      0.2.0
 - Hexagons                      0.0.4
 - Hiccup                        0.1.1
 - Interpolations                0.3.8
 - Iterators                     0.3.0
 - Juno                          0.2.7
 - KernelDensity                 0.3.2
 - LineSearches                  0.1.5
 - Loess                         0.1.0
 - MacroTools                    0.3.6
 - Measures                      0.0.3
 - Media                         0.2.6
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.5.6
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - Showoff                       0.0.7
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
 - WoodburyMatrices              0.2.2
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Testing KernelDensityEstimate

WARNING: deprecated syntax "for (...)" at /home/vagrant/.julia/v0.5/KernelDensityEstimate/src/DualTree01.jl:51.
Use "for ..." instead.
WARNING: Method definition getType(KernelDensityEstimate.BallTreeDensity) in module KernelDensityEstimate at /home/vagrant/.julia/v0.5/KernelDensityEstimate/src/BallTreeDensity01.jl:28 overwritten at /home/vagrant/.julia/v0.5/KernelDensityEstimate/src/KDE01.jl:43.
Running UnitTest1D01...Success
Running UnitTest1Dlcv01...Success
Running UnitTest2D01...Success
Running UnitTest2Dvar01...Success
v = [testProds(D=D,M=M,N=N,n=n,dev=dev,MCMC=MCMC) for i = 1:10] = Bool[true,true,true,true,true,true,true,true,true,true]
passt = passt && rangeTestProds(D=2,M=2) = true
v = [testProds(D=D,M=M,N=N,n=n,dev=dev,MCMC=MCMC) for i = 1:10] = Bool[true,true,true,true,true,true,true,true,true,true]
passt = passt && rangeTestProds(D=2,M=4) = true
v = [testProds(D=D,M=M,N=N,n=n,dev=dev,MCMC=MCMC) for i = 1:10] = Bool[false,true,true,true,false,true,true,true,true,true]
passt = passt && rangeTestProds(D=2,M=6) = true
v = [testProds(D=D,M=M,N=N,n=n,dev=dev,MCMC=MCMC) for i = 1:10] = Bool[true,true,true,false,true,true,true,true,true,true]
passt = passt && rangeTestProds(D=3,M=6,MCMC=10) = true
v = [testProds(D=D,M=M,N=N,n=n,dev=dev,MCMC=MCMC) for i = 1:10] = Bool[true,true,true,true,true,true,true,true,true,true]
passt = passt && rangeTestProds(D=4,M=6,MCMC=10) = true
v = [testProds(D=D,M=M,N=N,n=n,dev=dev,MCMC=MCMC) for i = 1:10] = Bool[true,true,true,true,true,true,true,true,true,true]
passt = passt && rangeTestProds(D=3,M=5,N=300) = true
v = [testProds(D=D,M=M,N=N,n=n,dev=dev,MCMC=MCMC) for i = 1:10] = Bool[true,true,true,true,true,true,true,true,true,true]
passt = passt && rangeTestProds(D=2,M=7,n=300) = true
v = [testProds(D=D,M=M,N=N,n=n,dev=dev,MCMC=MCMC) for i = 1:10] = Bool[true,true,true,true,true,true,true,true,true,true]
passt = passt && rangeTestProds(D=3,M=2,MCMC=100) = true
a = intgAppxGaussianOffs(offs=0.0,dim=1) = 0.2570451263515763
testflag = testflag && 0.2 < a < 0.35 = true
a = intgAppxGaussianOffs(offs=1.0,dim=1,N=1000) = 0.21498530212468936
testflag = testflag && 0.1 < a < 0.3 = true
a = intgAppxGaussianOffs(offs=-2.0,dim=1,N=1000) = 0.1037974115224611
testflag = testflag && 0.01 < a < 0.15 = true
a = intgAppxGaussianOffs(offs=0.0,dim=2) = 0.06964627226775987
testflag = testflag && 0.05 < a < 0.12 = true
testing rand functionality
INFO: KernelDensityEstimate tests passed

>>> End of log
