>>> 'Pkg.add("MatrixChainMultiply")' log
[ Info: Cloning cache of MatrixChainMultiply from https://github.com/AustinPrivett/MatrixChainMultiply.jl.git
[ Info: Installing MatrixChainMultiply v0.0.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of MatrixChainMultiply
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MatrixChainMultiply")' log
Julia Version 0.7.0-DEV.3421
Commit 2042dcfc2e (2018-01-16 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    3230416 s       2540 s     167590 s     837135 s         36 s
       #2  3499 MHz     657261 s       3970 s      63961 s    4164456 s          0 s
       
  Memory: 2.93927001953125 GB (868.26953125 MB free)
  Uptime: 49745.0 sec
  Load Avg:  0.9970703125  0.99560546875  0.98095703125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - MatrixChainMultiply           0.0.1
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
[ Info: Testing MatrixChainMultiply
┌ Warning: Deprecated syntax `parametric method syntax msize{T}(m::AbstractArray{T, 2})` around /home/vagrant/.julia/v0.7/MatrixChainMultiply/src/MatrixChainMultiply.jl:11.
│ Use `msize(m::AbstractArray{T, 2}) where T` instead.
└ @ nothing MatrixChainMultiply.jl:11
┌ Warning: Deprecated syntax `parametric method syntax msize{T}(v::AbstractArray{T, 1})` around /home/vagrant/.julia/v0.7/MatrixChainMultiply/src/MatrixChainMultiply.jl:12.
│ Use `msize(v::AbstractArray{T, 1}) where T` instead.
└ @ nothing MatrixChainMultiply.jl:12
┌ Warning: Deprecated syntax `parametric method syntax msize{T <: Number}(s::T)` around /home/vagrant/.julia/v0.7/MatrixChainMultiply/src/MatrixChainMultiply.jl:13.
│ Use `msize(s::T) where T <: Number` instead.
└ @ nothing MatrixChainMultiply.jl:13
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/MatrixChainMultiply/test/runtests.jl:2
Default grouping...
┌ Warning: `tic()` is deprecated, use `@time`, `@elapsed`, or calls to `time_ns()` instead.
│   caller = mcm_test(::Bool) at runtests.jl:19
└ @ Main runtests.jl:19
┌ Warning: `toc()` is deprecated, use `@time`, `@elapsed`, or calls to `time_ns()` instead.
│   caller = mcm_test(::Bool) at runtests.jl:19
└ @ Main runtests.jl:19
elapsed time: 10.196716012 seconds

Optimal grouping...
┌ Warning: `tic()` is deprecated, use `@time`, `@elapsed`, or calls to `time_ns()` instead.
│   caller = mcm_test(::Bool) at runtests.jl:22
└ @ Main runtests.jl:22
Operation: (x[1]*(x[2]*(x[3]*x[4])))
Cost: 38000000
┌ Warning: `toc()` is deprecated, use `@time`, `@elapsed`, or calls to `time_ns()` instead.
│   caller = mcm_test(::Bool) at runtests.jl:22
└ @ Main runtests.jl:22
elapsed time: 0.124038087 seconds

MatrixChainMultiplication method is 82.20633080224785 times FASTER.
[ Info: MatrixChainMultiply tests passed

>>> End of log
