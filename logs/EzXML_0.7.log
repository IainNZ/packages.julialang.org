>>> 'Pkg.add("EzXML")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing BinaryProvider v0.2.3
[ Info: Installing EzXML v0.6.1
[ Info: Installing SHA v0.5.6
[ Info: Building EzXML
┌ Warning: `convert(::Type{String}, s::Symbol)` is deprecated, use `String(s)` instead.
│   caller = BinaryProvider.LibraryProduct(::BinaryProvider.Prefix, ::String, ::Symbol) at Products.jl:76
└ @ BinaryProvider Products.jl:76
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = valid_dl_path(::String, ::BinaryProvider.Linux) at PlatformNames.jl:204
└ @ BinaryProvider PlatformNames.jl:204
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #locate#122(::Bool, ::BinaryProvider.Linux, ::Function, ::BinaryProvider.LibraryProduct) at Products.jl:129
└ @ BinaryProvider Products.jl:129
INFO: Found a valid dl path libxml2.so while looking for libxml2
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #locate#122(::Bool, ::BinaryProvider.Linux, ::Function, ::BinaryProvider.LibraryProduct) at Products.jl:138
└ @ BinaryProvider Products.jl:138
INFO: /home/vagrant/.julia/v0.7/EzXML/deps/usr/lib/libxml2.so matches our search criteria of libxml2
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = (::getfield(BinaryProvider, Symbol("##126#128")))(::String) at Products.jl:304
└ @ BinaryProvider Products.jl:304
[ Info: Package database updated

>>> 'Pkg.test("EzXML")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4062
Commit 9f8bdf459e (2018-02-22 20:17 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    4356788 s       1432 s     231651 s    1565480 s         71 s
       #2  3499 MHz    1211603 s       6583 s     101970 s    5684250 s          3 s
       
  Memory: 2.93927001953125 GB (866.25 MB free)
  Uptime: 71600.0 sec
  Load Avg:  1.05029296875  1.001953125  1.0322265625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - EzXML                         0.6.1
 - JSON                          0.16.4
4 additional packages:
 - BinaryProvider                0.2.3
 - Compat                        0.54.0
 - Nullables                     0.0.3
 - SHA                           0.5.6
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for EzXML...
[ Info: Installing CodecZlib v0.4.2
[ Info: Installing DataStructures v0.7.4
[ Info: Installing LightGraphs v0.12.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing SimpleTraits v0.7.1
[ Info: Installing TranscodingStreams v0.4.1
[ Info: Testing EzXML
WARNING: importing deprecated binding Base.Libdl into EzXML.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/EzXML/src/EzXML.jl:104
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/EzXML/src/EzXML.jl:104
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/EzXML/src/EzXML.jl:104
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/EzXML/src/EzXML.jl:104
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/EzXML/src/EzXML.jl:104
in check_deps at /home/vagrant/.julia/v0.7/EzXML/src/../deps/deps.jl
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/EzXML/src/node.jl:1255
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/EzXML/src/streamreader.jl:164
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = macro expansion at runtests.jl:15 [inlined]
└ @ Core runtests.jl:15
Test Summary: | Pass  Total
Error         |   88     88
┌ Warning: `nb_available` is deprecated, use `bytesavailable` instead.
│   caller = (::getfield(EzXML, Symbol("##7#8")))(::Ptr{Nothing}, ::Ptr{UInt8}, ::Int32) at document.jl:191
└ @ EzXML document.jl:191
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at runtests.jl:88 [inlined]
└ @ Core runtests.jl:88
INFO: the following two warnings are expected:
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#848(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1021
└ @ Base deprecated.jl:1021
WARNING: XMLError: htmlParseCharRef: missing semicolon from HTML parser (code: 7, line: 2)
WARNING: XMLError: htmlParseCharRef: missing semicolon from HTML parser (code: 7, line: 4)
Test Summary: | Pass  Total
Reader        |   20     20
Test Summary: | Pass  Total
Writer        |    3      3
XML: Error During Test at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:114
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching parsexml(::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    parsexml(!Matched::Array{UInt8,1}) at /home/vagrant/.julia/v0.7/EzXML/src/document.jl:73
    parsexml(!Matched::AbstractString) at /home/vagrant/.julia/v0.7/EzXML/src/document.jl:61
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:132 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [3] macro expansion at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:115 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [5] top-level scope at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:114
   [6] include at ./boot.jl:295 [inlined]
   [7] include_relative(::Module, ::String) at ./loading.jl:1074
   [8] include(::Module, ::String) at ./sysimg.jl:29
   [9] exec_options(::Base.JLOptions) at ./client.jl:332
   [10] _start() at ./client.jl:448
HTML: Error During Test at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:166
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching parsehtml(::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    parsehtml(!Matched::Array{UInt8,1}) at /home/vagrant/.julia/v0.7/EzXML/src/document.jl:97
    parsehtml(!Matched::AbstractString) at /home/vagrant/.julia/v0.7/EzXML/src/document.jl:82
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:197 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [3] macro expansion at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:167 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [5] top-level scope at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:114
   [6] include at ./boot.jl:295 [inlined]
   [7] include_relative(::Module, ::String) at ./loading.jl:1074
   [8] include(::Module, ::String) at ./sysimg.jl:29
   [9] exec_options(::Base.JLOptions) at ./client.jl:332
   [10] _start() at ./client.jl:448
Test Summary: | Pass  Error  Total
Parser        |   11      2     13
  XML         |    4      1      5
  HTML        |    7      1      8
ERROR: LoadError: Some tests did not pass: 11 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:113
┌ Error: ------------------------------------------------------------
│ # Testing failed for EzXML
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:693
│     [3] run(::Cmd) at ./process.jl:655
│     [4] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [6] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] #test at ./<missing>:0 [inlined]
│     [10] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:277
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:277
│     [16] top-level scope
│     [17] eval at ./boot.jl:298 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:734
[ Info: Removing CodecZlib v0.4.2
[ Info: Removing DataStructures v0.7.4
[ Info: Removing LightGraphs v0.12.0
[ Info: Removing MacroTools v0.4.0
[ Info: Removing SimpleTraits v0.7.1
[ Info: Removing TranscodingStreams v0.4.1
ERROR: EzXML had test errors

>>> End of log
