>>> 'Pkg.add("EzXML")' log
[ Info: Installing EzXML v0.5.6
[ Info: Building EzXML
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of EzXML
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("EzXML")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4621100 s       6524 s     221174 s    1420082 s         66 s
       #2  3500 MHz    1248177 s       1753 s      97430 s    5804184 s          1 s
       
  Memory: 2.93927001953125 GB (888.20703125 MB free)
  Uptime: 73135.0 sec
  Load Avg:  0.86865234375  0.978515625  1.029296875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - EzXML                         0.5.6
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Computing test dependencies for EzXML...
[ Info: Installing CodecZlib v0.4.2
[ Info: Installing DataStructures v0.7.4
[ Info: Installing LightGraphs v0.11.1
[ Info: Installing MacroTools v0.4.0
[ Info: Installing SimpleTraits v0.5.1
[ Info: Installing TranscodingStreams v0.4.1
[ Info: Testing EzXML
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = macro expansion at runtests.jl:15 [inlined]
└ @ Core runtests.jl:15
Test Summary: | Pass  Total
Error         |   88     88
┌ Warning: `nb_available` is deprecated, use `bytesavailable` instead.
│   caller = (::getfield(EzXML, Symbol("##7#8")))(::Ptr{Nothing}, ::Ptr{UInt8}, ::Int32) at document.jl:226
└ @ EzXML document.jl:226
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at runtests.jl:90 [inlined]
└ @ Core runtests.jl:90
INFO: the following two warnings are expected:
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#895(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1088
└ @ Base deprecated.jl:1088
WARNING: XMLError: htmlParseCharRef: missing semicolon from HTML parser (code: 7, line: 2)
WARNING: XMLError: htmlParseCharRef: missing semicolon from HTML parser (code: 7, line: 4)
Test Summary: | Pass  Total
Reader        |   22     22
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = is_html_like at document.jl:69 [inlined]
└ @ Core document.jl:69
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = is_html_like at document.jl:71 [inlined]
└ @ Core document.jl:71
Test Summary: | Pass  Total
Writer        |    3      3
┌ Warning: `searchindex(s::AbstractString, t::AbstractString)` is deprecated, use `first(findfirst(t, s))` instead.
│   caller = is_html_like at document.jl:74 [inlined]
└ @ Core document.jl:74
XML: Error During Test at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:116
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching parse(::Type{EzXML.Document}, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    parse(::Type{EzXML.Document}, !Matched::AbstractString) at /home/vagrant/.julia/v0.7/EzXML/src/document.jl:56
    parse(::Type{EzXML.Document}, !Matched::Array{UInt8,1}) at /home/vagrant/.julia/v0.7/EzXML/src/document.jl:64
    parse(!Matched::Type{#s544} where #s544<:Integer, ::Any, !Matched::Any) at deprecated.jl:55
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:134 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] macro expansion at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:117 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [5] top-level scope at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:116
   [6] include at ./boot.jl:292 [inlined]
   [7] include_relative(::Module, ::String) at ./loading.jl:1012
   [8] include(::Module, ::String) at ./sysimg.jl:26
   [9] process_options(::Base.JLOptions) at ./client.jl:334
   [10] _start() at ./client.jl:386
HTML: Error During Test at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:168
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching parse(::Type{EzXML.Document}, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    parse(::Type{EzXML.Document}, !Matched::AbstractString) at /home/vagrant/.julia/v0.7/EzXML/src/document.jl:56
    parse(::Type{EzXML.Document}, !Matched::Array{UInt8,1}) at /home/vagrant/.julia/v0.7/EzXML/src/document.jl:64
    parse(!Matched::Type{#s544} where #s544<:Integer, ::Any, !Matched::Any) at deprecated.jl:55
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:199 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] macro expansion at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:169 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [5] top-level scope at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:116
   [6] include at ./boot.jl:292 [inlined]
   [7] include_relative(::Module, ::String) at ./loading.jl:1012
   [8] include(::Module, ::String) at ./sysimg.jl:26
   [9] process_options(::Base.JLOptions) at ./client.jl:334
   [10] _start() at ./client.jl:386
Test Summary: | Pass  Error  Total
Parser        |   11      2     13
  XML         |    4      1      5
  HTML        |    7      1      8
ERROR: LoadError: Some tests did not pass: 11 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl:115
┌ Error: ------------------------------------------------------------
│ # Testing failed for EzXML
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/EzXML/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
[ Info: Removing CodecZlib v0.4.2
[ Info: Removing DataStructures v0.7.4
[ Info: Removing LightGraphs v0.11.1
[ Info: Removing MacroTools v0.4.0
[ Info: Removing SimpleTraits v0.5.1
[ Info: Removing TranscodingStreams v0.4.1
ERROR: EzXML had test errors

>>> End of log
