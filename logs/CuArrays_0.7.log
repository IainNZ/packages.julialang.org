>>> 'Pkg.add("CuArrays")' log
[ Info: Cloning cache of CUDAapi from https://github.com/JuliaGPU/CUDAapi.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of CUDAdrv from https://github.com/JuliaGPU/CUDAdrv.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of CUDAnative from https://github.com/JuliaGPU/CUDAnative.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of CuArrays from https://github.com/JuliaGPU/CuArrays.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of LLVM from https://github.com/maleadt/LLVM.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of NNlib from https://github.com/FluxML/NNlib.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing CUDAapi v0.2.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CUDAdrv v0.6.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CUDAnative v0.5.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CuArrays v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing GPUArrays v0.2.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LLVM v0.9.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NNlib v0.2.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Requires v0.4.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Building CUDAdrv @ Main none:10
WARNING: both CUDAapi and Base export "@debug"; uses of it in module __anon__ must be qualified
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAdrv
│   exception = LoadError("/home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl", 46, LoadError("/home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl", 86, UndefVarError(Symbol("@debug"))))
└ @ Main none:15
[ Info: Building LLVM @ Main none:10
┌ Error: ------------------------------------------------------------
│ # Build failed for LLVM
│   exception = LoadError("/home/vagrant/.julia/v0.7/LLVM/deps/build.jl", 100, UndefVarError(:JULIA_HOME))
└ @ Main none:15
[ Info: Building CUDAnative @ Main none:10
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
ERROR: LoadError: CUDAdrv.jl has not been built, please run Pkg.build("CUDAdrv").
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope
 [3] include at ./boot.jl:295 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:521
 [5] include(::Module, ::String) at ./sysimg.jl:26
 [6] top-level scope
 [7] eval at ./boot.jl:298 [inlined]
 [8] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/src/CUDAdrv.jl:11
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAnative
│   exception = LoadError("/home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl", 2, ErrorException("Failed to precompile CUDAdrv to /home/vagrant/.julia/lib/v0.7/CUDAdrv.ji."))
└ @ Main none:15
[ Info: Building NNlib @ Main none:10
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope at build.jl:6
└ @ Core build.jl:6
┌ Warning: `is_unix` is deprecated, use `Sys.isunix` instead.
│   caller = top-level scope at build.jl:10
└ @ Core build.jl:10
[ Info: Building CuArrays @ Main none:10
┌ Error: ------------------------------------------------------------
│ # Build failed for CuArrays
│   exception = LoadError("/home/vagrant/.julia/v0.7/CuArrays/deps/build.jl", 6, ErrorException("Could not find CUDA toolkit; specify using CUDA_(dir|HOME|ROOT) environment variable"))
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ CUDAnative, LLVM, CuArrays and CUDAdrv had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("CUDAnative", "LLVM", "CuArrays", "CUDAdrv")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:656
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of CuArrays
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("CuArrays")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2516520 s        111 s     130020 s     707039 s         24 s
       #2  3499 MHz     565662 s         48 s      58158 s    3239061 s          0 s
       
  Memory: 2.93927001953125 GB (772.0234375 MB free)
  Uptime: 39235.0 sec
  Load Avg:  0.8896484375  0.978515625  0.96533203125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CuArrays                      0.3.0
 - JSON                          0.16.3
10 additional packages:
 - CUDAapi                       0.2.1
 - CUDAdrv                       0.6.1
 - CUDAnative                    0.5.3
 - Compat                        0.42.0
 - GPUArrays                     0.2.1
 - LLVM                          0.9.3
 - NNlib                         0.2.1
 - Nullables                     0.0.2
 - Requires                      0.4.3
 - StaticArrays                  0.6.6
[ Info: Testing CuArrays @ Base.Pkg.Entry entry.jl:723
ERROR: LoadError: type JLOptions has no field use_compilecache
Stacktrace:
 [1] getproperty(::Base.JLOptions, ::Symbol) at ./sysimg.jl:8
 [2] top-level scope at /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl:4
 [3] include at ./boot.jl:295 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:521
 [5] include(::Module, ::String) at ./sysimg.jl:26
 [6] process_options(::Base.JLOptions) at ./client.jl:323
 [7] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for CuArrays
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: CuArrays had test errors

>>> End of log
