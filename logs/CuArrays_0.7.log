>>> 'Pkg.add("CuArrays")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of CUDAapi from https://github.com/JuliaGPU/CUDAapi.jl.git
[ Info: Cloning cache of CUDAdrv from https://github.com/JuliaGPU/CUDAdrv.jl.git
[ Info: Cloning cache of CUDAnative from https://github.com/JuliaGPU/CUDAnative.jl.git
[ Info: Cloning cache of CuArrays from https://github.com/JuliaGPU/CuArrays.jl.git
[ Info: Cloning cache of LLVM from https://github.com/maleadt/LLVM.jl.git
[ Info: Cloning cache of NNlib from https://github.com/FluxML/NNlib.jl.git
[ Info: Installing AbstractFFTs v0.3.1
[ Info: Installing Adapt v0.2.0
[ Info: Installing BinDeps v0.8.7
[ Info: Installing CUDAapi v0.4.1
[ Info: Installing CUDAdrv v0.8.1
[ Info: Installing CUDAnative v0.7.0
[ Info: Installing CommonSubexpressions v0.1.0
[ Info: Installing CuArrays v0.5.0
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.4
[ Info: Installing ForwardDiff v0.7.5
[ Info: Installing GPUArrays v0.2.3
[ Info: Installing LLVM v0.9.7
[ Info: Installing MacroTools v0.4.0
[ Info: Installing NNlib v0.3.0
[ Info: Installing NaNMath v0.3.1
[ Info: Installing Requires v0.4.3
[ Info: Installing SHA v0.5.6
[ Info: Installing SpecialFunctions v0.4.0
[ Info: Installing StaticArrays v0.7.0
[ Info: Installing URIParser v0.3.1
[ Info: Building CUDAdrv
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/CUDAapi/src/util.jl:10
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAdrv
│   exception =
│    LoadError: Could not find CUDA driver library
│    Stacktrace:
│     [1] error at ./error.jl:33 [inlined]
│     [2] main() at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:73
│     [3] top-level scope
│     [4] include at ./boot.jl:314 [inlined]
│     [5] include_relative(::Module, ::String) at ./loading.jl:1067
│     [6] include at ./sysimg.jl:29 [inlined]
│     [7] include(::String) at ./loading.jl:1101
│     [8] top-level scope
│     [9] eval at ./boot.jl:317 [inlined]
│     [10] eval at ./sysimg.jl:74 [inlined]
│     [11] evalfile(::String, ::Array{String,1}) at ./loading.jl:1096 (repeats 2 times)
│     [12] #6 at ./none:13 [inlined]
│     [13] cd(::getfield(Main, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [14] (::getfield(Main, Symbol("##5#7")))(::IOStream) at ./none:12
│     [15] #open#322(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [16] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:116
└ @ Main none:16
[ Info: Building LLVM
[ Info: Building CUDAnative
┌ Warning: CUDAdrv.jl has not been successfully built, and will not work properly.
│ Please run Pkg.build("CUDAdrv") and restart Julia.
└ @ CUDAdrv init.jl:15
┌ Warning: The function `cfunction` is now written as a macro `@cfunction`.
│   caller = _install_handlers at context.jl:107 [inlined]
└ @ Core context.jl:107
┌ Warning: The function `cfunction` is now written as a macro `@cfunction`.
│   caller = _install_handlers at context.jl:91 [inlined]
└ @ Core context.jl:91
┌ Warning: The function `cfunction` is now written as a macro `@cfunction`.
│   caller = _install_handlers at context.jl:96 [inlined]
└ @ Core context.jl:96
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAnative
│   exception =
│    LoadError: CUDA toolkit anywhere doesn't contain nvcc
│    Stacktrace:
│     [1] error at ./error.jl:33 [inlined]
│     [2] find_toolkit_version(::Array{String,1}) at /home/vagrant/.julia/v0.7/CUDAapi/src/discovery.jl:252
│     [3] main() at /home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl:114
│     [4] top-level scope
│     [5] include at ./boot.jl:314 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:1067
│     [7] include at ./sysimg.jl:29 [inlined]
│     [8] include(::String) at ./loading.jl:1101
│     [9] top-level scope
│     [10] eval at ./boot.jl:317 [inlined]
│     [11] eval at ./sysimg.jl:74 [inlined]
│     [12] evalfile(::String, ::Array{String,1}) at ./loading.jl:1096 (repeats 2 times)
│     [13] #6 at ./none:13 [inlined]
│     [14] cd(::getfield(Main, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [15] (::getfield(Main, Symbol("##5#7")))(::IOStream) at ./none:12
│     [16] #open#322(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [17] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [18] top-level scope
│     [19] eval at ./boot.jl:317 [inlined]
│     [20] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [21] exec_options(::Base.JLOptions) at ./client.jl:304
│     [22] _start() at ./client.jl:455
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl:156
└ @ Main none:16
[ Info: Building SpecialFunctions
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:402
└ @ BinDeps dependencies.jl:402
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:405
└ @ BinDeps dependencies.jl:405
[ Info: Building CuArrays
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#880(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1028
└ @ Base deprecated.jl:1028
WARNING: could not find CUDNN, its functionality will be unavailable
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ CUDAnative and CUDAdrv had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("CUDAnative", "CUDAdrv")`
│  - build a single package by running its `deps/build.jl` script
└ @ Pkg.Entry entry.jl:649
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of CuArrays
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CuArrays")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4803
Commit ff7b6452f8 (2018-04-06 17:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3514 MHz    2951958 s        114 s     231768 s    1003802 s         31 s
       #2  3514 MHz     866589 s       6403 s      98948 s    3795076 s          0 s
       
  Memory: 2.939197540283203 GB (893.55859375 MB free)
  Uptime: 48599.0 sec
  Load Avg:  0.9482421875  0.95654296875  0.9541015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CuArrays                      0.5.0
 - JSON                          0.17.2
22 additional packages:
 - AbstractFFTs                  0.3.1
 - Adapt                         0.2.0
 - BinDeps                       0.8.7
 - CUDAapi                       0.4.1
 - CUDAdrv                       0.8.1
 - CUDAnative                    0.7.0
 - CommonSubexpressions          0.1.0
 - Compat                        0.63.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.4
 - ForwardDiff                   0.7.5
 - GPUArrays                     0.2.3
 - LLVM                          0.9.7
 - MacroTools                    0.4.0
 - NNlib                         0.3.0
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - Requires                      0.4.3
 - SHA                           0.5.6
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - URIParser                     0.3.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for CuArrays...
[ Info: Installing FFTW v0.2.0
[ Info: Installing Reexport v0.1.0
[ Info: Building FFTW
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/FFTW/deps/build_fftw.jl:113
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:402
└ @ BinDeps dependencies.jl:402
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:405
└ @ BinDeps dependencies.jl:405
[ Info: Testing CuArrays
ERROR: LoadError: type JLOptions has no field use_compilecache
Stacktrace:
 [1] getproperty(::Any, ::Symbol) at ./sysimg.jl:18
 [2] top-level scope at /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl:4
 [3] include at ./boot.jl:314 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1067
 [5] include(::Module, ::String) at ./sysimg.jl:29
 [6] exec_options(::Base.JLOptions) at ./client.jl:327
 [7] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for CuArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#542(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing FFTW v0.2.0
[ Info: Removing Reexport v0.1.0
ERROR: CuArrays had test errors

>>> End of log
