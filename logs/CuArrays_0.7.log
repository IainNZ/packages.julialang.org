>>> 'Pkg.add("CuArrays")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of CUDAapi from https://github.com/JuliaGPU/CUDAapi.jl.git
[ Info: Cloning cache of CUDAdrv from https://github.com/JuliaGPU/CUDAdrv.jl.git
[ Info: Cloning cache of CUDAnative from https://github.com/JuliaGPU/CUDAnative.jl.git
[ Info: Cloning cache of CuArrays from https://github.com/JuliaGPU/CuArrays.jl.git
[ Info: Cloning cache of LLVM from https://github.com/maleadt/LLVM.jl.git
[ Info: Cloning cache of NNlib from https://github.com/FluxML/NNlib.jl.git
[ Info: Installing Adapt v0.2.0
[ Info: Installing CUDAapi v0.4.0
[ Info: Installing CUDAdrv v0.7.7
[ Info: Installing CUDAnative v0.6.0
[ Info: Installing CuArrays v0.4.0
[ Info: Installing GPUArrays v0.2.2
[ Info: Installing LLVM v0.9.6
[ Info: Installing NNlib v0.2.3
[ Info: Installing Requires v0.4.3
[ Info: Installing StaticArrays v0.6.6
[ Info: Building CUDAdrv
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/CUDAapi/src/util.jl:10
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAdrv
│   exception =
│    LoadError: MethodError: no method matching dlopen(::Nothing)
│    Closest candidates are:
│      dlopen(!Matched::Symbol) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Libdl/src/Libdl.jl:96
│      dlopen(!Matched::Symbol, !Matched::Integer) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Libdl/src/Libdl.jl:96
│      dlopen(!Matched::AbstractString) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Libdl/src/Libdl.jl:99
│      ...
│    Stacktrace:
│     [1] init(::Nothing, ::Int64) at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:14
│     [2] init at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:29 [inlined]
│     [3] main() at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:60
│     [4] top-level scope
│     [5] include at ./boot.jl:295 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:1066
│     [7] include at ./sysimg.jl:29 [inlined]
│     [8] include(::String) at ./loading.jl:1100
│     [9] top-level scope
│     [10] eval at ./boot.jl:298 [inlined]
│     [11] eval at ./sysimg.jl:74 [inlined]
│     [12] evalfile(::String, ::Array{String,1}) at ./loading.jl:1095 (repeats 2 times)
│     [13] #6 at ./none:13 [inlined]
│     [14] cd(::getfield(, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [15] (::getfield(, Symbol("##5#7")))(::IOStream) at ./none:12
│     [16] #open#316(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [17] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [18] top-level scope
│     [19] eval at ./boot.jl:298 [inlined]
│     [20] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [21] exec_options(::Base.JLOptions) at ./client.jl:309
│     [22] _start() at ./client.jl:448
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:104
└ @ Main none:16
[ Info: Building LLVM
WARNING: importing deprecated binding Base.STDERR into __anon__.
WARNING: Base.STDERR is deprecated, use stderr instead.
  likely near /home/vagrant/.julia/v0.7/LLVM/deps/build.jl:105
in main at /home/vagrant/.julia/v0.7/LLVM/deps/build.jl
[ Info: Building CUDAnative
WARNING: importing deprecated binding Base.ObjectIdDict into CUDAdrv.
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/CUDAdrv/src/context.jl:113
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#874(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1021
└ @ Base deprecated.jl:1021
WARNING: CUDAdrv.jl has not been successfully built, and will not work properly.
WARNING: Please run Pkg.build("CUDAdrv") and restart Julia.
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/LLVM/src/interop/base.jl:38.
│ Use `at most one line break` instead.
└ @ nothing base.jl:38
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/LLVM/src/interop/base.jl:40.
│ Use `at most one line break` instead.
└ @ nothing base.jl:40
WARNING: importing deprecated binding Base.STDERR into LLVM.
WARNING: Base.STDERR is deprecated, use stderr instead.
  likely near /home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl:3
in handle_diagnostic at /home/vagrant/.julia/v0.7/LLVM/src/core/context.jl
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAnative
│   exception =
│    LoadError: CUDA toolkit anywhere doesn't contain nvcc
│    Stacktrace:
│     [1] error at ./error.jl:33 [inlined]
│     [2] find_toolkit_version(::Array{String,1}) at /home/vagrant/.julia/v0.7/CUDAapi/src/discovery.jl:251
│     [3] main() at /home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl:105
│     [4] top-level scope
│     [5] include at ./boot.jl:295 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:1066
│     [7] include at ./sysimg.jl:29 [inlined]
│     [8] include(::String) at ./loading.jl:1100
│     [9] top-level scope
│     [10] eval at ./boot.jl:298 [inlined]
│     [11] eval at ./sysimg.jl:74 [inlined]
│     [12] evalfile(::String, ::Array{String,1}) at ./loading.jl:1095 (repeats 2 times)
│     [13] #6 at ./none:13 [inlined]
│     [14] cd(::getfield(, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [15] (::getfield(, Symbol("##5#7")))(::IOStream) at ./none:12
│     [16] #open#316(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [17] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [18] top-level scope
│     [19] eval at ./boot.jl:298 [inlined]
│     [20] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [21] exec_options(::Base.JLOptions) at ./client.jl:309
│     [22] _start() at ./client.jl:448
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl:153
└ @ Main none:16
WARNING: Base.STDERR is deprecated, use stderr instead.
 in module LLVM
in #5 at /home/vagrant/.julia/v0.7/LLVM/src/util/logging.jl
[ Info: Building NNlib
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope at build.jl:6
└ @ Core build.jl:6
┌ Warning: `is_unix` is deprecated, use `Sys.isunix` instead.
│   caller = top-level scope at build.jl:10
└ @ Core build.jl:10
┌ Warning: The `remove_destination` keyword argument is deprecated; use `force` instead
│   caller = ip:0x0
└ @ Core :-1
[ Info: Building CuArrays
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#874(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1021
└ @ Base deprecated.jl:1021
WARNING: could not find CUDNN, its functionality will be unavailable
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ CUDAnative and CUDAdrv had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("CUDAnative", "CUDAdrv")`
│  - build a single package by running its `deps/build.jl` script
└ @ Pkg.Entry entry.jl:649
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of CuArrays
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CuArrays")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4390
Commit 79c7bdd9ec (2018-02-26 07:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3501 MHz    2577432 s       4925 s     137928 s     948589 s         28 s
       #2  3501 MHz     782140 s       1092 s      61555 s    3364563 s          1 s
       
  Memory: 2.93927001953125 GB (719.72265625 MB free)
  Uptime: 43026.0 sec
  Load Avg:  0.94580078125  0.9423828125  0.95361328125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CuArrays                      0.4.0
 - JSON                          0.17.1
11 additional packages:
 - Adapt                         0.2.0
 - CUDAapi                       0.4.0
 - CUDAdrv                       0.7.7
 - CUDAnative                    0.6.0
 - Compat                        0.55.0
 - GPUArrays                     0.2.2
 - LLVM                          0.9.6
 - NNlib                         0.2.3
 - Nullables                     0.0.3
 - Requires                      0.4.3
 - StaticArrays                  0.6.6
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing CuArrays
ERROR: LoadError: type JLOptions has no field use_compilecache
Stacktrace:
 [1] getproperty(::Base.JLOptions, ::Symbol) at ./sysimg.jl:10
 [2] top-level scope at /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl:4
 [3] include at ./boot.jl:295 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1066
 [5] include(::Module, ::String) at ./sysimg.jl:29
 [6] exec_options(::Base.JLOptions) at ./client.jl:332
 [7] _start() at ./client.jl:448
in expression starting at /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for CuArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CuArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:693
│     [3] run(::Cmd) at ./process.jl:655
│     [4] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [5] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [6] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [9] #test at ./<missing>:0 [inlined]
│     [10] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] top-level scope
│     [17] eval at ./boot.jl:298 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
ERROR: CuArrays had test errors

>>> End of log
