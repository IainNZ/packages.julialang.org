>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (850.66796875 MB free)
Uptime: 14171.0 sec
Load Avg:  0.9931640625  0.97607421875  0.99853515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     653848 s        976 s      58878 s     566327 s         25 s
#2  3500 MHz     459452 s       6044 s      52361 s     848377 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.38880220841154745	.544526084246362	.8158207889062479	.19423778419810844
two	.037944117777891195	.9846013912518936	.029145813430247802	.6105952457121422
a	11
b	73
c	97
d	86
e	10
f	24
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.97822    0.87156   0.437048
b           │  0.712287   0.717772  0.0544445 0.9782198277551657 0.9782198277551657
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.97822    0.87156   0.437048
b     │  0.712287   0.717772  0.0544445
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.97822    0.87156   0.437048
b           │  0.712287   0.717772  0.0544445
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.97822    0.87156   0.437048
b     │  0.712287   0.717772  0.0544445
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.378599  0.298147  0.727254  0.574752
er              │ 0.657484  0.557262  0.879604  0.508266
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140400798846640
0-element Named Array{Any,1}

[0.08060356902909271 0.8304387944691345 0.8456016766734056 0.044217954219009314
 0.2073309416375011 0.628554387901225 0.2978879731009463 0.11029652004916413]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0806036   0.830439   0.845602   0.044218
two   │  0.207331   0.628554   0.297888   0.1102972x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0806036   0.830439   0.845602   0.044218
two   │  0.207331   0.628554   0.297888   0.1102972x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.10249      -1.4632  …    0.0164842     -2.27683
2     │     1.66268      1.32178  …     -1.02489     0.1288511000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.83449   -0.647449
2     │  -0.513789     1.43252
3     │    1.94055    -2.08796
4     │  0.0271035    -1.90211
5     │   -0.53073    -1.74713
6     │   -1.17688   -0.373208
7     │     1.2348   -0.392618
8     │    1.36404   -0.423835
9     │  -0.168187     3.20816
⋮                ⋮           ⋮
992   │   0.859589    0.439769
993   │   -1.04545   -0.577737
994   │   0.785419   -0.427846
995   │ -0.0980075     0.97385
996   │   -1.05287    0.919231
997   │  -0.104593    0.924573
998   │   -1.14591    0.777506
999   │  -0.297329    -1.12586
1000  │  -0.695365     1.825341000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.689452
2    │  -1.18808
3    │   0.24042
4    │  0.507032
5    │ -0.896743
6    │  -2.02663
7    │ -0.452101
8    │  -1.49833
9    │  0.346515
⋮              ⋮
992  │  0.263974
993  │  0.229236
994  │ -0.453203
995  │ -0.849832
996  │  -3.10227
997  │ -0.618728
998  │ -0.498702
999  │   1.34535
1000 │ -0.5759432x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.409949  0.637373
1           │ 0.853747  0.450823

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.914722   0.96999
1           │ 0.114907  0.391315
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.640569
2  │ 0.0659524
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.944332  0.889874
2     │ 0.565525   0.24713
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.441964  0.528737
2     │ 0.725776  0.398786

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.753724  0.0520773
2     │  0.732642   0.910039
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.427924  0.296952
2     │ 0.379436  0.891379

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.423592  0.633226
2     │ 0.982105  0.970352

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.89449   0.17883
2     │ 0.589668   0.21253

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.637645   0.673847
2     │ 0.0961257   0.788006
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.249088  0.464839
2     │ 0.306959  0.526211

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.505841  0.0887054
2     │  0.750041   0.689611

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.551167  0.474639
2     │ 0.196427  0.892579
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.44891  0.982882

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.233683  0.558294
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.862699
2     │ 0.764869

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.493082
2     │ 0.370384
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.735073   0.100967
2     │ 0.0683451   0.137761
1000×1000 Named sparse matrix with 104 Float64 nonzero entries:
	[5093524509719114539 , 11496001657944805140]  =  0.027934640238621355
	[5836885843989504432 , 18443816037252674910]  =  0.9410011486968926
	[8430133805019144520 ,  5062864901616737721]  =  0.9358412980843165
	[849947749456312673  , 16408863325498676967]  =  0.2922810929108737
	[53689838181604040   , 10596751188013898940]  =  0.2762229020441418
	[17153933318764010614,  4302721723742542942]  =  0.7065392098411267
	[3674440393316115114 ,  2001767177420584454]  =  0.12502007433885254
	[10361974346531339474, 13450619636401767365]  =  0.1941648132582674
	                                              ⋮
	[9828685043168917423 ,  4099991848953537601]  =  0.334269328353727
	[13998600730537104788, 13544680138434484894]  =  0.37236894554202093
	[6081783302736743377 , 10647878191897777347]  =  0.8239721158817541
	[13550011942507349191,  4285843451033309381]  =  0.11225384716027453
	[2792481481398066916 ,  8471876845144429043]  =  0.5789636270319498
	[2971581029604614559 ,  4788923618671962983]  =  0.942515861648219
	[17795748529514954214,  8090338657268802519]  =  0.5985031976499855
	[2202644137930953607 , 14835807873575694564]  =  0.11244696419320888
	[15532353619459032979, 16840404209865735426]  =  0.8797338955648959Timing named index: 0.000624122, array index: 0.000429398, named key: 0.07244619
Timing sum large sparse array: 0.011839174, named: 0.020756053
done!
INFO: NamedArrays tests passed

>>> End of log
