>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (741.21484375 MB free)
Uptime: 14572.0 sec
Load Avg:  1.1474609375  1.04345703125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     626892 s        110 s      52118 s     638850 s         35 s
#2  3499 MHz     443899 s       7127 s      45610 s     895335 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.951432333762793	.05318398596505558	.7980819744598986	.7484213208275226
two	.44684936944301334	.8569921474751383	.8203665319109941	.7144632952476955
a	84
b	78
c	79
d	7
e	74
f	27
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0614322   0.491029   0.108742
b           │  0.668731   0.704299   0.637591 0.06143220463680299 0.06143220463680299
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0614322   0.491029   0.108742
b     │  0.668731   0.704299   0.637591
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0614322   0.491029   0.108742
b           │  0.668731   0.704299   0.637591
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0614322   0.491029   0.108742
b     │  0.668731   0.704299   0.637591
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.825036   0.783096   0.159333   0.565498
er              │ 0.0283748   0.936829   0.796161   0.804468
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140411511390224
0-element Named Array{Any,1}

[0.9136279659271895 0.26706520469060435 0.799118136101993 0.8271020057366212
 0.8482846263628896 0.868769469868204 0.4864981652689877 0.027124923547756863]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.913628   0.267065   0.799118   0.827102
two   │  0.848285   0.868769   0.486498  0.02712492x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.913628   0.267065   0.799118   0.827102
two   │  0.848285   0.868769   0.486498  0.02712492x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.769911       1.18193  …      -1.07442      -1.17902
2     │    -0.508339      -0.63875  …      -2.25903    -0.05455231000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │     1.52822     -1.02296
2     │    0.930619     0.831663
3     │    -1.07439      1.39607
4     │     -1.7035    -0.153364
5     │  -0.0972215       1.3467
6     │     -1.8893     0.541324
7     │    -1.17664     0.689572
8     │    -1.08595    -0.164682
9     │   -0.917194    -0.821952
⋮                 ⋮            ⋮
992   │     0.64666     -0.36552
993   │ -0.00139641     -1.87011
994   │     1.09868     0.916815
995   │     0.57798     -1.66903
996   │   -0.850883     0.198431
997   │     1.89204      1.25413
998   │   -0.105387      1.90741
999   │  -0.0908247    -0.646925
1000  │    0.568111     -1.347661000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │     1.35713
2    │    -1.79403
3    │    -1.04701
4    │     2.36486
5    │    0.255403
6    │    0.603385
7    │   -0.168277
8    │    -1.19237
9    │    -1.05124
⋮                ⋮
992  │   -0.316546
993  │   -0.610195
994  │ -0.00785673
995  │     -1.1998
996  │     1.21755
997  │    -1.53719
998  │   -0.256454
999  │   -0.650346
1000 │   -0.1039962x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.493745  0.205717
1           │ 0.203866  0.305281

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.208483  0.782179
1           │ 0.730605  0.141718
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.581256
2  │ 0.961935
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.54449  0.613794
2     │ 0.328402   0.90876
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.247604  0.840367
2     │ 0.974258  0.029872

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.937202   0.865388
2     │  0.134559  0.0824854
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │    0.671  0.072685
2     │ 0.354697  0.136653

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.685245   0.26125
2     │ 0.446007  0.854766

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.922358  0.441979
2     │ 0.530118  0.904765

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.109589  0.738952
2     │ 0.110191  0.326049
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.544334  0.499627
2     │ 0.534924  0.865496

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.11891  0.792604
2     │ 0.562152  0.751288

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.201472  0.429336
2     │ 0.249164  0.239545
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.196437  0.719863

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.999908  0.522451
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0583019
2     │  0.998796

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.745543
2     │ 0.439266
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.663871   0.34711
2     │ 0.545896  0.262648
1000×1000 Named sparse matrix with 92 Float64 nonzero entries:
	[17131895616600668418,  5312631360709731698]  =  0.45758641670635947
	[15272022662576939533, 17095493447719212504]  =  0.9673348700330584
	[5089169802387190808 , 15422846019410515149]  =  0.44437883063330474
	[8507737825562801990 ,   592365234179887848]  =  0.7381107703904475
	[17173839162019621584,  4247719799217886270]  =  0.4062634578090121
	[8330309809540032104 ,  2849690884155085581]  =  0.26092797387310185
	[13882698648709482562,  4786699431706339713]  =  0.7783468866677767
	[9036640481818790821 ,  8629498292780771804]  =  0.698875012291033
	                                              ⋮
	[9510369508347309199 , 10626898038408744182]  =  0.6009135645847901
	[11641483179283066996, 16221828541365357577]  =  0.06761618791454094
	[7799201424495593660 ,  2344064818992981444]  =  0.29194068279141705
	[8272770267567418222 , 16243515418520287792]  =  0.36817631610279067
	[14288330035547288615, 15717097331822026300]  =  0.06986925772758301
	[8794079702498558299 , 16655780295490676025]  =  0.7166009518254359
	[10504931430957650557, 12554874066387155728]  =  0.09064803449259595
	[12072215667938940660, 11551291857879764225]  =  0.2548179863649165
	[444710347873990685  , 13690505415342562739]  =  0.9628885587091582Timing named index: 0.001102147, array index: 0.000798199, named key: 0.129588582
Timing sum large sparse array: 0.011223013, named: 0.028217994
done!
INFO: NamedArrays tests passed

>>> End of log
