>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (815.76953125 MB free)
Uptime: 13534.0 sec
Load Avg:  1.03955078125  1.0078125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     622809 s       3325 s      54376 s     538527 s         31 s
#2  3499 MHz     435573 s       2761 s      47334 s     826160 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.08261168684768228	.27581846372236374	.45169295980576485	.05503664752095849
two	.3605442754076347	.03458215246166163	.8738317954745403	.2814544673241046
a	81
b	68
c	51
d	12
e	43
f	52
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.559845  0.213962  0.782219
b           │ 0.709807  0.579957  0.609172 0.5598447575174157 0.5598447575174157
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.559845  0.213962  0.782219
b     │ 0.709807  0.579957  0.609172
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.559845  0.213962  0.782219
b           │ 0.709807  0.579957  0.609172
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.559845  0.213962  0.782219
b     │ 0.709807  0.579957  0.609172
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.177735  0.260603  0.860588  0.142905
er              │  0.68088  0.595502  0.390952  0.313757
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139842868001808
0-element Named Array{Any,1}

[0.3095290407118092 0.3256327392082352 0.5234998333867995 0.5829956231631146
 0.3486276151345744 0.8473394709108235 0.41353225052961284 0.16288664145596643]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.309529  0.325633    0.5235  0.582996
two   │ 0.348628  0.847339  0.413532  0.1628872x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.309529  0.325633    0.5235  0.582996
two   │ 0.348628  0.847339  0.413532  0.1628872x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.414127     -0.194099  …     -0.678442     -0.187548
2     │    -0.798988     -0.293256  …      -1.14957        1.24151000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  -1.81531   0.280726
2     │   0.04306   0.690822
3     │  0.158849  -0.473068
4     │ -0.242438    1.10063
5     │  0.140381   0.587372
6     │  -0.85058  -0.218315
7     │ -0.598574   0.300216
8     │ -0.243027   -0.36312
9     │ -0.846138    1.13664
⋮               ⋮          ⋮
992   │  0.611042   0.559961
993   │  0.634696    1.14104
994   │   1.35313    0.98628
995   │  0.178764   0.915995
996   │  -0.16907  -0.116674
997   │ -0.569824     1.0999
998   │   2.21846   -1.47529
999   │   1.71953   0.655241
1000  │  0.239064  -0.1820621000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │    0.138432
2    │  -0.0202597
3    │   -0.867012
4    │    0.195161
5    │   -0.775391
6    │    0.263142
7    │    0.773255
8    │    -1.35095
9    │     1.08471
⋮                ⋮
992  │    -0.96942
993  │     1.42987
994  │     0.16626
995  │   -0.604828
996  │ -0.00169089
997  │    0.546938
998  │      0.5135
999  │   -0.758479
1000 │   0.07433942x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │    0.3723  0.0040953
1           │  0.897604   0.383805

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.662564  0.692999
1           │ 0.348024    0.6978
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.228353
2  │ 0.486431
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.340678  0.439064
2     │ 0.672849   0.71651
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.997503  0.890691
2     │ 0.729805  0.686595

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.459337  0.0952814
2     │ 0.0577534   0.748835
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.323652  0.341134
2     │ 0.991592  0.930604

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.637915  0.0657378
2     │  0.483429   0.394255

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.187548   0.93378
2     │ 0.806772  0.180839

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.406624   0.13619
2     │ 0.664897  0.523005
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.925813  0.673295
2     │ 0.445377  0.728917

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.52006   0.632204
2     │ 0.0174162   0.172764

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0233347   0.704266
2     │  0.995931   0.882401
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.572658  0.0615814

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.710119  0.0981934
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.496716
2     │ 0.286161

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.863832
2     │ 0.888171
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.875282  0.338353
2     │ 0.618537  0.711286
1000×1000 Named sparse matrix with 86 Float64 nonzero entries:
	[10213422356137903131,  6806539949965918083]  =  0.6194522066435046
	[11088256593380071097, 14066869468942639955]  =  0.19332597058048862
	[172966917720799643  ,  4981387750669837953]  =  0.6404191695034416
	[16147086907566520640,  8097707444526576530]  =  0.6924645563876581
	[12843503472939723182,  3501065925215364276]  =  0.19511749745721163
	[14110845009009629080,  3501065925215364276]  =  0.6974338543246965
	[10981095045923005722,  4515533440070525328]  =  0.9354925959099709
	[493461921061351564  ,  9892445672491709286]  =  0.7113154048489714
	                                              ⋮
	[9266536657670673180 , 10626898038408744182]  =  0.7995501902270763
	[13148990739816288468, 12680114143357042360]  =  0.21336109468744002
	[6164719845061264078 , 16221828541365357577]  =  0.8516879705845146
	[11052831234341989908, 16243515418520287792]  =  0.7863777444215558
	[12664953981709537240, 10725201418295586676]  =  0.21064409990380217
	[13494041442472679795, 18148906667482527649]  =  0.5379906344781356
	[12376285854513575894, 11551291857879764225]  =  0.6002012947764246
	[14024883472771630530, 12624682912995533025]  =  0.19058266323157969
	[7369566324703660862 , 16840404209865735426]  =  0.6532984713161636Timing named index: 0.000735143, array index: 0.000715738, named key: 0.138301041
Timing sum large sparse array: 0.014667702, named: 0.019126967
done!
INFO: NamedArrays tests passed

>>> End of log
