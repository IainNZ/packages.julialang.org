>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (773.66796875 MB free)
Uptime: 14914.0 sec
Load Avg:  0.9482421875  0.970703125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     684630 s       4808 s      59221 s     599912 s         26 s
#2  3507 MHz     495359 s       1788 s      51523 s     894745 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.983329665599779	.5159292303291232	.07287164118800638	.5362195706719408
two	.27026850511076095	.869624820952406	.6038747674918592	.2304646688882508
a	13
b	53
c	55
d	80
e	5
f	57
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.651069  0.955181  0.149706
b           │ 0.103525  0.847739  0.525946 0.6510686574541302 0.6510686574541302
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.651069  0.955181  0.149706
b     │ 0.103525  0.847739  0.525946
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.651069  0.955181  0.149706
b           │ 0.103525  0.847739  0.525946
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.651069  0.955181  0.149706
b     │ 0.103525  0.847739  0.525946
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.435937  0.206995  0.213171  0.350253
er              │  0.20346  0.613771  0.976274  0.510577
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140097648442032
0-element Named Array{Any,1}

[0.4109455980605514 0.4766476188554716 0.8715386733638724 0.9286962978458342
 0.8478189535749625 0.3797241024441542 0.0873307217021464 0.14054671535908492]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.410946   0.476648   0.871539   0.928696
two   │  0.847819   0.379724  0.0873307   0.1405472x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.410946   0.476648   0.871539   0.928696
two   │  0.847819   0.379724  0.0873307   0.1405472x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.115213    -0.615859  …     -1.01983      2.37689
2     │  -0.0879235    -0.303829  …    -0.940148     -1.381741000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.83536   -0.957608
2     │   -1.56127    0.440991
3     │   -1.48326    -1.01145
4     │   0.493948    -0.96503
5     │   0.290135    -1.00893
6     │    0.27194     1.35772
7     │   -1.42151    0.823605
8     │  -0.342068    -1.12398
9     │  0.0828108    -1.16342
⋮                ⋮           ⋮
992   │   0.732873   -0.257278
993   │  -0.204575    0.159225
994   │   0.937683    0.824935
995   │  -0.505055     1.36383
996   │    1.90109    -1.70596
997   │   -1.09387  -0.0981175
998   │   0.830132    0.442908
999   │   0.153045    0.483208
1000  │    1.50937     1.782621000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.244919
2    │ -0.754073
3    │  0.475154
4    │ -0.331621
5    │ -0.541763
6    │   0.43864
7    │  -0.61247
8    │ -0.332217
9    │ 0.0729542
⋮              ⋮
992  │   0.10626
993  │  -1.05543
994  │   1.21263
995  │   1.08887
996  │   1.53454
997  │  0.335967
998  │ -0.450027
999  │  0.552914
1000 │  -2.649352x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.841163   0.30964
1           │ 0.902657  0.773386

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0560766   0.910504
1           │  0.512167   0.514953
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.526682
2  │ 0.881702
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.248779   0.551792
2     │ 0.0314499   0.991165
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.281369  0.343607
2     │ 0.551061  0.134622

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.514395   0.62989
2     │ 0.449307  0.383383
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.332561    0.398054
2     │   0.661454  0.00103975

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.342234   0.244978
2     │  0.327891  0.0980102

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0853346   0.516899
2     │   0.91922   0.470489

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.357911  0.929231
2     │  0.60605  0.818052
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.974231  0.485669
2     │ 0.762617  0.840988

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.317856  0.0480903
2     │  0.395733   0.758904

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.166896   0.522503
2     │ 0.0131348   0.313829
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.868237  0.861473

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.338201  0.176321
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0907233
2     │  0.411537

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.573946
2     │ 0.325232
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0255285   0.939999
2     │ 0.0841009   0.986014
1000×1000 Named sparse matrix with 114 Float64 nonzero entries:
	[2001767177420584454 , 14304565767364922256]  =  0.6452690464670958
	[6345740875604378464 ,  8699333159457747740]  =  0.7590361524573872
	[8030317335019090683 , 15422846019410515149]  =  0.45902582466079966
	[5782507227747648170 , 15422846019410515149]  =  0.4403967327911247
	[4843503160950653737 , 10106592262940987645]  =  0.34405226398907796
	[15857670694969494589,  1166092285267503990]  =  0.5134057731061632
	[17418510937611012500, 15774366784000975931]  =  0.414750019979617
	[18209667852355918066,  6065204439534692180]  =  0.6843560086347222
	                                              ⋮
	[7135901794575572161 , 11711005111088208244]  =  0.7455293362117374
	[12664953981709537240, 10024080200852233627]  =  0.43726049596929273
	[15093605664292761005,  1861743268047760089]  =  0.9023609001755666
	[17383975982595546373,  1861743268047760089]  =  0.19932766054440854
	[10635173353039072981, 12020782256748308824]  =  0.6968429708922144
	[4285843451033309381 , 15240003619098155971]  =  0.034631080875210385
	[16468281889911035053,  7957587899775749890]  =  0.8723538617555695
	[9833052444289127168 ,  3010300210541878305]  =  0.40084820938981136
	[7375983855684575809 , 14599810768241287016]  =  0.016062449933237355Timing named index: 0.000972532, array index: 0.000662577, named key: 0.132362775
Timing sum large sparse array: 0.011475101, named: 0.029590937
done!
INFO: NamedArrays tests passed

>>> End of log
