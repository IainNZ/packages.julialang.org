>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (778.97265625 MB free)
Uptime: 14651.0 sec
Load Avg:  0.98046875  0.96630859375  1.001953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     650942 s       4626 s      53539 s     615727 s         14 s
#2  3499 MHz     473732 s       2146 s      46773 s     887351 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.19839760401602224	.21547536901537412	.8915940892333563	.17055554222237324
two	.6596872789408277	.05628932807886122	.7363576388901982	.43906142782994695
a	55
b	68
c	15
d	79
e	97
f	41
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.239656  0.0888632   0.365476
b           │  0.904913   0.277759   0.578829 0.23965634401338387 0.23965634401338387
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.239656  0.0888632   0.365476
b     │  0.904913   0.277759   0.578829
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.239656  0.0888632   0.365476
b           │  0.904913   0.277759   0.578829
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.239656  0.0888632   0.365476
b     │  0.904913   0.277759   0.578829
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.761426  0.705569  0.228985  0.572623
er              │ 0.750304  0.253321  0.984932  0.315844
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140710186385168
0-element Named Array{Any,1}

[0.16319973889695483 0.4396027750050111 0.09492932726457304 0.8773286699923599
 0.9133105954258587 0.5040371287339447 0.6772043166962325 0.7507692420309886]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │    0.1632   0.439603  0.0949293   0.877329
two   │  0.913311   0.504037   0.677204   0.7507692x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │    0.1632   0.439603  0.0949293   0.877329
two   │  0.913311   0.504037   0.677204   0.7507692x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.364482      1.21919  …     0.246639      1.43658
2     │   -0.744378     0.101676  …   -0.0637883      0.381021000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.116977  0.00867816
2     │   0.737582    0.156711
3     │  -0.517849    -1.89466
4     │  -0.304089    0.439733
5     │   -1.83703    -1.59395
6     │  -0.291895  -0.0419277
7     │     -0.407    -1.09355
8     │   0.788354    0.822438
9     │  -0.137548    -1.72469
⋮                ⋮           ⋮
992   │    1.28155   -0.532668
993   │    1.00503    0.203642
994   │   0.730675     -1.1718
995   │   0.488399   0.0714587
996   │   0.639084    -1.58792
997   │  -0.593992    -1.44489
998   │  -0.575862     1.14402
999   │   -1.23615    0.646002
1000  │   -1.55297   -0.7904871000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │    1.5872
2    │  0.472956
3    │ -0.935061
4    │  0.679175
5    │  -0.26329
6    │  -2.00072
7    │  0.684872
8    │ -0.793118
9    │ -0.216938
⋮              ⋮
992  │  0.399836
993  │  0.905026
994  │  0.482412
995  │  -2.06975
996  │  0.117655
997  │  0.195215
998  │  0.973082
999  │   2.51732
1000 │ -0.4448652x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.495947  0.00130979
1           │   0.917465    0.701634

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.313208   0.637726
1           │ 0.0128846   0.472691
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0491365
2  │  0.627511
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.464988  0.546495
2     │ 0.683091  0.506189
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.923985   0.450037
2     │  0.520389  0.0249973

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.497153   0.80908
2     │ 0.264029  0.667027
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.297134  0.322716
2     │ 0.692355  0.968218

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.606739  0.692459
2     │ 0.799785  0.716397

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.131493  0.0420256
2     │  0.412997    0.99134

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.822453  0.256676
2     │ 0.966917  0.331369
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.170903  0.299999
2     │ 0.585967  0.323409

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.40578  0.560763
2     │ 0.276834  0.563669

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0300795   0.330571
2     │  0.114121   0.712416
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.210189  0.380301

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0645901   0.889062
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.187018
2     │ 0.194944

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.525761
2     │ 0.477535
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.493899    0.277091
2     │ 0.00216226    0.117511
1000×1000 Named sparse matrix with 101 Float64 nonzero entries:
	[11022261278769353274, 13789993170142104254]  =  0.4928815069071304
	[4034226599594678126 ,  1703847331300677320]  =  0.5575393367003965
	[16428336034292508128,  4247719799217886270]  =  0.6162395521133155
	[8830415785437611716 , 14066869468942639955]  =  0.8128757692288111
	[4565099145871195153 , 10106592262940987645]  =  0.9637922883879435
	[9266536657670673180 , 11496001657944805140]  =  0.9179326671299728
	[6381716284466338912 ,  4786699431706339713]  =  0.24124546569242522
	[11594286046942303904,  3253468397832770835]  =  0.8185170008152449
	                                              ⋮
	[15422846019410515149,  1341783406603060396]  =  0.20109297974470208
	[15857670694969494589, 16077031779703164343]  =  0.6810129607655502
	[3988919785315502792 ,  5089169802387190808]  =  0.40742569797507566
	[15530322316573698116, 11033897610157224162]  =  0.8064153742064353
	[11268042782136347345,  8471876845144429043]  =  0.19433518618100987
	[10195714700097307537,  8090338657268802519]  =  0.24430369191816403
	[9526342322394325946 , 11993454575275700781]  =  0.26663163866411654
	[12372524185508789598, 17737936919457265947]  =  0.6182423000514399
	[14956803718882296446,  7519919299137062942]  =  0.45284542489782353Timing named index: 0.000421729, array index: 0.000438314, named key: 0.071539369
Timing sum large sparse array: 0.005749059, named: 0.013203559
done!
INFO: NamedArrays tests passed

>>> End of log
