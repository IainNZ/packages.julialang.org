>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (776.33203125 MB free)
Uptime: 13989.0 sec
Load Avg:  1.0302734375  1.0810546875  1.04052734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     655228 s        170 s      53942 s     532151 s         20 s
#2  3500 MHz     464949 s       6495 s      46192 s     836846 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8314209659777001	.8440862050884947	.910032670891449	.8996646025376824
two	.044961957097342964	.298055943531925	.7149981804783279	.92390251988159
a	31
b	28
c	64
d	48
e	15
f	88
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.841965   0.558185   0.768677
b           │  0.610878  0.0885213   0.916112 0.8419649862043503 0.8419649862043503
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.841965   0.558185   0.768677
b     │  0.610878  0.0885213   0.916112
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.841965   0.558185   0.768677
b           │  0.610878  0.0885213   0.916112
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.841965   0.558185   0.768677
b     │  0.610878  0.0885213   0.916112
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.749411  0.122433  0.670526  0.587587
er              │ 0.363269  0.841738  0.487537   0.75294
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140407228256688
0-element Named Array{Any,1}

[0.1317136842591511 0.8427909955379325 0.8418623268442784 0.7129052653353647
 0.33396037085702845 0.22887809556505068 0.6991014075472763 0.3477402556146727]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.131714  0.842791  0.841862  0.712905
two   │  0.33396  0.228878  0.699101   0.347742x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.131714  0.842791  0.841862  0.712905
two   │  0.33396  0.228878  0.699101   0.347742x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.525103      0.889316  …      -1.01873      -1.34909
2     │     -2.80504      -1.08139  …     -0.175426      0.6536321000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.213198      0.3348
2     │  -0.661911    0.621059
3     │  -0.629892   -0.972493
4     │   0.324048   -0.201435
5     │ -0.0368283   -0.930716
6     │  -0.232118    -3.32613
7     │   0.831268   -0.845143
8     │   0.332942    -1.02638
9     │ -0.0914711   -0.259528
⋮                ⋮           ⋮
992   │   0.650138    0.760616
993   │   -1.17461    0.598089
994   │   -1.24846    -1.55632
995   │   0.549895     0.55062
996   │   0.668539    -1.02077
997   │   0.375186     0.98892
998   │   -1.09526    0.435252
999   │   0.643643   -0.688976
1000  │    1.14669   -0.7510341000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.957003
2    │   1.01791
3    │ -0.371301
4    │  0.402899
5    │   1.67188
6    │  0.556707
7    │ -0.335226
8    │  0.328488
9    │   1.36406
⋮              ⋮
992  │  0.183824
993  │  0.520114
994  │  0.255479
995  │   1.31136
996  │  0.723621
997  │   1.42358
998  │ 0.0839675
999  │  0.167829
1000 │ -0.1773292x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.975951  0.0833806
1           │  0.362301   0.784102

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.320591  0.819972
1           │ 0.679332  0.954074
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.959567
2  │ 0.348038
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.793534   0.98598
2     │ 0.342771  0.890933
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0785748   0.976383
2     │  0.282782   0.872365

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.21579  0.0635719
2     │  0.833779   0.189788
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.18883  0.811081
2     │ 0.930445  0.115438

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.103264  0.534441
2     │ 0.845541  0.675743

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0338483    0.663305
2     │ 0.00725412    0.243483

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.26905  0.581637
2     │ 0.343971  0.919944
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.875152  0.442119
2     │  0.58983  0.874931

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0209468   0.877297
2     │  0.924746   0.945994

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.141196  0.0269725
2     │  0.927025   0.708495
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.91141  0.177681

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.906986   0.14239
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.182801
2     │ 0.243049

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.592585
2     │ 0.136383
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.869869  0.788251
2     │ 0.100487  0.785369
1000×1000 Named sparse matrix with 95 Float64 nonzero entries:
	[5266533270354515449 , 17095493447719212504]  =  0.3182683797140702
	[11373711686711023476, 15422846019410515149]  =  0.43501938034651166
	[12040599068173267596,  9283096199793891681]  =  0.7641645723780179
	[7010853231609596680 ,  7199089960335318010]  =  0.9622549880267384
	[16544335554558850098,  5839463014734961202]  =  0.9290696790030475
	[8699474171918181750 ,  8351221943604278133]  =  0.23926564175715526
	[4509385789584299296 , 12876006501778729182]  =  0.8611924681228023
	[17436498189161857304, 10684064542878956755]  =  0.5955078265711304
	                                              ⋮
	[17549715336456040083, 16221828541365357577]  =  0.0795109359236621
	[3648183837903989091 ,  2107242561845671563]  =  0.7989176047145468
	[2849690884155085581 ,  9815398096560962926]  =  0.5994762395384019
	[14066869468942639955,  4214085865611670439]  =  0.6658974713770436
	[5726055407873363885 ,  1526691723863411160]  =  0.7114008150960311
	[303867652033633124  ,  1526691723863411160]  =  0.0699425470733166
	[16246598853062742192, 10370911177498520402]  =  0.561205639781055
	[10338346681654797567,  7989582431359101293]  =  0.6486616426540912
	[1603870711594358861 ,  3279378535085980212]  =  0.4422285756213178Timing named index: 0.000745394, array index: 0.000630515, named key: 0.132118752
Timing sum large sparse array: 0.009350584, named: 0.023107263
done!
INFO: NamedArrays tests passed

>>> End of log
