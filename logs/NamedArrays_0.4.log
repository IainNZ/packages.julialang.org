>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (802.89453125 MB free)
Uptime: 13753.0 sec
Load Avg:  0.99462890625  0.97314453125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     627264 s         54 s      55998 s     560479 s         21 s
#2  3500 MHz     444827 s       6913 s      49135 s     831114 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6076425141980004	.9743448817573959	.7563565289949465	.31396915595336083
two	.19913382633850962	.8258190180388358	.4101409878618798	.5396182885406489
a	34
b	53
c	84
d	82
e	28
f	55
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.444564  0.623314  0.841774
b           │ 0.368705  0.485631  0.227345 0.44456416588091496 0.44456416588091496
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.444564  0.623314  0.841774
b     │ 0.368705  0.485631  0.227345
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.444564  0.623314  0.841774
b           │ 0.368705  0.485631  0.227345
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.444564  0.623314  0.841774
b     │ 0.368705  0.485631  0.227345
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.695886  0.281419  0.419791  0.282264
er              │ 0.377008  0.442487   0.93697   0.24238
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139651575769440
0-element Named Array{Any,1}

[0.40372924938922927 0.836652802051622 0.9460624867324934 0.9532325137621247
 0.2028357931769944 0.7116578371227906 0.6861731061748908 0.8277677841194555]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.403729  0.836653  0.946062  0.953233
two   │ 0.202836  0.711658  0.686173  0.8277682x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.403729  0.836653  0.946062  0.953233
two   │ 0.202836  0.711658  0.686173  0.8277682x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.502626     0.197632  …      2.22684     -0.94409
2     │    -2.00239    -0.816462  …     0.108289     0.6499961000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │     1.7237    0.562149
2     │  -0.433732    -2.30165
3     │   0.442657    0.512567
4     │   -1.07132     1.27688
5     │    2.22564    -3.44307
6     │   -1.21169    0.369308
7     │   -1.15482    0.650203
8     │   0.395783    0.413333
9     │    1.57636    -1.21048
⋮                ⋮           ⋮
992   │ -0.0735043    0.230327
993   │  -0.141831    -1.36675
994   │  -0.624716     1.62245
995   │    2.89433     1.95077
996   │   0.412838   -0.328289
997   │  -0.144362   -0.705304
998   │  -0.236686    0.461248
999   │  -0.213585    0.693369
1000  │   0.619056     1.267191000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.831757
2    │  0.0317723
3    │   0.168425
4    │  -0.615845
5    │ -0.0666816
6    │   0.822385
7    │    0.41772
8    │    2.22467
9    │  -0.113627
⋮               ⋮
992  │   0.286613
993  │    1.20946
994  │  -0.715049
995  │    1.49356
996  │  -0.353923
997  │  -0.134625
998  │   0.190721
999  │    0.41006
1000 │  -0.7614142x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0783901   0.930482
1           │  0.478881    0.13798

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.931872  0.331461
1           │ 0.612809  0.523631
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.904459
2  │ 0.357844
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.036683  0.970527
2     │ 0.647922  0.888119
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.366472  0.322117
2     │ 0.675822  0.627517

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.345329  0.780303
2     │ 0.642185  0.110826
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.473648  0.387031
2     │ 0.105239   0.33593

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.54779  0.838297
2     │ 0.863396  0.558825

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.788504  0.00555265
2     │  0.0212243    0.712094

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.441327  0.878886
2     │  0.49174  0.954646
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.947413   0.154558
2     │  0.134311  0.0947513

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.445445  0.823836
2     │ 0.189617  0.319396

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.499586  0.288651
2     │ 0.931634  0.292812
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.260715  0.891765

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.893945   0.32689
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.229907
2     │ 0.197409

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.557079
2     │ 0.917391
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.429791  0.704757
2     │ 0.327802  0.951424
1000×1000 Named sparse matrix with 103 Float64 nonzero entries:
	[1842419535934980543 ,  6134978669850253296]  =  0.8563357749423821
	[11022261278769353274,  8069307267129313135]  =  0.5164044596436221
	[2773759897603617072 ,  4786699431706339713]  =  0.4274674753414378
	[1523061068178304284 ,  3253468397832770835]  =  0.6655344833584103
	[9440739376838893158 , 15493082059768908559]  =  0.12779346438998163
	[16390501590956164603, 16112569381171233070]  =  0.6894489530098331
	[6046649976662626325 ,   281356413667926651]  =  0.33980682939626083
	[12452104047290745507, 11024660093340930346]  =  0.7810114240320027
	                                              ⋮
	[3648183837903989091 ,  8471876845144429043]  =  0.5520507661708505
	[11470862121108514714,  7630593249633640373]  =  0.3950211578293834
	[8340722336334766600 ,  6332455606016291123]  =  0.29387873466896486
	[17549715336456040083, 18148906667482527649]  =  0.8945263683430724
	[3279378535085980212 ,  6738482027934271349]  =  0.5879773217294895
	[11395538943611008941, 10370911177498520402]  =  0.01907255304274691
	[17248656115182705265,  9223427034658990711]  =  0.5981674284069012
	[4806950860481619679 ,  9133170895916704973]  =  0.6539682437276482
	[2836200141957565154 ,  7519919299137062942]  =  0.9581956664346416Timing named index: 0.000441511, array index: 0.000937014, named key: 0.128331794
Timing sum large sparse array: 0.005410538, named: 0.011760477
done!
INFO: NamedArrays tests passed

>>> End of log
