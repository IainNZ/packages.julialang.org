>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (818.16796875 MB free)
Uptime: 12986.0 sec
Load Avg:  0.8779296875  0.91796875  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     606627 s         57 s      57009 s     508726 s         21 s
#2  3499 MHz     419680 s       6192 s      50710 s     781550 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7795117788388299	.9150040526231891	.8434955700731452	.12269088195452582
two	.6024600528557928	.7206528361704176	.3242013457416233	.7323492924007065
a	93
b	5
c	99
d	98
e	92
f	67
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.293411  0.768062  0.217223
b           │ 0.340485  0.938539  0.480046 0.2934105446413837 0.2934105446413837
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.293411  0.768062  0.217223
b     │ 0.340485  0.938539  0.480046
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.293411  0.768062  0.217223
b           │ 0.340485  0.938539  0.480046
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.293411  0.768062  0.217223
b     │ 0.340485  0.938539  0.480046
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.684231   0.828178  0.0253123  0.0304187
er              │  0.730743   0.837531   0.666906   0.302736
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139965347089424
0-element Named Array{Any,1}

[0.49930916235331035 0.7306794431808699 0.394870667252869 0.7135125530409743
 0.31937841393841526 0.19301336144253955 0.4988750621558322 0.09253191889195689]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.499309   0.730679   0.394871   0.713513
two   │  0.319378   0.193013   0.498875  0.09253192x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.499309   0.730679   0.394871   0.713513
two   │  0.319378   0.193013   0.498875  0.09253192x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.88292       1.76801  …       1.15703      0.146151
2     │     -2.71649     -0.943763  …      -1.13946      -0.899361000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.82186   -0.351952
2     │  -0.110821    -2.23528
3     │   0.350502   -0.775429
4     │  -0.517258   -0.626345
5     │ -0.0592703    -1.03205
6     │    0.98405  -0.0742677
7     │  -0.495049     2.48785
8     │   -1.73723     1.74742
9     │   -2.59193    0.453869
⋮                ⋮           ⋮
992   │   -2.84181   -0.167378
993   │    -1.1752    0.348631
994   │   -1.14039    0.477044
995   │   0.577866    0.403007
996   │     -1.382    0.454033
997   │  -0.169989    0.585136
998   │ -0.0712863   -0.348526
999   │   -1.83368    -1.79406
1000  │  -0.519262    0.3743891000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    -1.0268
2    │   -1.05648
3    │   0.858883
4    │    1.08159
5    │  -0.549593
6    │  -0.946011
7    │   0.716821
8    │  -0.504201
9    │   0.798768
⋮               ⋮
992  │   -2.23166
993  │  -0.598966
994  │  -0.651759
995  │ -0.0752806
996  │   0.406957
997  │   0.324228
998  │  -0.999223
999  │  -0.567934
1000 │   -1.362262x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.387534  0.735861
1           │  0.35517  0.760406

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.270704  0.377215
1           │  0.99209  0.582959
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.42606
2  │ 0.503459
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.110063   0.774771
2     │  0.962036  0.0652841
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.45103   0.35745
2     │ 0.150558   0.11196

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.301912  0.356254
2     │ 0.743209  0.583211
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.416237  0.246175
2     │ 0.693041  0.139112

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.524242   0.178704
2     │  0.688522  0.0997715

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.586078  0.647846
2     │ 0.175683  0.440778

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.736761  0.262579
2     │ 0.263071  0.732697
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.675943  0.748982
2     │ 0.684331  0.246902

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.293876  0.190805
2     │ 0.255025  0.565557

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.140366  0.340818
2     │ 0.938343  0.426902
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.821242  0.634816

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.429828  0.511474
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.636499
2     │ 0.367415

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.295203
2     │ 0.741304
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.507709  0.383001
2     │ 0.702508  0.303784
1000×1000 Named sparse matrix with 86 Float64 nonzero entries:
	[3982709381579875351 ,   397394769374478572]  =  0.4987341366222773
	[11660797228701312840, 17095493447719212504]  =  0.9350836275311507
	[3590338872863214714 , 13888991764943741743]  =  0.3744948532907577
	[4346281677867421151 ,  6046649976662626325]  =  0.35222897668751285
	[10870775571180810126, 11080872162023102847]  =  0.4560352508111081
	[11961818409580248909, 16544335554558850098]  =  0.04247653983394284
	[15578960726498056365,  4394159825732135742]  =  0.9145918172152978
	[13290028645952656732,  4981387750669837953]  =  0.01333093110090422
	                                              ⋮
	[5548054372471903342 ,  2344064818992981444]  =  0.11078819773234638
	[11641483179283066996, 14340416566338039723]  =  0.7087812196877601
	[1021084771360465309 ,  2117445326293199079]  =  0.10098756745642201
	[18254765775227581026, 18148906667482527649]  =  0.07165309801191877
	[11707210785935603289, 12169815624147734794]  =  0.26957472749145284
	[4970785464298144445 , 16069635275006911712]  =  0.45100027980191637
	[7871408433937225815 ,  7989582431359101293]  =  0.40835155072121676
	[584064394420725980  , 12624682912995533025]  =  0.7326069098702084
	[1188693006576900754 ,  1842419535934980543]  =  0.17652662076928682Timing named index: 0.000853824, array index: 0.000802498, named key: 0.079029085
Timing sum large sparse array: 0.012328837, named: 0.024101694
done!
INFO: NamedArrays tests passed

>>> End of log
