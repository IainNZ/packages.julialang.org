>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (847.0234375 MB free)
Uptime: 14574.0 sec
Load Avg:  0.97021484375  0.91796875  0.9658203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     700194 s         74 s      62661 s     549988 s         28 s
#2  3500 MHz     439322 s       6424 s      54551 s     909731 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8719171756792599	.6029457252899568	.40651078587190304	.8657876897913164
two	.9347454867336877	.2867254819955567	.001228881755557465	.6935006813770914
a	64
b	1
c	91
d	78
e	90
f	9
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │   0.7791  0.374747   0.88129
b           │ 0.291587  0.531085  0.420424 0.7790998944436935 0.7790998944436935
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │   0.7791  0.374747   0.88129
b     │ 0.291587  0.531085  0.420424
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │   0.7791  0.374747   0.88129
b           │ 0.291587  0.531085  0.420424
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │   0.7791  0.374747   0.88129
b     │ 0.291587  0.531085  0.420424
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.819357    0.91279  0.0299736   0.461908
er              │  0.833797    0.61521   0.654793   0.823877
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140376681659312
0-element Named Array{Any,1}

[0.8355993682836551 0.9913900912564795 0.5882350808771721 0.4290156999400796
 0.4191628998417145 0.20650652321751428 0.8588502332347716 0.48507059482730397]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.835599   0.99139  0.588235  0.429016
two   │ 0.419163  0.206507   0.85885  0.4850712x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.835599   0.99139  0.588235  0.429016
two   │ 0.419163  0.206507   0.85885  0.4850712x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.210769     -1.24793  …   -0.0716759    -0.342362
2     │    -2.04222     0.134212  …     -1.35328     0.5558351000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    -1.30297     0.622921
2     │    0.690672    -0.747843
3     │     1.66749  -0.00847117
4     │    -1.24858     0.310751
5     │    0.383177      1.59249
6     │    0.682174    -0.964341
7     │    0.989954     -1.18169
8     │    0.563434    -0.488363
9     │    0.324796     -1.00832
⋮                 ⋮            ⋮
992   │    0.897131    -0.157108
993   │    0.543993     0.409949
994   │   -0.419448     -1.11661
995   │    -1.72953     -1.75602
996   │   -0.239925    -0.401898
997   │    0.713846      1.06746
998   │     0.48365    -0.471602
999   │   -0.559533     0.215763
1000  │     1.00069      0.934481000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │     1.9713
2    │ -0.0981286
3    │   -2.66132
4    │   -1.96204
5    │   0.321473
6    │  -0.106364
7    │   0.416559
8    │  -0.044003
9    │  0.0906125
⋮               ⋮
992  │    1.48343
993  │  -0.661067
994  │    -2.0106
995  │   0.691667
996  │  0.0538551
997  │  -0.452868
998  │  -0.746969
999  │  -0.782991
1000 │    1.878282x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.479576   0.470738
1           │ 0.0491177   0.477614

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.22695  0.295625
1           │ 0.346353  0.486611
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.307676
2  │ 0.715448
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.913011  0.685314
2     │ 0.734164  0.483446
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.731275  0.499951
2     │ 0.573311  0.805838

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.826817   0.381102
2     │  0.500201  0.0385221
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0595666  0.0153876
2     │  0.594579    0.84746

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.151825  0.383445
2     │ 0.545722   0.60692

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.29122  0.212884
2     │ 0.426983  0.171751

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.664007  0.561758
2     │ 0.310928  0.599907
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.958702  0.363182
2     │ 0.487745  0.743266

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.756305   0.18315
2     │ 0.232317  0.113167

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.410167  0.469763
2     │ 0.133982  0.975148
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0422245    0.28427

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.151408  0.668559
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.826318
2     │ 0.548265

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.296985
2     │ 0.0862356
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.215033  0.0145105
2     │  0.455132   0.424324
1000×1000 Named sparse matrix with 100 Float64 nonzero entries:
	[10601912832305821454,  6526988131186142725]  =  0.06936617055884553
	[11088256593380071097,  9690422262975321697]  =  0.8927276814185348
	[4476857004763930104 ,   397394769374478572]  =  0.4040977914682835
	[6541875071455544977 , 14304565767364922256]  =  0.34444877205392066
	[17900418222753209643,  5004131969199419793]  =  0.9893795670686529
	[6024721768026058178 , 15422846019410515149]  =  0.7137624375448235
	[17401827539426951865, 14066869468942639955]  =  0.6756049608703603
	[144428425607543167  , 11496001657944805140]  =  0.8888134024297636
	                                              ⋮
	[10066988524776738469, 16267926292325351807]  =  0.034414331540499665
	[11551291857879764225, 14169799449801373117]  =  0.8103088001487901
	[4682100877033407764 ,  4285843451033309381]  =  0.7994547800367555
	[12419957900638875901,  3014575823142358933]  =  0.30799819495170255
	[13998600730537104788, 15436097664388839821]  =  0.3562740778784397
	[8340722336334766600 , 10370911177498520402]  =  0.5856687233104703
	[15918189360173944366, 15240003619098155971]  =  0.7207160807900286
	[4509385789584299296 ,  7957587899775749890]  =  0.8983316840241387
	[5733908175048446366 ,  3010300210541878305]  =  0.16433140007512992Timing named index: 0.00074369, array index: 0.000596633, named key: 0.071435999
Timing sum large sparse array: 0.010547498, named: 0.02474559
done!
INFO: NamedArrays tests passed

>>> End of log
