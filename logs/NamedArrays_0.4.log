>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (855.33203125 MB free)
Uptime: 13830.0 sec
Load Avg:  1.3173828125  1.03759765625  1.00830078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     635292 s       5664 s      59332 s     550628 s         20 s
#2  3500 MHz     457491 s       1356 s      52767 s     830458 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.3339737481334042	.7171135886071018	.5374617210849111	.1846257187199969
two	.4273504991164525	.4804153012771939	.4277660802457388	.027155537253582107
a	10
b	4
c	23
d	8
e	34
f	12
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.212534   0.86725  0.433338
b           │ 0.357331   0.18511  0.437721 0.21253361884172595 0.21253361884172595
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.212534   0.86725  0.433338
b     │ 0.357331   0.18511  0.437721
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.212534   0.86725  0.433338
b           │ 0.357331   0.18511  0.437721
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.212534   0.86725  0.433338
b     │ 0.357331   0.18511  0.437721
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │  0.0895217    0.198349    0.324388    0.472335
er              │   0.377618  0.00846939   0.0205615    0.633112
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140027393568112
0-element Named Array{Any,1}

[0.20732783059558124 0.9567458703861911 0.9155363745153138 0.655101200819967
 0.5824333305519409 0.07208677236224514 0.36324321381728986 0.5957489374877669]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.207328   0.956746   0.915536   0.655101
two   │  0.582433  0.0720868   0.363243   0.5957492x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.207328   0.956746   0.915536   0.655101
two   │  0.582433  0.0720868   0.363243   0.5957492x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.07415      1.61168  …    0.0973402     -2.35187
2     │  -0.0794193     0.270679  …      0.54207    -0.3986271000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.18761    0.563158
2     │ -0.0551305   0.0449309
3     │ -0.0978544    -1.45458
4     │   -0.89629   -0.444236
5     │  -0.129552    -1.02918
6     │   0.116112   -0.811222
7     │  -0.102419   -0.316679
8     │   -0.87716    -1.24699
9     │   -1.86904     0.64574
⋮                ⋮           ⋮
992   │    1.15023    0.457329
993   │  -0.514609    -0.57505
994   │   0.239737    0.119011
995   │  -0.202932  -0.0586074
996   │  -0.681713    -1.02511
997   │  0.0633302    -1.19383
998   │   -1.32171     1.13356
999   │   -1.31843    -1.09213
1000  │   0.946143    0.9739741000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    -1.0257
2    │ -0.0465418
3    │    1.47037
4    │  -0.654453
5    │   0.112736
6    │   -1.63041
7    │   0.994116
8    │   0.485371
9    │   -2.66423
⋮               ⋮
992  │     1.0661
993  │    2.15039
994  │  -0.934691
995  │  -0.370968
996  │    1.27778
997  │   -1.24577
998  │   0.165816
999  │  -0.610194
1000 │ -0.04354922x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.674412   0.662237
1           │  0.523041  0.0450846

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.96748  0.799618
1           │ 0.716648  0.791637
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.804698
2  │ 0.528729
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.945666  0.0994261
2     │  0.870146   0.241481
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.786358     0.7403
2     │  0.132226  0.0333587

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.514701   0.53886
2     │ 0.785909  0.963778
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.967569   0.589711
2     │ 0.0948667   0.530559

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0833762   0.402074
2     │  0.744275   0.806218

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.503423   0.61868
2     │  0.65484   0.86928

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.421078  0.111861
2     │ 0.376092  0.741609
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.506391  0.750114
2     │ 0.865269  0.849417

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.655087  0.432242
2     │ 0.338814   0.57588

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.292804  0.458773
2     │ 0.914244  0.193299
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.867297  0.901838

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.726925  0.574871
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.812935
2     │ 0.302649

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.664792
2     │ 0.210585
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.589619  0.810457
2     │ 0.693718  0.613083
1000×1000 Named sparse matrix with 85 Float64 nonzero entries:
	[8007573817878288530 ,   397394769374478572]  =  0.4606062254725434
	[6249139884124980606 ,  4913249781191789579]  =  0.46321147373561455
	[16300844420296039097, 13888991764943741743]  =  0.4832505846249904
	[4793694153463567070 , 15422846019410515149]  =  0.5160640483327423
	[843417444367997784  , 17211410618634043162]  =  0.17170386388775016
	[15408733635197285348,  8725235013359650451]  =  0.97326411943947
	[12337648565752613198,  1166092285267503990]  =  0.31516609061595036
	[7083487105814040007 , 11907679469289587679]  =  0.048996803097987485
	                                              ⋮
	[16202651256804923129, 14766805435251878341]  =  0.06527728955332757
	[4420061231740490028 ,   370154515922583624]  =  0.6911031510789458
	[11581210425696274532,  4494612503536197367]  =  0.24706887299189884
	[8048960545880889629 ,  9051203263452778593]  =  0.7813937418958286
	[14680060904445900148, 16300844420296039097]  =  0.20851565575691788
	[17436498189161857304, 16243515418520287792]  =  0.06824332113923481
	[5266533270354515449 , 16836080019131185762]  =  0.5165777193068304
	[5362270516586366302 , 12020782256748308824]  =  0.240797036376855
	[5775042309115395854 ,  6565262192402102057]  =  0.19480015376321624Timing named index: 0.001027326, array index: 0.000480771, named key: 0.071777515
Timing sum large sparse array: 0.006485884, named: 0.014029677
done!
INFO: NamedArrays tests passed

>>> End of log
