>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (817.6171875 MB free)
Uptime: 14557.0 sec
Load Avg:  0.908203125  0.92529296875  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     652207 s       5463 s      54809 s     605667 s         25 s
#2  3500 MHz     485818 s        838 s      45858 s     875782 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6080346513670034	.7163254317199901	.9129014703306624	.06693824937045267
two	.24859543002342566	.4162585970288011	.1634140859919051	.04625437658568665
a	41
b	88
c	70
d	2
e	45
f	45
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.221618   0.798128   0.362031
b           │  0.992663  0.0123909   0.591123 0.22161782949627273 0.22161782949627273
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.221618   0.798128   0.362031
b     │  0.992663  0.0123909   0.591123
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.221618   0.798128   0.362031
b           │  0.992663  0.0123909   0.591123
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.221618   0.798128   0.362031
b     │  0.992663  0.0123909   0.591123
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.659988  0.178601   0.32705   0.52402
er              │ 0.488548  0.853177  0.231649  0.981669
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140215082042896
0-element Named Array{Any,1}

[0.8296255344325654 0.6269319703509373 0.0745915521493763 0.8291546317103999
 0.844301614766769 0.5197654151571087 0.6451809738233136 0.2409112242044611]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.829626   0.626932  0.0745916   0.829155
two   │  0.844302   0.519765   0.645181   0.2409112x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.829626   0.626932  0.0745916   0.829155
two   │  0.844302   0.519765   0.645181   0.2409112x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │       0.2903      0.380058  …      0.489497      0.868221
2     │     -3.50324     -0.281958  …     0.0422642      0.8066041000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.436281    0.902854
2     │   0.604368   -0.526299
3     │    0.95215   -0.528535
4     │   -0.79507     1.97836
5     │   -1.32287    0.764517
6     │   -1.20091    0.164624
7     │   0.102834    -1.27891
8     │  -0.780981   -0.625711
9     │    -1.2039   -0.692969
⋮                ⋮           ⋮
992   │   -0.31142    -1.71339
993   │   0.791476   -0.259346
994   │  -0.348638     1.23191
995   │   0.935125     1.43553
996   │  -0.368851   -0.591875
997   │    1.10315     1.10121
998   │ -0.0424421   -0.995345
999   │   0.486695     0.49361
1000  │  -0.583595   -0.4388411000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.918841
2    │   1.21679
3    │   2.12395
4    │   1.74127
5    │  0.575519
6    │ -0.635727
7    │ -0.315661
8    │   0.59949
9    │ -0.745487
⋮              ⋮
992  │ -0.124194
993  │   2.37278
994  │   1.22246
995  │ -0.231337
996  │ -0.859983
997  │   1.22378
998  │  0.785524
999  │  -2.52634
1000 │   1.138552x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0330942   0.747174
1           │  0.461668    0.42751

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.248717  0.122273
1           │ 0.417239  0.138735
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.408158
2  │ 0.795204
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.755015  0.210128
2     │ 0.135773  0.747752
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.473732  0.890706
2     │  0.88416   0.79253

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.52537  0.547002
2     │ 0.904546  0.533614
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.671939   0.778487
2     │  0.310607  0.0151734

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0651621    0.18754
2     │  0.971677   0.483523

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.883462   0.43352
2     │  0.43048  0.283946

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.421028  0.634656
2     │ 0.804879  0.728106
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.441393  0.373101
2     │ 0.462051  0.230035

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.597552  0.282591
2     │  0.97723  0.546111

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.933362  0.769163
2     │ 0.773999  0.631732
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.842003  0.789985

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.770986  0.623511
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.859725
2     │  0.13252

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.790881
2     │ 0.398314
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.114509  0.298833
2     │ 0.482363  0.717257
1000×1000 Named sparse matrix with 104 Float64 nonzero entries:
	[11907679469289587679,  1703847331300677320]  =  0.2917685375205652
	[5643811413442923432 ,  5927176887743683346]  =  0.7280858725751049
	[2644894592338031174 , 14033074738777421392]  =  0.7690501642669016
	[5836885843989504432 , 11496001657944805140]  =  0.3846199944612114
	[9210596506099025992 ,  4786699431706339713]  =  0.33181475018115436
	[17166029506115742196,  5062864901616737721]  =  0.8950510112446861
	[15272022662576939533,  3253468397832770835]  =  0.5967432015591441
	[1637279412807692950 ,  3253468397832770835]  =  0.5142702322595274
	                                              ⋮
	[11088256593380071097, 10924666096879366607]  =  0.027419267639205103
	[16655780295490676025, 11033897610157224162]  =  0.18578174692952332
	[4882987618343239453 , 18148906667482527649]  =  0.5101784847071793
	[12261945819890682800, 10663619072362037589]  =  0.25266709141216315
	[9036634046110542021 , 13970367575607681105]  =  0.8728296095602948
	[10655964431342481635, 13970367575607681105]  =  0.06275176014616868
	[7736497953838160897 ,  2758171916068192631]  =  0.6394590167517025
	[187013141495975231  , 11527542315164007414]  =  0.14703424749333216
	[11368314934203416452, 11527542315164007414]  =  0.2692850161879399Timing named index: 0.000713828, array index: 0.000743483, named key: 0.1278816
Timing sum large sparse array: 0.01099179, named: 0.026355052
done!
INFO: NamedArrays tests passed

>>> End of log
