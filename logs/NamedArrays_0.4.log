>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (863.5 MB free)
Uptime: 13281.0 sec
Load Avg:  1.0419921875  1.001953125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     597260 s       6290 s      51778 s     534208 s         10 s
#2  3499 MHz     407463 s         84 s      44034 s     828027 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.0688031318700093	.8009569856360914	.2050103129806402	.6622817747614418
two	.09655843707185419	.6165191026851984	.4089527711546168	.9454363965794503
a	41
b	34
c	18
d	10
e	26
f	50
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.983867  0.0816912  0.0117267
b           │  0.108572   0.520841   0.585846 0.9838670678774333 0.9838670678774333
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.983867  0.0816912  0.0117267
b     │  0.108572   0.520841   0.585846
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.983867  0.0816912  0.0117267
b           │  0.108572   0.520841   0.585846
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.983867  0.0816912  0.0117267
b     │  0.108572   0.520841   0.585846
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.290674  0.740102  0.844432  0.501113
er              │ 0.944289  0.695213     0.806  0.905524
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140086934228232
0-element Named Array{Any,1}

[0.732519839547751 0.05645063064502032 0.7038311829819526 0.7236396240882748
 0.2809907084140266 0.28301178327518195 0.9419524065441753 0.8694971000782403]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.73252  0.0564506   0.703831    0.72364
two   │  0.280991   0.283012   0.941952   0.8694972x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.73252  0.0564506   0.703831    0.72364
two   │  0.280991   0.283012   0.941952   0.8694972x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.108736     -0.610353  …       1.16837      -1.54721
2     │    -0.277308      0.447749  …       -2.1241     -0.4522011000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.15366     1.11627
2     │  -0.792917   -0.153239
3     │  -0.410274   -0.072397
4     │   -1.52861    -1.79691
5     │   0.544404    -1.23036
6     │ -0.0586053    -1.19353
7     │  -0.166864    -1.87151
8     │  -0.730177   0.0315053
9     │    1.86347    -1.96158
⋮                ⋮           ⋮
992   │   0.969436   -0.504883
993   │    0.39098   -0.513326
994   │ -0.0717321   -0.187237
995   │   0.153669    0.909957
996   │    1.57049    0.235041
997   │    1.54648    -1.51164
998   │   -1.06632    -2.12909
999   │    1.38727   0.0791329
1000  │  -0.206925    0.2849121000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.429082
2    │    1.06984
3    │   0.953352
4    │    1.27523
5    │  -0.135781
6    │    1.05257
7    │  -0.495636
8    │   0.667141
9    │   0.233876
⋮               ⋮
992  │   0.329807
993  │   -2.38076
994  │   0.972689
995  │    -1.0475
996  │ -0.0225184
997  │  -0.947328
998  │    1.74478
999  │   0.415884
1000 │ -0.09345492x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.795494  0.0310843
1           │   0.25606   0.983256

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.698652  0.702762
1           │ 0.746578  0.764652
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.988234
2  │ 0.829511
2x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.305823    0.822083
2     │   0.731067  0.00246755
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.767855  0.766384
2     │ 0.361636  0.702002

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.155965  0.128876
2     │ 0.133949  0.337008
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.262442  0.581456
2     │ 0.871884  0.406606

[:, :, C=2, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │    0.91346  0.00458673
2     │  0.0692611    0.794747

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.104782  0.568886
2     │ 0.126244  0.191397

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.790091  0.464521
2     │ 0.210589   0.81944
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.67551  0.498317
2     │ 0.125361  0.977045

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.672365   0.64639
2     │  0.33847  0.528818

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.853043  0.933045
2     │ 0.271327   0.77537
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.91262  0.711922

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.940324  0.957491
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.982353
2     │ 0.0657533

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.318872
2     │ 0.338508
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.35344   0.681793
2     │ 0.0132703    0.24251
1000×1000 Named sparse matrix with 97 Float64 nonzero entries:
	[2436126165640975798 ,   144428425607543167]  =  0.5750144320316217
	[13538132892370992970,  8699333159457747740]  =  0.3102402645559086
	[17080632333507329842, 17095493447719212504]  =  0.8287860597791958
	[17850470016925415361, 14033074738777421392]  =  0.9972344519733496
	[4788923618671962983 , 14033074738777421392]  =  0.1591714831278479
	[12621324006550133948,  2849690884155085581]  =  0.3075062943958733
	[9210596506099025992 ,  2849690884155085581]  =  0.4782381993711369
	[5744335047891463768 ,  2230070772219402886]  =  0.7515381863960902
	                                              ⋮
	[917572771341395079  ,  4788923618671962983]  =  0.8440291745071575
	[4083684169156455281 , 15857670694969494589]  =  0.010939478164659455
	[14304565767364922256,  9526342322394325946]  =  0.2653062284383969
	[12680114143357042360, 17737936919457265947]  =  0.46913153161459786
	[1309242526546184706 , 16836080019131185762]  =  0.9392679706138678
	[16077031779703164343, 16836080019131185762]  =  0.90574909594365
	[18287766226606777885,  1523061068178304284]  =  0.37954828930549844
	[16031689834122954645, 16365943061271568709]  =  0.1260226544993377
	[584033670402314773  , 16840404209865735426]  =  0.2256916938825837Timing named index: 0.000840873, array index: 0.0007638, named key: 0.130362221
Timing sum large sparse array: 0.010605605, named: 0.025318993
done!
INFO: NamedArrays tests passed

>>> End of log
