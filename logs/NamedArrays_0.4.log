>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (846.19921875 MB free)
Uptime: 15556.0 sec
Load Avg:  0.9501953125  0.9765625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     732606 s       6045 s      66407 s     608405 s         28 s
#2  3499 MHz     488978 s         84 s      57894 s     963588 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.9184819001213393	.3643796462705544	.6334237532262388	.3894522875413553
two	.6330410765695944	.6566934364408614	.9558174823449823	.15825300065503334
a	56
b	100
c	12
d	87
e	76
f	7
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.731048  0.709765  0.468507
b           │ 0.025923  0.486548  0.763386 0.7310480651437989 0.7310480651437989
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.731048  0.709765  0.468507
b     │ 0.025923  0.486548  0.763386
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.731048  0.709765  0.468507
b           │ 0.025923  0.486548  0.763386
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.731048  0.709765  0.468507
b     │ 0.025923  0.486548  0.763386
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.382536  0.542887  0.438432  0.366522
er              │ 0.644468  0.491072  0.592551  0.205706
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140594519504800
0-element Named Array{Any,1}

[0.45313061192119 0.7735267573716056 0.8360161354281599 0.03620290180586827
 0.27000965270697397 0.4343253927651589 0.516672631583913 0.3332830338315078]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.453131   0.773527   0.836016  0.0362029
two   │   0.27001   0.434325   0.516673   0.3332832x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.453131   0.773527   0.836016  0.0362029
two   │   0.27001   0.434325   0.516673   0.3332832x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.928026      0.561853  …      -1.39724       1.06902
2     │      1.29815     -0.954516  …     -0.735189    -0.02363551000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.711068    -1.13871
2     │  -0.755628   -0.746893
3     │   0.163111   -0.212377
4     │   0.191534    0.445249
5     │  -0.146265    -1.18408
6     │   0.322249    -1.13446
7     │   0.478345    -1.26797
8     │   0.211093    -1.11612
9     │  -0.661586    -0.32345
⋮                ⋮           ⋮
992   │ -0.0855708    -0.89583
993   │   0.103561    0.214156
994   │   0.668334   -0.284625
995   │  -0.064409     2.08538
996   │   0.277328   -0.441334
997   │   0.373607     1.74746
998   │   0.535873   -0.506053
999   │  -0.355712    0.765231
1000  │    0.75491   -0.4181461000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.546423
2    │  0.702754
3    │ -0.554706
4    │   1.43069
5    │  0.354333
6    │   1.23805
7    │ -0.984204
8    │  -1.55814
9    │   1.30128
⋮              ⋮
992  │  0.125501
993  │ -0.164273
994  │  -1.17435
995  │  -1.30296
996  │  -1.44951
997  │   1.45145
998  │   -1.3142
999  │  0.696335
1000 │ -0.9169672x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0614135   0.390587
1           │  0.897987  0.0624077

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.228816   0.45036
1           │ 0.935166  0.294165
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.419937
2  │ 0.130923
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.877035  0.848614
2     │ 0.205866  0.263587
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.759989  0.0688932
2     │  0.566178    0.56507

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.680392  0.503707
2     │ 0.403152  0.245084
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.090864  0.282396
2     │ 0.284627  0.179077

[:, :, C=2, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.926648   0.0492184
2     │   0.656215  0.00182944

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0888012   0.894739
2     │  0.116523   0.535646

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.416946   0.685711
2     │  0.217486  0.0875919
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.616157  0.919503
2     │ 0.796337  0.884989

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.856882  0.717743
2     │ 0.827957  0.210977

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.688369  0.748872
2     │ 0.992979  0.689318
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0648246   0.429909

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.722915  0.372398
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.336902
2     │  0.51442

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.686523
2     │ 0.0367191
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.127158  0.989649
2     │  0.56767  0.271565
1000×1000 Named sparse matrix with 98 Float64 nonzero entries:
	[7286441479725315933 ,  7199089960335318010]  =  0.3658966023365291
	[4882987618343239453 ,  7199089960335318010]  =  0.960358049556373
	[7286441479725315933 ,   273396578563598247]  =  0.8351499585127775
	[841443329012084682  , 15774366784000975931]  =  0.29501440331582285
	[5392016834065508343 ,  4302721723742542942]  =  0.15709523360567657
	[2666431284826573406 , 13450619636401767365]  =  0.09997537917100385
	[14276971493366205365, 15090471957562756503]  =  0.1281404595336566
	[15880539982885271201, 17448184880248178237]  =  0.5277807114205777
	                                              ⋮
	[7175786629381788322 ,  5567682937376679626]  =  0.7787312967475664
	[2107242561845671563 ,     1348625733340586]  =  0.8350341381349096
	[9507787290874245939 , 15436097664388839821]  =  0.39184382421667197
	[1831003761424276165 , 11711005111088208244]  =  0.7909924598169651
	[16365943061271568709, 12169815624147734794]  =  0.04244415790053058
	[4398365516710837200 , 13970367575607681105]  =  0.3343037854208992
	[6413456663738881847 ,  2758171916068192631]  =  0.575958279820477
	[149971711461182784  ,  6565262192402102057]  =  0.022712846633636152
	[3014575823142358933 ,  7519919299137062942]  =  0.4858194684559827Timing named index: 0.000190091, array index: 0.000691048, named key: 0.131124375
Timing sum large sparse array: 0.010813257, named: 0.027954247
done!
INFO: NamedArrays tests passed

>>> End of log
