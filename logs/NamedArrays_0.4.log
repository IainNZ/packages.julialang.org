>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (855.5546875 MB free)
Uptime: 13832.0 sec
Load Avg:  1.0166015625  0.95654296875  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     647508 s       2682 s      55046 s     544669 s         31 s
#2  3502 MHz     462248 s       4221 s      46806 s     824616 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5326756159879655	.36437390797328106	.16728925446897547	.4567958966062551
two	.24013552717462527	.9022413754722449	.25142374849890303	.9165355169118319
a	8
b	31
c	25
d	89
e	19
f	49
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.167222  0.105007  0.289868
b           │ 0.250794  0.563203   0.70324 0.16722186455850108 0.16722186455850108
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.167222  0.105007  0.289868
b     │ 0.250794  0.563203   0.70324
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.167222  0.105007  0.289868
b           │ 0.250794  0.563203   0.70324
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.167222  0.105007  0.289868
b     │ 0.250794  0.563203   0.70324
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0103223   0.592315   0.555781   0.272956
er              │  0.739819   0.161277   0.382835   0.410223
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139943775181840
0-element Named Array{Any,1}

[0.9046692602737196 0.303370720514897 0.2731194544982698 0.1018507068449721
 0.727717161886297 0.5904514719161689 0.9250327366489979 0.7141058658629229]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.904669  0.303371  0.273119  0.101851
two   │ 0.727717  0.590451  0.925033  0.7141062x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.904669  0.303371  0.273119  0.101851
two   │ 0.727717  0.590451  0.925033  0.7141062x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.17456      2.34863  …     0.610482     -0.31391
2     │    -1.51589     0.887555  …     0.852067    -0.5387141000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.507123   -0.637303
2     │   -1.07606     0.55899
3     │    1.48519      1.6617
4     │  -0.527844     -1.9066
5     │   0.822066   -0.912451
6     │  -0.172563    0.501484
7     │  0.0381956   -0.526187
8     │    0.12595  -0.0410318
9     │   -1.17485   -0.872258
⋮                ⋮           ⋮
992   │     0.7967    -2.70082
993   │  -0.813489    -0.69619
994   │   0.248304   -0.562391
995   │   -1.19473  -0.0296708
996   │ 0.00908183     1.42819
997   │  -0.259431    0.925629
998   │ -0.0572866     1.66882
999   │   0.890147   -0.902371
1000  │  -0.135933     2.283941000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.04102
2    │  -1.56162
3    │  -1.88596
4    │  0.389072
5    │ -0.665925
6    │  0.502292
7    │ -0.703987
8    │  -1.50487
9    │   1.03681
⋮              ⋮
992  │   1.25393
993  │   1.77336
994  │  0.724041
995  │  -2.19781
996  │  0.627665
997  │ -0.731149
998  │   1.91791
999  │  0.474752
1000 │    1.52022x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.333849  0.297208
1           │ 0.338163  0.301708

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.961791  0.238281
1           │ 0.999456  0.214602
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.704754
2  │ 0.374016
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.262069  0.334472
2     │  0.97931  0.287974
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.181968  0.143036
2     │ 0.503122  0.759342

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.231442   0.924611
2     │  0.046863  0.0276093
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.479759  0.771845
2     │ 0.286392  0.416428

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.502298  0.705072
2     │ 0.257984  0.863842

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.595867  0.973872
2     │ 0.737247  0.468794

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.654931   0.759567
2     │  0.554423  0.0271819
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.427984  0.612022
2     │ 0.426944  0.263512

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.389218   0.509661
2     │  0.263725  0.0632524

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.271364  0.469388
2     │ 0.961211  0.156317
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.140054    0.3549

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.785169  0.691272
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.413364
2     │ 0.402404

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.820817
2     │ 0.970004
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.534106  0.225821
2     │ 0.344075  0.790199
1000×1000 Named sparse matrix with 89 Float64 nonzero entries:
	[8856745381828013443 ,  5004131969199419793]  =  0.9503808303138799
	[3279378535085980212 , 17095493447719212504]  =  0.32759483674312584
	[12000240359954909472, 13888991764943741743]  =  0.8242849515965924
	[13811608782242129382,  5927176887743683346]  =  0.41351098686693044
	[12357008997902541361,  8069307267129313135]  =  0.865158103049154
	[4981387750669837953 ,  4981387750669837953]  =  0.747451105433597
	[13440552775821083551,  4976045735032000325]  =  0.2032826075253118
	[1406197640930237395 , 10596751188013898940]  =  0.8425745028471676
	                                              ⋮
	[7175786629381788322 , 11732026533134275955]  =  0.08446984640905142
	[4509385789584299296 ,     1348625733340586]  =  0.28739459472603035
	[6249139884124980606 ,  3014575823142358933]  =  0.04557876576718933
	[5782507227747648170 , 17329041886349039120]  =  0.6072112856762091
	[16365943061271568709, 17329041886349039120]  =  0.46149934128248793
	[10213422356137903131,  6332455606016291123]  =  0.7324657361893598
	[12169815624147734794, 14057278280866812536]  =  0.6171569209786116
	[2758171916068192631 , 16365943061271568709]  =  0.37066680717018663
	[14057278280866812536,  3010300210541878305]  =  0.4280569576929283Timing named index: 0.000876935, array index: 0.000537787, named key: 0.129085392
Timing sum large sparse array: 0.010025779, named: 0.028066308
done!
INFO: NamedArrays tests passed

>>> End of log
