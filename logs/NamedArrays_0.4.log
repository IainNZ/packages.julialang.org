>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (804.2734375 MB free)
Uptime: 14369.0 sec
Load Avg:  1.0830078125  1.0146484375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     654627 s        394 s      57297 s     588305 s         22 s
#2  3496 MHz     458908 s       6405 s      49083 s     881795 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.2727572598141057	.1194844387765126	.6555105382119617	.19614586654226063
two	.4451353390249966	.036939810933263484	.9895612414347348	.8806190445877209
a	50
b	49
c	43
d	49
e	57
f	22
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.991082   0.103786  0.0215448
b           │  0.945164   0.481664   0.538209 0.9910815571804148 0.9910815571804148
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.991082   0.103786  0.0215448
b     │  0.945164   0.481664   0.538209
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.991082   0.103786  0.0215448
b           │  0.945164   0.481664   0.538209
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.991082   0.103786  0.0215448
b     │  0.945164   0.481664   0.538209
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.909967  0.761397  0.179115  0.420968
er              │ 0.527084   0.67824  0.567346  0.692808
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140629810547056
0-element Named Array{Any,1}

[0.46064644630194795 0.8599779311044442 0.5370696602690557 0.05970214444940747
 0.6554761020242841 0.07392207053407107 0.24407649317295688 0.005593266076560299]
2x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.460646    0.859978     0.53707   0.0597021
two   │   0.655476   0.0739221    0.244076  0.005593272x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.460646    0.859978     0.53707   0.0597021
two   │   0.655476   0.0739221    0.244076  0.005593272x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     2.08714    -0.513734  …    -0.881968     -2.22227
2     │    -1.90844    -0.225479  …     0.881807     0.1721781000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.454085    0.907998
2     │   0.341242    0.252906
3     │  0.0633203    0.926654
4     │  -0.600106    0.358421
5     │   0.816063   0.0823699
6     │   0.429975    -1.48882
7     │   0.657164    -0.45116
8     │  -0.714724     1.00579
9     │  -0.353177    -1.04339
⋮                ⋮           ⋮
992   │   0.578293  -0.0745994
993   │   0.313258     3.02282
994   │   0.416342     1.76588
995   │  0.0398443    0.973162
996   │   -1.30052    -1.29856
997   │  -0.865728    0.596905
998   │  -0.537533    0.409021
999   │   0.854135     1.66248
1000  │   0.708172    0.7337911000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.353205
2    │  -0.489221
3    │   -1.32856
4    │   -1.95908
5    │  -0.800956
6    │    1.27092
7    │    0.76016
8    │    1.06461
9    │   0.685507
⋮               ⋮
992  │    -2.2265
993  │   -1.18396
994  │  -0.123641
995  │   -1.17153
996  │   -1.30859
997  │   -2.78746
998  │  -0.306301
999  │   -1.11565
1000 │ 0.004993952x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.643637  0.663825
1           │ 0.288834  0.311998

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.15571   0.27706
1           │ 0.082452  0.560351
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.193863
2  │ 0.767374
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.456939  0.104627
2     │ 0.940309  0.863097
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0690069   0.520699
2     │  0.460006   0.241386

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.827753    0.3243
2     │  0.62574  0.104744
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.293471  0.577776
2     │ 0.777881  0.166064

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.917596  0.936277
2     │ 0.420696    0.4019

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.409676  0.104189
2     │ 0.871638  0.870788

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.760381   0.726169
2     │  0.825229  0.0689855
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.243575  0.0905548
2     │  0.557623   0.692442

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.248007  0.779494
2     │  0.69189  0.782582

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.970014  0.690901
2     │ 0.859372  0.851126
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.950046  0.305896

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.543362  0.354931
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.134692
2     │ 0.978799

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.158018
2     │ 0.0833729
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.904137  0.240531
2     │ 0.083558  0.598765
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[4100222305550378373 , 14304565767364922256]  =  0.5824345836771065
	[2107242561845671563 ,  8699333159457747740]  =  0.43989604060142673
	[4127473732802427797 , 10361072080411987344]  =  0.7729018265895129
	[7484916964955888105 , 17676219393380616284]  =  0.4982473532325249
	[7989582431359101293 ,   273396578563598247]  =  0.7791431807044134
	[15507769097532104225, 16390501590956164603]  =  0.6988513420130507
	[7858978801757346079 ,  2886272574986834222]  =  0.0707839721094583
	[12372524185508789598,  9872310664988650577]  =  0.5380267782437567
	                                              ⋮
	[113574861176001527  ,  2318046236442875673]  =  0.41422019315535485
	[13711291875022394707, 12554874066387155728]  =  0.515171698775293
	[11604119926906451644,  8090338657268802519]  =  0.6324345783283074
	[11907679469289587679, 12169815624147734794]  =  0.12475201239895628
	[16655780295490676025, 16069635275006911712]  =  0.4261292544347903
	[4106283031091570395 , 11470862121108514714]  =  0.1745414562310157
	[12444970302768542108, 16365943061271568709]  =  0.9891317768017096
	[14475185020288943568, 16840404209865735426]  =  0.16748217904168738
	[10684064542878956755, 14599810768241287016]  =  0.3414592035142785Timing named index: 0.000956736, array index: 0.000649203, named key: 0.134241787
Timing sum large sparse array: 0.011077527, named: 0.028719236
done!
INFO: NamedArrays tests passed

>>> End of log
