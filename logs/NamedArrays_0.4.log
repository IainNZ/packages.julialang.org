>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (842.6640625 MB free)
Uptime: 15127.0 sec
Load Avg:  0.86279296875  0.95361328125  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     722094 s        114 s      59955 s     585350 s         21 s
#2  3499 MHz     486406 s       6144 s      50480 s     920024 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7074602258959817	.10664707804158624	.17451859585016516	.8542595051097999
two	.4801938113144253	.31305512284667314	.31342327965822636	.692010052954628
a	2
b	26
c	52
d	40
e	77
f	72
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.738439   0.766375  0.0660272
b           │   0.67822   0.985648   0.522755 0.7384393055073002 0.7384393055073002
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.738439   0.766375  0.0660272
b     │   0.67822   0.985648   0.522755
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.738439   0.766375  0.0660272
b           │   0.67822   0.985648   0.522755
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.738439   0.766375  0.0660272
b     │   0.67822   0.985648   0.522755
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.523824   0.658368  0.0298175   0.439707
er              │  0.654846   0.732779   0.538098   0.191092
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139807858872680
0-element Named Array{Any,1}

[0.1353621252582835 0.984194628458765 0.6332883403733549 0.7508937100356896
 0.06757114169439915 0.28674525057199673 0.11047379685896885 0.3445236859942602]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.135362   0.984195   0.633288   0.750894
two   │ 0.0675711   0.286745   0.110474   0.3445242x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.135362   0.984195   0.633288   0.750894
two   │ 0.0675711   0.286745   0.110474   0.3445242x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.437543     0.115739  …      1.65859     -0.35552
2     │   -0.170665    -0.360146  …     0.164539     0.8277181000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.416662  -0.492703
2     │ -0.951254    2.07952
3     │   0.46436    1.59018
4     │  0.638833   0.168918
5     │    0.6009  -0.603246
6     │  0.877299  0.0735988
7     │ -0.324752    1.15176
8     │ -0.604204   -1.17151
9     │  -1.40157  -0.608287
⋮               ⋮          ⋮
992   │  0.793219   0.849177
993   │  0.832438    1.57373
994   │  0.346012    -1.2374
995   │  0.496188   -1.16031
996   │ -0.525399  -0.138869
997   │   1.27587    -1.0814
998   │  -2.29564  -0.133072
999   │ -0.579292    0.93981
1000  │ 0.0451073    2.368171000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.585252
2    │   2.50461
3    │  -0.33079
4    │   1.02681
5    │  0.932892
6    │   -1.6406
7    │ -0.261231
8    │   2.58833
9    │   2.01109
⋮              ⋮
992  │   -1.2394
993  │   0.13159
994  │   1.83261
995  │  0.195378
996  │  -1.02435
997  │ 0.0705021
998  │  0.022659
999  │  0.122809
1000 │ -0.9776892x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │   0.25351  0.0542079
1           │   0.79251    0.54211

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.536926  0.652577
1           │ 0.207311   0.23691
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.407192
2  │ 0.271101
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.639639  0.186851
2     │   0.4479  0.597212
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.234468  0.0908843
2     │  0.842029   0.616875

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.413866  0.817876
2     │ 0.477986  0.575979
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0929018   0.597841
2     │   0.97741   0.598019

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.758628   0.503757
2     │  0.989739  0.0876598

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.627959  0.144479
2     │ 0.412529  0.309875

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0538675  0.0941889
2     │  0.572732   0.162205
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.21201  0.143537
2     │ 0.304675  0.387304

[:, :, C=2, D=1, E=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │ 0.000828269     0.509781
2     │    0.721488    0.0567786

[:, :, C=1, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.365347  0.00330533
2     │   0.847704     0.71552
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.577717  0.971434

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.77638  1.4347e-5
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.138449
2     │ 0.341836

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.560344
2     │ 0.812282
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.156596   0.178198
2     │ 0.0452936   0.420156
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[17813916387369881   ,  4400785119912308702]  =  0.9489716712888794
	[17329041886349039120,  8699333159457747740]  =  0.985581952709949
	[14169799449801373117,  5004131969199419793]  =  0.7644354718004982
	[10603672941428866019,  1703847331300677320]  =  0.474302189656979
	[9767020441840364452 , 12809965746239821631]  =  0.5137096042214473
	[9222155262524552208 ,  2230070772219402886]  =  0.07634351431683983
	[6681257941163664566 ,  3253468397832770835]  =  0.3048671023339997
	[9896174471843564741 ,  4329451781928897369]  =  0.5325489271548902
	                                              ⋮
	[6242003743164303227 , 14774945750507892610]  =  0.6047845985221756
	[9666738521404155677 , 11641483179283066996]  =  0.5321785086671138
	[8600174387665261856 , 14027562189529080231]  =  0.5742283175607739
	[875267146556840949  ,  2520040687452014961]  =  0.09246373974542332
	[839451858133325944  ,  1526691723863411160]  =  0.6498912340082867
	[6526988131186142725 , 11470862121108514714]  =  0.823516625451518
	[12554874066387155728, 15240003619098155971]  =  0.3323723930032032
	[9060976978009627663 ,  6565262192402102057]  =  0.09665847915781911
	[10066988524776738469,  2588469222286953884]  =  0.062436444341232855Timing named index: 0.00087269, array index: 0.000821353, named key: 0.126110837
Timing sum large sparse array: 0.008480086, named: 0.021843165
done!
INFO: NamedArrays tests passed

>>> End of log
