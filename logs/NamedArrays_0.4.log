>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (778.9921875 MB free)
Uptime: 14526.0 sec
Load Avg:  1.00830078125  0.98046875  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     691201 s        246 s      56447 s     559068 s         27 s
#2  3500 MHz     443356 s       6930 s      46045 s     900620 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5737428771238671	.4549816399770015	.583059212203398	.4975245579670835
two	.9357048767193674	.18397641770158035	.26840718559113363	.7154041696832698
a	57
b	32
c	11
d	38
e	8
f	17
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.156035   0.756049   0.106531
b           │  0.900111  0.0498817   0.533358 0.15603477024252355 0.15603477024252355
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.156035   0.756049   0.106531
b     │  0.900111  0.0498817   0.533358
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.156035   0.756049   0.106531
b           │  0.900111  0.0498817   0.533358
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.156035   0.756049   0.106531
b     │  0.900111  0.0498817   0.533358
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.511522   0.798198   0.703767   0.289299
er              │  0.534282   0.596552  0.0442381   0.655745
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140673924990288
0-element Named Array{Any,1}

[0.452552646520471 0.6362586994838011 0.9299311491574398 0.41952064265721
 0.09791976297478566 0.5855435611547846 0.6175965091534865 0.9540380852641119]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.452553   0.636259   0.929931   0.419521
two   │ 0.0979198   0.585544   0.617597   0.9540382x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.452553   0.636259   0.929931   0.419521
two   │ 0.0979198   0.585544   0.617597   0.9540382x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.476715    -0.315397  …    -0.294619     -1.37185
2     │    -2.71029     0.754594  …     0.451147    -0.5370881000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │ -0.0607439   -0.832218
2     │   0.262837   -0.267623
3     │   -1.13375     2.06224
4     │    1.88141    0.989882
5     │   0.944458     1.10988
6     │   0.210393   0.0713135
7     │   -1.07167   -0.411609
8     │   0.274204    0.856466
9     │  -0.402506   -0.694714
⋮                ⋮           ⋮
992   │  -0.590484   -0.306717
993   │    1.18596   -0.432067
994   │   -0.68838    -1.72626
995   │   0.919357     1.56168
996   │   -1.28791    -1.49372
997   │   0.454498   -0.761027
998   │  -0.853539  -0.0367064
999   │  -0.784271   -0.870812
1000  │   -3.93781    -1.209421000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │    -1.48666
2    │   -0.881048
3    │    -1.30957
4    │    0.859463
5    │     -1.0259
6    │   -0.517061
7    │ -0.00933212
8    │   -0.430756
9    │   -0.438831
⋮                ⋮
992  │   -0.624011
993  │    0.703143
994  │    -1.44579
995  │    0.318503
996  │ -0.00656019
997  │     2.03572
998  │    -1.22065
999  │    0.511074
1000 │     2.074322x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.773744  0.167257
1           │ 0.144067  0.200718

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.200434  0.839094
1           │  0.91714  0.256111
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.981183
2  │ 0.478505
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.807829  0.452088
2     │ 0.919532  0.300379
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.400562  0.424312
2     │ 0.831418  0.405202

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.56569  0.281608
2     │ 0.529906  0.968648
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.954402   0.20154
2     │ 0.264663  0.999069

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.564885  0.539347
2     │ 0.981911  0.992226

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.508917  0.212932
2     │ 0.335494  0.294924

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.822689  0.445939
2     │ 0.741922  0.606535
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.522804  0.698747
2     │ 0.378407  0.236501

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0340665   0.670013
2     │  0.450051   0.372348

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.100165   0.17056
2     │ 0.703127  0.479521
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.591002  0.0156737

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.783737  0.960708
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.532768
2     │ 0.905043

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.719676
2     │ 0.887866
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0652176   0.139075
2     │ 0.0201636   0.406873
1000×1000 Named sparse matrix with 90 Float64 nonzero entries:
	[16406121832856650968,   144428425607543167]  =  0.7035279375089245
	[4490952960035913511 ,  5004131969199419793]  =  0.5380475160704128
	[846219735909059185  , 12419957900638875901]  =  0.960604264063345
	[8699474171918181750 ,  1703847331300677320]  =  0.3791529448994284
	[4063711519745150262 ,   113574861176001527]  =  0.872804948292492
	[13550011942507349191,  5062864901616737721]  =  0.9347421063775259
	[15671454707758945661,  8720304024814141479]  =  0.641493472133404
	[5643811413442923432 ,  7242692203416363180]  =  0.3892245993188157
	                                              ⋮
	[11544136240443520407,  8357516066305821252]  =  0.48324104514690447
	[15935843203573098002,  5089169802387190808]  =  0.11057678085293077
	[2725232909516991235 ,  1566360107212290167]  =  0.9526074604820471
	[16992521057894414253, 16267926292325351807]  =  0.10497877110441589
	[12023328037222515112,  6332455606016291123]  =  0.9952536955515576
	[7425701996526302553 , 10370911177498520402]  =  0.137875834113119
	[1051961026643939454 , 10024080200852233627]  =  0.5038993310618345
	[4182991028086505933 , 13950575499123628905]  =  0.983524843473703
	[1646478019369420967 ,   427459847123490633]  =  0.055673448823388094Timing named index: 0.00083168, array index: 0.000856069, named key: 0.131459777
Timing sum large sparse array: 0.010479327, named: 0.024749316
done!
INFO: NamedArrays tests passed

>>> End of log
