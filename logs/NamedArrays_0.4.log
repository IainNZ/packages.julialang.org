>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (792.6640625 MB free)
Uptime: 15153.0 sec
Load Avg:  1.00732421875  1.04052734375  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     678340 s       3966 s      64532 s     627404 s         18 s
#2  3500 MHz     510747 s       3224 s      54940 s     887600 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.21997494574830068	.08015619126388462	.027778098254647388	.42302170758487057
two	.2532345956464299	.24957690724482462	.34645767317507636	.4631179949037427
a	11
b	27
c	52
d	67
e	37
f	11
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.673238  0.0189645   0.489023
b           │  0.681453   0.552478   0.142933 0.6732384500059778 0.6732384500059778
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.673238  0.0189645   0.489023
b     │  0.681453   0.552478   0.142933
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.673238  0.0189645   0.489023
b           │  0.681453   0.552478   0.142933
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.673238  0.0189645   0.489023
b     │  0.681453   0.552478   0.142933
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.197208   0.45286  0.962867   0.71316
er              │ 0.471835  0.120149  0.762189  0.203329
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140581697978128
0-element Named Array{Any,1}

[0.1842694645462799 0.6788866648554557 0.014549580844549936 0.9052077832006329
 0.2689650131845436 0.4853244870468394 0.09173909438856431 0.37671331437002675]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.184269   0.678887  0.0145496   0.905208
two   │  0.268965   0.485324  0.0917391   0.3767132x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.184269   0.678887  0.0145496   0.905208
two   │  0.268965   0.485324  0.0917391   0.3767132x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -0.52645    -0.717669  …     0.731122     -1.10429
2     │   -0.521394    -0.981057  …     0.401635    -0.3850261000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.233425  -0.226468
2     │    1.6076   0.346192
3     │  0.928991  -0.859624
4     │   1.36996  -0.157544
5     │   1.05017    0.12801
6     │   1.53883   0.710434
7     │ -0.791473  -0.518454
8     │   1.70353   -1.27099
9     │ -0.707985    1.39373
⋮               ⋮          ⋮
992   │   1.07161    -2.4408
993   │ -0.706234   0.427997
994   │ -0.884749   0.352277
995   │ -0.858532  -0.170185
996   │   1.21699  -0.684586
997   │  -1.07924   0.851757
998   │  0.654537  -0.114868
999   │ -0.340531   -0.50275
1000  │ -0.632024  -0.9412821000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.26948
2    │ -0.294707
3    │  0.357762
4    │  -0.60736
5    │  0.464302
6    │  -1.14983
7    │  -1.30085
8    │   1.11213
9    │ -0.913898
⋮              ⋮
992  │  0.988587
993  │  0.405021
994  │   2.02312
995  │  0.253614
996  │ -0.826541
997  │ -0.924104
998  │   2.67189
999  │  -2.03283
1000 │  -1.554732x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.162572  0.507932
1           │ 0.348217  0.833732

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.696824  0.341561
1           │ 0.653312    0.6527
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.796703
2  │ 0.454943
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.586368  0.0650469
2     │  0.632603   0.483972
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.637529  0.421465
2     │ 0.991955   0.12814

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.92152    0.93749
2     │  0.662735  0.0493079
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.301766  0.050718
2     │ 0.325938  0.786267

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.446735  0.615931
2     │ 0.763699  0.841231

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.491861  0.255793
2     │ 0.671629  0.257544

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.805855  0.752814
2     │ 0.985638  0.594869
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.579024  0.439479
2     │   0.3553  0.308503

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.796707   0.902915
2     │ 0.0253275   0.713028

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.231347  0.837751
2     │  0.42767  0.350315
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.815339  0.952291

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.790412  0.875568
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.149204
2     │ 0.658267

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.748184
2     │ 0.0724768
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0130569   0.681009
2     │ 0.0796033  0.0336972
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[11641483179283066996,  6526988131186142725]  =  0.9661055501346683
	[6413456663738881847 ,  8699333159457747740]  =  0.1590588818618346
	[1257048595837562235 ,  5004131969199419793]  =  0.08892048483652593
	[11259093931184787670,  5927176887743683346]  =  0.14023884930807617
	[2362724562918981188 , 14066869468942639955]  =  0.056334379431167037
	[1898604270381526844 ,  9283096199793891681]  =  0.3141345267495128
	[7002923098712527685 ,  8069307267129313135]  =  0.977652275977148
	[6482319473474263274 , 14995138918287078531]  =  0.4123702422430253
	                                              ⋮
	[11707210785935603289,  2318046236442875673]  =  0.5836963998409754
	[5579376550761991812 , 12554874066387155728]  =  0.05128938150097406
	[3684962664704690986 ,  1526691723863411160]  =  0.5646234574889686
	[140805053905483200  , 10370911177498520402]  =  0.22231328814861206
	[9036640481818790821 , 16069635275006911712]  =  0.32222933438201595
	[12459420750016908814, 16840404209865735426]  =  0.7101460929729166
	[15578960726498056365,  7957587899775749890]  =  0.913639059018277
	[9690422262975321697 ,   427459847123490633]  =  0.7663188410979129
	[1095814029099585013 , 14599810768241287016]  =  0.9390611171723819Timing named index: 0.00104653, array index: 0.00059624, named key: 0.083792294
Timing sum large sparse array: 0.006280704, named: 0.012866936
done!
INFO: NamedArrays tests passed

>>> End of log
