>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (859.37109375 MB free)
Uptime: 14220.0 sec
Load Avg:  0.9765625  0.9853515625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     668770 s         11 s      55402 s     556830 s         22 s
#2  3499 MHz     465512 s       6237 s      46913 s     859760 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8526535489916618	.03269846851025204	.612630628133715	.38958902395190576
two	.06579195719315734	.0010097368948869256	.6147389498972615	.4922347934607998
a	42
b	30
c	29
d	73
e	24
f	46
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.945503  0.233603  0.272269
b           │  0.15746  0.883493  0.303965 0.9455031213481744 0.9455031213481744
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.945503  0.233603  0.272269
b     │  0.15746  0.883493  0.303965
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.945503  0.233603  0.272269
b           │  0.15746  0.883493  0.303965
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.945503  0.233603  0.272269
b     │  0.15746  0.883493  0.303965
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.656275  0.00506075    0.520589   0.0290319
er              │  0.0626002    0.384764    0.894863    0.606814
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139965759201744
0-element Named Array{Any,1}

[0.15674397155750475 0.143118332030989 0.48486793750381696 0.8584634247035685
 0.8632429117286122 0.2648841882377657 0.33263226735236184 0.02645802178897827]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.156744  0.143118  0.484868  0.858463
two   │ 0.863243  0.264884  0.332632  0.0264582x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.156744  0.143118  0.484868  0.858463
two   │ 0.863243  0.264884  0.332632  0.0264582x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.52142    0.0874329  …     0.735126     0.838487
2     │    0.468395     0.354995  …   -0.0417565    -0.4082981000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.634635  -0.158553
2     │ -0.282148   -0.45059
3     │  0.659783   -1.41794
4     │  -1.66805  -0.582397
5     │   2.00942   -1.02047
6     │  -1.23758    1.11044
7     │ -0.225567  -0.341025
8     │  0.530813   0.121725
9     │   1.13435   -1.08738
⋮               ⋮          ⋮
992   │ -0.196501   0.479583
993   │  0.397805   -1.54885
994   │  -1.18857   0.810185
995   │   -1.9796   -1.25898
996   │ -0.175697  -0.432948
997   │  0.401252  -0.496621
998   │   2.05855   -0.69274
999   │  0.186362   0.625151
1000  │  -1.83983   0.1996451000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.438083
2    │   1.43636
3    │ -0.304687
4    │ -0.177612
5    │  0.260871
6    │  0.139038
7    │ -0.236562
8    │  0.805557
9    │   1.12471
⋮              ⋮
992  │  0.673903
993  │  0.775712
994  │  0.073625
995  │ -0.747502
996  │ -0.429365
997  │ -0.316115
998  │  -1.12901
999  │  0.865849
1000 │  0.5059232x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0503817   0.227864
1           │  0.882576   0.310034

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.388242  0.891839
1           │  0.29662  0.878772
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0673472
2  │  0.159593
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.984389  0.763111
2     │ 0.660717  0.519225
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.157099  0.726767
2     │ 0.717818  0.917743

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.511132  0.681104
2     │ 0.902014  0.190199
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.383158  0.314957
2     │   0.5727  0.130539

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.83661  0.602418
2     │ 0.911225  0.342851

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.781554  0.0332053
2     │  0.955687   0.613789

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.926413  0.194085
2     │ 0.191724  0.698073
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.745016  0.127142
2     │ 0.835817  0.018186

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.563226  0.339171
2     │ 0.869631  0.202452

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.082569  0.898936
2     │ 0.841435  0.760227
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.864161  0.797639

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.977896  0.639466
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.392349
2     │ 0.108804

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.60371
2     │ 0.149144
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.634854   0.493858
2     │ 0.0567719   0.584161
1000×1000 Named sparse matrix with 85 Float64 nonzero entries:
	[6006398908531647410 ,  1703847331300677320]  =  0.26671567482937286
	[7608520278977511969 ,  5927176887743683346]  =  0.42963776609666837
	[11033897610157224162,  6046649976662626325]  =  0.5222172977609976
	[14580339014010232292, 18443816037252674910]  =  0.40900717075499804
	[14027562189529080231, 10601912832305821454]  =  0.055837145633528706
	[11354191964706246766,  4394159825732135742]  =  0.5785291519061522
	[18213258608646582471,  4981387750669837953]  =  0.03868440473099799
	[7011600752848376140 ,  5723128691850249417]  =  0.6824629261745874
	                                              ⋮
	[5071406905266041170 ,  1898604270381526844]  =  0.6931571896544249
	[17173839162019621584, 11202982330472117227]  =  0.31175607773091074
	[11581210425696274532,  1566360107212290167]  =  0.6387078911224118
	[14956803718882296446, 14944477062144183931]  =  0.8250940876180402
	[7946303620992373940 ,  8471876845144429043]  =  0.9535334446568804
	[843417444367997784  ,  7608520278977511969]  =  0.01787367854783728
	[6065204439534692180 ,  6468689935112619700]  =  0.607628694345925
	[16971466802818471851, 13970367575607681105]  =  0.756942842954855
	[281356413667926651  ,  3733926995351842633]  =  0.986586583137578Timing named index: 0.001250891, array index: 0.000733759, named key: 0.129475737
Timing sum large sparse array: 0.007094739, named: 0.014059477
done!
INFO: NamedArrays tests passed

>>> End of log
