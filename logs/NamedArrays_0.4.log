>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (801.10546875 MB free)
Uptime: 15160.0 sec
Load Avg:  1.07373046875  0.9853515625  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz     694134 s       6768 s      56507 s     609037 s         38 s
#2  3505 MHz     507968 s         90 s      48188 s     911073 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.452823675542521	.5181514982019297	.9462523288125322	.2655188747259707
two	.48402686436088604	.14377479362530976	.8732083060349809	.10625072665443636
a	13
b	54
c	74
d	43
e	41
f	47
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.859465  0.942754  0.104429
b           │ 0.829739   0.21396  0.885824 0.8594650778926041 0.8594650778926041
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.859465  0.942754  0.104429
b     │ 0.829739   0.21396  0.885824
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.859465  0.942754  0.104429
b           │ 0.829739   0.21396  0.885824
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.859465  0.942754  0.104429
b     │ 0.829739   0.21396  0.885824
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.264597  0.241673  0.228637  0.246362
er              │ 0.955436  0.860989  0.650267  0.940637
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140477164934240
0-element Named Array{Any,1}

[0.30293753328028017 0.6000702436864842 0.22460500347302093 0.44868754218144646
 0.9265983987573352 0.13359413881792048 0.9273461640998002 0.5125742903464732]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.302938   0.60007  0.224605  0.448688
two   │ 0.926598  0.133594  0.927346  0.5125742x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.302938   0.60007  0.224605  0.448688
two   │ 0.926598  0.133594  0.927346  0.5125742x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.637476      0.950714  …      0.673539      0.330296
2     │    -0.579314      -1.88327  …        0.7778      0.9448811000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -2.33733     1.25488
2     │   -1.14482   -0.109863
3     │   0.271718  -0.0752163
4     │  0.0374842   -0.531084
5     │    2.18469    0.836537
6     │   0.540442    0.898709
7     │    1.77995    0.515968
8     │  0.0484052    0.941492
9     │  -0.217557    0.887412
⋮                ⋮           ⋮
992   │   -2.19443    0.248019
993   │  -0.439701    0.145357
994   │   0.403678    0.688646
995   │   -1.94566      1.9017
996   │  -0.616835     1.05255
997   │   0.974637    0.581281
998   │   0.399493   -0.306327
999   │   0.284436    0.269544
1000  │   0.581927    0.1982361000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   0.27151
2    │ -0.906494
3    │  -0.57383
4    │  0.166892
5    │  0.111852
6    │   1.36424
7    │  -1.17078
8    │   1.27151
9    │   1.37887
⋮              ⋮
992  │ 0.0316968
993  │ -0.216803
994  │ -0.657099
995  │  -1.69206
996  │ -0.156957
997  │  0.262377
998  │ -0.259371
999  │ -0.533159
1000 │  0.1428092x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.245345  0.00191607
1           │   0.524874    0.704989

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.768807  0.171943
1           │ 0.925912  0.978183
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.139183
2  │  0.13861
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.683013  0.222447
2     │ 0.130006  0.741217
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.535446  0.826873
2     │ 0.349664  0.155707

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.393306  0.068129
2     │ 0.817828  0.105041
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.684927  0.629742
2     │ 0.924503  0.691777

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.776409   0.18516
2     │ 0.226628  0.156332

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.540831  0.606072
2     │ 0.297831  0.596311

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.416964  0.788954
2     │ 0.995838  0.760135
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.350632  0.065865
2     │ 0.741505  0.576603

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.820368  0.0655085
2     │  0.548054   0.898763

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.842604  0.554719
2     │ 0.514245  0.188388
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.977914   0.27956

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.429917  0.732363
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.793404
2     │ 0.0135028

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.492075
2     │ 0.331052
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.281305   0.939518
2     │ 0.0747021   0.874935
1000×1000 Named sparse matrix with 96 Float64 nonzero entries:
	[14835807873575694564, 11080872162023102847]  =  0.4870230629794532
	[11907679469289587679,  9920432272297441209]  =  0.311969735681096
	[4106283031091570395 ,  9283096199793891681]  =  0.27764715759982495
	[15791483600865970897, 18443816037252674910]  =  0.10375918818600938
	[17329041886349039120,  4786699431706339713]  =  0.9095777533848735
	[4486621131225030707 , 17448184880248178237]  =  0.38721919449385145
	[2849690884155085581 ,  2362724562918981188]  =  0.24576634401404873
	[4782469333680129318 , 10973151624395076623]  =  0.6523698182600155
	                                              ⋮
	[16097006782209161274, 17853331136360781895]  =  0.22887921418095591
	[10080555958650725266,  5597731276780160114]  =  0.5922338241264908
	[5122894113285174381 ,   372001016642560619]  =  0.5553900960063909
	[10723354513323415010, 10370911177498520402]  =  0.8373039646832019
	[18213258608646582471, 16836080019131185762]  =  0.2149267415420406
	[16468281889911035053,  9223427034658990711]  =  0.6876376744528179
	[15408733635197285348, 13970367575607681105]  =  0.9527303009110919
	[12554874066387155728,  4047135350800189603]  =  0.7483736918775579
	[18238638934550427920, 16202651256804923129]  =  0.6140133506793002Timing named index: 0.000818526, array index: 0.000742296, named key: 0.136148329
Timing sum large sparse array: 0.011718953, named: 0.032273079
done!
INFO: NamedArrays tests passed

>>> End of log
