>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (808.421875 MB free)
Uptime: 14728.0 sec
Load Avg:  0.96142578125  0.96142578125  1.0146484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     669409 s       5427 s      54540 s     607006 s         17 s
#2  3500 MHz     474510 s       1095 s      45390 s     905515 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6681699956402389	.7954729462240617	.6119749603678386	.6448778976572467
two	.6721231587875867	.25169905561149575	.2876800914042097	.5791137341457098
a	5
b	92
c	18
d	77
e	7
f	69
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.311616  0.336244  0.666809
b           │ 0.461625  0.121387  0.525685 0.31161572803148063 0.31161572803148063
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.311616  0.336244  0.666809
b     │ 0.461625  0.121387  0.525685
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.311616  0.336244  0.666809
b           │ 0.461625  0.121387  0.525685
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.311616  0.336244  0.666809
b     │ 0.461625  0.121387  0.525685
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.15094  0.191147  0.968242   0.87718
er              │ 0.510639  0.163209  0.859942  0.871215
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140495762843280
0-element Named Array{Any,1}

[0.3562185765887167 0.33902903699808573 0.22232989512144785 0.01187589971657732
 0.9657812664733032 0.556432768531882 0.4502694833981582 0.8512004124258048]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.356219   0.339029    0.22233  0.0118759
two   │  0.965781   0.556433   0.450269     0.85122x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.356219   0.339029    0.22233  0.0118759
two   │  0.965781   0.556433   0.450269     0.85122x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.45207      0.41091  …    -0.333997     0.819467
2     │    0.490213    -0.120477  …    -0.157729      1.121531000x2 Named Array{Float64,2}
A ╲ B │            1             2
──────┼───────────────────────────
1     │     -2.54701      0.169907
2     │     0.436667      0.113425
3     │    -0.470255     -0.723732
4     │    -0.414615     -0.217685
5     │     0.372345     -0.172467
6     │      1.35712      0.322624
7     │     0.120498      -1.26843
8     │     0.351756     -0.862096
9     │       1.1409      0.803517
⋮                  ⋮             ⋮
992   │     -0.19216       1.56382
993   │     0.425551       -1.4922
994   │      1.16401     -0.618796
995   │      -1.2137       1.22967
996   │     0.613937       1.22959
997   │    -0.273438     -0.450198
998   │    -0.350955      -1.40015
999   │ -0.000694889      -1.04394
1000  │     0.730051     -0.1284111000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.722307
2    │  0.285159
3    │ -0.668937
4    │ 0.0488594
5    │  0.174145
6    │   2.31451
7    │  0.991809
8    │  0.270184
9    │  0.758487
⋮              ⋮
992  │  -1.35657
993  │  0.494959
994  │ -0.832581
995  │  0.775622
996  │   2.45447
997  │  0.354976
998  │  0.736793
999  │   1.02693
1000 │ -0.8685972x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.365595   0.859094
1           │ 0.0907957  0.0713135

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.334116   0.14407
1           │ 0.747047  0.843126
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.178991
2  │  0.31137
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.09991  0.843327
2     │ 0.096485  0.720353
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.876326  0.303273
2     │ 0.958867    0.7518

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0447671   0.230103
2     │  0.737452   0.371723
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.630198   0.82446
2     │ 0.029484  0.271152

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0590449    0.99172
2     │  0.351969   0.222974

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.135856   0.866463
2     │ 0.0497849    0.54706

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.885325   0.58669
2     │ 0.703775  0.106211
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.343635    0.36033
2     │ 0.0876452   0.699234

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.285976  0.509514
2     │ 0.603135   0.94887

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.60056   0.276729
2     │  0.917917  0.0130741
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0163292   0.401754

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.726056  0.341144
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.626639
2     │  0.11201

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0908614
2     │  0.223376
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.431564  0.870374
2     │ 0.055699  0.955145
1000×1000 Named sparse matrix with 95 Float64 nonzero entries:
	[16501174925917855829,  6526988131186142725]  =  0.9009344021434673
	[9815398096560962926 ,  6526988131186142725]  =  0.767919781849965
	[4400785119912308702 , 12809965746239821631]  =  0.36174251866694074
	[7842570643883840414 , 14517667374310463124]  =  0.287077394165447
	[9440739376838893158 ,  4394159825732135742]  =  0.11718958473356333
	[4047135350800189603 ,  4981387750669837953]  =  0.15455947400185077
	[4476857004763930104 ,  5723128691850249417]  =  0.5725322954437093
	[14343632987770563929, 10596751188013898940]  =  0.28347446510647467
	                                              ⋮
	[2564073136243113693 , 11732026533134275955]  =  0.261329636057527
	[11202982330472117227,  4285843451033309381]  =  0.6130988433697941
	[2194332839417359044 ,  3014575823142358933]  =  0.827567019620969
	[15578960726498056365,  6332455606016291123]  =  0.8651831044801985
	[195441584546642058  ,  4788923618671962983]  =  0.2899152270675247
	[10077246284261493604, 10024080200852233627]  =  0.2365819846504844
	[4223746066729127812 , 16031689834122954645]  =  0.6853296569581953
	[2876475700534992100 ,   427459847123490633]  =  0.940582583639715
	[2876475700534992100 ,  9133170895916704973]  =  0.0963159837972869Timing named index: 0.000820777, array index: 0.000816607, named key: 0.120773078
Timing sum large sparse array: 0.005878233, named: 0.012133464
done!
INFO: NamedArrays tests passed

>>> End of log
