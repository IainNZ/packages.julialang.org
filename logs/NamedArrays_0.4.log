>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (845.5234375 MB free)
Uptime: 14802.0 sec
Load Avg:  1.005859375  0.98095703125  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     690932 s       3579 s      62235 s     581412 s         26 s
#2  3500 MHz     485347 s       2962 s      53546 s     886796 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.44123894571798994	.6711826320307406	.6252453263586799	.7412167958152152
two	.23228701542923447	.9468800829310557	.6790563827253131	.3173341975153199
a	60
b	62
c	29
d	67
e	10
f	6
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.921149  0.404433   0.59518
b           │ 0.122715  0.513094  0.961416 0.9211489984236967 0.9211489984236967
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.921149  0.404433   0.59518
b     │ 0.122715  0.513094  0.961416
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.921149  0.404433   0.59518
b           │ 0.122715  0.513094  0.961416
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.921149  0.404433   0.59518
b     │ 0.122715  0.513094  0.961416
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.487909  0.963615  0.575357  0.882931
er              │ 0.216741   0.57594  0.114921  0.119681
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139846991726096
0-element Named Array{Any,1}

[0.3858017010793593 0.3479404656695555 0.1576507104514311 0.1825420434929379
 0.07090227885625633 0.7393860483107302 0.7839523611370312 0.32635499135560697]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.385802    0.34794   0.157651   0.182542
two   │ 0.0709023   0.739386   0.783952   0.3263552x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.385802    0.34794   0.157651   0.182542
two   │ 0.0709023   0.739386   0.783952   0.3263552x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.14789     0.194898  …     0.283297     0.594303
2     │    0.565239     0.929635  …      -1.7602      1.352561000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.601876   -0.147301
2     │   0.306487  -0.0671381
3     │  -0.371692   -0.102548
4     │  -0.670749   -0.820284
5     │ -0.0631935    0.535444
6     │  -0.150741   -0.899099
7     │   0.343311   0.0381419
8     │   0.545143    -1.50907
9     │   0.941157  -0.0956177
⋮                ⋮           ⋮
992   │  -0.284527   -0.463722
993   │   0.390953    -1.66318
994   │    0.13543    0.691877
995   │  -0.893969     0.88008
996   │  -0.767886    0.225033
997   │   0.782098     0.15514
998   │  -0.413862    0.312698
999   │   -1.15803     1.10579
1000  │    1.75601    -1.101261000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.542363
2    │   -1.10416
3    │   0.391585
4    │    1.10953
5    │    0.78455
6    │  -0.706013
7    │  -0.630712
8    │   0.397797
9    │   -1.01925
⋮               ⋮
992  │    0.58233
993  │   -0.95543
994  │  -0.278987
995  │   0.363851
996  │  -0.309876
997  │ -0.0498275
998  │    1.50291
999  │   -2.49698
1000 │   0.8004122x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.699682  0.317713
1           │ 0.801662  0.865154

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.196476  0.133648
1           │ 0.317805  0.180905
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.551819
2  │  0.93948
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.802064  0.299462
2     │ 0.167226  0.604555
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │ 0.000869165     0.924928
2     │    0.198672     0.355446

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.748381  0.0879034
2     │  0.214664  0.0338931
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.884245  0.584641
2     │ 0.558196  0.630837

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.196564   0.438157
2     │ 0.0162146   0.488777

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.162891  0.167838
2     │ 0.379542   0.80922

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.381161  0.0144226
2     │ 0.0497106    0.38969
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.484591  0.549733
2     │ 0.662511  0.523713

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0347221    0.60961
2     │  0.814272   0.106792

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.514251  0.979392
2     │ 0.250877  0.986164
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.283102  0.913417

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.316453  0.202267
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.748594
2     │ 0.431391

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.175166
2     │ 0.488859
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.854087   0.633412
2     │ 0.0494425   0.102674
1000×1000 Named sparse matrix with 93 Float64 nonzero entries:
	[971859988095984883  , 13789993170142104254]  =  0.6006044705105202
	[7199089960335318010 ,  6564272639106249010]  =  0.9798521353284804
	[3654557576772801522 ,  4247719799217886270]  =  0.2032186214014673
	[7425701996526302553 , 14066869468942639955]  =  0.9030988083834597
	[7369566324703660862 , 17822619313291261357]  =  0.843096359262073
	[7199089960335318010 ,  4786699431706339713]  =  0.6167979481131758
	[10603672941428866019,  8629498292780771804]  =  0.27853594759721134
	[10338346681654797567,  3253468397832770835]  =  0.3394989543967466
	                                              ⋮
	[8809575672816075910 ,     1348625733340586]  =  0.7214237145348963
	[4681672859498425805 ,  3014575823142358933]  =  0.37423692937868824
	[18279088465816865198, 11641483179283066996]  =  0.8258698205024322
	[12543438490586731184,  6468689935112619700]  =  0.7828370741754751
	[13550011942507349191, 10361974346531339474]  =  0.6378308291809791
	[187013141495975231  ,  7989582431359101293]  =  0.17093772037118127
	[2211499036183048350 ,  1523061068178304284]  =  0.4874862999775922
	[8305934159106380255 ,  3279378535085980212]  =  0.12175956951525224
	[1523061068178304284 , 13950575499123628905]  =  0.8422483826637606Timing named index: 0.000882644, array index: 0.00064898, named key: 0.136967655
Timing sum large sparse array: 0.011123236, named: 0.027555629
done!
INFO: NamedArrays tests passed

>>> End of log
