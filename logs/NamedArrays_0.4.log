>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (858.49609375 MB free)
Uptime: 14101.0 sec
Load Avg:  1.13232421875  1.02001953125  0.9931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     671520 s       5287 s      55953 s     540008 s         26 s
#2  3500 MHz     454048 s       2184 s      47765 s     865187 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.09391016460527424	.035519567154269405	.46103249825369064	.6958074552715174
two	.2603558663866601	.6528133227988109	.5742167603221533	.817384506400209
a	48
b	26
c	99
d	35
e	51
f	44
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0853474   0.713897   0.622465
b           │  0.436251  0.0999011   0.261977 0.08534739766981314 0.08534739766981314
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0853474   0.713897   0.622465
b     │  0.436251  0.0999011   0.261977
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0853474   0.713897   0.622465
b           │  0.436251  0.0999011   0.261977
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0853474   0.713897   0.622465
b     │  0.436251  0.0999011   0.261977
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.933338  0.0425067   0.657081   0.249645
er              │  0.201518   0.724519   0.636348   0.842127
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140038751070672
0-element Named Array{Any,1}

[0.16722055746165232 0.6027165861147761 0.9876819488304396 0.8808254049076314
 0.5025319497286282 0.5489142628364303 0.7255213432275056 0.9215213376911935]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.167221  0.602717  0.987682  0.880825
two   │ 0.502532  0.548914  0.725521  0.9215212x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.167221  0.602717  0.987682  0.880825
two   │ 0.502532  0.548914  0.725521  0.9215212x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.409706    -0.470996  …    -0.643277     0.160304
2     │     1.24779     -1.67631  …    -0.831744      1.029821000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │   -0.169479      1.06747
2     │    -2.37958    0.0582336
3     │    0.735502   0.00340221
4     │   -0.198836      1.51317
5     │  -0.0655683     -1.73515
6     │    -1.31814    -0.124431
7     │    0.779544      1.69773
8     │      1.7341    -0.428018
9     │    0.693278     0.691563
⋮                 ⋮            ⋮
992   │   0.0237271    -0.151543
993   │    -2.05383     0.402083
994   │    0.272565    -0.532318
995   │   -0.251124     -1.46167
996   │    -0.48525    -0.752577
997   │ -0.00662028    0.0649944
998   │   -0.747902    -0.116603
999   │    0.743087     -1.96017
1000  │     1.49343      1.006381000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   0.43108
2    │ -0.121673
3    │   1.28342
4    │   -1.5562
5    │   1.27643
6    │ 0.0227693
7    │  0.325149
8    │  0.134461
9    │  -1.87122
⋮              ⋮
992  │  0.134251
993  │   1.11734
994  │ 0.0739062
995  │   2.91893
996  │  -1.98527
997  │  0.302412
998  │  -1.61983
999  │   1.84433
1000 │  -1.755162x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.928638  0.289793
1           │ 0.553013  0.636502

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.204825  0.549961
1           │  0.63364  0.569194
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.490567
2  │  0.64231
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0293943   0.657704
2     │  0.770851   0.438991
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.164571  0.964802
2     │ 0.720724  0.494221

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.626664  0.921342
2     │ 0.560065   0.45631
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.921566  0.290722
2     │ 0.548205  0.370105

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.431559  0.0647749
2     │  0.491907  0.0370075

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.97283  0.0470448
2     │  0.118452   0.741708

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.541221     0.107
2     │ 0.185066  0.254116
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.382575  0.237448
2     │   0.5214  0.521138

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.759034  0.517111
2     │ 0.540783  0.867585

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.388921   0.287807
2     │  0.160816  0.0612109
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.4961  0.810355

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.792736  0.133435
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.830487
2     │ 0.637256

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.738776
2     │ 0.304814
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0503916   0.955394
2     │ 0.0112916   0.928618
1000×1000 Named sparse matrix with 95 Float64 nonzero entries:
	[8215529161129330866 ,  9690422262975321697]  =  0.4760149556410884
	[13073955458708776909,  8699333159457747740]  =  0.12205185864158685
	[9151636479057027417 ,  4913249781191789579]  =  0.047259445237802566
	[12921543294441418094, 14066869468942639955]  =  0.060034895343472394
	[14278035825230678864, 17211410618634043162]  =  0.5303550848218967
	[10355935425140842503, 15493082059768908559]  =  0.3886059641050781
	[11961818409580248909,  2836200141957565154]  =  0.9913577367014568
	[14956803718882296446, 15465980046630820984]  =  0.412837966610879
	                                              ⋮
	[11488343865249833965,  6738482027934271349]  =  0.9015685616587803
	[3822203247414266444 , 10370911177498520402]  =  0.98902393978896
	[13864621993906192564, 16069635275006911712]  =  0.27259221530819455
	[5481191165173026183 , 16836080019131185762]  =  0.8512028347777847
	[1021084771360465309 , 16031689834122954645]  =  0.8081442173616278
	[5747141066858265299 , 11314283927973801071]  =  0.4036940184183011
	[11614427478792455139,  3279378535085980212]  =  0.1358496722515996
	[8225434152398798479 ,  2588469222286953884]  =  0.7432823995915312
	[5744335047891463768 ,  2588469222286953884]  =  0.17495771514281655Timing named index: 0.000192254, array index: 0.000421692, named key: 0.072791957
Timing sum large sparse array: 0.006260244, named: 0.012897286
done!
INFO: NamedArrays tests passed

>>> End of log
