>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (813.26171875 MB free)
Uptime: 14361.0 sec
Load Avg:  0.96142578125  0.96337890625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     649164 s       1586 s      54473 s     587189 s         30 s
#2  3499 MHz     418757 s       5753 s      44594 s     915268 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5288813319022327	.8546940755133343	.6669308740025031	.3416013983176127
two	.5376546199632206	.8997793583487039	.7480008148371948	.6625800124586139
a	7
b	10
c	61
d	65
e	100
f	96
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.107104   0.814565   0.129505
b           │   0.70389  0.0135241   0.508065 0.10710365338389094 0.10710365338389094
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.107104   0.814565   0.129505
b     │   0.70389  0.0135241   0.508065
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.107104   0.814565   0.129505
b           │   0.70389  0.0135241   0.508065
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.107104   0.814565   0.129505
b     │   0.70389  0.0135241   0.508065
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.89969  0.817969  0.828698   0.37157
er              │ 0.584395  0.195988  0.858873  0.657764
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140485209059056
0-element Named Array{Any,1}

[0.9217393163875824 0.7068770660438717 0.3177684316849505 0.036772756642500015
 0.8307945192737143 0.7155908767023871 0.6191528446913019 0.37827077836785183]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.921739   0.706877   0.317768  0.0367728
two   │  0.830795   0.715591   0.619153   0.3782712x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.921739   0.706877   0.317768  0.0367728
two   │  0.830795   0.715591   0.619153   0.3782712x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      0.89757       -0.4826  …     -0.512054     -0.926644
2     │     0.131731      -1.33541  …      0.804309       0.838881000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.931822    0.736232
2     │   0.440886    0.310967
3     │    1.18805   -0.400826
4     │  -0.561107      1.8684
5     │  -0.983816     2.01996
6     │   -1.21383  -0.0528814
7     │  -0.969216    0.391618
8     │  -0.412018    0.527106
9     │  -0.855901   0.0792217
⋮                ⋮           ⋮
992   │  -0.811918   -0.652321
993   │  -0.207732   -0.893101
994   │   0.140492   -0.180098
995   │    1.42889  -0.0803517
996   │   0.703066   -0.716285
997   │   -1.30993   -0.393284
998   │  -0.239059    -1.12855
999   │   0.947949     2.14712
1000  │   0.400223   -0.6187061000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.212683
2    │    1.64455
3    │  0.0313644
4    │   0.308525
5    │   0.629359
6    │   -1.12466
7    │   0.564966
8    │  -0.118312
9    │ -0.0463499
⋮               ⋮
992  │   -0.29011
993  │  -0.623781
994  │    0.68843
995  │  -0.262036
996  │   0.488694
997  │    2.81135
998  │   -1.63571
999  │   0.745283
1000 │   -1.683982x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.521376  0.660864
1           │ 0.800731  0.763154

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0915993   0.256229
1           │ 0.0499641    0.90714
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.182599
2  │ 0.719075
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.659988  0.300706
2     │  0.78419  0.219258
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.314436   0.493075
2     │  0.983152  0.0945578

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.770145  0.815036
2     │ 0.105256  0.905585
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.228759  0.878992
2     │ 0.581834  0.699724

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0628273   0.643824
2     │  0.293171   0.781965

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.742943  0.0700742
2     │  0.795113    0.39944

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.519763  0.856737
2     │ 0.839109  0.242934
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.300047  0.148385
2     │ 0.892221  0.919374

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.159614  0.050287
2     │ 0.240779  0.133742

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.7105  0.393124
2     │ 0.767215   0.67651
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.49099  0.546535

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.737346  0.334361
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.771155
2     │ 0.825062

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.338912
2     │ 0.549417
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.78723  0.815057
2     │ 0.524588  0.758575
1000×1000 Named sparse matrix with 104 Float64 nonzero entries:
	[5597731276780160114 ,  5647414292592918739]  =  0.7913866397692686
	[4315763856331682254 ,  2849690884155085581]  =  0.28884493195241356
	[113574861176001527  ,  2230070772219402886]  =  0.23920649970083074
	[4115023046715773069 ,  8720304024814141479]  =  0.42896637396405657
	[5089169802387190808 ,  8720304024814141479]  =  0.1636197250560485
	[11681839584861684795,   906960604709401733]  =  0.06295970243502214
	[5647414292592918739 ,  6065204439534692180]  =  0.2107268549684651
	[1082833487325258643 , 13769040811181486455]  =  0.5068941312167534
	                                              ⋮
	[4394159825732135742 , 17853331136360781895]  =  0.09000874258955904
	[18238638934550427920, 12459420750016908814]  =  0.9240601765984293
	[18168544338330653462, 10361974346531339474]  =  0.8459943223892246
	[4174785917342603289 ,  9526342322394325946]  =  0.6714970649747882
	[16221828541365357577,  7989582431359101293]  =  0.5167784462237994
	[16836080019131185762,  1861743268047760089]  =  0.8447631188024911
	[9036640481818790821 ,  3279378535085980212]  =  0.7119319217131719
	[11052831234341989908,  9133170895916704973]  =  0.9242431225218153
	[10663619072362037589,  2588469222286953884]  =  0.4458467167575475Timing named index: 0.000830305, array index: 0.000699518, named key: 0.132189254
Timing sum large sparse array: 0.008848754, named: 0.028164042
done!
INFO: NamedArrays tests passed

>>> End of log
