>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (863.984375 MB free)
Uptime: 14053.0 sec
Load Avg:  1.02392578125  1.00048828125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     666400 s        621 s      57685 s     542063 s         22 s
#2  3500 MHz     452548 s       6216 s      49356 s     848491 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.20836379913333092	.04313088338434601	.8545062531584575	.2292211066344949
two	.9391677909835019	.3328330751256292	.5241108531287588	.02220192829603418
a	28
b	24
c	35
d	85
e	65
f	14
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.879428  0.626749  0.322763
b           │ 0.030273  0.100315  0.880362 0.8794284111345931 0.8794284111345931
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.879428  0.626749  0.322763
b     │ 0.030273  0.100315  0.880362
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.879428  0.626749  0.322763
b           │ 0.030273  0.100315  0.880362
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.879428  0.626749  0.322763
b     │ 0.030273  0.100315  0.880362
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.72389  0.374499  0.990211  0.681176
er              │ 0.747125  0.998353  0.532247  0.613272
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140199346125840
0-element Named Array{Any,1}

[0.6188064359878636 0.893733937281082 0.47752796941954334 0.5860130771486256
 0.6051692741792019 0.7840020070156539 0.006963168698637556 0.725167944106242]
2x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.618806    0.893734    0.477528    0.586013
two   │   0.605169    0.784002  0.00696317    0.7251682x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.618806    0.893734    0.477528    0.586013
two   │   0.605169    0.784002  0.00696317    0.7251682x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.432268     -0.535221  …     -0.569517       0.82893
2     │      1.37556      -0.06141  …      -1.59036      -2.124841000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  -2.40229    1.66576
2     │  -1.46577  0.0801222
3     │  0.916553    1.94104
4     │   1.26902  -0.111547
5     │ -0.276799   -1.65809
6     │ -0.120392  0.0904892
7     │   -1.6946   0.390848
8     │  0.378459  -0.976002
9     │  -1.78318   -0.58821
⋮               ⋮          ⋮
992   │ -0.654198  -0.467237
993   │ -0.111359   -3.04199
994   │ -0.405184   0.880261
995   │ -0.541236   0.554876
996   │  -1.59453   0.105776
997   │  0.521918  -0.106041
998   │ -0.552443   -2.03797
999   │     1.432   -1.47058
1000  │ -0.115885   0.4032961000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -1.02341
2    │ -0.0184789
3    │   -1.06801
4    │    1.20606
5    │   0.718112
6    │  -0.643375
7    │   0.104071
8    │    0.64918
9    │  -0.330522
⋮               ⋮
992  │  -0.265226
993  │   0.216968
994  │   -1.47273
995  │   -1.17921
996  │    1.29137
997  │     1.1197
998  │   0.274731
999  │   0.496261
1000 │    1.128022x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.755073  0.0511133
1           │  0.783578   0.676492

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.937836  0.681003
1           │ 0.766266  0.488728
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.712437
2  │ 0.715322
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.39612  0.657232
2     │ 0.313889  0.887773
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.547007  0.890513
2     │ 0.781221  0.273651

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.355924  0.0591666
2     │  0.607888    0.71222
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.58501  0.508971
2     │ 0.148465  0.123345

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.317384   0.314523
2     │ 0.0985698   0.970944

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.875188  0.261231
2     │ 0.253263   0.57804

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.755073  0.306184
2     │ 0.943996  0.422096
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.085385  0.366433
2     │ 0.947906  0.102127

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.926776  0.840297
2     │ 0.765248  0.696679

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.259524  0.513336
2     │ 0.723265  0.828886
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.65629  0.451106

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.309726  0.660699
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.294687
2     │ 0.215826

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.569843
2     │ 0.317642
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.371467   0.139731
2     │ 0.0328455   0.771706
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[14580339014010232292,  5004131969199419793]  =  0.8752933918178314
	[11551291857879764225, 16544335554558850098]  =  0.37218098381653997
	[9872310664988650577 ,  4394159825732135742]  =  0.38966203646269126
	[17466052388280872253,  7199089960335318010]  =  0.9688241198524723
	[5733908175048446366 , 17678211741433686062]  =  0.3263841441463915
	[17795748529514954214,  5723128691850249417]  =  0.6619664312173024
	[13768912190038094657,  5723128691850249417]  =  0.785091502530399
	[4722070531727235685 ,  8265524791738013937]  =  0.17814904136465692
	                                              ⋮
	[11707210785935603289, 11604119926906451644]  =  0.9706368846446694
	[1628675476083889103 , 15717097331822026300]  =  0.6214392663486625
	[4302721723742542942 ,  6468689935112619700]  =  0.9890600458576388
	[14770838543801714634,  4182991028086505933]  =  0.9573545576886222
	[5350103876752110926 ,  2520040687452014961]  =  0.22288461425682282
	[17131895616600668418,  4214085865611670439]  =  0.4266962475252749
	[187013141495975231  ,  1203336841330469213]  =  0.3948563903360067
	[17813916387369881   ,  4047135350800189603]  =  0.7070336749366044
	[15717097331822026300,  7519919299137062942]  =  0.3948559422730773Timing named index: 0.000774875, array index: 0.000777749, named key: 0.129583056
Timing sum large sparse array: 0.005514325, named: 0.011393878
done!
INFO: NamedArrays tests passed

>>> End of log
