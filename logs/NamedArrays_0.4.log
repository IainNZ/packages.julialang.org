>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (810.1328125 MB free)
Uptime: 13124.0 sec
Load Avg:  0.9755859375  0.9853515625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     588839 s       6454 s      53664 s     536628 s         30 s
#2  3500 MHz     459298 s         79 s      46287 s     756040 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8310853356169727	.12665685902402624	.7204080824823653	.4077498520386249
two	.1633955369337976	.7475968458814832	.21331660991593693	.22762002409749127
a	81
b	61
c	34
d	58
e	75
f	5
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.973825  0.00960865   0.0636301
b           │   0.928543    0.123048    0.954576 0.9738254745207393 0.9738254745207393
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.973825  0.00960865   0.0636301
b     │   0.928543    0.123048    0.954576
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.973825  0.00960865   0.0636301
b           │   0.928543    0.123048    0.954576
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.973825  0.00960865   0.0636301
b     │   0.928543    0.123048    0.954576
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.882822  0.746334  0.200127   0.72354
er              │ 0.192896  0.866752   0.26121  0.254231
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139824353408928
0-element Named Array{Any,1}

[0.9194347257313598 0.032186498295630805 0.8015927334713455 0.6571599784510751
 0.6033011665895163 0.8393192506458207 0.06119782769139248 0.5755345782568204]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.919435  0.0321865   0.801593    0.65716
two   │  0.603301   0.839319  0.0611978   0.5755352x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.919435  0.0321865   0.801593    0.65716
two   │  0.603301   0.839319  0.0611978   0.5755352x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.13205         0.888  …     -0.366971      0.571903
2     │     0.488175      0.446994  …      -1.74817    -0.01600541000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.207011    -1.30638
2     │   -0.39846    0.713378
3     │  -0.632447    0.615704
4     │  -0.981258  -0.0155153
5     │   -1.38644    -0.22023
6     │    0.35602    -0.92925
7     │  -0.856901     -1.0904
8     │   0.920697   -0.520992
9     │   0.309195    -1.33916
⋮                ⋮           ⋮
992   │   -1.82001     1.02383
993   │    1.81153    0.766122
994   │    1.31273   -0.586728
995   │    1.64217     -1.2992
996   │   -2.12622   -0.850518
997   │  -0.539722    0.665098
998   │  0.0138692    0.121605
999   │    1.82698     1.41561
1000  │    -1.9108    -1.807021000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -0.32145
2    │  -1.69444
3    │   1.53001
4    │ -0.297297
5    │ 0.0738432
6    │ -0.635619
7    │ -0.377142
8    │   2.28243
9    │  -1.09027
⋮              ⋮
992  │  0.754193
993  │  0.295965
994  │ -0.755099
995  │  0.223578
996  │   1.54341
997  │  0.933522
998  │ -0.729341
999  │  0.613704
1000 │ -0.8623162x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.381588    0.6209
1           │ 0.300742     0.922

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.545119  0.501091
1           │ 0.266223   0.20034
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.21698
2  │ 0.574571
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.543533  0.689065
2     │ 0.680803  0.985752
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0752199   0.284183
2     │     0.681   0.864389

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.662842  0.242838
2     │ 0.644292  0.947338
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.303526  0.462264
2     │ 0.993499  0.385586

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0193244  0.0361043
2     │ 0.0373677   0.699223

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.504132  0.145507
2     │ 0.249271  0.657211

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.792678  0.349682
2     │  0.85729  0.423166
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.770418  0.0630304
2     │  0.502261   0.206694

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.589146   0.70317
2     │ 0.152753  0.707128

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.304627  0.696474
2     │ 0.516813  0.490439
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.792737  0.993023

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.997379  0.331022
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.936553
2     │   0.7026

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.532933
2     │ 0.680068
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0908977   0.765659
2     │  0.754249   0.145408
1000×1000 Named sparse matrix with 97 Float64 nonzero entries:
	[7957587899775749890 ,  9690422262975321697]  =  0.2585059685849591
	[5836885843989504432 ,  5312631360709731698]  =  0.48342677033251213
	[4486621131225030707 ,  6564272639106249010]  =  0.6088078595012119
	[17483166649663826856, 15422846019410515149]  =  0.8012069882610415
	[6806539949965918083 ,   113574861176001527]  =  0.3046079084004141
	[12419957900638875901, 17676219393380616284]  =  0.14305029489707488
	[5744335047891463768 ,  5723128691850249417]  =  0.06709296287397892
	[3701904739816180802 , 16621507366152005377]  =  0.03724430543586954
	                                              ⋮
	[18381296046359118750, 10725201418295586676]  =  0.9062265496089661
	[15444197186593984072, 12901330087571726961]  =  0.792328693721768
	[8340722336334766600 ,     1348625733340586]  =  0.6184770740283663
	[8514800090035849787 , 12554874066387155728]  =  0.1519466012564894
	[3029872332119767940 ,  2520040687452014961]  =  0.5488105424573466
	[5029035619085600924 ,  8090338657268802519]  =  0.21906148368710965
	[4786699431706339713 , 11993454575275700781]  =  0.509642141479739
	[11368314934203416452,  8779884342238752210]  =  0.8741714476032791
	[13867334145892551164, 15240003619098155971]  =  0.3120401424995405Timing named index: 0.000887562, array index: 0.000765304, named key: 0.130966255
Timing sum large sparse array: 0.011553254, named: 0.027580488
done!
INFO: NamedArrays tests passed

>>> End of log
