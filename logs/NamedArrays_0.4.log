>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (849.765625 MB free)
Uptime: 14373.0 sec
Load Avg:  0.974609375  1.0048828125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     662048 s       2378 s      54264 s     580787 s         24 s
#2  3501 MHz     477635 s       3938 s      46537 s     858382 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.3020554632805359	.7133994579279983	.8997793959533786	.9543682088029899
two	.13523709502144077	.8259639639063463	.46625601179944454	.9149152266905667
a	73
b	68
c	72
d	37
e	65
f	38
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.609717  0.702812   0.90005
b           │ 0.309509  0.881894  0.766387 0.6097171733979407 0.6097171733979407
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.609717  0.702812   0.90005
b     │ 0.309509  0.881894  0.766387
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.609717  0.702812   0.90005
b           │ 0.309509  0.881894  0.766387
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.609717  0.702812   0.90005
b     │ 0.309509  0.881894  0.766387
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.756204  0.165584   0.54639  0.704123
er              │ 0.467146  0.378515  0.262283  0.561909
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140668229601648
0-element Named Array{Any,1}

[0.1843728220145342 0.8091852565021882 0.17831148308004852 0.9791364829169986
 0.054415152402273126 0.4395776888488485 0.9865544129614416 0.8021166204169357]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.184373   0.809185   0.178311   0.979136
two   │ 0.0544152   0.439578   0.986554   0.8021172x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.184373   0.809185   0.178311   0.979136
two   │ 0.0544152   0.439578   0.986554   0.8021172x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.88182      1.44745  …      0.84897   -0.0515756
2     │    -1.56518     -1.59959  …    -0.363363     0.4981171000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.523437    -1.05596
2     │    1.53922    -1.20703
3     │   0.996066   -0.111275
4     │  0.0883139     -0.3174
5     │   0.236262    -1.72545
6     │ -0.0488438    0.375786
7     │   -2.15125    0.972739
8     │    2.23459    -0.86424
9     │    1.48641    -1.09201
⋮                ⋮           ⋮
992   │   -1.48665    -0.87176
993   │   0.952442    0.102438
994   │    1.02425    -0.19123
995   │   0.327351     1.21432
996   │   0.113273    0.598974
997   │   0.331168    -0.23951
998   │    2.51563   -0.951554
999   │   0.418375  -0.0418718
1000  │   0.417385    0.1570881000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │     2.34626
2    │     1.30232
3    │    -1.66677
4    │   -0.337514
5    │   -0.490134
6    │    0.942442
7    │    0.966064
8    │    0.955295
9    │    0.181049
⋮                ⋮
992  │    -1.84415
993  │    0.390181
994  │   -0.394828
995  │   -0.154207
996  │    -1.98264
997  │   -0.973309
998  │    0.327588
999  │    0.654471
1000 │ -0.003609262x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.100584  0.560962
1           │ 0.274839  0.993634

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0128083   0.323705
1           │  0.986384   0.322245
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0471266
2  │  0.501243
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.730418  0.648282
2     │ 0.163906  0.369796
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.613044  0.875634
2     │ 0.745529  0.035615

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.445367  0.966978
2     │ 0.512318  0.684626
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0402123   0.803962
2     │  0.407567   0.599446

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.264142  0.825234
2     │ 0.969851  0.322132

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.420673  0.434335
2     │ 0.507629   0.34501

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.891911  0.237616
2     │  0.21316  0.639532
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.858372  0.104655
2     │ 0.734814  0.946111

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.458357  0.423852
2     │ 0.401318  0.406117

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.131973  0.999082
2     │ 0.418509  0.820195
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.079891  0.748132

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.808187  0.00348135
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.775075
2     │  0.12121

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.028188
2     │ 0.117749
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.727544  0.795541
2     │ 0.538475  0.595776
1000×1000 Named sparse matrix with 101 Float64 nonzero entries:
	[6703675861229591273 ,  8699333159457747740]  =  0.5663017315425032
	[12325465539452661075, 14343632987770563929]  =  0.8584677729993393
	[15537134230127387587, 17822619313291261357]  =  0.3695899611136655
	[17678211741433686062, 17676219393380616284]  =  0.9792519444520429
	[15465980046630820984,  4394159825732135742]  =  0.7959979988395398
	[2792481481398066916 , 18168544338330653462]  =  0.9147426018329217
	[15838569937311488483,  2791304443232646030]  =  0.034208784119533986
	[10066988524776738469,  2791304443232646030]  =  0.13942186965675996
	                                              ⋮
	[2592170576103515364 , 16946861163327142185]  =  0.5241143008819782
	[9872310664988650577 , 17173839162019621584]  =  0.7552861282002024
	[1325176273747465022 ,  2344064818992981444]  =  0.05955912686299758
	[16243515418520287792,  4285843451033309381]  =  0.9578126065276331
	[6101516501032416524 , 17401827539426951865]  =  0.10930161636072788
	[970153514192176690  ,  6332455606016291123]  =  0.474791495480551
	[10685333727101695973,  8090338657268802519]  =  0.4988600886059267
	[212886737595870541  , 16069635275006911712]  =  0.5545874583584494
	[17434638896193218915,  7519919299137062942]  =  0.5618886117701594Timing named index: 0.001192674, array index: 0.000837939, named key: 0.131188407
Timing sum large sparse array: 0.010159452, named: 0.026153969
done!
INFO: NamedArrays tests passed

>>> End of log
