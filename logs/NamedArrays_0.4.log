>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (815.19921875 MB free)
Uptime: 13629.0 sec
Load Avg:  1.0849609375  1.021484375  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     651204 s       2180 s      55762 s     510871 s         29 s
#2  3500 MHz     436727 s       4698 s      48762 s     833455 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.1
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.9099444697366743	.5158651586635312	.23452885856308048	.5073521111173134
two	.05536486229594639	.19868348185423534	.8187590908333933	.6164059803316115
a	33
b	64
c	86
d	51
e	4
f	24
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0892504   0.485224   0.245267
b           │  0.150158    0.76936   0.951635 0.08925037494923704 0.08925037494923704
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0892504   0.485224   0.245267
b     │  0.150158    0.76936   0.951635
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0892504   0.485224   0.245267
b           │  0.150158    0.76936   0.951635
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0892504   0.485224   0.245267
b     │  0.150158    0.76936   0.951635
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.752955   0.229167  0.0490972   0.994999
er              │  0.969342   0.924836   0.708044   0.503263
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139977039987048
0-element Named Array{Any,1}

[0.5264912478702475 0.10544357150457273 0.8442412684208351 0.6751198071101889
 0.09361251071626153 0.1102620230313125 0.457488980723433 0.29884727896146224]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.526491   0.105444   0.844241    0.67512
two   │ 0.0936125   0.110262   0.457489   0.2988472x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.526491   0.105444   0.844241    0.67512
two   │ 0.0936125   0.110262   0.457489   0.2988472x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.433512    -0.388856  …     -1.56809     0.672464
2     │     2.28625     0.683804  …     0.867128      -1.18861000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.491117   0.775849
2     │  -0.90355  -0.703871
3     │  -1.01017    1.73798
4     │  -1.08077   -1.21257
5     │   0.33848   -1.35647
6     │   1.17785   -1.32384
7     │ -0.650496  -0.164185
8     │  0.192315   0.319437
9     │ -0.710229  -0.382231
⋮               ⋮          ⋮
992   │  0.160958    1.07785
993   │  0.511654   0.900697
994   │  0.729122   -1.03446
995   │   1.33259   -1.17281
996   │   1.06375    2.04507
997   │ -0.607631   0.358558
998   │  -1.42542   -1.82226
999   │ -0.521964   0.512903
1000  │ -0.729411  -0.3354441000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.265753
2    │  -0.800947
3    │   0.398669
4    │   0.447077
5    │  -0.406824
6    │  -0.216362
7    │ -0.0344337
8    │    -1.2625
9    │    1.84476
⋮               ⋮
992  │   0.661586
993  │  -0.340212
994  │   0.501118
995  │    1.55939
996  │   -1.12348
997  │  -0.910108
998  │    1.12337
999  │  -0.432684
1000 │    0.077612x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.782221  0.160266
1           │ 0.192933  0.594915

[:, :, indexing=1] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │  0.0756194     0.37149
1           │ 0.00897417    0.507352
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.221792
2  │ 0.147127
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0852179   0.634062
2     │  0.602813   0.174412
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.973076  0.677355
2     │ 0.334644  0.377658

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.891368  0.298841
2     │ 0.196755  0.286014
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.390107  0.520326
2     │ 0.482535  0.761947

[:, :, C=2, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00831382    0.873568
2     │   0.760503   0.0732737

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.88016  0.637733
2     │  0.39827  0.940958

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.655317  0.714232
2     │ 0.620138  0.731758
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.926072  0.890576
2     │ 0.810203  0.414251

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.338364  0.512652
2     │ 0.987869   0.78414

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.856564  0.671233
2     │ 0.270418  0.504231
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.145314  0.884682

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.63498  0.844321
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.970385
2     │ 0.907244

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.56848
2     │ 0.423882
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.957741  0.900019
2     │ 0.895267  0.249069
1000×1000 Named sparse matrix with 129 Float64 nonzero entries:
	[17436498189161857304,  4400785119912308702]  =  0.6045626380712319
	[16633641293030664246, 12419957900638875901]  =  0.5465380795398875
	[4315763856331682254 ,  1703847331300677320]  =  0.21132503032138672
	[17718833055079784125, 14343632987770563929]  =  0.7857566430986325
	[17467549359930456931, 16462243977607957471]  =  0.902969209120861
	[8568476733645628391 ,  5927176887743683346]  =  0.3204743715635141
	[11660797228701312840,  9283096199793891681]  =  0.12832102754431873
	[11104426471044518599,  9283096199793891681]  =  0.6793272343003058
	                                              ⋮
	[6681257941163664566 ,  5597731276780160114]  =  0.9353611053343367
	[8827948915134371496 ,  8090338657268802519]  =  0.5980178691972187
	[6009757290359055522 , 11711005111088208244]  =  0.37600246601962084
	[14206734367838767366,  6738482027934271349]  =  0.03618227223628434
	[16083059188908835467, 10663619072362037589]  =  0.7985216269291233
	[140805053905483200  ,  4047135350800189603]  =  0.5474915871592014
	[15673988649286256572, 16840404209865735426]  =  0.45564780880044964
	[6673174246040850652 ,  7957587899775749890]  =  0.668119322749541
	[10469764766191980213, 13690505415342562739]  =  0.8030657010624203Timing named index: 0.000999506, array index: 0.000532827, named key: 0.108280991
Timing sum large sparse array: 0.006719155, named: 0.018812184
done!
INFO: NamedArrays tests passed

>>> End of log
