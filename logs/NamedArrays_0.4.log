>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (861.7734375 MB free)
Uptime: 15558.0 sec
Load Avg:  0.96337890625  0.99560546875  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     730207 s       3243 s      61503 s     607291 s         34 s
#2  3500 MHz     497194 s       4863 s      55265 s     951601 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5191902184773742	.12752751592727507	.24445157279450958	.1115293845588623
two	.8765716600904558	.5227679453934369	.7663734288301758	.2500805572564002
a	66
b	82
c	45
d	84
e	31
f	51
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0275082   0.456735   0.631837
b           │  0.866566   0.946636   0.146837 0.027508209593028576 0.027508209593028576
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0275082   0.456735   0.631837
b     │  0.866566   0.946636   0.146837
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0275082   0.456735   0.631837
b           │  0.866566   0.946636   0.146837
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0275082   0.456735   0.631837
b     │  0.866566   0.946636   0.146837
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.730403    0.503535    0.237912    0.115312
er              │   0.782072     0.23349  0.00115829    0.755318
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139885768230224
0-element Named Array{Any,1}

[0.3711201437805671 0.10629960459912291 0.024458752682102958 0.9709469784809801
 0.6751674644830112 0.9489070234842554 0.8218094901464048 0.14622310281648354]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.37112     0.1063  0.0244588   0.970947
two   │  0.675167   0.948907   0.821809   0.1462232x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.37112     0.1063  0.0244588   0.970947
two   │  0.675167   0.948907   0.821809   0.1462232x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │  -0.0841528     0.844069  …     0.227669     -1.23074
2     │    -1.21314     0.987811  …   -0.0252536     -1.607411000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   1.61949   0.163788
2     │ -0.342282   -1.05088
3     │  -1.21387  -0.410159
4     │ -0.407323    1.59789
5     │ -0.952916   -0.99798
6     │  -1.20169    0.30442
7     │  0.385051  -0.839911
8     │  -1.39859   0.638225
9     │ -0.657098  -0.149121
⋮               ⋮          ⋮
992   │ -0.984753   0.486059
993   │ -0.183616     1.3773
994   │  -2.36681  0.0853187
995   │  0.747963    1.65303
996   │ -0.699011   0.659429
997   │  0.370792  -0.390146
998   │   0.74496   0.585306
999   │ -0.111127   0.775332
1000  │ -0.947568   0.9633881000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │ -0.0728728
2    │  -0.135772
3    │    1.59166
4    │  -0.456063
5    │  -0.419335
6    │  -0.461764
7    │  -0.636122
8    │    -1.0658
9    │   -1.04071
⋮               ⋮
992  │   0.475958
993  │  -0.163786
994  │   0.885185
995  │   0.290239
996  │   0.443303
997  │  -0.775689
998  │   -1.52352
999  │   0.553254
1000 │   0.9480762x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.703738  0.103865
1           │ 0.484821  0.513231

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.846612  0.102701
1           │ 0.719785  0.479711
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.311304
2  │ 0.189298
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.524102   0.234632
2     │  0.638715  0.0792145
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.53002  0.424619
2     │ 0.793679  0.401125

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.34161   0.805308
2     │  0.840216  0.0943386
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.493351  0.990244
2     │ 0.673249  0.917169

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.544041   0.052891
2     │ 0.0974236   0.504486

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0650973    0.61886
2     │  0.508356   0.949701

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.916644  0.351819
2     │ 0.967149  0.128461
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.15267  0.529538
2     │ 0.667292  0.262442

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.360484   0.706246
2     │  0.128015  0.0709496

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.799723  0.124551
2     │ 0.610521  0.284458
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.807714  0.217772

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.252012  0.591547
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.780549
2     │  0.29251

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.624389
2     │ 0.865159
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.180507   0.711318
2     │ 0.0119692   0.446249
1000×1000 Named sparse matrix with 100 Float64 nonzero entries:
	[919672847296486462  ,   113574861176001527]  =  0.5224401464642494
	[14206734367838767366,  6046649976662626325]  =  0.8907736477137802
	[1473175892488538621 , 11080872162023102847]  =  0.3856587567084899
	[12543438490586731184,  4786699431706339713]  =  0.8474862630138571
	[12444970302768542108,  5062864901616737721]  =  0.8794699165527209
	[12040599068173267596, 17211410618634043162]  =  0.32105438771776873
	[3684962664704690986 ,  8097707444526576530]  =  0.9689895341962764
	[15673988649286256572,   906960604709401733]  =  0.3246284779394746
	                                              ⋮
	[8689110468086252001 , 17173839162019621584]  =  0.04083658363344966
	[6806539949965918083 , 16221828541365357577]  =  0.8826531039534857
	[9991688889456918816 , 14340416566338039723]  =  0.14807447998369483
	[17166029506115742196,  5567682937376679626]  =  0.7447735758182008
	[14770838543801714634, 18148906667482527649]  =  0.5945612498218786
	[11375148369984169619, 11993454575275700781]  =  0.520203237992082
	[17498567691103755585, 17737936919457265947]  =  0.35499796741982137
	[1348625733340586    ,  8779884342238752210]  =  0.27173254509679645
	[13617136782637692591,  6565262192402102057]  =  0.7122611594931973Timing named index: 0.000949759, array index: 0.000687422, named key: 0.122490729
Timing sum large sparse array: 0.011001684, named: 0.022424958
done!
INFO: NamedArrays tests passed

>>> End of log
