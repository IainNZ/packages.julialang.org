>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (783.734375 MB free)
Uptime: 14294.0 sec
Load Avg:  1.01953125  0.99853515625  0.9833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     696167 s       6769 s      56074 s     536452 s         28 s
#2  3500 MHz     456719 s         43 s      46260 s     883426 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6647395631543094	.10975633664696405	.8717274417536462	.024615766440010844
two	.7309127367021544	.6094651762296242	.884698918150812	.1031575199672532
a	70
b	15
c	24
d	6
e	23
f	2
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │    0.64872    0.465874  0.00776168
b           │   0.559658    0.604732   0.0996693 0.6487195507533101 0.6487195507533101
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │    0.64872    0.465874  0.00776168
b     │   0.559658    0.604732   0.0996693
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │    0.64872    0.465874  0.00776168
b           │   0.559658    0.604732   0.0996693
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │    0.64872    0.465874  0.00776168
b     │   0.559658    0.604732   0.0996693
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.654653  0.942492  0.973504  0.912438
er              │ 0.150223  0.725674  0.630271  0.967128
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140584890126000
0-element Named Array{Any,1}

[0.5498091813705952 0.8318602296433137 0.6809351329402038 0.4008625492746116
 0.06902140811653057 0.339004378850871 0.6750571408437476 0.3370637271802204]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.549809    0.83186   0.680935   0.400863
two   │ 0.0690214   0.339004   0.675057   0.3370642x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.549809    0.83186   0.680935   0.400863
two   │ 0.0690214   0.339004   0.675057   0.3370642x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │  -0.0429566      2.15188  …      1.36236       1.1478
2     │    -1.02427     -1.82409  …    -0.835926       1.75781000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.935251    0.240177
2     │   -1.35313  -0.0148513
3     │   -0.32423   0.0920052
4     │  -0.118538   -0.671466
5     │   0.326146   -0.048099
6     │   -2.85156     -1.5447
7     │    2.21547    0.198919
8     │  -0.618729    0.302955
9     │  -0.375059    0.173284
⋮                ⋮           ⋮
992   │   -1.28839    0.814784
993   │  -0.161717   -0.134092
994   │  -0.404617   -0.492874
995   │   0.339594    -1.50086
996   │   0.817361    -1.03517
997   │    -0.8008   -0.429818
998   │  -0.549524     1.24824
999   │    1.34306     1.61013
1000  │   -1.17281   -0.3572281000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.987279
2    │   -1.89906
3    │  -0.930878
4    │  -0.838298
5    │   0.349048
6    │   -0.59601
7    │  -0.692972
8    │ -0.0945914
9    │  -0.325821
⋮               ⋮
992  │   -1.02957
993  │     1.0528
994  │    1.46269
995  │  -0.408723
996  │   0.751468
997  │   0.368509
998  │  -0.367425
999  │    0.18646
1000 │  -0.4749022x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0752432   0.608694
1           │  0.488768   0.805168

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.782985  0.536976
1           │ 0.197376  0.876071
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.528285
2  │ 0.369922
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0159741   0.244644
2     │  0.564823   0.207692
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.923586  0.689161
2     │ 0.483379  0.334809

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.856325  0.677884
2     │ 0.261484  0.094734
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.385654   0.720793
2     │  0.494443  0.0673284

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.885261  0.646622
2     │ 0.668257  0.789969

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.145673  0.161557
2     │ 0.951463  0.899608

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.197564  0.176938
2     │ 0.811897  0.800048
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.597112  0.0541189
2     │ 0.0954308   0.573248

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.776121  0.601954
2     │  0.46554  0.967404

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.388523  0.748411
2     │ 0.839711  0.714063
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.965707  0.496412

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.142049  0.158619
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0737791
2     │  0.779248

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.380299
2     │ 0.696459
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.705683  0.0280002
2     │    0.5139   0.745266
1000×1000 Named sparse matrix with 93 Float64 nonzero entries:
	[6242003743164303227 ,  9690422262975321697]  =  0.05967759364722558
	[5607123224040969390 , 12809965746239821631]  =  0.33404483769556026
	[975384116789271147  ,  9283096199793891681]  =  0.8484440946288037
	[9815398096560962926 ,  8069307267129313135]  =  0.8332962152384482
	[4805073549399112256 ,  8629498292780771804]  =  0.7337069799670315
	[16410581380162038602,  4394159825732135742]  =  0.5982058291803192
	[9307608947950104313 ,  8030317335019090683]  =  0.25563222091041204
	[2792481481398066916 , 15589056775630200950]  =  0.5916633333908163
	                                              ⋮
	[13872873498766619962,  2117445326293199079]  =  0.9684234799847329
	[17498567691103755585, 12169815624147734794]  =  0.09043998440400491
	[3043368577052145501 , 10024080200852233627]  =  0.9252207320102972
	[16428336034292508128,  1861743268047760089]  =  0.39977744648387037
	[7841950699682704949 , 11527542315164007414]  =  0.13713013027965504
	[13413762311091243877,  4047135350800189603]  =  0.8732829241423341
	[2644894592338031174 ,  3279378535085980212]  =  0.5261345504865986
	[11565746237708632912,  6565262192402102057]  =  0.09091952740406883
	[14956803718882296446,  9133170895916704973]  =  0.963037554244049Timing named index: 0.001453503, array index: 0.000723394, named key: 0.142126743
Timing sum large sparse array: 0.011893625, named: 0.033536892
done!
INFO: NamedArrays tests passed

>>> End of log
