>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (848.0625 MB free)
Uptime: 14693.0 sec
Load Avg:  0.95263671875  0.99267578125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     696632 s        113 s      59737 s     567426 s         26 s
#2  3500 MHz     434330 s       6959 s      51940 s     927739 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.193249365533106	.5023421673194035	.7317446287788361	.9924870766131795
two	.9418646703051137	.7621522320499421	.21288104972027666	.9035699214844115
a	11
b	18
c	92
d	73
e	6
f	74
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.590685  0.861688  0.968499
b           │ 0.465915   0.86616  0.464047 0.5906848518650052 0.5906848518650052
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.590685  0.861688  0.968499
b     │ 0.465915   0.86616  0.464047
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.590685  0.861688  0.968499
b           │ 0.465915   0.86616  0.464047
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.590685  0.861688  0.968499
b     │ 0.465915   0.86616  0.464047
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.27893  0.252781  0.606642  0.158969
er              │ 0.546906  0.220603  0.586466  0.335859
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140438907701424
0-element Named Array{Any,1}

[0.939292579302166 0.5258148752715222 0.4093780453378346 0.9883708243308094
 0.7526029314518814 0.8601956309962999 0.9025724328186151 0.529861825482187]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.939293  0.525815  0.409378  0.988371
two   │ 0.752603  0.860196  0.902572  0.5298622x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.939293  0.525815  0.409378  0.988371
two   │ 0.752603  0.860196  0.902572  0.5298622x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.186891      0.426136  …     0.0189373       1.22259
2     │    -0.105682      0.296293  …     -0.870777      0.7891281000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0723934   -0.487505
2     │  -0.662236    0.379255
3     │    1.20235    0.456426
4     │  -0.502219    -3.07453
5     │  -0.916824    -1.27165
6     │   0.642257     1.78866
7     │    1.43714    -1.20247
8     │    2.21921     1.14241
9     │   -1.06268  -0.0895836
⋮                ⋮           ⋮
992   │   0.630569   -0.273167
993   │   -1.04251   -0.199128
994   │   0.522735    -2.21722
995   │     1.6895   -0.465392
996   │   -2.02052   -0.128126
997   │   0.181439    0.468935
998   │   -1.99265     1.73781
999   │   0.559724   -0.641899
1000  │  -0.810836     1.523511000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.122998
2    │   2.13709
3    │   1.57513
4    │  0.155609
5    │ -0.239905
6    │ 0.0944071
7    │  -1.62436
8    │ -0.377887
9    │   0.13687
⋮              ⋮
992  │  -1.84363
993  │ 0.0587474
994  │  0.707013
995  │  0.409128
996  │ -0.220986
997  │  0.770081
998  │ 0.0677699
999  │  0.522934
1000 │  0.1233382x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.762048  0.453449
1           │ 0.991072    0.7028

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │   0.4711  0.326987
1           │ 0.603686  0.270016
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0557746
2  │  0.179856
2x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.579784    0.336409
2     │   0.430349  0.00640829
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.913653   0.645907
2     │  0.902431  0.0709853

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0963673   0.163083
2     │   0.48958   0.562018
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.312306  0.0336653
2     │  0.935912   0.568659

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.521494  0.452833
2     │ 0.477027  0.709531

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.227494  0.885191
2     │ 0.771564  0.783815

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.895357   0.36115
2     │ 0.618453  0.633299
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.316847   0.949975
2     │  0.334598  0.0639683

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.185496  0.496465
2     │ 0.785489   0.63213

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.526115  0.535245
2     │ 0.190728  0.442847
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.648702  0.203814

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.413278  0.172562
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.238141
2     │ 0.362065

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.218349
2     │  0.90442
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.339812  0.926529
2     │ 0.389013  0.674137
1000×1000 Named sparse matrix with 103 Float64 nonzero entries:
	[8032225585955793928 , 14304565767364922256]  =  0.2186198531402188
	[1389137670392774052 ,  5004131969199419793]  =  0.2823840746046393
	[14169799449801373117, 17095493447719212504]  =  0.6566713043502479
	[12320581818220641024,  5927176887743683346]  =  0.32280164558112356
	[10361974346531339474,  4247719799217886270]  =  0.752341003997667
	[4913249781191789579 , 17822619313291261357]  =  0.0585611400175281
	[875267146556840949  , 10601912832305821454]  =  0.74758101354002
	[16203939900270689774,  7425701996526302553]  =  0.567074613269732
	                                              ⋮
	[15589056775630200950, 16221828541365357577]  =  0.10519251008879582
	[10361072080411987344, 17853331136360781895]  =  0.8366951417910686
	[2324590769683141360 , 11382910810432795234]  =  0.06628032967421915
	[1628675476083889103 ,  6468689935112619700]  =  0.5924638736639996
	[1177457170591155921 , 18148906667482527649]  =  0.9428727610214966
	[7608520278977511969 ,  1523061068178304284]  =  0.3229793900957165
	[8507737825562801990 , 11470862121108514714]  =  0.43823645877731776
	[17166029506115742196,  7957587899775749890]  =  0.49874979720135326
	[18180706245899323906,  7519919299137062942]  =  0.29240750530647386Timing named index: 0.000866145, array index: 0.000664421, named key: 0.122255085
Timing sum large sparse array: 0.006409592, named: 0.013254868
done!
INFO: NamedArrays tests passed

>>> End of log
