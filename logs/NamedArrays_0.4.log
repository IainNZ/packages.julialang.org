>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (852.921875 MB free)
Uptime: 14279.0 sec
Load Avg:  0.9580078125  0.9521484375  1.00634765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     637214 s       3066 s      56770 s     600796 s         20 s
#2  3500 MHz     500180 s       3496 s      49075 s     829843 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.12932232895891715	.5134328353914814	.31780067217588837	.31722808632497923
two	.2129437904550131	.8907566290983449	.05304009618238159	.5124307970937778
a	74
b	4
c	45
d	30
e	92
f	58
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.853056  0.00637831    0.486715
b           │   0.127112    0.419494    0.763334 0.853056023657595 0.853056023657595
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.853056  0.00637831    0.486715
b     │   0.127112    0.419494    0.763334
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.853056  0.00637831    0.486715
b           │   0.127112    0.419494    0.763334
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.853056  0.00637831    0.486715
b     │   0.127112    0.419494    0.763334
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.603262  0.737583  0.893779  0.648351
er              │  0.75336  0.908427  0.278339  0.828822
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139955714828064
0-element Named Array{Any,1}

[0.4775712466942599 0.8952974057059662 0.6276781807405005 0.6458189614382515
 0.39758129282231347 0.049181342609368794 0.443052996000165 0.3247531269051849]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.477571   0.895297   0.627678   0.645819
two   │  0.397581  0.0491813   0.443053   0.3247532x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.477571   0.895297   0.627678   0.645819
two   │  0.397581  0.0491813   0.443053   0.3247532x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.201077      0.38798  …    -0.838058     0.541712
2     │    -1.04021      -1.3732  …      1.25834     -2.858081000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.914642   -0.354001
2     │   0.350847   -0.580326
3     │  0.0257509   -0.298764
4     │  -0.927105    -1.81485
5     │   -0.62023  -0.0802908
6     │ -0.0934428   -0.483452
7     │   0.275389    0.346027
8     │    1.27982   -0.575366
9     │   0.618471     1.65163
⋮                ⋮           ⋮
992   │  -0.347203    -0.88749
993   │    1.38905     1.41021
994   │  -0.609791   -0.236886
995   │   0.118602    0.712714
996   │  -0.486488    0.981658
997   │  -0.945241    -1.68154
998   │  -0.682672   -0.970384
999   │   0.107632   -0.986468
1000  │   0.334683   -0.1431291000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.56361
2    │ -0.644024
3    │  0.881595
4    │   -1.4433
5    │ -0.125489
6    │ -0.573211
7    │ -0.934176
8    │  -1.37481
9    │  0.820622
⋮              ⋮
992  │ -0.137934
993  │  0.503901
994  │ -0.628521
995  │ -0.112107
996  │ -0.178585
997  │   2.31245
998  │  -1.34434
999  │ -0.211554
1000 │  0.7273492x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.919078  0.721692
1           │ 0.697628  0.957771

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.265519    0.5591
1           │ 0.277536  0.980791
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.71548
2  │ 0.676676
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.249479  0.497077
2     │ 0.811262  0.607365
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0347055   0.658737
2     │  0.986509   0.415916

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.490631  0.172211
2     │ 0.347185  0.610706
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.567028   0.66512
2     │ 0.654646  0.243388

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.800821  0.285289
2     │ 0.439758  0.265164

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.721722  0.853853
2     │ 0.457569   0.46303

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.730565  0.435932
2     │ 0.251265    0.4625
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.491499  0.133469
2     │ 0.364752  0.847086

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.999456  0.561215
2     │ 0.415132  0.499945

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.71391   0.031163
2     │  0.864721  0.0288842
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.152421  0.0874728

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.293668  0.558521
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.398329
2     │ 0.183189

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.935864
2     │ 0.425314
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.041067  0.211391
2     │ 0.135277  0.924633
1000×1000 Named sparse matrix with 92 Float64 nonzero entries:
	[10603672941428866019, 12419957900638875901]  =  0.48114919951295687
	[14951403058635497631, 14343632987770563929]  =  0.6342813049711795
	[1925573130087135049 ,  8058121953372963805]  =  0.11431242679311127
	[12038840764336457118,  6046649976662626325]  =  0.29755666055508834
	[16428336034292508128, 18168544338330653462]  =  0.7947350150640315
	[3945256368785098242 , 15774366784000975931]  =  0.3271120926896254
	[11033897610157224162,  9187579804086460617]  =  0.23504713649015563
	[5887916164234050841 ,  2807702713668942919]  =  0.40977610896784444
	                                              ⋮
	[4106283031091570395 , 17135076390733320242]  =  0.1525172948653335
	[4127473732802427797 , 16243515418520287792]  =  0.8304164463911794
	[397394769374478572  , 11604119926906451644]  =  0.9211304860130181
	[1692321568384860970 ,     1348625733340586]  =  0.9797100884729879
	[1646478019369420967 ,  6332455606016291123]  =  0.25127272079041085
	[10663619072362037589,  9815398096560962926]  =  0.5784418098001931
	[6565262192402102057 , 10663619072362037589]  =  0.13322261075861141
	[8425210698882380606 , 12624682912995533025]  =  0.4893360748441036
	[12876006501778729182, 12020782256748308824]  =  0.4910916254828941Timing named index: 0.000812671, array index: 0.000143515, named key: 0.131847822
Timing sum large sparse array: 0.006732142, named: 0.013062488
done!
INFO: NamedArrays tests passed

>>> End of log
