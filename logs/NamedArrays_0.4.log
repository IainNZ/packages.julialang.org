>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (848.71875 MB free)
Uptime: 14477.0 sec
Load Avg:  0.9189453125  0.93310546875  0.984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     662046 s       6733 s      58095 s     581541 s         16 s
#2  3499 MHz     486572 s         96 s      50477 s     864082 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.9386265358659645	.906415108358525	.03269966187183049	.04140696975276281
two	.28492273872556684	.25409219479608214	.3373386623350758	.7794883513198538
a	50
b	9
c	44
d	7
e	57
f	36
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.670887  0.561112   0.43604
b           │ 0.531838  0.776075  0.796835 0.670886817488846 0.670886817488846
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.670887  0.561112   0.43604
b     │ 0.531838  0.776075  0.796835
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.670887  0.561112   0.43604
b           │ 0.531838  0.776075  0.796835
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.670887  0.561112   0.43604
b     │ 0.531838  0.776075  0.796835
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.661518   0.338803  0.0752809   0.956862
er              │  0.126052    0.70747   0.884787   0.426522
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140581385015696
0-element Named Array{Any,1}

[0.37229639912341983 0.8000341440703835 0.9612093364281769 0.20047687750212795
 0.47379386614888475 0.12253672207505861 0.6350024491077813 0.66124645875114]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.372296  0.800034  0.961209  0.200477
two   │ 0.473794  0.122537  0.635002  0.6612462x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.372296  0.800034  0.961209  0.200477
two   │ 0.473794  0.122537  0.635002  0.6612462x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.249966      -1.23347  …    -0.0902989      0.295982
2     │     0.228615      0.181292  …      -1.19186       1.268241000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   1.00426  -0.248177
2     │   0.68502   -1.54807
3     │  0.156129   0.256229
4     │  -1.05043  -0.326283
5     │   -1.9544   0.309059
6     │   1.46774   0.848079
7     │ -0.946834   0.169071
8     │  -2.89964    1.96854
9     │ -0.119584   0.337359
⋮               ⋮          ⋮
992   │ -0.402061    1.15472
993   │  0.127246   0.677542
994   │  0.631478    0.63202
995   │ 0.0530922    1.50595
996   │ -0.851968    -2.5692
997   │ -0.786853    0.48918
998   │  0.670872   0.332505
999   │ -0.616373   0.570043
1000  │  0.166815    1.582181000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.03848
2    │    0.19123
3    │    2.25142
4    │    0.93777
5    │   -0.65901
6    │  -0.123866
7    │  -0.779337
8    │   0.930566
9    │    1.02881
⋮               ⋮
992  │    0.99901
993  │  -0.267742
994  │   -1.36122
995  │  -0.606762
996  │   -1.57081
997  │ -0.0644221
998  │ -0.0652571
999  │  -0.282113
1000 │  -0.2388472x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.488362  0.184804
1           │ 0.734557   0.41788

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.867992  0.509557
1           │ 0.825326  0.467949
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.508046
2  │ 0.244478
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │    0.8557    0.27713
2     │  0.849175  0.0803242
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.836369  0.325427
2     │ 0.918121  0.953147

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.948147  0.900449
2     │ 0.393583  0.611681
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.112948   0.250132
2     │ 0.0920139   0.349215

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.149661  0.344473
2     │ 0.949434  0.669998

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.901568  0.0297295
2     │  0.726152   0.907169

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.152564  0.415775
2     │ 0.108427  0.215665
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.306033   0.916647
2     │  0.974217  0.0457708

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.311888  0.251645
2     │ 0.340061  0.438961

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.637798  0.962861
2     │ 0.863165  0.224849
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.650094  0.832763

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.339462  0.0683378
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.524817
2     │ 0.984078

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.213401
2     │ 0.0594665
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │    0.6475   0.648202
2     │ 0.0101189   0.242351
1000×1000 Named sparse matrix with 92 Float64 nonzero entries:
	[7713060533429820211 , 11080872162023102847]  =  0.47582063214511927
	[1566360107212290167 ,  2849690884155085581]  =  0.016220072657505247
	[9570402177660099711 ,  5062864901616737721]  =  0.011175236589992643
	[12876006501778729182,  8629498292780771804]  =  0.5684186673155867
	[172966917720799643  , 18168544338330653462]  =  0.6877204607136851
	[14138153537439249859,  3039451196773527828]  =  0.025455514357776376
	[3501065925215364276 ,  8720304024814141479]  =  0.5062272131215269
	[4486621131225030707 , 17609421066205025733]  =  0.4895986187351544
	                                              ⋮
	[8090338657268802519 , 11732026533134275955]  =  0.5285808253815509
	[5777672114274436489 , 15717097331822026300]  =  0.21957370514878427
	[12815275876572971981,  5983786778458205040]  =  0.8652612979959706
	[6332455606016291123 ,  5983786778458205040]  =  0.5780036912077611
	[1523061068178304284 ,  4788923618671962983]  =  0.937955833740177
	[3489406529678529571 ,  1523061068178304284]  =  0.11874508852926868
	[10355935425140842503, 12624682912995533025]  =  0.004526221467063829
	[16149616971335246819, 16031689834122954645]  =  0.8307798084542795
	[12720131311000364147, 16202651256804923129]  =  0.9682046573984959Timing named index: 0.000977707, array index: 0.000779545, named key: 0.127104346
Timing sum large sparse array: 0.011323136, named: 0.025222815
done!
INFO: NamedArrays tests passed

>>> End of log
