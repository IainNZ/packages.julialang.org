>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (823.33203125 MB free)
Uptime: 13403.0 sec
Load Avg:  0.9619140625  0.94140625  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     618087 s       1806 s      55117 s     539969 s         28 s
#2  3503 MHz     455397 s       4928 s      48569 s     782869 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.013375592878939857	.9624944831763629	.48564533110218755	.5517232048894698
two	.6764006788896897	.7084218800227122	.7568009366116204	.059491089999574864
a	6
b	40
c	62
d	47
e	86
f	65
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.888375   0.723564   0.969786
b           │ 0.0583968   0.289935   0.166494 0.8883751456691367 0.8883751456691367
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.888375   0.723564   0.969786
b     │ 0.0583968   0.289935   0.166494
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.888375   0.723564   0.969786
b           │ 0.0583968   0.289935   0.166494
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.888375   0.723564   0.969786
b     │ 0.0583968   0.289935   0.166494
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.759726  0.702458  0.856415   0.23413
er              │ 0.624596  0.295681  0.604654  0.583748
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140561606617040
0-element Named Array{Any,1}

[0.505338185445469 0.21211231623281024 0.45869624592138414 0.08796214227518462
 0.8350574492295406 0.8549360146661311 0.07388246949658805 0.9778637310515326]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.505338   0.212112   0.458696  0.0879621
two   │  0.835057   0.854936  0.0738825   0.9778642x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.505338   0.212112   0.458696  0.0879621
two   │  0.835057   0.854936  0.0738825   0.9778642x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    0.0130139      -2.64042  …     0.0308325      0.604791
2     │    -0.326235      0.500085  …     -0.940389       1.148321000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -2.56626   -0.626628
2     │  -0.421385     1.37555
3     │  0.0147462   -0.208718
4     │  -0.656946    0.398227
5     │    1.74166  -0.0907695
6     │   -2.05358     1.65135
7     │   0.271709   -0.232728
8     │     2.3678     2.09514
9     │   -1.75893    -1.10671
⋮                ⋮           ⋮
992   │   0.582034    -1.17445
993   │   0.653717     1.20121
994   │  0.0889616   -0.863281
995   │    1.23115   -0.795213
996   │   0.569104     1.90252
997   │  -0.859684    0.723509
998   │   0.337998    -1.66092
999   │   0.263743    0.157435
1000  │   -0.44877    0.8727491000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.902836
2    │    1.94529
3    │  -0.370912
4    │  -0.539179
5    │  -0.251352
6    │    0.78276
7    │ -0.0350475
8    │  -0.378704
9    │   -0.52316
⋮               ⋮
992  │   0.757036
993  │    1.50665
994  │  -0.278039
995  │    1.16313
996  │  0.0900256
997  │  -0.890543
998  │  -0.539143
999  │   -1.13819
1000 │   -1.801692x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.508199  0.582819
1           │ 0.382139  0.487681

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.455314  0.873838
1           │ 0.600722  0.631798
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.328756
2  │ 0.433064
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.894373  0.0795512
2     │  0.944091  0.0952329
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.264673  0.977773
2     │ 0.698266  0.998559

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.764221   0.231088
2     │  0.861473  0.0223947
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.260995  0.494372
2     │ 0.497939  0.402876

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.696632   0.360451
2     │  0.913773  0.0544666

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.672184  0.196522
2     │ 0.831804   0.69887

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.96198  0.353477
2     │ 0.706575  0.545969
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.794194  0.125431
2     │ 0.403653  0.275607

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.128746   0.74119
2     │ 0.433011    0.7177

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.368568   0.247924
2     │ 0.0776146   0.745166
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.885054   0.92291

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.548894  0.558957
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.926141
2     │ 0.956328

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.367737
2     │ 0.843622
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.250059  0.484074
2     │ 0.451431  0.140228
1000×1000 Named sparse matrix with 88 Float64 nonzero entries:
	[113574861176001527  ,  5927176887743683346]  =  0.4382011850626488
	[11961818409580248909, 10106592262940987645]  =  0.7026242408300853
	[15042065790022137782,  7425701996526302553]  =  0.664008611201516
	[213295357340211673  ,   906960604709401733]  =  0.6324874539564593
	[14304565767364922256, 12876006501778729182]  =  0.07156445109052978
	[14475185020288943568, 13450619636401767365]  =  0.3569543460587854
	[9896174471843564741 , 18343873927949696366]  =  0.6888317728068396
	[4722070531727235685 , 18343873927949696366]  =  0.25702787481575173
	                                              ⋮
	[9222155262524552208 ,  9940286103801177457]  =  0.06417967002217906
	[6673174246040850652 ,  9940286103801177457]  =  0.4991882343648535
	[3926415979499511939 , 17498567691103755585]  =  0.6059129343484453
	[12554874066387155728,  5567682937376679626]  =  0.5079604152548469
	[11660797228701312840,     1348625733340586]  =  0.11026483693767397
	[17207488849817960156,  4788923618671962983]  =  0.09858131679968762
	[17080632333507329842, 16069635275006911712]  =  0.7374729746987942
	[846219735909059185  ,  6565262192402102057]  =  0.9056842601585722
	[2963278688299848341 , 14599810768241287016]  =  0.8307785499761302Timing named index: 0.000865307, array index: 0.000136616, named key: 0.113623963
Timing sum large sparse array: 0.00718093, named: 0.018144359
done!
INFO: NamedArrays tests passed

>>> End of log
