>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (781.3828125 MB free)
Uptime: 14506.0 sec
Load Avg:  1.0771484375  0.98779296875  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     676003 s       4315 s      54855 s     577261 s         26 s
#2  3501 MHz     473248 s       2237 s      47139 s     882266 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.418853111516285	.6422918374874016	.5432134957209525	.49343335665950483
two	.34726596720666025	.6113492271690479	.14254426433448408	.04874557863833484
a	25
b	95
c	72
d	35
e	32
f	98
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.815023   0.97798   0.13815
b           │ 0.193045  0.367508  0.875975 0.815023313883134 0.815023313883134
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.815023   0.97798   0.13815
b     │ 0.193045  0.367508  0.875975
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.815023   0.97798   0.13815
b           │ 0.193045  0.367508  0.875975
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.815023   0.97798   0.13815
b     │ 0.193045  0.367508  0.875975
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.540589  0.140775  0.399947  0.586008
er              │ 0.221127  0.720183  0.371276   0.70876
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140552794062608
0-element Named Array{Any,1}

[0.3358368238555398 0.5842176599405311 0.18518335743043313 0.38532534254956063
 0.3504468035747461 0.8386038773891191 0.38898705431920155 0.8106565878034548]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.335837  0.584218  0.185183  0.385325
two   │ 0.350447  0.838604  0.388987  0.8106572x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.335837  0.584218  0.185183  0.385325
two   │ 0.350447  0.838604  0.388987  0.8106572x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.323065    -0.216379  …     -1.49568      -1.1233
2     │    0.258659     0.233895  …      1.33635    -0.0431071000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.106118    -2.22007
2     │   0.411561     1.21799
3     │   0.584223    0.910139
4     │   0.738474    -1.03439
5     │   -1.20252    -2.17271
6     │    1.48209   0.0799378
7     │   0.306207    0.524588
8     │    1.48072    0.767408
9     │  -0.894039    -1.74917
⋮                ⋮           ⋮
992   │  -0.588998    0.187442
993   │   0.159485     1.66466
994   │  -0.757644    0.494463
995   │   0.999661    -1.08343
996   │  -0.169949   -0.788031
997   │  -0.675588  -0.0807888
998   │   0.270138    -1.19852
999   │   0.618626   -0.257485
1000  │   0.799273   -0.8312031000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │    -1.10087
2    │     1.21409
3    │     0.40083
4    │    0.136335
5    │     1.38111
6    │      1.2353
7    │ -0.00525126
8    │    -1.12515
9    │    0.746505
⋮                ⋮
992  │    -0.40473
993  │   -0.216209
994  │  0.00171887
995  │   -0.663092
996  │    0.255238
997  │     1.13878
998  │    -0.95171
999  │  -0.0241055
1000 │    -1.128512x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.655001  0.275002
1           │ 0.911084  0.967432

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │   0.2739  0.790511
1           │ 0.583422  0.959899
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.449895
2  │ 0.478095
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.234194  0.0662794
2     │  0.822376   0.554036
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.225259  0.0335495
2     │  0.753682    0.04799

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.536523   0.568968
2     │  0.858271  0.0843313
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.454694   0.27817
2     │ 0.221704  0.108974

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.370037  0.910543
2     │ 0.660821  0.739628

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.964293   0.520022
2     │ 0.0121204   0.101413

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.750339  0.529595
2     │ 0.287969  0.358079
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.856899  0.764193
2     │  0.64272  0.286787

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.197242   0.429125
2     │ 0.0715111   0.612638

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.275072  0.753105
2     │  0.15379    0.1178
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.973343  0.754706

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.603204  0.236463
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.571266
2     │ 0.0755033

[:, :, C=2] =
A ╲ B │       1
──────┼────────
1     │ 0.19971
2     │ 0.11369
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.417557   0.84594
2     │ 0.358156  0.638969
1000×1000 Named sparse matrix with 95 Float64 nonzero entries:
	[5548054372471903342 ,   144428425607543167]  =  0.0022172016121408955
	[16308480640927596097,  3929618674436644774]  =  0.6694722681966105
	[3338620543423332411 ,  1703847331300677320]  =  0.6242433535216203
	[13975069277216705747, 10361072080411987344]  =  0.9552276689533123
	[15389785613949122466,  8265524791738013937]  =  0.4562505059798756
	[12459814376862134316,  4329451781928897369]  =  0.03209515327240786
	[4782469333680129318 ,  1166092285267503990]  =  0.9468668621888603
	[13768912190038094657, 16408863325498676967]  =  0.03560221646340711
	                                              ⋮
	[4623749630185680030 , 11641483179283066996]  =  0.02833397689195194
	[10596751188013898940,  4182991028086505933]  =  0.5234581971348704
	[3674440393316115114 ,  4182991028086505933]  =  0.5312097155229116
	[12843503472939723182,  6738482027934271349]  =  0.70250020222447
	[10504931430957650557, 17718833055079784125]  =  0.9444901291966306
	[12320581818220641024,   372001016642560619]  =  0.6217523600926531
	[2050037547392292084 , 14057278280866812536]  =  0.9064738101140153
	[14839428249571644385, 14057278280866812536]  =  0.023915218890266043
	[493461921061351564  ,  1203336841330469213]  =  0.42793313182608417Timing named index: 0.000861174, array index: 0.000790462, named key: 0.128631726
Timing sum large sparse array: 0.007226968, named: 0.013762449
done!
INFO: NamedArrays tests passed

>>> End of log
