>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (805.3515625 MB free)
Uptime: 14318.0 sec
Load Avg:  1.021484375  1.00830078125  1.03759765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     630853 s       4960 s      52667 s     607830 s         28 s
#2  3499 MHz     458615 s       1489 s      45678 s     868693 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5564620692120239	.7663245660807216	.8495812267751968	.48608469523793985
two	.1574776105875284	.8823828809616856	.3534057797192034	.20883889823765034
a	67
b	89
c	15
d	25
e	97
f	87
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.843671  0.876914  0.813889
b           │ 0.262958  0.601041  0.387793 0.8436706670330067 0.8436706670330067
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.843671  0.876914  0.813889
b     │ 0.262958  0.601041  0.387793
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.843671  0.876914  0.813889
b           │ 0.262958  0.601041  0.387793
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.843671  0.876914  0.813889
b     │ 0.262958  0.601041  0.387793
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0943558   0.123131   0.237189   0.531102
er              │  0.450293   0.331944    0.64456   0.974587
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140292622304488
0-element Named Array{Any,1}

[0.5648988152523853 0.6018630670377658 0.9563012072570432 0.208334549857091
 0.8067867174110215 0.899889795854784 0.8046616066971999 0.10156189869569077]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.564899  0.601863  0.956301  0.208335
two   │ 0.806787   0.89989  0.804662  0.1015622x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.564899  0.601863  0.956301  0.208335
two   │ 0.806787   0.89989  0.804662  0.1015622x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.506514      0.452078  …     -0.325529      0.736724
2     │     0.633564     -0.278806  …      0.138685     -0.6421711000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.348823     1.31196
2     │    1.54592    0.735922
3     │  -0.151892    -0.24575
4     │ -0.0572114   -0.192725
5     │ -0.0598628   -0.534788
6     │    0.39196    0.471353
7     │    -0.4243    0.333844
8     │  -0.109227    0.451001
9     │  -0.296566   0.0768643
⋮                ⋮           ⋮
992   │    1.22864     1.39555
993   │    1.23843      0.4873
994   │    1.56042    0.530726
995   │   -1.33761     1.02626
996   │    1.95179    -1.87218
997   │   0.396882    0.307605
998   │    1.17351   -0.696199
999   │  -0.977144    -1.31454
1000  │   0.148991    0.2838921000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   2.28547
2    │   1.18284
3    │   1.49871
4    │ -0.821114
5    │ -0.650721
6    │  -2.06394
7    │   2.47412
8    │ -0.289529
9    │  -1.44829
⋮              ⋮
992  │  -1.08092
993  │   1.26645
994  │ 0.0291642
995  │  0.572363
996  │   2.04573
997  │ -0.185386
998  │  0.471685
999  │  -1.01068
1000 │ -0.8366822x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.895203   0.819791
1           │ 0.0109206   0.797015

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0262909   0.336072
1           │ 0.0500288   0.411221
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.262201
2  │ 0.694067
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.906964  0.465267
2     │ 0.206426  0.306239
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.733351  0.662241
2     │ 0.727017  0.482793

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.531022  0.435484
2     │ 0.812283  0.461104
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.493098  0.927668
2     │ 0.166291  0.793688

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.261635  0.659073
2     │ 0.102596   0.20444

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.263081  0.805135
2     │ 0.206106  0.270161

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.692093  0.240305
2     │   0.9993  0.892002
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0110576   0.386424
2     │  0.302765   0.289822

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0978547   0.999008
2     │  0.134111   0.634387

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.964905   0.321593
2     │  0.680725  0.0207935
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.388739  0.685371

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.564987  0.625787
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.442946
2     │ 0.0492072

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.862358
2     │ 0.228308
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.257751  0.989361
2     │ 0.464974  0.513932
1000×1000 Named sparse matrix with 97 Float64 nonzero entries:
	[14596020527010292202,  4400785119912308702]  =  0.06535494600351588
	[9307608947950104313 ,  4247719799217886270]  =  0.45911751052363536
	[15422846019410515149, 12295598998729798629]  =  0.9169299262713562
	[18180706245899323906,  3253468397832770835]  =  0.003583134728997406
	[17503508158389051212, 18168544338330653462]  =  0.44284107659810523
	[5376462565789896363 , 16621507366152005377]  =  0.47361856742283637
	[584033670402314773  , 16621507366152005377]  =  0.7050592103353437
	[1473175892488538621 , 15493082059768908559]  =  0.40136254770582136
	                                              ⋮
	[11010827839429159619, 11382910810432795234]  =  0.019724969884624022
	[9440739376838893158 , 11641483179283066996]  =  0.05230022624583319
	[2539844710871411659 ,  6332455606016291123]  =  0.8246541894788146
	[7842570643883840414 ,  9815398096560962926]  =  0.7519656617197519
	[10684064542878956755,  2520040687452014961]  =  0.5184964580710667
	[5452972151941397067 ,  2520040687452014961]  =  0.3774491842522709
	[3004739544949339451 , 17737936919457265947]  =  0.4013500308318445
	[6468689935112619700 , 11314283927973801071]  =  0.8779747336500514
	[11711005111088208244, 14599810768241287016]  =  0.19254970489249001Timing named index: 0.001531172, array index: 0.00062678, named key: 0.129346526
Timing sum large sparse array: 0.009211245, named: 0.019299521
done!
INFO: NamedArrays tests passed

>>> End of log
