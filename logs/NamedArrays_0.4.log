>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (812.46484375 MB free)
Uptime: 14402.0 sec
Load Avg:  1.0390625  0.9794921875  1.02099609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     669302 s       2036 s      56624 s     567300 s         16 s
#2  3500 MHz     445944 s       5202 s      48229 s     893298 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8215325016920529	.6254295922288493	.3321418287460538	.035514172608041905
two	.5798963708574805	.2980411296949512	.7505102919416917	.43235980732883283
a	11
b	96
c	88
d	2
e	7
f	79
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.741235  0.977008  0.756661
b           │ 0.888409  0.200296  0.539135 0.7412354397942855 0.7412354397942855
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.741235  0.977008  0.756661
b     │ 0.888409  0.200296  0.539135
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.741235  0.977008  0.756661
b           │ 0.888409  0.200296  0.539135
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.741235  0.977008  0.756661
b     │ 0.888409  0.200296  0.539135
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.851139    0.8431  0.949347  0.306263
er              │ 0.329996  0.894931  0.945506  0.627187
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140499718179856
0-element Named Array{Any,1}

[0.15589166767305884 0.5451577824238845 0.0014073628561483975 0.1423294662529757
 0.07672455666829059 0.19449569867412686 0.4027732716743584 0.6210985317263615]
2x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.155892    0.545158  0.00140736    0.142329
two   │  0.0767246    0.194496    0.402773    0.6210992x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.155892    0.545158  0.00140736    0.142329
two   │  0.0767246    0.194496    0.402773    0.6210992x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.641969     0.235826  …     -1.76011    -0.229433
2     │   -0.568862      0.40823  …     0.103589     -1.312551000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │ -0.0615635    -1.21526
2     │    1.74747  -0.0726024
3     │  -0.463668     1.53968
4     │  -0.312613     2.09419
5     │   -1.02205   -0.926126
6     │   -2.50811   -0.997518
7     │    1.12599   -0.689398
8     │    1.22465   -0.485995
9     │  -0.236685    0.795394
⋮                ⋮           ⋮
992   │  0.0972411    0.402201
993   │   -1.41553      1.1815
994   │   -1.25851   -0.149984
995   │   0.875226    -1.09609
996   │   0.135943  -0.0181125
997   │  -0.118991    -1.27001
998   │  -0.303361   -0.468275
999   │   0.789417    0.380225
1000  │   0.413413    0.4332011000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   1.53769
2    │ -0.978715
3    │  0.754141
4    │ -0.325973
5    │   1.44837
6    │  0.098916
7    │   1.63279
8    │ -0.435585
9    │  -1.39779
⋮              ⋮
992  │ -0.912182
993  │   -1.3111
994  │   1.57925
995  │  0.238302
996  │  0.953431
997  │  0.845248
998  │  0.200894
999  │   1.78842
1000 │  0.6677252x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.215667  0.646431
1           │ 0.302414   0.18536

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.223926   0.137892
1           │  0.758504  0.0293203
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.499719
2  │ 0.417562
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.317891   0.16187
2     │ 0.866549  0.785571
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.950044  0.574558
2     │ 0.763075  0.344331

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.310874  0.969247
2     │ 0.380145  0.830063
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.184005  0.841326
2     │ 0.192278  0.317702

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.437261  0.214887
2     │ 0.517693   0.75218

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.647145  0.494309
2     │ 0.105196  0.957235

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.711547  0.678011
2     │ 0.492568  0.351713
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0532504   0.833781
2     │  0.235478   0.436669

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.413458  0.169106
2     │ 0.793569  0.610856

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.475052  0.265288
2     │ 0.944842  0.723801
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.456369   0.15074

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.548022  0.023873
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0374715
2     │  0.713204

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.211653
2     │ 0.248031
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0680348   0.218708
2     │  0.349826   0.214342
1000×1000 Named sparse matrix with 97 Float64 nonzero entries:
	[11382910810432795234,  5312631360709731698]  =  0.2677995449492079
	[1811302532022619362 , 17095493447719212504]  =  0.8372738100301054
	[12590458817397224361,  6134978669850253296]  =  0.8623352085672844
	[6242003743164303227 ,  6046649976662626325]  =  0.18042044342814867
	[7467562274097903724 ,  8069307267129313135]  =  0.8312604434446664
	[9199495910664250546 ,   273396578563598247]  =  0.3523723495954061
	[9266536657670673180 ,  8265524791738013937]  =  0.07196141877808859
	[10369386120472232477, 15774366784000975931]  =  0.6980964625184605
	                                              ⋮
	[5723128691850249417 , 13710539999002292266]  =  0.5189316831934285
	[7484916964955888105 , 11382910810432795234]  =  0.3054988234761149
	[11488343865249833965,  7630593249633640373]  =  0.541349075944648
	[16853125453575874032,  7608520278977511969]  =  0.45131403662023906
	[10213422356137903131, 11551291857879764225]  =  0.8033954520226059
	[16655780295490676025, 17737936919457265947]  =  0.46689835367455235
	[14324755336029521502,  9223427034658990711]  =  0.7704168949965491
	[2107242561845671563 , 11314283927973801071]  =  0.05950630990824779
	[15523141765479279085, 15240003619098155971]  =  0.44359291927606326Timing named index: 0.000795645, array index: 0.000755176, named key: 0.091227728
Timing sum large sparse array: 0.006610147, named: 0.013595205
done!
INFO: NamedArrays tests passed

>>> End of log
