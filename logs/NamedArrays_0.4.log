>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (846.015625 MB free)
Uptime: 14826.0 sec
Load Avg:  0.95068359375  0.9833984375  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     715144 s       2615 s      55431 s     555135 s         22 s
#2  3500 MHz     471478 s       5178 s      45283 s     915399 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.527749538604672	.41400643392180814	.583004718023667	.7476157510044235
two	.6333216062165152	.22648685391769163	.2032840443321533	.3265545367587226
a	62
b	66
c	31
d	33
e	62
f	36
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.129976  0.176812  0.535942
b           │ 0.309368  0.805835  0.116207 0.1299761841817948 0.1299761841817948
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.129976  0.176812  0.535942
b     │ 0.309368  0.805835  0.116207
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.129976  0.176812  0.535942
b           │ 0.309368  0.805835  0.116207
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.129976  0.176812  0.535942
b     │ 0.309368  0.805835  0.116207
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.690316  0.795655  0.106121  0.187387
er              │ 0.562175  0.793362  0.507214  0.662186
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139720620701456
0-element Named Array{Any,1}

[0.5342516020403962 0.1711133181615898 0.3441654434394843 0.250071666038576
 0.6164001722808923 0.08352810080240425 0.0018036499295368547 0.4003389715037253]
2x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.534252    0.171113    0.344165    0.250072
two   │     0.6164   0.0835281  0.00180365    0.4003392x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.534252    0.171113    0.344165    0.250072
two   │     0.6164   0.0835281  0.00180365    0.4003392x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.531873    0.0382281  …     0.397272    -0.534991
2     │   -0.697878     -1.31394  …     0.400735    -0.1175621000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │   -0.188068    -0.686137
2     │   -0.814392     -1.46509
3     │    -2.06602  -0.00161925
4     │   0.0788029     0.645533
5     │    0.754738     0.305508
6     │   -0.435628    -0.841111
7     │     2.23103      0.95654
8     │     1.07499     0.107056
9     │    -1.82108    -0.528273
⋮                 ⋮            ⋮
992   │    -0.80869    -0.960603
993   │   -0.406459     -1.20112
994   │     1.19754     0.160227
995   │   -0.688995     -1.50728
996   │    0.829339     -1.38894
997   │   -0.304191    0.0818268
998   │     1.20032     0.466502
999   │     2.05781     0.500064
1000  │    -1.07977      1.936361000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.547384
2    │  0.677707
3    │ -0.346383
4    │  -1.44332
5    │  -2.18079
6    │  0.410624
7    │ -0.412975
8    │ -0.162468
9    │ -0.425214
⋮              ⋮
992  │  0.930399
993  │  0.673887
994  │   2.31568
995  │ -0.434551
996  │  -2.45008
997  │ -0.379058
998  │   0.29119
999  │ -0.430135
1000 │ 0.03629082x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.23612  0.784926
1           │ 0.655158  0.393359

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.777731  0.528571
1           │ 0.141294  0.359017
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.807276
2  │ 0.151481
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.94836  0.916578
2     │ 0.122171    0.2217
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.236735  0.879216
2     │ 0.811857  0.844108

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.971214  0.522046
2     │  0.87982  0.134108
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.980915   0.418503
2     │   0.55457  0.0154819

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.975979  0.571476
2     │ 0.238092  0.496897

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.273337  0.517406
2     │ 0.270783  0.792136

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.649016  0.482876
2     │ 0.549532  0.656811
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.775642  0.833892
2     │ 0.309981  0.714453

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.634381  0.326486
2     │ 0.347317  0.635179

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.323617   0.360942
2     │  0.545175  0.0154926
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.905653  0.950791

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.650171    0.5755
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1
──────┼───────────
1     │   0.188893
2     │ 0.00211838

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.972806
2     │ 0.232557
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.856938   0.852407
2     │ 0.0748759     0.6503
1000×1000 Named sparse matrix with 97 Float64 nonzero entries:
	[16996133433751471822,  3929618674436644774]  =  0.0937788263394772
	[5747141066858265299 ,  4400785119912308702]  =  0.0855411357694229
	[16853125453575874032, 13888991764943741743]  =  0.5571059467166499
	[15353358267758329479, 14517667374310463124]  =  0.503413252369924
	[10685333727101695973, 14517667374310463124]  =  0.4486669251771018
	[10655964431342481635,  2230070772219402886]  =  0.3073299927733828
	[4898605355838645106 , 11496001657944805140]  =  0.11638915552694185
	[3428368603158593878 ,   906960604709401733]  =  0.6108577980010079
	                                              ⋮
	[12843503472939723182,  1257048595837562235]  =  0.4000006657352966
	[11868935393991040875, 18365636711081267169]  =  0.17813321479298772
	[10504931430957650557,  9940286103801177457]  =  0.4845203880189448
	[17383975982595546373,  4970785464298144445]  =  0.021305870364968005
	[7379076729609959571 ,  1898604270381526844]  =  0.1755102070941239
	[144428425607543167  , 10626898038408744182]  =  0.7470097632724804
	[13459572381615104428, 12459420750016908814]  =  0.45292080949785696
	[3753583410179171704 , 15436097664388839821]  =  0.7511197778459007
	[8699474171918181750 ,  1203336841330469213]  =  0.1648681732758086Timing named index: 0.000920983, array index: 0.000851212, named key: 0.131522788
Timing sum large sparse array: 0.008530162, named: 0.020432073
done!
INFO: NamedArrays tests passed

>>> End of log
