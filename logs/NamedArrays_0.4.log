>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (851.953125 MB free)
Uptime: 14524.0 sec
Load Avg:  0.962890625  0.9208984375  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     652409 s       6147 s      55726 s     599731 s         18 s
#2  3500 MHz     483532 s        442 s      47617 s     870764 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5841129124235511	.32032696018864226	.7935404083996203	.9670676429317997
two	.6997910029388001	.07747177027935392	.667281692149478	.37553587773039254
a	37
b	20
c	18
d	97
e	57
f	50
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.404384   0.589103    0.40906
b           │ 0.0749451   0.232112  0.0395162 0.40438406558391526 0.40438406558391526
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.404384   0.589103    0.40906
b     │ 0.0749451   0.232112  0.0395162
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.404384   0.589103    0.40906
b           │ 0.0749451   0.232112  0.0395162
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.404384   0.589103    0.40906
b     │ 0.0749451   0.232112  0.0395162
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.960635  0.527302  0.996754  0.197774
er              │ 0.317176  0.865096  0.448474  0.105884
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140067660466736
0-element Named Array{Any,1}

[0.5772637355172618 0.49659484616495986 0.2737621240867931 0.11346964006666527
 0.5128471575358928 0.6623820676562853 0.7355806762885098 0.7040539577268405]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.577264  0.496595  0.273762   0.11347
two   │ 0.512847  0.662382  0.735581  0.7040542x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.577264  0.496595  0.273762   0.11347
two   │ 0.512847  0.662382  0.735581  0.7040542x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      1.33429      -1.41445  …      -1.47882     -0.743392
2     │      1.29758     -0.233174  …      0.275744      0.3601441000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  -2.57049  -0.148856
2     │  0.125804   0.346826
3     │ 0.0620107  -0.295278
4     │ -0.758181   0.387772
5     │  -2.31969  0.0250675
6     │  -1.77495   -1.64777
7     │  0.440541   -1.47242
8     │  -1.02973   -1.86053
9     │  -0.84544   0.399316
⋮               ⋮          ⋮
992   │  -1.52128  -0.827805
993   │  -1.15295  -0.426731
994   │ -0.879424  -0.173547
995   │ -0.784028    1.66548
996   │  0.543338   0.599486
997   │  0.131619    1.31288
998   │ -0.249329   0.179241
999   │ -0.122324    0.21148
1000  │ -0.696842   0.1325611000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.836042
2    │  -0.784292
3    │ -0.0434287
4    │   0.981629
5    │  0.0323814
6    │    1.91126
7    │   -0.43521
8    │   0.392522
9    │  -0.339823
⋮               ⋮
992  │  -0.286377
993  │   -1.17271
994  │    0.28563
995  │   0.752005
996  │  0.0863289
997  │    1.60736
998  │ -0.0459047
999  │  -0.298744
1000 │  0.03407532x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.421815  0.0976717
1           │  0.904324   0.469776

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.362929   0.522337
1           │  0.952063  0.0465216
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.382278
2  │ 0.810279
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.107761  0.401717
2     │ 0.743148  0.372275
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.506089   0.36829
2     │ 0.287586  0.882056

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.942888  0.969451
2     │  0.22129  0.946125
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.955996  0.704022
2     │ 0.659353  0.888681

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.427019   0.946034
2     │ 0.0188784   0.619858

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.178532  0.308015
2     │ 0.889219  0.607583

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.526778  0.623619
2     │ 0.650708  0.124661
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.406492  0.669017
2     │ 0.341126  0.548078

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.953638  0.0288558
2     │  0.359382   0.225915

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.317212  0.0795457
2     │  0.974618   0.435295
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.880111  0.647798

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.600399  0.363397
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.754438
2     │ 0.762102

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.356027
2     │ 0.928091
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.399211  0.690876
2     │  0.98494  0.861691
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[9507787290874245939 ,  5004131969199419793]  =  0.07704606724617724
	[11791379751769019020,  8058121953372963805]  =  0.15537565862431224
	[11010827839429159619, 14033074738777421392]  =  0.16045426106392768
	[15838569937311488483, 17822619313291261357]  =  0.8516587385950001
	[4721490707364992361 , 10361072080411987344]  =  0.666506367450574
	[11707210785935603289,  5723128691850249417]  =  0.1050296821174801
	[4490952960035913511 , 15774366784000975931]  =  0.23861305691759283
	[18213258608646582471, 15774366784000975931]  =  0.2593288447296316
	                                              ⋮
	[4223746066729127812 , 11551291857879764225]  =  0.7191496249926694
	[3926415979499511939 ,  5597731276780160114]  =  0.11605154889635205
	[3566943156706603705 ,  8090338657268802519]  =  0.9452879257263425
	[13690505415342562739,  8090338657268802519]  =  0.6556773834851779
	[14951403058635497631, 11470862121108514714]  =  0.4783829338685366
	[7375983855684575809 , 13970367575607681105]  =  0.5587860216662575
	[8305934159106380255 ,  3279378535085980212]  =  0.6223163760818144
	[4063711519745150262 ,  7957587899775749890]  =  0.4970913177941654
	[13873794816269884083,  2588469222286953884]  =  0.13205234793665288Timing named index: 0.000787172, array index: 0.000735484, named key: 0.131550304
Timing sum large sparse array: 0.012287529, named: 0.038710951
done!
INFO: NamedArrays tests passed

>>> End of log
