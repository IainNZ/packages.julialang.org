>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (774.7265625 MB free)
Uptime: 14773.0 sec
Load Avg:  0.99365234375  0.9853515625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     694180 s       3392 s      58917 s     578816 s         24 s
#2  3500 MHz     474962 s       4678 s      49339 s     904281 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.60192019654621	.5240875634877291	.27820848063609116	.07529880412711809
two	.9188104880075791	.15691222880517341	.8283820823478243	.466902240816762
a	36
b	12
c	65
d	61
e	47
f	44
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.404807  0.803982  0.412008
b           │ 0.277618  0.623771  0.676779 0.40480651553238256 0.40480651553238256
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.404807  0.803982  0.412008
b     │ 0.277618  0.623771  0.676779
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.404807  0.803982  0.412008
b           │ 0.277618  0.623771  0.676779
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.404807  0.803982  0.412008
b     │ 0.277618  0.623771  0.676779
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.438677   0.896924   0.611649  0.0408772
er              │  0.160485  0.0108954   0.288756   0.711741
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
106488224
0-element Named Array{Any,1}

[0.8774325610060856 0.7452652859650419 0.028528036718265648 0.1874546967519708
 0.5768494928477328 0.5664528345652877 0.8667706945835654 0.9589971059988818]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.877433  0.745265  0.028528  0.187455
two   │ 0.576849  0.566453  0.866771  0.9589972x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.877433  0.745265  0.028528  0.187455
two   │ 0.576849  0.566453  0.866771  0.9589972x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.963412     -0.206451  …       1.49755      -0.50374
2     │     -2.10286     -0.325546  …       -1.3217        1.73371000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.340082   0.534246
2     │  -1.16991  -0.826051
3     │   -1.2616  -0.898193
4     │ -0.768728  -0.913678
5     │ -0.932377  0.0270152
6     │   2.44564   0.454653
7     │  -1.03791  0.0629477
8     │   2.06963    1.75655
9     │  -1.20881   -0.38673
⋮               ⋮          ⋮
992   │ -0.462037   0.838543
993   │  -0.63759  -0.702868
994   │  -1.55289  -0.729328
995   │  0.463132    1.09232
996   │ -0.187946   0.261474
997   │ -0.227491   -1.20451
998   │ -0.629545   0.766069
999   │  0.829285   0.185117
1000  │  0.591926    0.239631000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -2.48856
2    │  0.521483
3    │   1.34402
4    │  0.910334
5    │  0.332464
6    │   1.83968
7    │  0.491442
8    │ -0.465452
9    │ -0.715798
⋮              ⋮
992  │    1.1063
993  │  0.827189
994  │  -2.55592
995  │  0.578027
996  │  0.233305
997  │  -1.17679
998  │  -0.03615
999  │  0.863512
1000 │  -2.682722x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.41931  0.122835
1           │ 0.664781   0.11702

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.753048  0.485088
1           │  0.56019  0.814706
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.567636
2  │ 0.977156
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.023912  0.996338
2     │  0.79371  0.650004
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.976318  0.217726
2     │ 0.349714  0.449596

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0013837   0.872289
2     │  0.816745   0.787051
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.820209   0.535877
2     │  0.671721  0.0357849

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.23543  0.701173
2     │ 0.160653  0.115041

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0847578   0.504607
2     │   0.43555   0.443073

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.942145  0.714696
2     │ 0.135428   0.83377
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.764471  0.0973866
2     │  0.446661    0.12402

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.810342  0.242856
2     │  0.91631  0.983506

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.669529  0.520061
2     │ 0.177402  0.192187
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.58127  0.231149

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.359594  0.736458
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.939009
2     │  0.18792

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.666311
2     │ 0.220515
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.851407   0.298828
2     │ 0.0583271   0.375669
1000×1000 Named sparse matrix with 95 Float64 nonzero entries:
	[5312631360709731698 ,  6526988131186142725]  =  0.15639594198359363
	[13873794816269884083,  6564272639106249010]  =  0.7712437588628342
	[1628675476083889103 ,  4786699431706339713]  =  0.26197969953835587
	[11902824463030858325,  8725235013359650451]  =  0.7714053488113026
	[7011600752848376140 ,  5723128691850249417]  =  0.02968986134841889
	[3876656510653276382 , 11907679469289587679]  =  0.8868223044825889
	[3745600506804314987 ,  8097707444526576530]  =  0.6918737389107519
	[16946861163327142185, 13342932250377702532]  =  0.5309489356879289
	                                              ⋮
	[8830415785437611716 , 17498567691103755585]  =  0.710371160715638
	[13317946559797870580, 16243515418520287792]  =  0.29324537411500207
	[5071406905266041170 ,  7608520278977511969]  =  0.4961064796954835
	[5312631360709731698 ,  4182991028086505933]  =  0.7533235377479193
	[3745600506804314987 , 15436097664388839821]  =  0.06130345443767604
	[14110845009009629080, 15857670694969494589]  =  0.6115582094001881
	[12921543294441418094, 17737936919457265947]  =  0.7599964699816673
	[10109836606734241243,   427459847123490633]  =  0.792849382764266
	[14596020527010292202, 14599810768241287016]  =  0.5229836493406561Timing named index: 0.000614475, array index: 0.000422206, named key: 0.071461489
Timing sum large sparse array: 0.010121962, named: 0.025526323
done!
INFO: NamedArrays tests passed

>>> End of log
