>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (814.03125 MB free)
Uptime: 16783.0 sec
Load Avg:  0.9970703125  1.0087890625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     680609 s       4700 s      60179 s     793406 s         21 s
#2  3500 MHz     439978 s       2399 s      52883 s    1133709 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7337058524859972	.2952387293151135	.8487101147935674	.35338367241099067
two	.8781215106083964	.36940857970341945	.11590899506524566	.8597762427405424
a	73
b	35
c	28
d	99
e	31
f	76
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.148589   0.511952  0.0654196
b           │  0.826254   0.131785   0.749024 0.14858859679400305 0.14858859679400305
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.148589   0.511952  0.0654196
b     │  0.826254   0.131785   0.749024
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.148589   0.511952  0.0654196
b           │  0.826254   0.131785   0.749024
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.148589   0.511952  0.0654196
b     │  0.826254   0.131785   0.749024
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.917512   0.702702  0.0919928   0.659123
er              │  0.377354   0.698693   0.352191   0.739953
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140083564120448
0-element Named Array{Any,1}

[0.9054342476576267 0.24244035358242066 0.7596182379623457 0.02825845926227566
 0.5656044013207453 0.5982911593357545 0.28058979345091717 0.7958495983962202]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.905434    0.24244   0.759618  0.0282585
two   │  0.565604   0.598291    0.28059    0.795852x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.905434    0.24244   0.759618  0.0282585
two   │  0.565604   0.598291    0.28059    0.795852x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.903534      0.438239  …      0.281624     -0.990248
2     │     -1.93088       0.85623  …       1.35576     -0.1769631000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.311009    0.703333
2     │   -1.01001   -0.329674
3     │    2.89807    0.330303
4     │  -0.299107     1.14977
5     │    -1.1334    -1.45538
6     │   0.177539   -0.768617
7     │    1.39291    -1.09004
8     │   -0.73647    0.891234
9     │  -0.792733    -1.08725
⋮                ⋮           ⋮
992   │ -0.0140764     1.44607
993   │   0.149628    -0.26825
994   │   0.470359   -0.174804
995   │   0.619048    -1.37509
996   │   -0.38125    0.728985
997   │      1.336    0.031096
998   │   0.622404     1.06815
999   │  -0.937432   -0.398728
1000  │   -1.43446    0.3577971000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.34782
2    │  -0.383392
3    │  -0.902179
4    │  -0.217667
5    │  -0.654045
6    │  -0.165604
7    │   0.824091
8    │   0.739983
9    │    0.58742
⋮               ⋮
992  │   0.356204
993  │    1.10974
994  │  -0.365544
995  │ 0.00197865
996  │ -0.0753517
997  │  -0.959891
998  │    1.09353
999  │  -0.135336
1000 │   0.3656942x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.387215  0.317283
1           │ 0.485881  0.145617

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.108579  0.073715
1           │  0.76521  0.982866
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.674049
2  │ 0.857184
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.446219   0.279036
2     │  0.385831  0.0853675
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.398496  0.694858
2     │ 0.747175  0.270479

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.787741  0.453052
2     │ 0.748346  0.396024
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.575599  0.233402
2     │ 0.800126  0.453475

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.571552   0.352032
2     │ 0.0996489   0.380883

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.188957   0.30219
2     │ 0.156696  0.488861

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.21178  0.0638286
2     │  0.682233   0.507181
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.31259  0.870816
2     │ 0.884745  0.153063

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.370332   0.978673
2     │  0.135268  0.0748473

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.230343  0.215377
2     │ 0.951957  0.817254
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.876133  0.242568

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0156307   0.669218
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.126239
2     │ 0.902749

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.540344
2     │ 0.112701
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.995771  0.660726
2     │ 0.943002  0.662417
1000×1000 Named sparse matrix with 127 Float64 nonzero entries:
	[11438449578475668365,  3929618674436644774]  =  0.5510460962159796
	[11614427478792455139,  9690422262975321697]  =  0.6467832935234754
	[4486621131225030707 ,  5004131969199419793]  =  0.01637100326655072
	[13882698648709482562, 12809965746239821631]  =  0.03828648978672611
	[10601912832305821454, 13888991764943741743]  =  0.8858897030809354
	[4285843451033309381 ,   113574861176001527]  =  0.5555461324488002
	[7989582431359101293 ,  9920432272297441209]  =  0.17904042322356362
	[15422846019410515149, 14995138918287078531]  =  0.33295317761523346
	                                              ⋮
	[15408733635197285348,  4788923618671962983]  =  0.9883790285459604
	[12337648565752613198, 15857670694969494589]  =  0.820674252883604
	[2539844710871411659 ,   372001016642560619]  =  0.9627133272957049
	[11375148369984169619, 10024080200852233627]  =  0.36122107522796787
	[17718833055079784125, 16836080019131185762]  =  0.673387855055811
	[11707210785935603289, 11527542315164007414]  =  0.5839838624088429
	[5350103876752110926 ,  4047135350800189603]  =  0.856830059935026
	[1656903684371133098 , 14599810768241287016]  =  0.21868498775294665
	[4194711704772932182 ,  7519919299137062942]  =  0.6917458491683048Timing named index: 0.000807665, array index: 0.000826288, named key: 0.095781289
Timing sum large sparse array: 0.011128676, named: 0.026713841
done!
INFO: NamedArrays tests passed

>>> End of log
