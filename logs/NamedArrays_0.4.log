>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (861.09375 MB free)
Uptime: 14775.0 sec
Load Avg:  0.9296875  0.97900390625  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     689084 s        835 s      55114 s     588588 s         25 s
#2  3501 MHz     513833 s       5869 s      45972 s     854912 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.4630518092693545	.31839403326327	.4413875167185006	.2212457599003912
two	.607784571941945	.3955072560866544	.41870947205396414	.29455276775016603
a	20
b	23
c	95
d	93
e	5
f	52
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.028747  0.389129  0.728895
b           │ 0.713289   0.19928  0.106342 0.02874704651542137 0.02874704651542137
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.028747  0.389129  0.728895
b     │ 0.713289   0.19928  0.106342
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.028747  0.389129  0.728895
b           │ 0.713289   0.19928  0.106342
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.028747  0.389129  0.728895
b     │ 0.713289   0.19928  0.106342
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.393793    0.337485    0.090211  0.00129469
er              │   0.274146    0.627613   0.0292975    0.864433
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140679721845096
0-element Named Array{Any,1}

[0.9428215991730537 0.8191838966869123 0.8255951234292096 0.9622303686364462
 0.20625815487421595 0.839809996513899 0.5461242438403737 0.8543790401231794]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.942822  0.819184  0.825595   0.96223
two   │ 0.206258   0.83981  0.546124  0.8543792x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.942822  0.819184  0.825595   0.96223
two   │ 0.206258   0.83981  0.546124  0.8543792x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.990632      0.137341  …       0.48425     -0.600129
2     │       2.2579     -0.737625  …       -1.1775    -0.09533161000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.21007   -0.739499
2     │   0.563485    -1.53083
3     │   -1.55409    0.318999
4     │   0.664571     1.50537
5     │  -0.687167     0.77218
6     │   -1.34833    -1.34351
7     │  -0.503018    0.178998
8     │    1.36022    0.584348
9     │   -1.00938    -0.27016
⋮                ⋮           ⋮
992   │   0.252364  -0.0745937
993   │   -0.25561     0.36847
994   │   0.682422   -0.375291
995   │   -1.47052    0.655858
996   │    0.16369    0.530883
997   │   0.897344   -0.621586
998   │  -0.735852   -0.957308
999   │   0.945764     2.11061
1000  │   0.828756   -0.5815011000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.275981
2    │  -0.286815
3    │    -2.0423
4    │   0.420048
5    │  -0.640273
6    │     1.4088
7    │   0.197903
8    │  -0.301179
9    │  -0.232466
⋮               ⋮
992  │   0.959669
993  │   -2.15072
994  │   0.563167
995  │ -0.0466751
996  │    1.66659
997  │   0.304536
998  │    1.34241
999  │  -0.443265
1000 │   0.1870112x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.900036   0.530243
1           │  0.304689  0.0679754

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.481064  0.913066
1           │ 0.845068  0.692103
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.568485
2  │ 0.712071
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │   0.2169  0.884489
2     │ 0.814227  0.445491
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.732524   0.277253
2     │ 0.0470042   0.375493

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.701821  0.388283
2     │ 0.628827  0.525449
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.72834  0.469459
2     │ 0.967163  0.707045

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.336391  0.642534
2     │ 0.262964  0.961378

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.594777  0.301976
2     │ 0.334472  0.357802

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.454872  0.694671
2     │ 0.585184  0.420573
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.321047  0.353232
2     │ 0.834307  0.219057

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.446758   0.648559
2     │  0.825263  0.0726304

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.134601  0.391194
2     │ 0.706935  0.229301
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.587106  0.438594

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.241583  0.467553
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.872911
2     │ 0.661352

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.885535
2     │ 0.660807
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.285029  0.319585
2     │ 0.609335  0.137084
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[16203939900270689774, 13789993170142104254]  =  0.4356063267335961
	[971859988095984883  , 15422846019410515149]  =  0.08818406673632606
	[14026963558639697815, 14066869468942639955]  =  0.904665846423925
	[17131895616600668418, 10361072080411987344]  =  0.19815274325536358
	[8093556638929719178 , 18443816037252674910]  =  0.7437171205184494
	[12195123354423713188,  4394159825732135742]  =  0.6926887955783994
	[3043368577052145501 ,  4394159825732135742]  =  0.9468191866409124
	[16427568314583164731,   273396578563598247]  =  0.5230887378408331
	                                              ⋮
	[2644894592338031174 , 12901330087571726961]  =  0.5930549092356678
	[14258322255812091301, 17329041886349039120]  =  0.1625341010825614
	[1051961026643939454 , 11641483179283066996]  =  0.9554058591018253
	[12724696447411985758,  5983786778458205040]  =  0.9865932601210796
	[12376285854513575894, 18148906667482527649]  =  0.015804834895454922
	[6736866286121987098 ,  8090338657268802519]  =  0.260987187123608
	[9036640481818790821 ,  8090338657268802519]  =  0.8679950650942805
	[4214085865611670439 , 12169815624147734794]  =  0.6343871624115165
	[17248656115182705265,  2758171916068192631]  =  0.4033841914960914Timing named index: 0.000828917, array index: 0.000908231, named key: 0.083681376
Timing sum large sparse array: 0.010119908, named: 0.023693515
done!
INFO: NamedArrays tests passed

>>> End of log
