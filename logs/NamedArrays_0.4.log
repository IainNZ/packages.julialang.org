>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (780.3984375 MB free)
Uptime: 14671.0 sec
Load Avg:  0.8681640625  0.8798828125  0.96826171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     681181 s       5050 s      57479 s     579010 s         30 s
#2  3500 MHz     462275 s       1763 s      50228 s     899986 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5640464616179028	.3169260460031562	.4880465160922325	.5806015198259389
two	.5108803708516825	.2160770537224359	.3017061266446013	.009483576894503853
a	69
b	17
c	25
d	32
e	47
f	66
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.54097   0.954839   0.488891
b           │ 0.0321153   0.376665   0.243681 0.5409695242205974 0.5409695242205974
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.54097   0.954839   0.488891
b     │ 0.0321153   0.376665   0.243681
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.54097   0.954839   0.488891
b           │ 0.0321153   0.376665   0.243681
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.54097   0.954839   0.488891
b     │ 0.0321153   0.376665   0.243681
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.694969   0.578014  0.0789392   0.109288
er              │  0.389412   0.705651   0.666982   0.786838
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140467848222928
0-element Named Array{Any,1}

[0.4573424745926311 0.40152397589551714 0.8310681742582344 0.6062062828911365
 0.14776961944556755 0.9114614722248 0.6116698963145344 0.8295219526964515]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.457342  0.401524  0.831068  0.606206
two   │  0.14777  0.911461   0.61167  0.8295222x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.457342  0.401524  0.831068  0.606206
two   │  0.14777  0.911461   0.61167  0.8295222x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │   -0.0569143      0.897129  …      0.600468      -1.24907
2     │     -1.04883      -1.18652  …       -1.0466       2.027851000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.215352   -0.908307
2     │  -0.140888   -0.323853
3     │    0.10411   -0.378843
4     │   -3.60451  -0.0415772
5     │  -0.154151    0.255488
6     │   -0.40609     -1.0438
7     │   0.652691     1.20888
8     │  -0.066918    0.152064
9     │  -0.492975   -0.313324
⋮                ⋮           ⋮
992   │  -0.215302   -0.960607
993   │  -0.629277   -0.356514
994   │   -1.24026    -1.18575
995   │  -0.711701    0.882128
996   │   0.457212     0.84775
997   │  -0.239605    -1.27624
998   │  0.0402562   -0.713317
999   │   -1.21812      2.0122
1000  │    0.69207     1.575011000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │     1.49199
2    │     1.24927
3    │     0.56769
4    │     1.65853
5    │    0.781026
6    │    0.124351
7    │    -1.27834
8    │   0.0900215
9    │   -0.537591
⋮                ⋮
992  │   -0.256194
993  │ -0.00440231
994  │    0.239588
995  │    -0.24589
996  │     -1.4124
997  │   -0.945227
998  │   0.0789601
999  │    0.231699
1000 │    0.4730622x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.440802  0.942685
1           │ 0.697014  0.676887

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.490371  0.441008
1           │ 0.964068  0.524367
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.883532
2  │ 0.0482369
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.888111  0.187823
2     │ 0.958139  0.979226
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.409432  0.243715
2     │ 0.762141  0.823217

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0676203    0.11967
2     │  0.666973   0.908195
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.295508   0.288703
2     │  0.328827  0.0619302

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.238628  0.129622
2     │ 0.925952  0.374396

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.830355  0.359357
2     │ 0.458039  0.593451

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.553117  0.816366
2     │ 0.938821  0.579448
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.232131  0.852609
2     │ 0.922983  0.804856

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.174313  0.341373
2     │ 0.193858  0.795576

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.530514  0.746497
2     │ 0.142314  0.475349
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.466849  0.545228

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.324072  0.105193
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.800692
2     │ 0.156012

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.498159
2     │  0.63287
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.750806  0.481375
2     │ 0.676374  0.663674
1000×1000 Named sparse matrix with 101 Float64 nonzero entries:
	[5188033427577448982 , 17095493447719212504]  =  0.4566112082576792
	[665597800756090850  ,  8058121953372963805]  =  0.061633686206725935
	[7519919299137062942 ,  6134978669850253296]  =  0.295619103570798
	[14066869468942639955,  5927176887743683346]  =  0.5601478273796521
	[4315763856331682254 ,   592365234179887848]  =  0.0776992803373473
	[3929618674436644774 ,  8629498292780771804]  =  0.6441200811009546
	[11907679469289587679,  4981387750669837953]  =  0.8987816758359917
	[10981095045923005722,  7425701996526302553]  =  0.9525541720984292
	                                              ⋮
	[310341593395597147  , 10924666096879366607]  =  0.5749831362573923
	[5597731276780160114 , 11033897610157224162]  =  0.8267316292642819
	[16946861163327142185, 11382910810432795234]  =  0.39834504276817784
	[9690422262975321697 , 14774945750507892610]  =  0.1840164859120621
	[8340722336334766600 ,  4214085865611670439]  =  0.895855138637625
	[1692321568384860970 ,  1526691723863411160]  =  0.28644448090767716
	[11438449578475668365,  5597731276780160114]  =  0.21147354969815368
	[4786699431706339713 , 10370911177498520402]  =  0.41415783414413676
	[10024080200852233627,  1523061068178304284]  =  0.4094163221435285Timing named index: 0.000808377, array index: 0.000842071, named key: 0.134873135
Timing sum large sparse array: 0.006784657, named: 0.013462099
done!
INFO: NamedArrays tests passed

>>> End of log
