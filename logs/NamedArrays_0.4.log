>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (811.01953125 MB free)
Uptime: 14045.0 sec
Load Avg:  1.04931640625  1.001953125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     638434 s       7384 s      55763 s     561986 s         26 s
#2  3504 MHz     456907 s       1416 s      49092 s     850472 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7893236321370976	.9889680387136139	.2502561341005969	.6070714008455138
two	.47950377128626687	.47484051172021613	.3409720764815196	.15279577955754942
a	77
b	75
c	13
d	59
e	14
f	1
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.811277  0.536538  0.404061
b           │ 0.356025   0.11749  0.805541 0.8112768150382763 0.8112768150382763
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.811277  0.536538  0.404061
b     │ 0.356025   0.11749  0.805541
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.811277  0.536538  0.404061
b           │ 0.356025   0.11749  0.805541
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.811277  0.536538  0.404061
b     │ 0.356025   0.11749  0.805541
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.283906  0.819356   0.18207  0.703948
er              │ 0.935875  0.692628  0.860973  0.117318
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140002480486416
0-element Named Array{Any,1}

[0.3534590872254939 0.7931857550091694 0.0662912091775989 0.07563387883453876
 0.9582402127472318 0.44332443934437205 0.8042614363072165 0.542468618666591]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.353459   0.793186  0.0662912  0.0756339
two   │   0.95824   0.443324   0.804261   0.5424692x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.353459   0.793186  0.0662912  0.0756339
two   │   0.95824   0.443324   0.804261   0.5424692x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.233675     -0.133204  …     -0.222611      -1.50781
2     │     0.122428     -0.676348  …     -0.459881      0.2812471000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   2.59307  -0.508387
2     │  0.943735  -0.798526
3     │  0.199105    1.49238
4     │ -0.134878  -0.263898
5     │ -0.312828   -1.05716
6     │  -2.09796    1.15487
7     │   1.28734   0.688874
8     │   1.24003   -1.70443
9     │ -0.383393  -0.342654
⋮               ⋮          ⋮
992   │  0.534566   0.813718
993   │ -0.924932   -1.08456
994   │  0.468227  0.0380853
995   │ -0.354339     1.3254
996   │   1.24584   0.704708
997   │  -1.02125     1.4632
998   │  -1.15117    1.40803
999   │   -1.2674   0.398824
1000  │ -0.914779   0.1182491000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.614155
2    │  -0.953883
3    │    -1.4819
4    │   -1.56945
5    │   0.598867
6    │   0.341457
7    │  0.0404564
8    │   0.481978
9    │  -0.327317
⋮               ⋮
992  │    2.00249
993  │   0.828383
994  │   0.132948
995  │   -2.28502
996  │  -0.691611
997  │   0.294713
998  │ -0.0246776
999  │   -1.52601
1000 │  -0.3884732x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.747704  0.983603
1           │ 0.074695  0.999707

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.521669  0.326209
1           │ 0.748127  0.605633
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.841129
2  │  0.58255
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.389113   0.45001
2     │ 0.569428  0.330244
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.79742  0.669644
2     │  0.38269  0.477292

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.714929  0.517483
2     │ 0.886673   0.15936
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.739693  0.360939
2     │ 0.551316  0.710157

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.862511   0.634621
2     │  0.446239  0.0206674

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.931342   0.836162
2     │  0.926563  0.0801161

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.516247  0.698568
2     │ 0.246408  0.445884
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.790347   0.831469
2     │  0.145186  0.0724537

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.467975  0.174106
2     │ 0.382226  0.444089

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.628063  0.129648
2     │ 0.571447  0.805334
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.814744  0.220726

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.699286  0.347074
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.989756
2     │ 0.663692

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.845565
2     │ 0.390772
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.267112  0.874179
2     │ 0.482842  0.252118
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[12624682912995533025,   144428425607543167]  =  0.3690246546800302
	[15507769097532104225,  9690422262975321697]  =  0.815232431456588
	[1602213502834622003 ,  4913249781191789579]  =  0.34960244103635896
	[8357516066305821252 , 16544335554558850098]  =  0.00605820599988971
	[1085996354551843550 ,  2230070772219402886]  =  0.16215383586942034
	[5567682937376679626 ,  2230070772219402886]  =  0.08313386949667567
	[18279088465816865198,  7425701996526302553]  =  0.11069084563870923
	[13998600730537104788, 16246598853062742192]  =  0.7944680217843936
	                                              ⋮
	[7407209677347974000 ,  4214085865611670439]  =  0.3640486405179566
	[5647414292592918739 , 10370911177498520402]  =  0.5176591765084231
	[17135076390733320242, 16069635275006911712]  =  0.4216719770026751
	[8425210698882380606 ,  4047135350800189603]  =  0.5077733869430481
	[6753547766291185871 ,  3279378535085980212]  =  0.06330433065103236
	[16930337021800722690, 15240003619098155971]  =  0.20253861959181396
	[1987182164192973075 , 13950575499123628905]  =  0.6603120498247403
	[4553087567028739273 ,  2588469222286953884]  =  0.24238212089729982
	[5579376550761991812 ,  2588469222286953884]  =  0.2693999907674558Timing named index: 0.00095772, array index: 0.000705445, named key: 0.140678855
Timing sum large sparse array: 0.011533401, named: 0.032068912
done!
INFO: NamedArrays tests passed

>>> End of log
