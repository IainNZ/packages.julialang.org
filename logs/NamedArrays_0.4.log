>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (808.37109375 MB free)
Uptime: 13767.0 sec
Load Avg:  0.92333984375  0.98193359375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     619618 s       1202 s      54703 s     570215 s         28 s
#2  3501 MHz     442462 s       5332 s      49184 s     829071 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.935157480368136	.9607465659464904	.01257358811104492	.43373769036225673
two	.8572151356242765	.1530492096324827	.7358395385605165	.7365748172229061
a	7
b	92
c	92
d	90
e	9
f	38
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.98431   0.974911  0.0882645
b           │  0.940527  0.0682378   0.639353 0.9843096400842106 0.9843096400842106
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.98431   0.974911  0.0882645
b     │  0.940527  0.0682378   0.639353
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.98431   0.974911  0.0882645
b           │  0.940527  0.0682378   0.639353
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.98431   0.974911  0.0882645
b     │  0.940527  0.0682378   0.639353
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.607777  0.424259  0.398626   0.60096
er              │ 0.438747  0.497855  0.334634  0.646186
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140065840889096
0-element Named Array{Any,1}

[0.2652030529478284 0.4865470848251918 0.8553298042168194 0.8982625336490451
 0.035899840602038546 0.9665043376121498 0.2346154697626064 0.10378942971764493]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.265203   0.486547    0.85533   0.898263
two   │ 0.0358998   0.966504   0.234615   0.1037892x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.265203   0.486547    0.85533   0.898263
two   │ 0.0358998   0.966504   0.234615   0.1037892x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.08324     -2.37134  …      1.90348    -0.335693
2     │    -1.16069      0.97218  …     0.660546     -1.582341000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.888942    0.19223
2     │  -1.50046   -1.80028
3     │   2.47755   -1.28947
4     │    1.3942  -0.549442
5     │ -0.681557    1.35456
6     │  0.324429  -0.754346
7     │  -1.52695    1.12875
8     │   1.50488   0.973843
9     │ -0.190699   0.723219
⋮               ⋮          ⋮
992   │ -0.367083  -0.485327
993   │   1.26322    1.61353
994   │   1.15508   -1.82128
995   │   1.34938   0.390993
996   │  -2.11563   -1.11432
997   │   1.29381  -0.288432
998   │  -2.57375    1.57891
999   │  -1.14893   -1.55254
1000  │  -2.37491   0.2005261000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -1.39907
2    │   0.831783
3    │  -0.943992
4    │   0.269399
5    │  -0.490479
6    │   0.153283
7    │  -0.753573
8    │  -0.637527
9    │ -0.0250953
⋮               ⋮
992  │    1.12492
993  │   -1.49777
994  │   0.171821
995  │   -0.13733
996  │   -1.21498
997  │  -0.882586
998  │  -0.601333
999  │    1.65897
1000 │  -0.7696492x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.356641  0.0376654
1           │  0.461422   0.682188

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.517486  0.921068
1           │  0.49872  0.226807
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.927177
2  │ 0.265155
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.435156  0.435379
2     │ 0.148413   0.49039
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.851329  0.514534
2     │ 0.172809  0.567182

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.509062  0.264707
2     │ 0.150566  0.355178
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.402208  0.168656
2     │ 0.113324  0.708904

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.182566  0.976255
2     │ 0.940747  0.566508

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.857756  0.574491
2     │ 0.497566  0.733178

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.136581   0.434476
2     │  0.752783  0.0218842
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.160076   0.996354
2     │ 0.0538933   0.708349

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.372105  0.406839
2     │  0.12571  0.962099

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.141034  0.458975
2     │ 0.188273  0.185484
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.959597  0.838318

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.431969  0.00663378
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.556147
2     │ 0.130099

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.739668
2     │ 0.131137
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0238695   0.724037
2     │  0.144508   0.910334
1000×1000 Named sparse matrix with 87 Float64 nonzero entries:
	[14340416566338039723,  8699333159457747740]  =  0.006118870813039745
	[10859735383852441251, 13888991764943741743]  =  0.7592701789140066
	[15845698495718141805,   113574861176001527]  =  0.737951822979934
	[3761119224343897378 ,  5062864901616737721]  =  0.9442951373841173
	[6249139884124980606 ,  4394159825732135742]  =  0.9705003416134805
	[3654557576772801522 ,  8725235013359650451]  =  0.2146714122084168
	[12261945819890682800, 16621507366152005377]  =  0.8651456879790407
	[11565746237708632912,  8030317335019090683]  =  0.5646466774527668
	                                              ⋮
	[5629102263838832842 ,  1566360107212290167]  =  0.423917722027211
	[6837203138339369118 ,  2344064818992981444]  =  0.027655835034035015
	[11907679469289587679, 13710539999002292266]  =  0.3187440531099113
	[6736866286121987098 , 17401827539426951865]  =  0.7595255963734049
	[12843503472939723182, 16655780295490676025]  =  0.5797811013328069
	[9283096199793891681 ,   372001016642560619]  =  0.7141190717588171
	[3253468397832770835 , 11470862121108514714]  =  0.27516950927883976
	[11355399569336610079,  1842419535934980543]  =  0.3075467219017134
	[8173039252081255984 , 11527542315164007414]  =  0.6347100584062735Timing named index: 0.000833847, array index: 0.000685574, named key: 0.128089235
Timing sum large sparse array: 0.011589611, named: 0.033119781
done!
INFO: NamedArrays tests passed

>>> End of log
