>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (808.7734375 MB free)
Uptime: 14101.0 sec
Load Avg:  1.0029296875  0.98291015625  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     632980 s       6713 s      59439 s     570855 s         22 s
#2  3500 MHz     451052 s        285 s      53615 s     849749 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.983241097109711	.8289287935311838	.40327397493089334	.4284849712405334
two	.08702447725972351	.7542953748239956	.28943530405223483	.5941497065344206
a	6
b	53
c	7
d	11
e	17
f	43
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.71164  0.323812  0.785682
b           │ 0.756061  0.639632  0.368286 0.7116404668554488 0.7116404668554488
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.71164  0.323812  0.785682
b     │ 0.756061  0.639632  0.368286
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.71164  0.323812  0.785682
b           │ 0.756061  0.639632  0.368286
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.71164  0.323812  0.785682
b     │ 0.756061  0.639632  0.368286
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.613864   0.923521   0.158779   0.655597
er              │  0.219161   0.260456    0.39202  0.0313408
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140456274191984
0-element Named Array{Any,1}

[0.06400523127846469 0.0947638010429055 0.9779957286878329 0.6857814880439033
 0.6600202826085131 0.3692843174688272 0.9102741418692608 0.1077853554572279]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0640052  0.0947638   0.977996   0.685781
two   │   0.66002   0.369284   0.910274   0.1077852x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0640052  0.0947638   0.977996   0.685781
two   │   0.66002   0.369284   0.910274   0.1077852x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.495892      -1.46169  …      0.591952      0.943442
2     │    -0.356097      0.172593  …        0.9955       1.171481000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.284553    0.693455
2     │  0.0239008    -2.32087
3     │  -0.206272    0.261894
4     │  -0.536187    -2.40099
5     │   -1.87263      1.5846
6     │  -0.601289   -0.240884
7     │   0.832838     0.25364
8     │  -0.375976     1.03209
9     │   0.844381     1.68485
⋮                ⋮           ⋮
992   │    2.28018    0.812071
993   │    2.00419     0.79838
994   │   0.116295    0.605805
995   │    0.71695    -1.32775
996   │     1.0481    0.315188
997   │   -1.50541    -2.40828
998   │ 0.00505327     1.12285
999   │  -0.509311     1.33294
1000  │       1.05   -0.9864051000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.553776
2    │   0.750787
3    │ -0.0992736
4    │ -0.0356989
5    │ -0.0714095
6    │  0.0234802
7    │   0.586256
8    │  0.0893793
9    │   0.138122
⋮               ⋮
992  │    1.34701
993  │    1.66469
994  │ -0.0126945
995  │   0.678767
996  │    1.57183
997  │   0.126366
998  │    1.30475
999  │   0.632819
1000 │  -0.6472062x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.866564  0.814645
1           │ 0.780213  0.786083

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.229853  0.980568
1           │ 0.467847  0.945112
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.953109
2  │ 0.897973
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.719789  0.0826382
2     │  0.382598   0.422158
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0692764  0.0850991
2     │  0.119494   0.179253

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.254226  0.378364
2     │  0.15107  0.365976
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.219583  0.174269
2     │ 0.678222  0.893364

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.762478  0.291634
2     │ 0.167176  0.607666

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.727801   0.84353
2     │ 0.980591  0.180488

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.846433  0.125005
2     │ 0.192831  0.119517
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.18378    0.55844
2     │ 0.0965652   0.884919

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.034692  0.583009
2     │ 0.572185  0.962894

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.263421  0.803611
2     │ 0.893679  0.318799
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.522459  0.0939719

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.792169  0.277754
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0491094
2     │   0.95816

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0910204
2     │ 0.0778743
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.692217  0.332069
2     │ 0.145559  0.123595
1000×1000 Named sparse matrix with 86 Float64 nonzero entries:
	[7989582431359101293 , 14304565767364922256]  =  0.4987278377179918
	[2310533037454285645 , 11080872162023102847]  =  0.7097235405792608
	[11488343865249833965,  4247719799217886270]  =  0.7659719691877025
	[16544335554558850098, 12295598998729798629]  =  0.483178739681279
	[1692321568384860970 , 16621507366152005377]  =  0.3044530494082205
	[17737936919457265947,  4302721723742542942]  =  0.8097818745244985
	[4192294285141828730 , 15987302811816728974]  =  0.1746192450326134
	[2265917884294506251 , 14382878888079666374]  =  0.9794727638081755
	                                              ⋮
	[8330309809540032104 , 14057278280866812536]  =  0.5824090842886092
	[5927176887743683346 , 10663619072362037589]  =  0.8734076077782689
	[13538631162213086910,  7989582431359101293]  =  0.653234890402228
	[17135076390733320242, 14835807873575694564]  =  0.9131638203279095
	[13897873635935988725,  4047135350800189603]  =  0.3440499043984706
	[11581033251142794164, 12020782256748308824]  =  0.44005340443829755
	[5647414292592918739 , 14599810768241287016]  =  0.2447221717637995
	[1533720515531077962 ,  2588469222286953884]  =  0.0900895876440857
	[202800707278592455  ,  7519919299137062942]  =  0.18169366941843634Timing named index: 0.000702402, array index: 0.000464213, named key: 0.072535982
Timing sum large sparse array: 0.008070488, named: 0.032194539
done!
INFO: NamedArrays tests passed

>>> End of log
