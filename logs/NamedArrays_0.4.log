>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (840.66796875 MB free)
Uptime: 14560.0 sec
Load Avg:  0.8984375  0.9228515625  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz     652157 s       2582 s      55302 s     597935 s          9 s
#2  3508 MHz     469745 s       5636 s      46295 s     889931 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.9709082929298203	.08072874059401358	.9072318404378514	.1319764233468399
two	.6061336401926618	.7785404399556475	.40538517647198646	.03650622651323676
a	61
b	22
c	96
d	91
e	96
f	31
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.742191  0.383473  0.906712
b           │ 0.793103  0.379885  0.621805 0.7421912426426684 0.7421912426426684
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.742191  0.383473  0.906712
b     │ 0.793103  0.379885  0.621805
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.742191  0.383473  0.906712
b           │ 0.793103  0.379885  0.621805
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.742191  0.383473  0.906712
b     │ 0.793103  0.379885  0.621805
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0620377   0.347714   0.538521    0.61844
er              │   0.42505   0.819273   0.570283   0.218562
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140099680870320
0-element Named Array{Any,1}

[0.2099282026969067 0.5015342971127594 0.5670525577320142 0.07415809167099163
 0.5953110953302498 0.9863309195484959 0.4727364111934085 0.8299536913096954]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.209928   0.501534   0.567053  0.0741581
two   │  0.595311   0.986331   0.472736   0.8299542x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.209928   0.501534   0.567053  0.0741581
two   │  0.595311   0.986331   0.472736   0.8299542x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.37742     0.653943  …      -1.0059    -0.244492
2     │   0.0440861        2.082  …    -0.113008     0.0403471000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.388747   -0.333521
2     │   0.408638   -0.872035
3     │   -0.97237    -1.26082
4     │  -0.631115     0.39063
5     │ -0.0993343   -0.712209
6     │  -0.675993    0.934238
7     │    1.51795   -0.634188
8     │    1.63727    -0.33585
9     │   -1.02167     1.66801
⋮                ⋮           ⋮
992   │  -0.159417  0.00342925
993   │    1.31227    -1.22095
994   │   0.105332    -2.44671
995   │ -0.0683842    -1.12823
996   │  -0.108582    0.431918
997   │   -1.24476    -1.25217
998   │   -1.57068    -0.19327
999   │  -0.237229   -0.256558
1000  │   0.555651    0.8295641000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.931244
2    │  -0.830985
3    │  -0.556385
4    │   0.424694
5    │  -0.806327
6    │  -0.173764
7    │  -0.695795
8    │   0.961099
9    │  -0.305494
⋮               ⋮
992  │  -0.264443
993  │   0.467014
994  │    0.11202
995  │ -0.0492124
996  │   0.515541
997  │   0.330379
998  │  -0.117657
999  │   0.837484
1000 │   0.1694262x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.404399  0.310216
1           │ 0.617355  0.375895

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.427956  0.134181
1           │ 0.870426   0.44516
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.701099
2  │ 0.0245231
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.194722  0.241596
2     │ 0.925675  0.573075
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.299153  0.910353
2     │ 0.371647  0.160645

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.189592  0.0936465
2     │ 0.0109921   0.871317
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00770529    0.551939
2     │  0.0580749    0.319498

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.660615  0.210694
2     │ 0.264224   0.43821

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.247104  0.216357
2     │ 0.651621  0.472733

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.27986  0.901207
2     │ 0.583758  0.458995
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.702581  0.237972
2     │ 0.504196  0.396005

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.531584   0.50654
2     │ 0.174684   0.37147

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.120697   0.394289
2     │  0.305039  0.0504685
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.54107  0.200037

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.542947  0.621114
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.298342
2     │ 0.101516

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.881854
2     │ 0.605341
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.903073  0.212275
2     │ 0.883308  0.849227
1000×1000 Named sparse matrix with 106 Float64 nonzero entries:
	[3876656510653276382 , 14304565767364922256]  =  0.18961637284371036
	[1082833487325258643 , 13789993170142104254]  =  0.41971016738396694
	[919672847296486462  ,  1703847331300677320]  =  0.947498225897583
	[15523141765479279085, 15422846019410515149]  =  0.6538185582825184
	[592365234179887848  ,  8069307267129313135]  =  0.6051300074273058
	[15720179207341610832,  8629498292780771804]  =  0.2570639199055593
	[15673988649286256572,  4976045735032000325]  =  0.5534374555962653
	[8588666550667973691 , 15774366784000975931]  =  0.9323390036321959
	                                              ⋮
	[1359987701312007394 , 13700233674872906346]  =  0.09242802366274216
	[17498567691103755585, 16243515418520287792]  =  0.7492972310835659
	[4782469333680129318 , 14774945750507892610]  =  0.8463283870810694
	[2011794367635262695 , 14027562189529080231]  =  0.10103511050976022
	[15987302811816728974,  2117445326293199079]  =  0.9545270952839973
	[2564073136243113693 , 10370911177498520402]  =  0.7918026245616436
	[6164719845061264078 , 14835807873575694564]  =  0.6459439269108063
	[2858848191422151957 , 15240003619098155971]  =  0.5604243474123318
	[17211410618634043162,  6565262192402102057]  =  0.5585434467137211Timing named index: 0.000615281, array index: 0.000421187, named key: 0.071698711
Timing sum large sparse array: 0.007228831, named: 0.013194677
done!
INFO: NamedArrays tests passed

>>> End of log
