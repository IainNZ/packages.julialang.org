>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (799.40234375 MB free)
Uptime: 8624.0 sec
Load Avg:  0.96142578125  0.95849609375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     386236 s       3664 s      33548 s     352222 s         20 s
#2  3499 MHz     236996 s       4523 s      29021 s     562173 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.671563794776425	.5510565456564238	.6015996824631729	.6978899902751732
two	.9776301943226149	.9715103178000297	.2516773159517409	.9473875210744287
a	23
b	69
c	19
d	99
e	69
f	76
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.549425    0.82393   0.731338
b           │ 0.0577978   0.606953   0.131029 0.5494248737772165 0.5494248737772165
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.549425    0.82393   0.731338
b     │ 0.0577978   0.606953   0.131029
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.549425    0.82393   0.731338
b           │ 0.0577978   0.606953   0.131029
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.549425    0.82393   0.731338
b     │ 0.0577978   0.606953   0.131029
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.617366   0.175907   0.149359   0.171523
er              │  0.338222    0.65126   0.947525  0.0510151
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139829097989072
0-element Named Array{Any,1}

[0.33330140077202564 0.702706250166304 0.8046765832072735 0.17053572866094702
 0.8101989096689344 0.05291760193945616 0.5431884554556339 0.951554044834884]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.333301   0.702706   0.804677   0.170536
two   │  0.810199  0.0529176   0.543188   0.9515542x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.333301   0.702706   0.804677   0.170536
two   │  0.810199  0.0529176   0.543188   0.9515542x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.167678     0.113294  …     -0.59398    -0.989974
2     │    0.157647     -1.60566  …    -0.927439     -2.397161000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.974221   0.0919931
2     │  0.0126578   -0.610507
3     │ 0.00163889     -1.2031
4     │   -1.59971   -0.775972
5     │   -2.96987    -1.00471
6     │  -0.562312   -0.984588
7     │   -1.55398     1.08931
8     │    2.29066    0.378528
9     │   0.223121     2.50899
⋮                ⋮           ⋮
992   │  -0.506353  -0.0404707
993   │   0.530354    0.680338
994   │   0.412117  -0.0235028
995   │   -1.83246    0.340848
996   │   -0.21982  -0.0450812
997   │   -1.39752   -0.745358
998   │    2.51476    0.509807
999   │    2.29157   -0.269292
1000  │   0.797537     1.121171000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.347896
2    │  -0.186718
3    │    1.18812
4    │  -0.109268
5    │   -1.28402
6    │  -0.399965
7    │ -0.0358575
8    │  -0.392511
9    │   -1.35833
⋮               ⋮
992  │   0.548572
993  │    1.04234
994  │ -0.0841546
995  │   0.451151
996  │   0.839198
997  │   0.131124
998  │   0.199287
999  │    1.17465
1000 │   0.7304742x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.839639    0.339077
1           │   0.213846  0.00963293

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.445407  0.315321
1           │ 0.817321   0.31927
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.195248
2  │ 0.732453
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.163066  0.847064
2     │ 0.232199  0.632366
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.889441  0.931182
2     │ 0.171033  0.847747

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0110564   0.034863
2     │  0.930241   0.452357
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.542701   0.720878
2     │  0.761087  0.0430928

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.498897  0.223252
2     │ 0.458825  0.742074

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.585264  0.148737
2     │   0.2085  0.575102

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0628258  0.0881926
2     │ 0.0541561   0.697215
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.70822  0.757282
2     │ 0.242013  0.705292

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.11502   0.14241
2     │ 0.487072  0.398587

[:, :, C=1, D=2, E=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │   0.0426565  0.000489131
2     │    0.887655     0.172046
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.584747  0.0486364

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.813224  0.0954432
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.490219
2     │ 0.462199

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.433217
2     │  0.38365
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.623533  0.000651786
2     │    0.254753     0.797153
1000×1000 Named sparse matrix with 102 Float64 nonzero entries:
	[3039451196773527828 , 14343632987770563929]  =  0.3360583929290595
	[1082833487325258643 , 14343632987770563929]  =  0.5148731647282321
	[2773759897603617072 , 17095493447719212504]  =  0.12396116926350431
	[7841950699682704949 ,  6806539949965918083]  =  0.5121269650812148
	[17508789370476597174, 18443816037252674910]  =  0.24823879596380816
	[8058121953372963805 , 12295598998729798629]  =  0.8811407956569253
	[16406121832856650968,  4981387750669837953]  =  0.4296634878096006
	[849947749456312673  ,  5723128691850249417]  =  0.7917246982214592
	                                              ⋮
	[1203336841330469213 ,  6828122599267262902]  =  0.7338740027564661
	[13706965959382047777, 12325465539452661075]  =  0.9089887795600871
	[16836080019131185762, 12325465539452661075]  =  0.8850063119135871
	[11395538943611008941,  7528617485284887424]  =  0.9956595038377016
	[4882987618343239453 ,  1898604270381526844]  =  0.5913006257711102
	[16390501590956164603,   975384116789271147]  =  0.640176169777114
	[16840404209865735426, 16077859356318100249]  =  0.47285818437228144
	[310341593395597147  ,  2107242561845671563]  =  0.3068867514828526
	[4034226599594678126 ,  2318046236442875673]  =  0.8785858960370074Timing named index: 0.000614792, array index: 0.000430824, named key: 0.073294159
Timing sum large sparse array: 0.004979386, named: 0.012601785
done!
INFO: NamedArrays tests passed

>>> End of log
