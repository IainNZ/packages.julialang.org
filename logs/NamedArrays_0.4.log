>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (841.890625 MB free)
Uptime: 15129.0 sec
Load Avg:  1.0029296875  0.99853515625  1.03076171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     706768 s       5688 s      55035 s     593483 s         25 s
#2  3499 MHz     467378 s       1252 s      45489 s     944772 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7513402882775639	.13844249296126776	.10270227115116604	.6731161048804726
two	.8595884295703122	.45418958485368477	.48227668011206903	.23222336338109528
a	81
b	40
c	97
d	39
e	50
f	6
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0889735   0.257124  0.0870169
b           │  0.101989   0.118423   0.818382 0.08897350017320727 0.08897350017320727
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0889735   0.257124  0.0870169
b     │  0.101989   0.118423   0.818382
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0889735   0.257124  0.0870169
b           │  0.101989   0.118423   0.818382
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0889735   0.257124  0.0870169
b     │  0.101989   0.118423   0.818382
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.011795  0.459048  0.888122  0.300986
er              │ 0.179017  0.549133  0.241822  0.325211
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140010789087808
0-element Named Array{Any,1}

[0.3940148395543226 0.6460117007132629 0.9649568506555248 0.9262315024594368
 0.5221150724803907 0.9754687914034288 0.8939054914363906 0.9886784930300283]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.394015  0.646012  0.964957  0.926232
two   │ 0.522115  0.975469  0.893905  0.9886782x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.394015  0.646012  0.964957  0.926232
two   │ 0.522115  0.975469  0.893905  0.9886782x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      1.58404     -0.403585  …      0.242844       1.74652
2     │    -0.242092        1.1987  …       2.01146       1.398321000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0989729   -0.104345
2     │  -0.476935     1.17692
3     │    -2.2977   -0.477534
4     │    1.91965     0.77711
5     │    1.35267  -0.0468421
6     │  0.0644474   -0.737267
7     │    1.04501    -1.57064
8     │   0.571606    0.598571
9     │    1.00026    0.954951
⋮                ⋮           ⋮
992   │    1.54644    -0.25045
993   │   0.907662   -0.893217
994   │   -1.55943   -0.464288
995   │  -0.825853    -1.59262
996   │    1.54307     1.21865
997   │   0.676859   0.0902869
998   │   0.830272     1.54255
999   │   0.930658   -0.442437
1000  │  -0.765376     1.821391000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   0.78011
2    │ -0.613236
3    │  0.237041
4    │  0.727907
5    │  0.152192
6    │ -0.429614
7    │  0.631172
8    │ -0.774042
9    │ -0.558278
⋮              ⋮
992  │ -0.506573
993  │  -1.72655
994  │  0.716946
995  │ -0.538576
996  │  0.413335
997  │  0.306148
998  │   1.48957
999  │ -0.262002
1000 │  0.8039592x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.352628   0.955551
1           │  0.189715  0.0536171

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.932696   0.264042
1           │  0.781193  0.0434781
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.62595
2  │ 0.375967
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.953615  0.0679672
2     │  0.594851   0.371028
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.461408  0.960406
2     │ 0.293988  0.415373

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.384216  0.234308
2     │ 0.782102  0.978781
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.348966  0.0885652
2     │  0.128413   0.369289

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.542766  0.581349
2     │ 0.246276  0.132358

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.531181   0.96992
2     │ 0.342862   0.78602

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.210603  0.065836
2     │ 0.320348  0.255797
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.369067  0.149823
2     │ 0.410121  0.689153

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.344504   0.96463
2     │ 0.683314  0.986714

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.819654   0.25048
2     │ 0.086175  0.870648
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.656284  0.121519

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00634828    0.212692
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.71011
2     │ 0.992354

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.11603
2     │ 0.209252
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.91292  0.0598146
2     │  0.152646   0.870927
1000×1000 Named sparse matrix with 93 Float64 nonzero entries:
	[12419957900638875901,  4400785119912308702]  =  0.8975291893213215
	[17483166649663826856,  5004131969199419793]  =  0.08673852063680365
	[1602213502834622003 ,  5312631360709731698]  =  0.35919915988732143
	[11104426471044518599,  1703847331300677320]  =  0.25462280926643044
	[202800707278592455  , 17822619313291261357]  =  0.47983541776169725
	[18287766226606777885,  4786699431706339713]  =  0.029568958728689365
	[18443722453013281811,  7199089960335318010]  =  0.8205072447077573
	[13998600730537104788,  3039451196773527828]  =  0.38796977012304046
	                                              ⋮
	[3014575823142358933 ,  4682100877033407764]  =  0.7464678496373687
	[5548054372471903342 , 14340416566338039723]  =  0.20922519329873768
	[16091998848339026335, 11993454575275700781]  =  0.3599199479318298
	[13421307536398036800, 12169815624147734794]  =  0.35221056397578976
	[8428585625424605984 , 17737936919457265947]  =  0.7812579309838574
	[15281342830259643962,  1523061068178304284]  =  0.40180282786961685
	[2695040152261095162 , 14835807873575694564]  =  0.10569507204470296
	[971859988095984883  ,  3733926995351842633]  =  0.6184659899375462
	[14464695094339742775,  2588469222286953884]  =  0.40672853486848215Timing named index: 0.00089823, array index: 0.000820576, named key: 0.131094908
Timing sum large sparse array: 0.010448876, named: 0.024652626
done!
INFO: NamedArrays tests passed

>>> End of log
