>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (751.7109375 MB free)
Uptime: 17672.0 sec
Load Avg:  1.05419921875  0.99755859375  0.982421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     781635 s         98 s      68538 s     753868 s         27 s
#2  3500 MHz     597058 s         47 s      59177 s    1054576 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8633933932999269	.536443288939803	.1400031936435462	.538255734637491
two	.30791611275697073	.8852673477074096	.67522392214806	.36417213999527354
a	48
b	80
c	85
d	66
e	96
f	73
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.575179   0.20955    0.2684
b           │ 0.945364  0.607764  0.607834 0.5751786884881547 0.5751786884881547
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.575179   0.20955    0.2684
b     │ 0.945364  0.607764  0.607834
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.575179   0.20955    0.2684
b           │ 0.945364  0.607764  0.607834
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.575179   0.20955    0.2684
b     │ 0.945364  0.607764  0.607834
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0253714   0.390639   0.571829   0.961544
er              │  0.284757   0.608882   0.143397    0.86491
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140218458423408
0-element Named Array{Any,1}

[0.30495307367680335 0.07413836703163668 0.14026841548336355 0.2262997723452611
 0.942130608689782 0.4523149537106297 0.07053834119159563 0.35920902170315205]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.304953  0.0741384   0.140268     0.2263
two   │  0.942131   0.452315  0.0705383   0.3592092x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.304953  0.0741384   0.140268     0.2263
two   │  0.942131   0.452315  0.0705383   0.3592092x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.525649      0.29259  …     -1.73313     -1.81115
2     │   0.0758598     -1.44552  …     -1.23398     0.6685561000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0135362  -0.527722
2     │  0.803966    1.19261
3     │  0.253413  -0.230544
4     │   2.27745  -0.777145
5     │ -0.146834   -0.70531
6     │   1.39845  -0.890776
7     │  0.230238  -0.883183
8     │ -0.294827   0.984551
9     │   2.67664   0.440282
⋮               ⋮          ⋮
992   │  0.216557   -1.86362
993   │   2.19682   0.310004
994   │  0.780734  -0.321882
995   │  0.112218   0.396978
996   │   1.03609    1.29247
997   │ -0.944446   0.148199
998   │ -0.120314  -0.606557
999   │  0.852262   0.295881
1000  │ -0.799899   0.4498271000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.465504
2    │ -0.479114
3    │  -1.15183
4    │ -0.500548
5    │  -2.00352
6    │ -0.232128
7    │  0.760046
8    │ -0.252365
9    │   3.16119
⋮              ⋮
992  │  0.611804
993  │  -0.57842
994  │ -0.770481
995  │   1.72564
996  │   0.77692
997  │  0.208641
998  │ -0.333142
999  │  0.188659
1000 │ -0.2451252x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.420619  0.267173
1           │ 0.913861  0.702462

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.448078  0.567063
1           │ 0.291062  0.742634
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.170156
2  │ 0.774993
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.519638  0.652269
2     │ 0.930856  0.469675
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.120438  0.740507
2     │ 0.529706  0.945331

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.781642  0.530117
2     │ 0.596724   0.84462
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.617371     0.147009
2     │    0.586635  0.000715754

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.280435  0.452926
2     │ 0.859245  0.292158

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.952961   0.926037
2     │   0.32723  0.0282996

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.993634   0.248725
2     │  0.160735  0.0769889
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.326233   0.31404
2     │ 0.655438  0.904925

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.35401  0.173682
2     │ 0.132889  0.362256

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.674544  0.136774
2     │ 0.381566  0.746924
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.701989  0.222394

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.912127  0.737527
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.131388
2     │ 0.617268

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.173086
2     │ 0.425408
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.446485   0.99731
2     │ 0.937943  0.146561
1000×1000 Named sparse matrix with 108 Float64 nonzero entries:
	[4346281677867421151 ,  1703847331300677320]  =  0.12529914026608124
	[9474715557068018910 , 18443816037252674910]  =  0.061245126502569525
	[18279088465816865198, 10596751188013898940]  =  0.46388331726211796
	[10384179111032293919,   906960604709401733]  =  0.7048540237831642
	[16097006782209161274,  2836200141957565154]  =  0.5757320547493245
	[9763015172052692524 , 15444197186593984072]  =  0.6225628534119647
	[1203336841330469213 , 15260609615288845879]  =  0.8643434124604936
	[4806950860481619679 ,  3566943156706603705]  =  0.4624492369231139
	                                              ⋮
	[9284771721002998782 ,  4285843451033309381]  =  0.41789776248725086
	[5607123224040969390 ,  5983786778458205040]  =  0.1707326794407522
	[16157048171714034010, 15436097664388839821]  =  0.1548406756201286
	[17135076390733320242, 11993454575275700781]  =  0.9758898751247136
	[5853903685320491388 , 10024080200852233627]  =  0.09096457031794825
	[13864621993906192564, 14057278280866812536]  =  0.416460241308404
	[3590338872863214714 ,  1203336841330469213]  =  0.9508748420927287
	[10024080200852233627,  7957587899775749890]  =  0.18035821717267342
	[3159188428204763267 ,  3733926995351842633]  =  0.16977696320023217Timing named index: 0.000809193, array index: 0.000627872, named key: 0.073243473
Timing sum large sparse array: 0.006238472, named: 0.013022155
done!
INFO: NamedArrays tests passed

>>> End of log
