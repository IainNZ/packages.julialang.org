>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (853.15234375 MB free)
Uptime: 14487.0 sec
Load Avg:  0.98681640625  0.943359375  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     679567 s       2013 s      59258 s     564845 s         32 s
#2  3502 MHz     455518 s       4414 s      52204 s     888452 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8232909579416499	.6345619787826469	.5774847916138679	.4232974879914373
two	.20663263412930521	.06963250891752093	.6123025211133386	.3809734170048402
a	92
b	59
c	60
d	73
e	42
f	34
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.690157  0.257795  0.267659
b           │ 0.799743  0.201846   0.19242 0.6901572349346825 0.6901572349346825
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.690157  0.257795  0.267659
b     │ 0.799743  0.201846   0.19242
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.690157  0.257795  0.267659
b           │ 0.799743  0.201846   0.19242
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.690157  0.257795  0.267659
b     │ 0.799743  0.201846   0.19242
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.376927   0.147999   0.633738  0.0773879
er              │  0.823505   0.315487   0.754162  0.0105852
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139693235995984
0-element Named Array{Any,1}

[0.5803256289113334 0.4859053504752826 0.48018050062448414 0.055707777544878434
 0.5917517721116081 0.22779099895380805 0.9324355661998902 0.680893547509509]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.580326   0.485905   0.480181  0.0557078
two   │  0.591752   0.227791   0.932436   0.6808942x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.580326   0.485905   0.480181  0.0557078
two   │  0.591752   0.227791   0.932436   0.6808942x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.70714       1.5161  …    0.0898272     0.569183
2     │    0.897201     0.417046  …      0.30739    -0.4603431000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.906167   -0.256187
2     │    0.50142    0.565516
3     │    1.87589     0.34314
4     │  0.0439006    0.369908
5     │    1.68497   -0.130456
6     │   0.485211   -0.884771
7     │    1.12373     0.55614
8     │   0.661252   -0.946138
9     │    2.22471    0.107845
⋮                ⋮           ⋮
992   │  -0.253397    -1.46171
993   │   -2.13334    -2.21122
994   │   0.599125    0.846165
995   │ 0.00382719    -0.79818
996   │   -0.12483    -0.26123
997   │  -0.681793   -0.594656
998   │   0.131476    0.025476
999   │   0.402944    0.905118
1000  │  -0.238372      1.64671000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.08705
2    │   1.29058
3    │  0.302076
4    │   2.65398
5    │ -0.237636
6    │  -1.05891
7    │   2.02962
8    │  0.516067
9    │   1.46056
⋮              ⋮
992  │ -0.615194
993  │ -0.169789
994  │   0.71347
995  │   -1.2627
996  │   1.05165
997  │   1.89044
998  │    0.7254
999  │ -0.148736
1000 │ -0.4746372x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.812696   0.26326
1           │ 0.121651  0.811562

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.495563  0.845422
1           │ 0.768969  0.540698
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.915261
2  │ 0.837439
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0122397  0.0529306
2     │  0.426279   0.839233
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.623899  0.390724
2     │ 0.267781  0.937781

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0393561    0.94378
2     │  0.711734   0.828546
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.823658  0.854477
2     │ 0.481978  0.628573

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0299917   0.219927
2     │  0.952944   0.358826

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.290146  0.152167
2     │ 0.462265  0.505518

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.513778   0.677315
2     │ 0.0325686   0.870276
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.137007  0.128232
2     │ 0.176296  0.177551

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.123219  0.167473
2     │  0.25096  0.991854

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.664757  0.675272
2     │ 0.584124  0.610842
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.255631  0.614552

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.726447  0.192349
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.793827
2     │ 0.176757

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0376612
2     │  0.676807
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.335543   0.260742
2     │ 0.0917532  0.0353851
1000×1000 Named sparse matrix with 96 Float64 nonzero entries:
	[14475185020288943568,  6526988131186142725]  =  0.48832801175673635
	[16091998848339026335,  3929618674436644774]  =  0.3512707004744431
	[7002923098712527685 ,  8699333159457747740]  =  0.27268869508020144
	[12295598998729798629,  4913249781191789579]  =  0.29568046941332815
	[10195714700097307537, 13789993170142104254]  =  0.14801505256764647
	[10408056422914801862,  1703847331300677320]  =  0.17466408200682193
	[5607123224040969390 , 18443816037252674910]  =  0.23132067948713986
	[8510717240885107729 ,  3253468397832770835]  =  0.7577915140638858
	                                              ⋮
	[13408654435623669547,  5567682937376679626]  =  0.6970973912399503
	[12901330087571726961,  7608520278977511969]  =  0.06287603475295045
	[1348625733340586    ,  2117445326293199079]  =  0.8015904730961343
	[8499646773720035521 ,  1526691723863411160]  =  0.6232181746257601
	[6006398908531647410 , 10370911177498520402]  =  0.7594099419579652
	[584064394420725980  , 10024080200852233627]  =  0.2408694612568596
	[12195123354423713188, 10655964431342481635]  =  0.5120609758684187
	[7379076729609959571 ,  8779884342238752210]  =  0.7818778167093088
	[14027562189529080231, 13970367575607681105]  =  0.5360754507227135Timing named index: 0.000818456, array index: 0.000768074, named key: 0.116596518
Timing sum large sparse array: 0.00948977, named: 0.025226582
done!
INFO: NamedArrays tests passed

>>> End of log
