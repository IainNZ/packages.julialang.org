>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (810.046875 MB free)
Uptime: 14659.0 sec
Load Avg:  0.94091796875  0.9541015625  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     676756 s         92 s      55536 s     594951 s         30 s
#2  3500 MHz     468344 s       7046 s      47256 s     899503 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.585334735593571	.5985610359205291	.8982977831400636	.5243383242489601
two	.44528691482709015	.2572457885338293	.2788166073955185	.22843346130709707
a	8
b	49
c	19
d	46
e	19
f	49
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │  0.0886818    0.632834    0.405661
b           │  0.0629009  0.00737195    0.106816 0.08868183876221059 0.08868183876221059
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │  0.0886818    0.632834    0.405661
b     │  0.0629009  0.00737195    0.106816
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │  0.0886818    0.632834    0.405661
b           │  0.0629009  0.00737195    0.106816
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │  0.0886818    0.632834    0.405661
b     │  0.0629009  0.00737195    0.106816
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.908387  0.723708  0.914302  0.387838
er              │ 0.433209  0.778997   0.98321  0.327142
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140163238345120
0-element Named Array{Any,1}

[0.13222590685069746 0.38470856360311045 0.5641883084985528 0.8009178039464895
 0.09210288451613913 0.22161958203632715 0.5454314637594495 0.8476578929593659]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.132226   0.384709   0.564188   0.800918
two   │ 0.0921029    0.22162   0.545431   0.8476582x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.132226   0.384709   0.564188   0.800918
two   │ 0.0921029    0.22162   0.545431   0.8476582x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.682723     -1.05616  …     -1.44734     -1.33589
2     │    0.104453     0.648392  …     0.315128     0.6613011000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │     1.06665      1.70237
2     │  -0.0455752    0.0262176
3     │    -1.96593    -0.291558
4     │   -0.573255   -0.0591968
5     │    0.931529    -0.946872
6     │    -0.16776    -0.500052
7     │   0.0852588    0.0909021
8     │   -0.193749     0.535566
9     │  -0.0727048    -0.718106
⋮                 ⋮            ⋮
992   │    -1.60044    -0.708635
993   │   -0.837097     0.722784
994   │ -0.00981278    0.0706607
995   │    0.226141    -0.896864
996   │   0.0239987    -0.176642
997   │    -2.34714     -1.43339
998   │    -0.22834     0.739434
999   │      1.4149     0.746256
1000  │    0.474521    0.08831131000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │ -0.0314313
2    │   -1.12532
3    │  -0.765037
4    │    1.86078
5    │    1.01555
6    │  -0.505979
7    │  -0.174444
8    │   0.202183
9    │   0.474856
⋮               ⋮
992  │  -0.710974
993  │   -1.78305
994  │     1.4161
995  │  -0.435692
996  │ -0.0572002
997  │    1.42112
998  │   0.852766
999  │   -0.22134
1000 │  -0.3780262x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.724033  0.373237
1           │ 0.545524  0.363193

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.149695  0.638486
1           │  0.21627  0.886525
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.395136
2  │ 0.706651
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.527889  0.247627
2     │ 0.727845   0.77296
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.962795  0.810424
2     │ 0.334529  0.687952

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.172674  0.213729
2     │ 0.640453  0.457807
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.814644  0.422123
2     │ 0.316792  0.120941

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.971386  0.960697
2     │ 0.787941  0.172827

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.342833   0.915175
2     │  0.107047  0.0490327

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.129256  0.0356949
2     │  0.111793   0.747855
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.910032   0.425901
2     │  0.328796  0.0303298

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0684512   0.058831
2     │  0.295874   0.145657

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.13032  0.681507
2     │ 0.297759  0.499138
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.138176  0.833109

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.747572  0.633162
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.46811
2     │ 0.710472

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │   0.34772
2     │ 0.0485345
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.802415   0.96774
2     │ 0.473937  0.563726
1000×1000 Named sparse matrix with 91 Float64 nonzero entries:
	[5490184849613505398 ,   144428425607543167]  =  0.8063256271928545
	[7388874443385012746 ,  8058121953372963805]  =  0.15517821902565698
	[18332040070485059392,   592365234179887848]  =  0.8839908089319499
	[1626948139473082608 ,  2849690884155085581]  =  0.19879638979381498
	[2963278688299848341 , 17676219393380616284]  =  0.5387662937600106
	[6101516501032416524 , 17678211741433686062]  =  0.44146045609443485
	[1628675476083889103 , 17211410618634043162]  =  0.02964049919831524
	[10195714700097307537,  8725235013359650451]  =  0.24990330407351347
	                                              ⋮
	[15589056775630200950,  5567682937376679626]  =  0.8236867670647599
	[15380324202042087980,  5567682937376679626]  =  0.3545647221004118
	[13068922020419317632, 12901330087571726961]  =  0.8770787889879532
	[1085996354551843550 , 17329041886349039120]  =  0.6210407787630745
	[2362724562918981188 ,  5597731276780160114]  =  0.20359973502892625
	[10109836606734241243, 12169815624147734794]  =  0.9261769401194191
	[12724696447411985758, 16202651256804923129]  =  0.797723555366078
	[15389785613949122466,  7957587899775749890]  =  0.3946129070021893
	[8161571390594682873 , 14599810768241287016]  =  0.46702916528617466Timing named index: 0.000831169, array index: 0.000760287, named key: 0.132446628
Timing sum large sparse array: 0.009374789, named: 0.024202129
done!
INFO: NamedArrays tests passed

>>> End of log
