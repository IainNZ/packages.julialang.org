>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (835.37109375 MB free)
Uptime: 14392.0 sec
Load Avg:  0.94091796875  0.9638671875  0.9833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     656061 s        623 s      59723 s     585686 s         27 s
#2  3500 MHz     469942 s       5899 s      52516 s     853854 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6055117656632032	.40372814066379137	.35510452366914436	.19865269625154558
two	.8143185507324482	.4493158146848979	.35448857086071994	.36581582987102124
a	52
b	69
c	4
d	25
e	20
f	38
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0210359   0.915559   0.467727
b           │  0.158874   0.593379   0.784868 0.021035885516331954 0.021035885516331954
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0210359   0.915559   0.467727
b     │  0.158874   0.593379   0.784868
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0210359   0.915559   0.467727
b           │  0.158874   0.593379   0.784868
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0210359   0.915559   0.467727
b     │  0.158874   0.593379   0.784868
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0239391   0.758582  0.0314934    0.16517
er              │  0.721389   0.346673     0.3547    0.61282
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140237310259304
0-element Named Array{Any,1}

[0.9349789462376457 0.19785814304567984 0.6348553321723509 0.09605927307032136
 0.8447963649761479 0.9984645834892498 0.9948359625439154 0.937757891344315]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.934979   0.197858   0.634855  0.0960593
two   │  0.844796   0.998465   0.994836   0.9377582x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.934979   0.197858   0.634855  0.0960593
two   │  0.844796   0.998465   0.994836   0.9377582x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.420481      1.35788  …     0.980857  -0.00569533
2     │    -1.66004    -0.412738  …      4.00617      1.278051000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │ -0.0325407    -1.04436
2     │  -0.255712   -0.814298
3     │  -0.175215     -1.4997
4     │  -0.267054     1.37507
5     │    1.41616     -1.9397
6     │  -0.824651    0.175999
7     │ -0.0183825    -3.03582
8     │  -0.340647   -0.872623
9     │   0.521382    0.440627
⋮                ⋮           ⋮
992   │    2.27684   0.0425798
993   │   0.216783    -0.22266
994   │   -1.56353    0.696953
995   │   -1.45524   -0.919327
996   │   -0.33188    0.679291
997   │   0.307094    0.475043
998   │ -0.0721963    -0.45817
999   │    1.57953    -1.62677
1000  │    1.07308   -0.6060611000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │   -0.808027
2    │   -0.177965
3    │    -1.96267
4    │    0.127825
5    │    0.577357
6    │    0.276804
7    │ -0.00421689
8    │     1.10658
9    │     1.75647
⋮                ⋮
992  │   -0.766739
993  │   -0.387704
994  │    0.473664
995  │     1.24017
996  │   -0.796073
997  │   -0.812065
998  │    -1.30805
999  │   -0.124124
1000 │    -1.041722x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.324094  0.584891
1           │ 0.272467  0.128809

[:, :, indexing=1] =
base ╲ zero │           0            1
────────────┼─────────────────────────
0           │    0.334989    0.0475964
1           │    0.627747  0.000493481
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.580328
2  │ 0.754357
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.919335   0.287741
2     │ 0.0666499   0.727316
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.674546  0.255626
2     │ 0.570406  0.847522

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.863435  0.988784
2     │ 0.232089  0.898083
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.945577  0.929379
2     │ 0.556728  0.068136

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.317492  0.610367
2     │ 0.959652  0.849784

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.636121   0.795521
2     │ 0.0085838    0.42557

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.846924  0.973348
2     │ 0.871738  0.375204
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.482775  0.697907
2     │ 0.141864  0.418662

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.496348  0.0429024
2     │  0.477436   0.735516

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.684045  0.503675
2     │  0.75578  0.354033
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.470673  0.157321

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.997758  0.569023
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.975325
2     │ 0.862333

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.103973
2     │ 0.640809
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.341449  0.249532
2     │ 0.603925  0.200053
1000×1000 Named sparse matrix with 93 Float64 nonzero entries:
	[10603672941428866019, 14304565767364922256]  =  0.15013231979002284
	[12816414689028723218,  5004131969199419793]  =  0.17612321053055413
	[15465980046630820984,  6134978669850253296]  =  0.9462641754076402
	[5188033427577448982 , 14033074738777421392]  =  0.692413124770817
	[17135076390733320242,  6806539949965918083]  =  0.740171491681648
	[14178850942406463629,  4786699431706339713]  =  0.9801784062645482
	[1030988749247038162 , 12295598998729798629]  =  0.9541785386779074
	[3029872332119767940 , 16246598853062742192]  =  0.05957303918460277
	                                              ⋮
	[7858978801757346079 , 11732026533134275955]  =  0.26465100838453726
	[846219735909059185  ,  4285843451033309381]  =  0.7560535108167916
	[2365706432056806243 , 12901330087571726961]  =  0.9693964781047499
	[6295185824851981085 ,  7630593249633640373]  =  0.15393335619296677
	[8265524791738013937 , 15436097664388839821]  =  0.5105757188935036
	[6703675861229591273 , 15857670694969494589]  =  0.27240708581806516
	[3010300210541878305 , 11314283927973801071]  =  0.08783852849452889
	[15128086289133168420,  5122894113285174381]  =  0.4311182120022703
	[2564073136243113693 ,  5122894113285174381]  =  0.4951505847288624Timing named index: 0.000860719, array index: 0.000750942, named key: 0.12974266
Timing sum large sparse array: 0.011224426, named: 0.027140667
done!
INFO: NamedArrays tests passed

>>> End of log
