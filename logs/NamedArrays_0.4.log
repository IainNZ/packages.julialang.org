>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (824.484375 MB free)
Uptime: 13328.0 sec
Load Avg:  1.07958984375  1.00341796875  0.99267578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     611508 s       3140 s      53953 s     529695 s         34 s
#2  3500 MHz     425565 s       3671 s      46650 s     816139 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5734510589034694	.4214115101651217	.5509217637946406	.3224093670443464
two	.14346774813512586	.45440807856658294	.6479343336701815	.06952564019518848
a	52
b	30
c	37
d	100
e	31
f	23
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.506219    0.68069   0.283271
b           │  0.860764   0.242441  0.0363238 0.5062187898247723 0.5062187898247723
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.506219    0.68069   0.283271
b     │  0.860764   0.242441  0.0363238
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.506219    0.68069   0.283271
b           │  0.860764   0.242441  0.0363238
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.506219    0.68069   0.283271
b     │  0.860764   0.242441  0.0363238
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.281869  0.461969  0.332798  0.983996
er              │ 0.543991  0.730114  0.898626  0.506124
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140598772940560
0-element Named Array{Any,1}

[0.3105374103148695 0.6749631688316151 0.8022765569210617 0.3878056046046523
 0.15522972414881986 0.09553749709817216 0.8493989376040592 0.8696546068594393]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.310537   0.674963   0.802277   0.387806
two   │   0.15523  0.0955375   0.849399   0.8696552x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.310537   0.674963   0.802277   0.387806
two   │   0.15523  0.0955375   0.849399   0.8696552x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      1.10357       1.55822  …        2.1416       1.62874
2     │      1.53379      0.752993  …     -0.410776     -0.3912841000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.467159   -0.527811
2     │ -0.0844323    0.416264
3     │   -1.04493    -1.11776
4     │  0.0347352   -0.579669
5     │ -0.0834362   -0.285147
6     │   -0.35301    0.490016
7     │  -0.844439    0.185194
8     │   0.845215   -0.343319
9     │    0.73693    -1.38933
⋮                ⋮           ⋮
992   │  -0.714052     1.11749
993   │    1.48389     -1.5548
994   │    0.64368   -0.320903
995   │   -1.20351   -0.957541
996   │   0.982404    0.782359
997   │  -0.484451     1.48422
998   │  -0.355854    -1.16453
999   │    1.40209    0.226986
1000  │   0.315134     2.270341000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.150844
2    │  0.0694413
3    │  -0.487085
4    │     0.8719
5    │  -0.460456
6    │  -0.995653
7    │   -1.13785
8    │   0.320477
9    │  -0.792486
⋮               ⋮
992  │   0.875161
993  │   -1.30251
994  │   -2.12421
995  │  -0.587915
996  │   0.394621
997  │ -0.0270667
998  │   0.206441
999  │  0.0517242
1000 │   0.3437582x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.304691  0.0129187
1           │  0.240253  0.0573801

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.154795  0.794906
1           │ 0.947353  0.338989
2-element Named Array{Float64,1}
A  │ 
───┼────────
1  │ 0.76379
2  │ 0.22761
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.338879   0.135512
2     │ 0.0412976   0.743882
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.643224  0.156883
2     │  0.53125  0.825028

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00922282    0.765756
2     │   0.456422    0.875043
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.626954  0.0458979
2     │ 0.0665864   0.344311

[:, :, C=2, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.229583  0.00422961
2     │   0.165207    0.818167

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.643887   0.436347
2     │ 0.0156095   0.125618

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.154082   0.740683
2     │  0.555535  0.0322292
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.624743   0.846282
2     │ 0.0580871   0.217378

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.502337  0.552724
2     │ 0.956997  0.107161

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.150639  0.0434442
2     │  0.367175  0.0777136
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.528911  0.610036

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.771466  0.191344
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.548678
2     │ 0.943191

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.616663
2     │ 0.339426
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.898336  0.947617
2     │ 0.349737  0.374528
1000×1000 Named sparse matrix with 97 Float64 nonzero entries:
	[12786760913832678713,   397394769374478572]  =  0.7083412597097409
	[1094738720364955812 ,  8699333159457747740]  =  0.4582740115747026
	[1692321568384860970 , 13789993170142104254]  =  0.31772595556269567
	[13593351659750487469, 17822619313291261357]  =  0.31779697246697847
	[8173039252081255984 ,  1166092285267503990]  =  0.9750169391271288
	[4722070531727235685 ,  7242692203416363180]  =  0.20541296815998944
	[18053734596154680288, 15465980046630820984]  =  0.7835514028278583
	[1017373194429467360 , 15260609615288845879]  =  0.7863133691380502
	                                              ⋮
	[8976366379072844242 , 12169815624147734794]  =  0.44732995589547153
	[4106283031091570395 , 17737936919457265947]  =  0.7840704384092141
	[9892445672491709286 ,  1523061068178304284]  =  0.19186382124827484
	[15396075083334870119, 11314283927973801071]  =  0.5609791121238796
	[13593351659750487469,  5122894113285174381]  =  0.2869018375615946
	[13342932250377702532,  4047135350800189603]  =  0.17734708396211474
	[5726055407873363885 ,  3279378535085980212]  =  0.5996175742558822
	[1637279412807692950 ,  3733926995351842633]  =  0.7913741195901292
	[1030988749247038162 ,  9133170895916704973]  =  0.04910857499650012Timing named index: 0.000901697, array index: 0.00058714, named key: 0.130880617
Timing sum large sparse array: 0.006225676, named: 0.012793411
done!
INFO: NamedArrays tests passed

>>> End of log
