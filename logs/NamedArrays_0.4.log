>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (801.109375 MB free)
Uptime: 13722.0 sec
Load Avg:  0.9697265625  0.94140625  0.97509765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     659804 s       2552 s      51818 s     522207 s         24 s
#2  3500 MHz     444588 s       4760 s      43855 s     837747 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6552133655913324	.9503569848473694	.9505851272652084	.7963816489800051
two	.8269454273417896	.27062762456789025	.26278773873724126	.10402389598619566
a	17
b	51
c	27
d	29
e	47
f	9
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.832298  0.911448  0.610583
b           │ 0.894203  0.540355  0.634954 0.832297685667369 0.832297685667369
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.832298  0.911448  0.610583
b     │ 0.894203  0.540355  0.634954
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.832298  0.911448  0.610583
b           │ 0.894203  0.540355  0.634954
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.832298  0.911448  0.610583
b     │ 0.894203  0.540355  0.634954
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0534985   0.582527   0.261091   0.444288
er              │  0.844718   0.404635   0.623807   0.634185
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139685160666448
0-element Named Array{Any,1}

[0.86380635015547 0.24392142505352998 0.44877259507050526 0.8856618366763735
 0.7084767903909941 0.8203141172086192 0.6117775095172153 0.8018378903646486]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.863806  0.243921  0.448773  0.885662
two   │ 0.708477  0.820314  0.611778  0.8018382x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.863806  0.243921  0.448773  0.885662
two   │ 0.708477  0.820314  0.611778  0.8018382x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.508188      -1.50677  …      0.506701      -1.16305
2     │      1.11192      0.389473  …      0.644308       2.352311000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.44238    0.129865
2     │    1.01302    -0.40686
3     │   0.788997  -0.0491923
4     │   0.782251   -0.438016
5     │   0.789658  -0.0784096
6     │  -0.474122   -0.873229
7     │  -0.193121   -0.146257
8     │  -0.902463   -0.233459
9     │  -0.113936     0.58245
⋮                ⋮           ⋮
992   │    1.43608   -0.320877
993   │  -0.254967    -1.77849
994   │    1.50351  -0.0216892
995   │   -1.44729    0.531843
996   │  -0.227149    0.178202
997   │  -0.450499  -0.0159818
998   │   0.506519   -0.405443
999   │    1.40023     1.42615
1000  │   0.753944   -0.7675411000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.718254
2    │   0.717461
3    │    1.24498
4    │    2.33138
5    │   -1.46865
6    │  -0.849645
7    │   -1.23436
8    │    0.89985
9    │   0.296433
⋮               ⋮
992  │    1.18061
993  │   0.682926
994  │   -1.44703
995  │  -0.226964
996  │   -2.67743
997  │    0.98358
998  │ -0.0198865
999  │   0.450518
1000 │   0.6430622x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.571685  0.823722
1           │ 0.918497  0.275271

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.64727  0.998528
1           │ 0.522805  0.992034
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.242909
2  │ 0.882469
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.119361  0.758529
2     │ 0.887958  0.947492
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.660013  0.603391
2     │ 0.203497  0.377613

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.586099   0.43409
2     │ 0.416648  0.656391
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.24948   0.87008
2     │ 0.989259  0.674031

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.314553  0.899659
2     │ 0.929541  0.751466

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.286933  0.688737
2     │  0.57106  0.222088

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.331425  0.743583
2     │ 0.889198  0.342788
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.867235  0.0483729
2     │   0.90091   0.596004

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0348405   0.682993
2     │  0.648996   0.485275

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.309792  0.829955
2     │ 0.741787  0.852808
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.877925  0.506983

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.608923  0.0302153
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.629179
2     │ 0.331898

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.596863
2     │ 0.956212
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.965885  0.633321
2     │  0.80207   0.29035
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[14486665179875284614,  8699333159457747740]  =  0.76021814252174
	[2194332839417359044 ,  8699333159457747740]  =  0.6725438280670162
	[4500327340515608799 ,  8058121953372963805]  =  0.8408225874513027
	[17498567691103755585, 15774366784000975931]  =  0.2689951708828173
	[17609421066205025733, 16112569381171233070]  =  0.39792097070985166
	[15935843203573098002, 15987302811816728974]  =  0.7734716951994665
	[2211499036183048350 ,  2836200141957565154]  =  0.17142724701267498
	[15467445053953480973,  8030317335019090683]  =  0.0915629052127489
	                                              ⋮
	[15845698495718141805, 10408056422914801862]  =  0.16283608817406914
	[6806539949965918083 ,  8507737825562801990]  =  0.4536559766899584
	[7957587899775749890 ,   370154515922583624]  =  0.7420511820381632
	[11170631332889122227, 16996133433751471822]  =  0.6780242032911854
	[15042065790022137782,  4682100877033407764]  =  0.2710517486910926
	[1473175892488538621 ,  7630593249633640373]  =  0.4511673280001378
	[4174785917342603289 ,  2318046236442875673]  =  0.5517353383294499
	[14026963558639697815, 10361974346531339474]  =  0.22956639941221701
	[11488343865249833965,  2758171916068192631]  =  0.15973861059583006Timing named index: 0.000625229, array index: 0.000681769, named key: 0.126208443
Timing sum large sparse array: 0.009673967, named: 0.021042153
done!
INFO: NamedArrays tests passed

>>> End of log
