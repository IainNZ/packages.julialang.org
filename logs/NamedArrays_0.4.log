>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (834.5703125 MB free)
Uptime: 14575.0 sec
Load Avg:  0.9345703125  0.98828125  1.0302734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     681196 s       6164 s      62386 s     555247 s         26 s
#2  3500 MHz     461050 s        623 s      53492 s     900154 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.03585891383498829	.2915561963940019	.38615483369467696	.035405513702338354
two	.8460197927394639	.3623022279774768	.791735716822821	.7839802119341621
a	40
b	69
c	77
d	92
e	19
f	32
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.416241  0.0763842   0.594321
b           │  0.650017   0.305819   0.505929 0.41624146506076465 0.41624146506076465
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.416241  0.0763842   0.594321
b     │  0.650017   0.305819   0.505929
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.416241  0.0763842   0.594321
b           │  0.650017   0.305819   0.505929
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.416241  0.0763842   0.594321
b     │  0.650017   0.305819   0.505929
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0402259   0.699689  0.0296711   0.530844
er              │ 0.0716159   0.571606   0.585834  0.0881369
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140360047969840
0-element Named Array{Any,1}

[0.41975092937482006 0.9844773387816845 0.3949850558829999 0.8856269143380997
 0.8141790999900547 0.24372353264781177 0.7811244479667416 0.45294031770074605]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.419751  0.984477  0.394985  0.885627
two   │ 0.814179  0.243724  0.781124   0.452942x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.419751  0.984477  0.394985  0.885627
two   │ 0.814179  0.243724  0.781124   0.452942x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │       1.4632     -0.918101  …     -0.212361      0.126727
2     │     0.556006      0.453809  …     -0.278234     -0.6765231000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │     1.36829    -0.765029
2     │     1.26234    -0.364931
3     │      1.1108    -0.516011
4     │    -0.76249       1.3622
5     │     1.33819    -0.283486
6     │    0.157315     0.469766
7     │    0.450053     0.415355
8     │   -0.468739     -1.99223
9     │   -0.412717     -1.42148
⋮                 ⋮            ⋮
992   │    -1.22685     0.996054
993   │  -0.0465844     0.184701
994   │     1.26186      1.48269
995   │    -1.22038      0.18981
996   │    0.304822     0.186229
997   │   -0.266708      0.89441
998   │     1.44804    -0.836321
999   │     1.27127     -1.71297
1000  │ -0.00537529      0.879011000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.160687
2    │  0.900033
3    │   1.98706
4    │ -0.263895
5    │  -1.41232
6    │   1.89686
7    │ -0.411444
8    │ -0.792821
9    │  0.374226
⋮              ⋮
992  │   1.42957
993  │   1.38622
994  │ -0.979598
995  │ -0.475989
996  │ -0.637899
997  │ -0.598575
998  │  0.486342
999  │ -0.262906
1000 │ -0.6579122x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.788975  0.102266
1           │ 0.226843  0.948485

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.114468  0.859918
1           │ 0.713402  0.719771
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.212333
2  │ 0.919948
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.935024  0.539132
2     │ 0.128245   0.50533
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0784242   0.237879
2     │  0.875819   0.887182

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.260571    0.20305
2     │ 0.0152582   0.488549
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.31574  0.535276
2     │ 0.108903  0.602544

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.340098   0.717664
2     │  0.347137  0.0385056

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.964237  0.109204
2     │ 0.478492  0.609264

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.47278  0.769087
2     │ 0.373497  0.814805
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.303472   0.379735
2     │ 0.0325978   0.120479

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.423353  0.784907
2     │ 0.342073  0.202083

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.153507  0.596051
2     │ 0.665968  0.125509
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.376594  0.695416

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.856965  0.886665
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │           1
──────┼────────────
1     │    0.376111
2     │ 0.000357011

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.334017
2     │ 0.791148
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.636273  0.980499
2     │ 0.838234  0.355079
1000×1000 Named sparse matrix with 100 Float64 nonzero entries:
	[1017373194429467360 , 14343632987770563929]  =  0.18802539349424663
	[9191039320899596764 , 16462243977607957471]  =  0.9697765072566253
	[5122894113285174381 , 11080872162023102847]  =  0.6435785811017136
	[5071406905266041170 , 10106592262940987645]  =  0.7143396518263212
	[1861743268047760089 ,  4302721723742542942]  =  0.25922485048364896
	[18254765775227581026,  2836200141957565154]  =  0.004953562939039591
	[175416465984822993  , 10684064542878956755]  =  0.792302627868402
	[15128086289133168420,  6947860236989419941]  =  0.2168582633896894
	                                              ⋮
	[14026963558639697815,  6673174246040850652]  =  0.4772920297321368
	[13617136782637692591, 13700233674872906346]  =  0.9858205788166945
	[584064394420725980  , 13710539999002292266]  =  0.40547984465977027
	[6673174246040850652 , 11382910810432795234]  =  0.4198804199801969
	[8351221943604278133 ,  2520040687452014961]  =  0.8739024342079813
	[13864621993906192564, 10663619072362037589]  =  0.053367875393856457
	[14264755834865868473,  2758171916068192631]  =  0.4914586409708135
	[9920432272297441209 ,  1842419535934980543]  =  0.42653889775236453
	[1241495296552961994 ,  3733926995351842633]  =  0.45016973145375205Timing named index: 0.000824806, array index: 0.000714362, named key: 0.124708761
Timing sum large sparse array: 0.009884031, named: 0.035247542
done!
INFO: NamedArrays tests passed

>>> End of log
