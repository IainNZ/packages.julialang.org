>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (798.8515625 MB free)
Uptime: 13723.0 sec
Load Avg:  0.984375  0.97119140625  1.02587890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     646688 s       6666 s      59453 s     516765 s         26 s
#2  3500 MHz     442533 s        137 s      53326 s     832334 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8622003903690971	.26495576014576216	.0978505632899287	.02546101148730351
two	.2620585280865748	.8172553027367098	.6759654713380956	.8026998202773945
a	12
b	36
c	50
d	18
e	32
f	62
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.310588   0.575062   0.479137
b           │ 0.0162402   0.935683   0.732471 0.31058800741557135 0.31058800741557135
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.310588   0.575062   0.479137
b     │ 0.0162402   0.935683   0.732471
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.310588   0.575062   0.479137
b           │ 0.0162402   0.935683   0.732471
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.310588   0.575062   0.479137
b     │ 0.0162402   0.935683   0.732471
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.649888  0.327306  0.282744  0.755769
er              │ 0.193506  0.919317   0.26952  0.793222
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140660027929832
0-element Named Array{Any,1}

[0.07888870781294277 0.933743161468412 0.30331537781383355 0.5004483241098159
 0.9950049531855392 0.8699932435789732 0.6878922166936512 0.7873717551849395]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0788887   0.933743   0.303315   0.500448
two   │  0.995005   0.869993   0.687892   0.7873722x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0788887   0.933743   0.303315   0.500448
two   │  0.995005   0.869993   0.687892   0.7873722x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.136288    -0.440746  …     0.544872     0.464713
2     │    -1.09722     0.512453  …      1.75918      1.796141000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.555426     1.09703
2     │   0.878262   -0.562992
3     │   0.535552     1.55129
4     │   0.790599   -0.340318
5     │   0.524935   -0.199776
6     │    1.00702   -0.362728
7     │   -1.00928    0.352577
8     │ -0.0983976     1.16431
9     │   -1.41427   -0.146741
⋮                ⋮           ⋮
992   │   0.627311    -0.52604
993   │  0.0327334     2.67534
994   │  -0.280316    0.666386
995   │  -0.542034    -0.61119
996   │    1.28955     -1.6088
997   │    1.53705    0.407992
998   │   -2.33276   -0.721001
999   │  -0.884889     1.01695
1000  │    1.89341    0.4781481000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.327115
2    │  0.289247
3    │   1.49391
4    │  0.380065
5    │ -0.618985
6    │ -0.630121
7    │ -0.609876
8    │     1.675
9    │  -1.55404
⋮              ⋮
992  │ -0.197189
993  │  -1.20531
994  │ -0.173586
995  │  -1.34342
996  │  -2.18154
997  │ -0.830263
998  │   1.06732
999  │  0.258873
1000 │ -0.8950952x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.407523  0.669671
1           │ 0.354048  0.293205

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.320963   0.845391
1           │ 0.0113511   0.120017
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.856674
2  │ 0.785308
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.155061  0.190184
2     │ 0.375571  0.981634
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.129291    0.634289
2     │ 0.00683275     0.93377

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.278572  0.741757
2     │ 0.831999  0.557035
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.91365  0.120084
2     │ 0.177923   0.72802

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.434714  0.333946
2     │ 0.565227  0.517444

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.801904  0.421976
2     │ 0.748303  0.250956

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.621213   0.696104
2     │ 0.0131182   0.621382
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.676473   0.66594
2     │ 0.143388   0.80127

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.855954  0.0539833
2     │  0.494323   0.901187

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.713739  0.380856
2     │ 0.800252  0.305007
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.724827  0.940444

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0382774    0.96594
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.837534
2     │ 0.295579

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.700647
2     │ 0.254657
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.201505  0.648966
2     │ 0.313443  0.691528
1000×1000 Named sparse matrix with 81 Float64 nonzero entries:
	[3098092458876750059 , 14343632987770563929]  =  0.7157701867261721
	[5312631360709731698 ,  4247719799217886270]  =  0.3716136939882537
	[17508789370476597174,  9920432272297441209]  =  0.7070562746318236
	[7175786629381788322 ,  8265524791738013937]  =  0.4393231406277618
	[16243515418520287792, 16246598853062742192]  =  0.20252631872833882
	[5927176887743683346 , 13342932250377702532]  =  0.8153234680405568
	[18213258608646582471, 13342932250377702532]  =  0.9032995346001327
	[1388406624826958703 ,  2836200141957565154]  =  0.2733867289161054
	                                              ⋮
	[4329451781928897369 ,  8357516066305821252]  =  0.8875726915560382
	[10981095045923005722,  1566360107212290167]  =  0.31280695001944725
	[7528617485284887424 , 14944477062144183931]  =  0.6951246085821765
	[14995138918287078531,  4182991028086505933]  =  0.5352133724408172
	[13970367575607681105,  4788923618671962983]  =  0.3375655695932094
	[8088697103424080731 , 16031689834122954645]  =  0.32563572994312406
	[12786760913832678713, 14835807873575694564]  =  0.02693618496044614
	[1987182164192973075 ,  1842419535934980543]  =  0.22295943471964574
	[12072215667938940660,  3010300210541878305]  =  0.11123689791729774Timing named index: 0.000724629, array index: 0.000967298, named key: 0.124979544
Timing sum large sparse array: 0.011315179, named: 0.025056876
done!
INFO: NamedArrays tests passed

>>> End of log
