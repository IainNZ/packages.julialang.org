>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (817.2890625 MB free)
Uptime: 13857.0 sec
Load Avg:  0.98876953125  0.9853515625  1.0205078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz     627878 s       3909 s      55396 s     565482 s         28 s
#2  3495 MHz     439504 s       2878 s      49625 s     851852 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.09091595845524081	.8079638118336172	.5174573578259201	.8776710654044133
two	.8580579177901821	.711286217108513	.9856184678364619	.06977468727595215
a	90
b	32
c	63
d	61
e	95
f	61
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │    0.6072   0.702761   0.505927
b           │  0.746241   0.204945  0.0150317 0.6072004813210787 0.6072004813210787
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │    0.6072   0.702761   0.505927
b     │  0.746241   0.204945  0.0150317
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │    0.6072   0.702761   0.505927
b           │  0.746241   0.204945  0.0150317
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │    0.6072   0.702761   0.505927
b     │  0.746241   0.204945  0.0150317
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.313849   0.569484   0.220007   0.224677
er              │  0.525554   0.800884   0.643198  0.0647969
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140438938695472
0-element Named Array{Any,1}

[0.7445173667012073 0.10451762907144246 0.6229455753002566 0.6361134659936136
 0.1995102924385339 0.19807420079308558 0.6059396397862298 0.027789504400665077]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.744517   0.104518   0.622946   0.636113
two   │   0.19951   0.198074    0.60594  0.02778952x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.744517   0.104518   0.622946   0.636113
two   │   0.19951   0.198074    0.60594  0.02778952x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      0.56374     -0.763083  …      0.917613      -1.68448
2     │     -1.72265     -0.182921  …      0.951706      0.7495521000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.635551    0.877179
2     │   -1.04667      1.1089
3     │ -0.0134119    0.404034
4     │   0.119211     1.29539
5     │   0.447092     0.99941
6     │   -1.14525     2.29131
7     │  -0.237975   -0.319281
8     │   0.345041    -1.63898
9     │     1.2811     1.15358
⋮                ⋮           ⋮
992   │   0.678417   -0.566776
993   │    1.44679   -0.235504
994   │  -0.327213   -0.654774
995   │  -0.542529    0.692155
996   │  -0.926466    0.385336
997   │  -0.989284    0.387881
998   │   0.407731      1.3521
999   │   0.457754   -0.353511
1000  │   -1.29372    0.9988481000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  0.0824952
2    │    1.42317
3    │  -0.850457
4    │    1.80572
5    │  -0.346938
6    │   0.904124
7    │ -0.0993687
8    │    2.25343
9    │   0.586158
⋮               ⋮
992  │   -1.18953
993  │   0.320209
994  │    1.42092
995  │  -0.166278
996  │  -0.545183
997  │    1.64281
998  │  0.0768665
999  │    0.34212
1000 │   0.4151382x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.104299  0.896983
1           │ 0.658783  0.504519

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.962426  0.735124
1           │ 0.840537  0.366145
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.624712
2  │ 0.264577
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.211529   0.617673
2     │  0.617965  0.0550433
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.14307    0.8704
2     │  0.35869  0.207916

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.145283   0.515253
2     │ 0.0220843    0.14333
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.351304   0.771774
2     │ 0.0723316   0.771043

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │    0.6295  0.0620867
2     │  0.535179    0.67343

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0519144   0.393303
2     │  0.800512   0.513311

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.374766  0.176316
2     │ 0.944421  0.308813
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.544534   0.12835
2     │ 0.809834  0.481892

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.189126    0.54028
2     │  0.191485  0.0735867

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.582378  0.639478
2     │ 0.153902  0.971366
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.932711  0.284596

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.764281   0.51372
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.387689
2     │ 0.809929

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.443079
2     │ 0.102287
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.554914  0.224634
2     │ 0.996754  0.263433
1000×1000 Named sparse matrix with 100 Float64 nonzero entries:
	[10723354513323415010, 13789993170142104254]  =  0.959588391566873
	[12281884974520114934,  6564272639106249010]  =  0.8353877253085786
	[14276971493366205365,  9283096199793891681]  =  0.14465293961318304
	[16077859356318100249, 10106592262940987645]  =  0.29954626499421977
	[10596751188013898940, 11496001657944805140]  =  0.9627162079177918
	[18365636711081267169, 11496001657944805140]  =  0.10028794993912515
	[898568979075944978  , 18443816037252674910]  =  0.5481010277978269
	[16752464052319560607,  5062864901616737721]  =  0.1436610458646539
	                                              ⋮
	[3228790081375138106 , 14169799449801373117]  =  0.9393125251078991
	[9782708399399209194 , 14944477062144183931]  =  0.9817258957668717
	[18332548282271391638, 14340416566338039723]  =  0.7310265193612779
	[18332040070485059392,  5567682937376679626]  =  0.21766395853595766
	[2564073136243113693 ,  6332455606016291123]  =  0.053610396425854745
	[11033897610157224162,  6332455606016291123]  =  0.5230252425870898
	[9307608947950104313 ,  2758171916068192631]  =  0.3993355024016376
	[12281884974520114934,  3010300210541878305]  =  0.6194924155994306
	[6024721768026058178 , 13950575499123628905]  =  0.814013065542065Timing named index: 0.0007421, array index: 0.00035723, named key: 0.071925994
Timing sum large sparse array: 0.010014727, named: 0.02447782
done!
INFO: NamedArrays tests passed

>>> End of log
