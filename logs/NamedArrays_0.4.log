>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (786.59375 MB free)
Uptime: 14817.0 sec
Load Avg:  1.10888671875  0.9541015625  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     695981 s        507 s      61262 s     578735 s         24 s
#2  3500 MHz     465560 s       6412 s      51102 s     911996 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5696108999030063	.41790032089489637	.0766173190473094	.24597106668276614
two	.9530657161882838	.9277738993658506	.1654953158619703	.2716167945053951
a	82
b	4
c	94
d	54
e	84
f	26
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.135757  0.373614  0.797012
b           │ 0.602497  0.206066  0.240697 0.13575672908687153 0.13575672908687153
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.135757  0.373614  0.797012
b     │ 0.602497  0.206066  0.240697
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.135757  0.373614  0.797012
b           │ 0.602497  0.206066  0.240697
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.135757  0.373614  0.797012
b     │ 0.602497  0.206066  0.240697
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.330983  0.00367639    0.321962    0.379136
er              │   0.811553    0.181845    0.608031    0.225339
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139776452353840
0-element Named Array{Any,1}

[0.9068761429061551 0.02284429338344962 0.1776562721399524 0.7896842173286192
 0.2393079185758109 0.5157144038786752 0.20340424641068 0.351649149120008]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.906876  0.0228443   0.177656   0.789684
two   │  0.239308   0.515714   0.203404   0.3516492x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.906876  0.0228443   0.177656   0.789684
two   │  0.239308   0.515714   0.203404   0.3516492x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.05953    0.0777541  …      -1.1401    -0.667276
2     │    -1.36253      0.95032  …     0.375201    -0.2331571000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.234271     1.17679
2     │   0.266462    0.885197
3     │   0.127291     0.41849
4     │   -0.75777   -0.874245
5     │   -1.02182  -0.0883252
6     │   -1.11268  -0.0457244
7     │   0.461988    -2.55913
8     │   0.396504   -0.315852
9     │ -0.0521532    -1.90998
⋮                ⋮           ⋮
992   │   0.467725     0.35835
993   │   -0.67636    0.114807
994   │   0.296346   0.0848401
995   │  -0.255447     -1.2861
996   │  -0.117324     2.65254
997   │   -1.00349    0.375953
998   │  -0.987527   -0.049781
999   │   0.424799   -0.758127
1000  │    1.81972    0.4381811000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.70466
2    │  0.870556
3    │ -0.934699
4    │  -1.81986
5    │  -1.98159
6    │  -1.22485
7    │  0.278268
8    │ -0.492541
9    │   0.72072
⋮              ⋮
992  │ -0.322596
993  │   1.28739
994  │   2.48131
995  │ -0.282723
996  │  -1.53653
997  │  -0.38087
998  │  -1.61164
999  │  0.384768
1000 │ -0.4822872x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.747336   0.82521
1           │ 0.725044  0.713082

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.806632  0.812708
1           │ 0.664187  0.408132
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.975033
2  │ 0.640718
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.406411  0.840997
2     │ 0.997881  0.822723
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.423627  0.962006
2     │ 0.965365  0.417729

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.967095  0.376814
2     │ 0.680185  0.257154
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.618284  0.720296
2     │ 0.586572  0.619384

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.582741  0.0338539
2     │  0.127557   0.445382

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.365808  0.624145
2     │  0.76434  0.188822

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.318872   0.451711
2     │ 0.0356017   0.854063
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.468019  0.982839
2     │ 0.687012  0.397246

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.939118   0.969401
2     │ 0.0723087   0.505508

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.798412  0.435614
2     │ 0.117043  0.783868
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.361772  0.225505

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.117253  0.038966
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.204592
2     │ 0.436266

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.844489
2     │ 0.646955
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.286749  0.491913
2     │ 0.835094  0.199933
1000×1000 Named sparse matrix with 103 Float64 nonzero entries:
	[16358543418686800136,  6526988131186142725]  =  0.8567284589509652
	[281356413667926651  ,  9690422262975321697]  =  0.24010348508809054
	[6216214939212987967 ,  1703847331300677320]  =  0.8850644384864355
	[3215182586804062522 ,  8058121953372963805]  =  0.8362276917603604
	[8171630255572214773 ,  6134978669850253296]  =  0.8742728750062627
	[12195123354423713188, 16462243977607957471]  =  0.15354665464106487
	[12881399881645621208,  6046649976662626325]  =  0.0548997178756796
	[9051203263452778593 ,  5062864901616737721]  =  0.24595776773549916
	                                              ⋮
	[14475185020288943568, 16946861163327142185]  =  0.5574368284682805
	[7425701996526302553 , 16077859356318100249]  =  0.02572916748335552
	[6216214939212987967 , 11604119926906451644]  =  0.3357265677191952
	[2836200141957565154 , 17401827539426951865]  =  0.04560482941377919
	[12901330087571726961,     1348625733340586]  =  0.7263075546024067
	[11527542315164007414,  2792481481398066916]  =  0.9248896870513361
	[5688850749322968570 , 18148906667482527649]  =  0.907511425299558
	[3014575823142358933 ,  1203336841330469213]  =  0.845843101399264
	[12989059827452924244,  9223427034658990711]  =  0.2553667097247967Timing named index: 0.000711328, array index: 0.000451427, named key: 0.073082993
Timing sum large sparse array: 0.006735596, named: 0.015353924
done!
INFO: NamedArrays tests passed

>>> End of log
