>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (800.5 MB free)
Uptime: 13691.0 sec
Load Avg:  0.85302734375  0.93115234375  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     653013 s         48 s      56290 s     519428 s         22 s
#2  3499 MHz     408584 s       6592 s      48912 s     852211 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.10.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8085825246597349	.7906077134889986	.9427711212985124	.7736046284685913
two	.3496134211503934	.5647379179188656	.04554660666231891	.3562119094911578
a	85
b	11
c	52
d	84
e	63
f	37
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.431036  0.919157  0.382501
b           │ 0.754622  0.150735  0.654334 0.4310357687063464 0.4310357687063464
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.431036  0.919157  0.382501
b     │ 0.754622  0.150735  0.654334
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.431036  0.919157  0.382501
b           │ 0.754622  0.150735  0.654334
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.431036  0.919157  0.382501
b     │ 0.754622  0.150735  0.654334
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.425269   0.370934  0.0283443    0.95789
er              │  0.324348  0.0366356   0.142379   0.697198
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139828661798224
0-element Named Array{Any,1}

[0.07189619675498404 0.6432082583830876 0.3959147623249346 0.9351547719902362
 0.7995455273115422 0.19688143247170298 0.5528393305496302 0.7173801174104837]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0718962   0.643208   0.395915   0.935155
two   │  0.799546   0.196881   0.552839    0.717382x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0718962   0.643208   0.395915   0.935155
two   │  0.799546   0.196881   0.552839    0.717382x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.489532      -1.88282  …        0.9026     -0.686303
2     │     0.702612     -0.310532  …      0.491891      0.8309711000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    2.17992     1.84924
2     │   -1.00198     1.30811
3     │   0.744544    0.466992
4     │   0.283799  -0.0970656
5     │  -0.287887     1.05947
6     │  -0.783232     0.66746
7     │    -1.5441   -0.145676
8     │   0.115373    -1.21145
9     │   0.829333   -0.765818
⋮                ⋮           ⋮
992   │   0.875496   -0.199937
993   │  -0.852586   -0.315798
994   │  -0.718896  -0.0977291
995   │    0.87423     2.23722
996   │   0.442215     1.18613
997   │  -0.052757   0.0682501
998   │ -0.0878315   -0.329804
999   │  -0.359491   -0.274628
1000  │  -0.941025     1.043231000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.40861
2    │  0.875487
3    │  0.466078
4    │   1.24101
5    │ -0.529863
6    │ -0.674858
7    │  0.313019
8    │  0.232634
9    │  0.508003
⋮              ⋮
992  │ -0.320401
993  │  -0.43271
994  │ -0.250981
995  │ -0.221698
996  │  -1.19576
997  │  -1.15111
998  │  -1.45912
999  │ -0.236818
1000 │  -1.511712x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0177367    0.25343
1           │  0.134204   0.174796

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.645131  0.774343
1           │ 0.100821  0.675484
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.173618
2  │ 0.0667529
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.362704  0.552915
2     │ 0.172919  0.827274
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.167357  0.637001
2     │ 0.629923  0.249042

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.179139  0.722825
2     │ 0.704436  0.876021
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.761859  0.443907
2     │ 0.608591  0.973078

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.565415  0.659506
2     │ 0.666747  0.170196

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.476237  0.527516
2     │ 0.872075  0.992747

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.213267  0.679993
2     │ 0.351626  0.110059
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.340504  0.856525
2     │ 0.204762  0.886282

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.826528  0.150231
2     │ 0.739807  0.107453

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.805264  0.716912
2     │ 0.800831  0.981304
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.903122  0.630911

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.83808  0.618817
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.252503
2     │ 0.653297

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.383212
2     │ 0.0098076
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0205278   0.825192
2     │   0.50299    0.20342
1000×1000 Named sparse matrix with 100 Float64 nonzero entries:
	[14626980926454133241,  6526988131186142725]  =  0.20767565568154933
	[7135933997555694158 ,  4247719799217886270]  =  0.9455652724893642
	[9526148563984720196 , 10601912832305821454]  =  0.16571757957576394
	[3065944537250428989 ,  4786699431706339713]  =  0.5366619747505408
	[4782469333680129318 , 18168544338330653462]  =  0.292211089658063
	[8330309809540032104 ,  5723128691850249417]  =  0.7527338387464773
	[11197161442816233100,  5839463014734961202]  =  0.8675974832941682
	[15857670694969494589, 12532053171191892965]  =  0.9821309542669108
	                                              ⋮
	[6345398762637942383 ,   370154515922583624]  =  0.7199865760784274
	[11197161442816233100, 18254765775227581026]  =  0.47418973789964936
	[14296059709790261690, 15717097331822026300]  =  0.9256813639643424
	[7175786629381788322 , 11641483179283066996]  =  0.39587851352066483
	[2050037547392292084 ,  4788923618671962983]  =  0.4281880076838407
	[1656903684371133098 , 11470862121108514714]  =  0.3978380458292601
	[839451858133325944  , 11314283927973801071]  =  0.5656472299432549
	[12072215667938940660, 15240003619098155971]  =  0.13039345979098727
	[12901330087571726961,  3733926995351842633]  =  0.016663348616086093Timing named index: 0.000787195, array index: 0.000689581, named key: 0.136145647
Timing sum large sparse array: 0.011247143, named: 0.027465079
done!
INFO: NamedArrays tests passed

>>> End of log
