>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (848.0859375 MB free)
Uptime: 14548.0 sec
Load Avg:  0.9833984375  0.9736328125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     683926 s       1691 s      58326 s     573479 s         21 s
#2  3500 MHz     472099 s       4774 s      48783 s     881136 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5122087661188901	.42062643567739344	.8976131539353891	.6326845468301827
two	.5506451141911846	.2376439086880906	.13968137390976088	.07266665157910568
a	14
b	58
c	47
d	74
e	51
f	56
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.27162  0.776711  0.247575
b           │ 0.730631  0.515686  0.986051 0.27162011346912096 0.27162011346912096
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.27162  0.776711  0.247575
b     │ 0.730631  0.515686  0.986051
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.27162  0.776711  0.247575
b           │ 0.730631  0.515686  0.986051
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.27162  0.776711  0.247575
b     │ 0.730631  0.515686  0.986051
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.841545   0.994757   0.814037   0.859553
er              │  0.734089  0.0886739  0.0327594   0.910911
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140435785651432
0-element Named Array{Any,1}

[0.1442948865089082 0.31684206937428017 0.39991608227890674 0.8855093269921919
 0.82112375266598 0.49522448140268605 0.5994156142613687 0.6450020854970724]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.144295  0.316842  0.399916  0.885509
two   │ 0.821124  0.495224  0.599416  0.6450022x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.144295  0.316842  0.399916  0.885509
two   │ 0.821124  0.495224  0.599416  0.6450022x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.22629      1.16222  …      2.28838     0.642177
2     │    0.195447        1.485  …   -0.0405364     -1.214171000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  -1.03627   0.705401
2     │ -0.634505   -1.40985
3     │  0.994983   -1.21329
4     │  0.655209  -0.690114
5     │ -0.555051  -0.385486
6     │ -0.621661    1.09171
7     │  0.572789   -1.55538
8     │ -0.615264    1.06136
9     │  -1.20577   0.967857
⋮               ⋮          ⋮
992   │ 0.0103724   -1.47992
993   │  -1.19565  -0.369924
994   │  -1.17412    1.34067
995   │  -2.36167   0.287075
996   │   0.44317    1.34601
997   │  0.184527   0.249318
998   │ -0.141401   0.465921
999   │  -1.52329   -1.11072
1000  │  -2.66948    -1.22181000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.283832
2    │  -1.83803
3    │ -0.746209
4    │   2.56901
5    │ -0.382164
6    │  0.654117
7    │ -0.107516
8    │  0.898798
9    │ -0.981523
⋮              ⋮
992  │ -0.737716
993  │  -1.27564
994  │ -0.289113
995  │  -1.36795
996  │  0.522789
997  │  0.581378
998  │ -0.826745
999  │  -2.44612
1000 │   1.319582x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.715972  0.891121
1           │ 0.539013  0.308314

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.894755  0.548252
1           │ 0.425365  0.709274
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.949357
2  │ 0.294673
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.724515  0.694072
2     │ 0.438967  0.807755
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.309802  0.837172
2     │ 0.536052  0.961442

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.188647  0.890053
2     │  0.96567  0.977336
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.950887  0.876763
2     │ 0.834234  0.516385

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.814364   0.310153
2     │ 0.0853581   0.551083

[:, :, C=1, D=2] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.256146     0.158844
2     │ 0.000863431     0.876178

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.958734  0.852972
2     │ 0.648174  0.973705
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.329795  0.0418602
2     │  0.359534   0.298819

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.409535  0.485965
2     │ 0.756601  0.401601

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0324979   0.838654
2     │  0.690935   0.160763
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.661437  0.487869

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.719936  0.0119412
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.36284
2     │ 0.750097

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.348557
2     │  0.98576
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.839707  0.152582
2     │ 0.176392  0.333967
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[281356413667926651  ,  5647414292592918739]  =  0.5040446336977424
	[3428368603158593878 ,  1703847331300677320]  =  0.9452576430797297
	[16390501590956164603, 14343632987770563929]  =  0.7031304569788248
	[16083059188908835467, 11496001657944805140]  =  0.2434216396086084
	[4682100877033407764 , 14995138918287078531]  =  0.041004966792975495
	[5607123224040969390 , 18168544338330653462]  =  0.40034811800149184
	[8848098725795227459 ,  8725235013359650451]  =  0.600998001595888
	[7425701996526302553 , 15774366784000975931]  =  0.8954874941914359
	                                              ⋮
	[6295185824851981085 , 10361974346531339474]  =  0.0756441000260546
	[13342932250377702532, 17737936919457265947]  =  0.9903164527303969
	[1800328568888766379 , 14057278280866812536]  =  0.17009903178542207
	[10109836606734241243, 16836080019131185762]  =  0.006596985059402094
	[17466052388280872253, 16836080019131185762]  =  0.966670960361733
	[281356413667926651  , 10663619072362037589]  =  0.6781339882446893
	[2858848191422151957 , 13970367575607681105]  =  0.5353101383141123
	[10685333727101695973,  1842419535934980543]  =  0.9040503080177191
	[13096237947071787928,  9133170895916704973]  =  0.346810866766444Timing named index: 0.00080084, array index: 0.000748161, named key: 0.134914639
Timing sum large sparse array: 0.005514997, named: 0.011527478
done!
INFO: NamedArrays tests passed

>>> End of log
