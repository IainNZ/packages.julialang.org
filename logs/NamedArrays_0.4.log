>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (846.80859375 MB free)
Uptime: 15297.0 sec
Load Avg:  1.0517578125  0.9560546875  0.95263671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     678269 s         55 s      53863 s     645828 s         28 s
#2  3500 MHz     437588 s       6140 s      43932 s     985581 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.8736820699665495	.7168624617678028	.8077455445694766	.5554674077258874
two	.9175647890803718	.3498303384632917	.7112825031161041	.005559802049277307
a	81
b	13
c	95
d	13
e	24
f	23
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.674719  0.669672  0.659512
b           │ 0.616956  0.630324  0.783615 0.674718814815598 0.674718814815598
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.674719  0.669672  0.659512
b     │ 0.616956  0.630324  0.783615
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.674719  0.669672  0.659512
b           │ 0.616956  0.630324  0.783615
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.674719  0.669672  0.659512
b     │ 0.616956  0.630324  0.783615
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.238151  0.238711  0.861797  0.416827
er              │  0.89023   0.03749  0.898916  0.186376
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140513443220112
0-element Named Array{Any,1}

[0.693444770078115 0.4802346834317377 0.6714532580958414 0.801979853876946
 0.07219565058211974 0.8025530020225027 0.08988755045241459 0.22508448524210478]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.693445   0.480235   0.671453    0.80198
two   │ 0.0721957   0.802553  0.0898876   0.2250842x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.693445   0.480235   0.671453    0.80198
two   │ 0.0721957   0.802553  0.0898876   0.2250842x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.244042    -0.541317  …      1.09439     0.545882
2     │    -3.11924      0.55171  …    -0.107203      1.930581000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.946731    0.939032
2     │    0.65348  -0.0405508
3     │  0.0985188   -0.698693
4     │   -0.29894     1.11199
5     │   -1.21261  -0.0788943
6     │   -0.61715  -0.0417097
7     │  -0.536131    0.722204
8     │    2.46172   -0.615602
9     │   0.659408     -1.0679
⋮                ⋮           ⋮
992   │ -0.0523756    0.833527
993   │  -0.997661    -2.27398
994   │    0.29824    0.378223
995   │  -0.750671    0.609803
996   │  -0.153979   -0.309541
997   │  -0.157409    0.450744
998   │   -1.01232   -0.195707
999   │ -0.0828029    0.357667
1000  │  -0.546547    -1.050661000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.673105
2    │  -1.24116
3    │   1.94608
4    │  -2.22116
5    │   1.04628
6    │ -0.152183
7    │  0.168908
8    │ -0.984938
9    │  -1.22905
⋮              ⋮
992  │  -1.57137
993  │ -0.912474
994  │   1.22548
995  │  -1.62108
996  │  0.404228
997  │  0.932641
998  │  0.387213
999  │   1.08467
1000 │ -0.5219472x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.93067  0.397078
1           │ 0.936874  0.220003

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.534652  0.0679457
1           │  0.617625   0.235996
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.656706
2  │ 0.587069
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0935852   0.343996
2     │  0.320515   0.194338
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.127011  0.926957
2     │ 0.663013  0.736352

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.828366  0.0196468
2     │  0.384102    0.74946
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.356404  0.396416
2     │ 0.546265  0.325941

[:, :, C=2, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0480187    0.664498
2     │ 0.00430321    0.367947

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.309599   0.98836
2     │ 0.469542  0.801619

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.166453  0.119798
2     │ 0.786285   0.46828
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.758031  0.215768
2     │ 0.998221  0.196594

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.516641   0.755505
2     │ 0.0925373   0.356145

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0619039  0.0522104
2     │  0.504913   0.588481
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.935316  0.223362

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.303679   0.62773
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.483171
2     │ 0.741409

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.133121
2     │ 0.718789
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0196657   0.868832
2     │  0.263078   0.405801
1000×1000 Named sparse matrix with 109 Float64 nonzero entries:
	[6565262192402102057 ,  8699333159457747740]  =  0.8797366743352759
	[11581033251142794164, 13888991764943741743]  =  0.37882947525391875
	[11568453395938084092, 16462243977607957471]  =  0.316852364929904
	[12921543294441418094, 14033074738777421392]  =  0.3590754277459398
	[11798934497353053232, 14033074738777421392]  =  0.7266719784677194
	[10626898038408744182,  6806539949965918083]  =  0.049175633971231036
	[2836200141957565154 , 14995138918287078531]  =  0.5852322258678733
	[16427568314583164731,  4329451781928897369]  =  0.029828257212517917
	                                              ⋮
	[16406121832856650968,  4214085865611670439]  =  0.48730569056560724
	[14169799449801373117, 16836080019131185762]  =  0.7228836618141492
	[16752464052319560607, 10663619072362037589]  =  0.48450843243757546
	[11024660093340930346, 10655964431342481635]  =  0.18483658939498882
	[10369386120472232477, 11314283927973801071]  =  0.6397537482642479
	[11332520718132086690, 11314283927973801071]  =  0.004362341252260871
	[6681257941163664566 ,  3733926995351842633]  =  0.33322487904257625
	[8330309809540032104 ,  3733926995351842633]  =  0.27916443647940037
	[1533720515531077962 , 13690505415342562739]  =  0.6484811339059489Timing named index: 0.000823986, array index: 0.000751409, named key: 0.122641574
Timing sum large sparse array: 0.009736803, named: 0.025305883
done!
INFO: NamedArrays tests passed

>>> End of log
