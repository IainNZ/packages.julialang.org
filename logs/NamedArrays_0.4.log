>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (773.2890625 MB free)
Uptime: 14959.0 sec
Load Avg:  1.109375  1.0556640625  1.04638671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     684974 s       6502 s      63982 s     594751 s         28 s
#2  3507 MHz     488491 s         96 s      56460 s     901389 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.3951596321214199	.10948551811620422	.452747953430652	.004132152177520609
two	.5428601321680482	.07373903000524895	.6585369234862732	.8722873387242958
a	2
b	95
c	69
d	39
e	30
f	3
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.899463   0.626379   0.997498
b           │  0.954597  0.0835837   0.392019 0.8994630787813225 0.8994630787813225
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.899463   0.626379   0.997498
b     │  0.954597  0.0835837   0.392019
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.899463   0.626379   0.997498
b           │  0.954597  0.0835837   0.392019
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.899463   0.626379   0.997498
b     │  0.954597  0.0835837   0.392019
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.440793  0.0497878   0.131665   0.570169
er              │  0.673459   0.500362   0.756169   0.965355
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139806046405968
0-element Named Array{Any,1}

[0.24245103711851046 0.30896016600788023 0.19013698401030954 0.04602425406833044
 0.6873355798899143 0.06114908863475921 0.21381812508861153 0.5321494395309774]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.242451    0.30896   0.190137  0.0460243
two   │  0.687336  0.0611491   0.213818   0.5321492x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.242451    0.30896   0.190137  0.0460243
two   │  0.687336  0.0611491   0.213818   0.5321492x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.22926      -1.70399  …      0.942943      -2.19179
2     │     0.202108     -0.627461  …      0.448698      0.1357791000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.09244   -0.803384
2     │   0.741967    0.045696
3     │   -1.48338   -0.324096
4     │    0.48948   -0.630502
5     │  -0.583759    -1.75001
6     │   0.289686    0.638386
7     │   0.331203    -0.93448
8     │   0.228067   -0.418697
9     │   -1.09241   -0.241145
⋮                ⋮           ⋮
992   │   0.865043     1.36782
993   │    2.05289    -0.42242
994   │  -0.503114   -0.597602
995   │  -0.598264    -1.86828
996   │   -1.04748   -0.575014
997   │    1.72858  -0.0736771
998   │    0.96728   -0.614842
999   │ 0.00525909     1.39931
1000  │   -1.74427    0.8352951000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.299014
2    │   0.234982
3    │  -0.461013
4    │  -0.199894
5    │    1.20072
6    │   -1.12387
7    │   0.542801
8    │ -0.0672679
9    │   0.341203
⋮               ⋮
992  │  -0.410317
993  │   0.818839
994  │   -1.24237
995  │   0.226246
996  │   0.313267
997  │   0.997434
998  │   0.851479
999  │  -0.454408
1000 │    -1.30742x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.695795  0.180181
1           │ 0.682288  0.784138

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.862198  0.395782
1           │ 0.151823  0.184152
2-element Named Array{Float64,1}
A  │ 
───┼────────
1  │ 0.24378
2  │ 0.78183
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.454278  0.876225
2     │ 0.745504  0.393781
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.343852  0.615909
2     │ 0.976786  0.330368

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.400128  0.415812
2     │ 0.942512  0.504897
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.474016  0.180997
2     │    0.485  0.886279

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.531299  0.758163
2     │ 0.299202  0.182551

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.3592  0.965862
2     │ 0.109753  0.116038

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.22623  0.948887
2     │ 0.687795  0.965275
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0398418   0.326415
2     │ 0.0838644   0.309585

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.893972  0.673531
2     │  0.91709  0.736573

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.352598   0.70839
2     │ 0.403316  0.629091
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.271765  0.792409

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.549648  0.394832
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.984084
2     │ 0.361348

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.208714
2     │  0.66369
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.463383  0.0501314
2     │  0.359441   0.913278
1000×1000 Named sparse matrix with 109 Float64 nonzero entries:
	[1163464316904916440 ,  4400785119912308702]  =  0.08229749394824615
	[16267926292325351807,  5647414292592918739]  =  0.07567060820675753
	[493461921061351564  , 13789993170142104254]  =  0.048493482786475806
	[14475185020288943568, 14517667374310463124]  =  0.03368491336450896
	[1163464316904916440 ,   273396578563598247]  =  0.4379082956590019
	[12819963352506822510, 16408863325498676967]  =  0.7643451707913531
	[1085996354551843550 , 11907679469289587679]  =  0.2196801488657838
	[4913249781191789579 , 13769040811181486455]  =  0.16216402234041727
	                                              ⋮
	[4394159825732135742 ,  5983786778458205040]  =  0.174671381899679
	[16836080019131185762,  5983786778458205040]  =  0.5146308744267736
	[7467562274097903724 , 10361974346531339474]  =  0.5713958845303166
	[3904210102766439976 , 17718833055079784125]  =  0.9029017150725693
	[447754687212557937  , 10024080200852233627]  =  0.02524695655829312
	[9223427034658990711 , 16836080019131185762]  =  0.09718071230580905
	[11488343865249833965,  3010300210541878305]  =  0.05722255778882279
	[9559487157531389543 ,  9133170895916704973]  =  0.6801826852145898
	[7135901794575572161 ,  2588469222286953884]  =  0.8614770336493136Timing named index: 0.000545131, array index: 0.000425018, named key: 0.071249176
Timing sum large sparse array: 0.00640472, named: 0.012931679
done!
INFO: NamedArrays tests passed

>>> End of log
