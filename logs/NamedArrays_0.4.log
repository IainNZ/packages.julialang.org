>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (851.2265625 MB free)
Uptime: 15237.0 sec
Load Avg:  0.916015625  0.9521484375  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     714256 s        333 s      56877 s     602773 s         25 s
#2  3500 MHz     488259 s       5956 s      46586 s     935009 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.6
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.07169314166961116	.6859501151829521	.298802172999856	.4083985497409588
two	.8698948511132725	.7199631995043732	.4018538261987106	.8046576769754639
a	39
b	90
c	94
d	50
e	12
f	12
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.443497   0.38695  0.313703
b           │ 0.837375  0.924303   0.44703 0.44349689017665295 0.44349689017665295
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.443497   0.38695  0.313703
b     │ 0.837375  0.924303   0.44703
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.443497   0.38695  0.313703
b           │ 0.837375  0.924303   0.44703
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.443497   0.38695  0.313703
b     │ 0.837375  0.924303   0.44703
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.10776  0.909566  0.267208  0.510348
er              │ 0.800244  0.659292  0.936178  0.684803
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140122947518320
0-element Named Array{Any,1}

[0.9179690468006858 0.9035871847710872 0.2891634983462428 0.7262722555252532
 0.8316514954900773 0.8304532902354043 0.8980439801496478 0.3747672369863422]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.917969  0.903587  0.289163  0.726272
two   │ 0.831651  0.830453  0.898044  0.3747672x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.917969  0.903587  0.289163  0.726272
two   │ 0.831651  0.830453  0.898044  0.3747672x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.968785      0.207129  …      -0.37386     -0.358864
2     │    -0.570586       1.19005  …     -0.375668      -2.653351000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.706644    -0.666269
2     │    0.571159    -0.256619
3     │   -0.371597      1.28931
4     │    0.646453    -0.219369
5     │    -1.26695  -0.00569192
6     │   -0.964705     0.183031
7     │   -0.909701     0.756631
8     │    0.177746       1.2247
9     │    -1.68394     0.844606
⋮                 ⋮            ⋮
992   │    0.300265       0.2509
993   │    0.598868     0.688059
994   │    0.360996     -1.46166
995   │    0.650373    -0.339995
996   │   -0.407559     0.925161
997   │  -0.0424761     0.960808
998   │  -0.0976162    -0.811083
999   │     0.44404    -0.292498
1000  │    0.485603     0.8204731000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.449876
2    │    2.15019
3    │  -0.673756
4    │ -0.0135628
5    │  -0.405318
6    │   0.164572
7    │  0.0851544
8    │    0.64838
9    │   0.456879
⋮               ⋮
992  │   0.603799
993  │   0.209456
994  │   0.181609
995  │    1.46009
996  │    -0.4814
997  │  -0.065732
998  │  -0.844827
999  │   0.640947
1000 │  -0.1052622x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.15066  0.272424
1           │  0.72935  0.903931

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.27705  0.688987
1           │ 0.402877   0.42863
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.326154
2  │ 0.909108
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.357713  0.819009
2     │ 0.344427  0.265863
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.303721  0.091421
2     │ 0.121072  0.563562

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.890302  0.525295
2     │  0.15927  0.350553
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.596896  0.316282
2     │ 0.155113  0.395029

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.975867  0.961293
2     │ 0.870773  0.252228

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.701116   0.149135
2     │ 0.0510945   0.910828

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.455936   0.98768
2     │ 0.379279  0.340568
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.283435  0.394547
2     │ 0.723958  0.367946

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.954021  0.654053
2     │ 0.742077  0.613911

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.442393  0.168532
2     │ 0.561764  0.984415
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.502685  0.605216

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.52453  0.870394
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.382064
2     │ 0.496712

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.125453
2     │ 0.228642
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0777132   0.830477
2     │  0.691397  0.0350659
1000×1000 Named sparse matrix with 98 Float64 nonzero entries:
	[310341593395597147  , 12809965746239821631]  =  0.4159452644545256
	[14626872821461025492, 10361072080411987344]  =  0.7280242797562493
	[12554874066387155728,  8069307267129313135]  =  0.8367967810788608
	[16332748141415539697, 17676219393380616284]  =  0.608199117848752
	[202800707278592455  , 14995138918287078531]  =  0.20281003763425076
	[1443935710653492582 , 18168544338330653462]  =  0.08945884894876399
	[15914940686739716899,  8265524791738013937]  =  0.31443159050477143
	[9656355012847532739 ,  4976045735032000325]  =  0.7695437129889107
	                                              ⋮
	[13897873635935988725,  9526342322394325946]  =  0.6732524282618686
	[12459420750016908814, 11993454575275700781]  =  0.850589183491226
	[3648183837903989091 , 12169815624147734794]  =  0.9477065984126518
	[13408654435623669547, 10370911177498520402]  =  0.12789017464639918
	[16767129087052189931, 17737936919457265947]  =  0.931295483932201
	[1388406624826958703 , 10655964431342481635]  =  0.32749436883575145
	[144428425607543167  ,  1203336841330469213]  =  0.07915618562558402
	[9896174471843564741 , 13950575499123628905]  =  0.9189422101992712
	[584033670402314773  ,  2588469222286953884]  =  0.42582360737547Timing named index: 0.000823743, array index: 0.000679432, named key: 0.151775
Timing sum large sparse array: 0.012030017, named: 0.032893015
done!
INFO: NamedArrays tests passed

>>> End of log
