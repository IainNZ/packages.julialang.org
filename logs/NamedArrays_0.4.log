>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (858.265625 MB free)
Uptime: 14328.0 sec
Load Avg:  0.9169921875  0.94384765625  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     663504 s        483 s      55151 s     569966 s         28 s
#2  3500 MHz     469626 s       7340 s      45407 s     852538 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.2529540646754205	.8933038203018226	.9881641528770893	.6380820003826531
two	.3816602845520669	.08281740511607394	.29435686682283535	.05778179629213209
a	36
b	21
c	26
d	40
e	92
f	58
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.063104  0.318692  0.403681
b           │ 0.900327  0.921909  0.750692 0.06310402836044027 0.06310402836044027
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.063104  0.318692  0.403681
b     │ 0.900327  0.921909  0.750692
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.063104  0.318692  0.403681
b           │ 0.900327  0.921909  0.750692
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.063104  0.318692  0.403681
b     │ 0.900327  0.921909  0.750692
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0363647   0.712909   0.340536   0.484355
er              │ 0.0436317   0.325315  0.0339547   0.242506
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139879798426672
0-element Named Array{Any,1}

[0.4160534372802036 0.5482312450519269 0.8934195556688733 0.4393907510416055
 0.43142138883069525 0.9025040637865998 0.7451408739038397 0.5430087859793635]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.416053  0.548231   0.89342  0.439391
two   │ 0.431421  0.902504  0.745141  0.5430092x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.416053  0.548231   0.89342  0.439391
two   │ 0.431421  0.902504  0.745141  0.5430092x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      1.36149       1.06248  …     -0.172863     -0.691917
2     │    -0.255416    -0.0973275  …      0.758437      -1.908361000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │ -0.0541655   -0.216667
2     │    1.17462    0.142931
3     │    1.59877   0.0771487
4     │   0.166097   0.0442685
5     │   0.663339   0.0210385
6     │  0.0571789   -0.090019
7     │    2.25776    0.528702
8     │     0.1531   -0.603672
9     │    -2.2581   -0.743258
⋮                ⋮           ⋮
992   │   0.385057    0.445691
993   │  -0.538218    0.497781
994   │  -0.822519      1.7656
995   │   0.649921    0.728255
996   │   0.340888    0.719378
997   │   0.652396   -0.477648
998   │  -0.885063   0.0236394
999   │   0.539403    0.841341
1000  │   -1.86155     0.684211000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    0.45546
2    │  -0.444814
3    │  -0.444789
4    │  -0.325637
5    │   -0.90705
6    │  -0.409247
7    │  -0.824146
8    │   0.147231
9    │ -0.0307629
⋮               ⋮
992  │  -0.965056
993  │   0.781597
994  │   -1.38329
995  │  -0.186124
996  │   0.133116
997  │    2.29443
998  │  -0.726764
999  │   -2.20269
1000 │   0.3504392x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.509232  0.0431269
1           │  0.461232   0.906036

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.171253  0.110138
1           │ 0.402296  0.814404
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.985345
2  │ 0.126103
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.444558  0.231093
2     │ 0.409602  0.582635
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.258206   0.205705
2     │ 0.0231647   0.464058

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.182459  0.729704
2     │ 0.297637  0.516263
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.198271  0.486671
2     │ 0.902178  0.819735

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.627709  0.0645328
2     │  0.797867   0.664893

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.684781  0.00447388
2     │   0.809926    0.794459

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.726248  0.602089
2     │ 0.272612  0.863284
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.822873   0.982728
2     │ 0.0158767   0.128539

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.298308  0.826575
2     │ 0.428198  0.982473

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.996808  0.120044
2     │ 0.935052  0.904687
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.514833  0.218719

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.556909  0.522694
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │   0.2472
2     │ 0.778187

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.179546
2     │ 0.579735
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.224655  0.455497
2     │ 0.544287  0.736998
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[493461921061351564  ,  6564272639106249010]  =  0.04429471299968735
	[5004131969199419793 , 17095493447719212504]  =  0.15620453784404265
	[9623387968596508826 ,  8069307267129313135]  =  0.6224495642498331
	[10953304140290405338,  3039451196773527828]  =  0.9971733491831953
	[9507787290874245939 ,  1166092285267503990]  =  0.42913570259012257
	[3064253281526677720 , 16621507366152005377]  =  0.32766926534713137
	[13569143494824923098,  8097707444526576530]  =  0.8487818817370889
	[4106283031091570395 ,   906960604709401733]  =  0.0378981194939807
	                                              ⋮
	[13068922020419317632,  8471876845144429043]  =  0.29474791065081374
	[1628675476083889103 ,  2318046236442875673]  =  0.23341415242301355
	[6413456663738881847 , 15857670694969494589]  =  0.43560231107794967
	[10870775571180810126, 15857670694969494589]  =  0.900380207981736
	[15260609615288845879,  8090338657268802519]  =  0.4257245586212455
	[12901330087571726961,  1523061068178304284]  =  0.23644685159806578
	[5078555050773131864 , 16365943061271568709]  =  0.9948429209031877
	[9507787290874245939 ,  3279378535085980212]  =  0.09828302264315814
	[9896174471843564741 , 13950575499123628905]  =  0.6513238460604058Timing named index: 9.9405e-5, array index: 0.000434914, named key: 0.076786307
Timing sum large sparse array: 0.00603798, named: 0.012229574
done!
INFO: NamedArrays tests passed

>>> End of log
