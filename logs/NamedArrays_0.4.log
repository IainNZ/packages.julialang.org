>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (858.05078125 MB free)
Uptime: 14255.0 sec
Load Avg:  0.87939453125  0.94140625  0.9951171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     657505 s       3331 s      52563 s     573490 s         14 s
#2  3500 MHz     457390 s       3562 s      44304 s     861465 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.01990815504157295	.10333926649635217	.430943554307168	.688828413024237
two	.4562899600121211	.3510644987437679	.8228278836266449	.6539834750342843
a	31
b	96
c	2
d	59
e	64
f	41
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.818433  0.624812  0.250877
b           │ 0.740197  0.987408  0.793038 0.8184326909688688 0.8184326909688688
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.818433  0.624812  0.250877
b     │ 0.740197  0.987408  0.793038
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.818433  0.624812  0.250877
b           │ 0.740197  0.987408  0.793038
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.818433  0.624812  0.250877
b     │ 0.740197  0.987408  0.793038
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.368766   0.191379   0.526858   0.729854
er              │  0.601578    0.40446   0.172511  0.0594624
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139762304517552
0-element Named Array{Any,1}

[0.2287244691542536 0.6730901488707741 0.19789861695854483 0.46152962334778236
 0.733903744500507 0.6038580682941284 0.751984640258625 0.8745465157960297]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.228724   0.67309  0.197899   0.46153
two   │ 0.733904  0.603858  0.751985  0.8745472x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.228724   0.67309  0.197899   0.46153
two   │ 0.733904  0.603858  0.751985  0.8745472x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   0.0406163     0.311501  …      1.47156     0.736426
2     │     1.34521     -0.15114  …     0.362158     -1.561411000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.46315     1.97993
2     │  -0.326818   -0.623978
3     │    1.45849    0.450676
4     │   0.326291   0.0782809
5     │ -0.0374223     1.03044
6     │   -0.51399    0.725017
7     │   0.605833   0.0301477
8     │ -0.0237111     2.25697
9     │  -0.274089    -1.18508
⋮                ⋮           ⋮
992   │   0.677071    0.800585
993   │   0.192841    0.490338
994   │   -1.14949     0.21869
995   │  -0.488081    0.296871
996   │   -1.07587    -1.14451
997   │    0.98707    0.217698
998   │    0.44186   -0.789741
999   │   0.149283    0.844016
1000  │  -0.836255    0.9010971000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.644451
2    │ 0.0960618
3    │   1.87003
4    │  -1.13786
5    │  0.293683
6    │   1.20338
7    │  -1.57739
8    │  0.682983
9    │  0.435846
⋮              ⋮
992  │   1.60439
993  │ -0.356858
994  │ -0.131211
995  │  0.451371
996  │ 0.0124017
997  │ -0.241113
998  │ -0.445449
999  │ -0.429013
1000 │  -1.796572x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.245075   0.30704
1           │ 0.900039  0.307596

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.445737  0.478712
1           │ 0.148053  0.869473
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.310607
2  │  0.75843
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0824066    0.86502
2     │  0.619538   0.592702
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.555806  0.747465
2     │ 0.737721  0.148861

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.653779  0.145377
2     │ 0.609219  0.668037
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.491872  0.0583304
2     │  0.235791   0.155024

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.166091  0.806984
2     │ 0.540323  0.224168

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.54835  0.848641
2     │ 0.673384  0.365872

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.370619   0.68379
2     │ 0.921182  0.538523
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.130239  0.0544463
2     │  0.430599   0.831398

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0904029    0.32877
2     │   0.91266   0.238726

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.789409  0.157484
2     │ 0.252403  0.297112
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │       1        2
──────┼─────────────────
1     │ 0.11335  0.55355

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.479913  0.260901
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.963755
2     │ 0.122576

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.971978
2     │ 0.351975
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.878606  0.0996591
2     │   0.87823   0.329627
1000×1000 Named sparse matrix with 110 Float64 nonzero entries:
	[14024883472771630530, 14304565767364922256]  =  0.36811273917517373
	[9968695731403321683 ,  2230070772219402886]  =  0.7483926853238962
	[1890264178497275812 ,  1166092285267503990]  =  0.5883984873126888
	[5887916164234050841 ,   906960604709401733]  =  0.3369327092663912
	[16202651256804923129, 15465980046630820984]  =  0.8864805215968377
	[2588469222286953884 , 13450619636401767365]  =  0.8220700864425297
	[1028841819963316707 , 15090471957562756503]  =  0.4074110410182257
	[5093524509719114539 ,  9187579804086460617]  =  0.34513995357782856
	                                              ⋮
	[4878460211641475699 ,  9223427034658990711]  =  0.3744068168768533
	[17853331136360781895,  9223427034658990711]  =  0.7733867851328426
	[14066869468942639955, 16365943061271568709]  =  0.8708781749829544
	[6837203138339369118 , 16365943061271568709]  =  0.09078404838063192
	[4972200319723568142 , 14835807873575694564]  =  0.43189145673926377
	[195441584546642058  ,  7957587899775749890]  =  0.6408318565317273
	[11544136240443520407,  7957587899775749890]  =  0.2843179130130029
	[16583690740438463922,  3010300210541878305]  =  0.5027153694767144
	[397394769374478572  , 13950575499123628905]  =  0.11144489781276734Timing named index: 0.00080946, array index: 0.00076817, named key: 0.131245381
Timing sum large sparse array: 0.010947823, named: 0.029036963
done!
INFO: NamedArrays tests passed

>>> End of log
