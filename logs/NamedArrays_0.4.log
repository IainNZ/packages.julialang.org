>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (861.6953125 MB free)
Uptime: 14446.0 sec
Load Avg:  0.912109375  0.97509765625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     657082 s       2352 s      56474 s     587274 s         24 s
#2  3499 MHz     459367 s       3930 s      48787 s     888575 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.14578690415410844	.9313866473639298	.4523471494822817	.7744588630736922
two	.015398890568030676	.01942873128907774	.561226965225913	.15784965202772416
a	84
b	54
c	41
d	37
e	98
f	65
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.988977  0.453246  0.270435
b           │ 0.390378  0.517452  0.990891 0.988977292157865 0.988977292157865
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.988977  0.453246  0.270435
b     │ 0.390378  0.517452  0.990891
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.988977  0.453246  0.270435
b           │ 0.390378  0.517452  0.990891
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.988977  0.453246  0.270435
b     │ 0.390378  0.517452  0.990891
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.111747  0.503467  0.195337  0.943445
er              │ 0.254337  0.645882  0.800145  0.816333
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140380870150832
0-element Named Array{Any,1}

[0.838864784685859 0.3926956947174265 0.9964339770114081 0.042696632192585016
 0.12804703168884224 0.4809173291042703 0.3367004702472782 0.5900936989518721]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.838865   0.392696   0.996434  0.0426966
two   │  0.128047   0.480917     0.3367   0.5900942x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.838865   0.392696   0.996434  0.0426966
two   │  0.128047   0.480917     0.3367   0.5900942x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.621366      -1.21659  …     -0.564557      -1.26813
2     │     0.274156      -1.49335  …       2.41462      -1.430611000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.763151    0.598834
2     │    1.89969     0.53874
3     │   -1.36611     0.64973
4     │     1.2464     1.78081
5     │ -0.0198247    0.661554
6     │    1.48135   -0.178805
7     │   0.138775    0.160265
8     │   0.430261     3.11961
9     │  -0.389458    0.565429
⋮                ⋮           ⋮
992   │  -0.871586   -0.151808
993   │   0.763439   -0.586332
994   │  -0.993963    0.106774
995   │  -0.416188     -0.6802
996   │  -0.174982    -2.08154
997   │   0.646878   -0.546867
998   │  -0.408787    0.382452
999   │  -0.785996     -1.0576
1000  │   0.792831   -0.5404761000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -2.13102
2    │ -0.0564324
3    │  -0.277485
4    │    1.03824
5    │   0.358727
6    │  0.0844126
7    │  -0.273177
8    │    1.50621
9    │   -1.60022
⋮               ⋮
992  │  -0.429043
993  │  -0.987186
994  │  0.0246522
995  │   0.268138
996  │  -0.686312
997  │    1.01642
998  │  -0.698229
999  │    1.65578
1000 │   0.5112782x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.33994  0.867075
1           │  0.88516  0.403309

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.150575   0.54598
1           │ 0.331877  0.271941
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.343041
2  │ 0.648272
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.443548  0.246622
2     │ 0.306116   0.81998
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.998647  0.168923
2     │ 0.986073   0.12591

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.814788  0.831288
2     │ 0.883106  0.747421
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.545011  0.111495
2     │ 0.748525  0.937736

[:, :, C=2, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.918235    0.197546
2     │   0.362009  0.00829976

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.309907  0.956045
2     │ 0.207655  0.938631

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.660225   0.459451
2     │ 0.0708323    0.23354
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.302625  0.199185
2     │ 0.198537  0.795398

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.659769  0.720716
2     │ 0.650547  0.482405

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.222159   0.695357
2     │ 0.0769629    0.15727
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │       1        2
──────┼─────────────────
1     │ 0.60447  0.76699

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.267039  0.201202
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.429535
2     │ 0.672555

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.314284
2     │ 0.895587
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.568858  0.334037
2     │ 0.347073   0.92171
1000×1000 Named sparse matrix with 96 Float64 nonzero entries:
	[10973151624395076623,  6526988131186142725]  =  0.9944227246585464
	[14025941730136024849, 14304565767364922256]  =  0.5222429454870516
	[6295185824851981085 ,  5004131969199419793]  =  0.01956276557689285
	[10923390679270416228,  6564272639106249010]  =  0.3473281977458944
	[13884235257459061953, 12809965746239821631]  =  0.35249118940400437
	[18403132107547063335, 12809965746239821631]  =  0.8568988256343049
	[8194749162452730241 , 17095493447719212504]  =  0.29050152773709437
	[12444970302768542108, 14066869468942639955]  =  0.9024843404729377
	                                              ⋮
	[2515209571418144671 , 14276971493366205365]  =  0.4543807446074295
	[1030988749247038162 ,  2107242561845671563]  =  0.034776442753077896
	[17795748529514954214, 11732026533134275955]  =  0.8493482670939794
	[17436498189161857304,  4285843451033309381]  =  0.3762566845166584
	[15523141765479279085,  2318046236442875673]  =  0.7846719874525547
	[9980399998304487033 , 16365943061271568709]  =  0.4042519449914985
	[15281342830259643962,  5122894113285174381]  =  0.2098091531747186
	[14499706018088212885,  3279378535085980212]  =  0.2754072799337399
	[18108419761126805734, 12020782256748308824]  =  0.3311468686541028Timing named index: 0.000715957, array index: 0.000472862, named key: 0.071071418
Timing sum large sparse array: 0.007078597, named: 0.01415396
done!
INFO: NamedArrays tests passed

>>> End of log
