>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (848.28125 MB free)
Uptime: 13034.0 sec
Load Avg:  1.01806640625  0.9853515625  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     602506 s       6290 s      56669 s     502730 s         14 s
#2  3500 MHz     404413 s        444 s      48595 s     810423 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.3593564806478715	.5555915003442631	.8454114159873061	.5141161969392931
two	.18243181791812346	.8631825573033918	.5391384331192948	.15250422474534764
a	87
b	39
c	41
d	94
e	37
f	65
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.712393   0.929325   0.292479
b           │  0.452773   0.784389  0.0759002 0.7123928428190656 0.7123928428190656
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.712393   0.929325   0.292479
b     │  0.452773   0.784389  0.0759002
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.712393   0.929325   0.292479
b           │  0.452773   0.784389  0.0759002
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.712393   0.929325   0.292479
b     │  0.452773   0.784389  0.0759002
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.429269    0.96751   0.820663   0.681951
er              │  0.970383  0.0305113   0.642618   0.418216
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140627251152400
0-element Named Array{Any,1}

[0.4110340808348154 0.42291668018463624 0.6235893666516472 0.7545542116185255
 0.5489128168243353 0.5066737453500822 0.4300537686614716 0.3901400868102616]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.411034  0.422917  0.623589  0.754554
two   │ 0.548913  0.506674  0.430054   0.390142x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.411034  0.422917  0.623589  0.754554
two   │ 0.548913  0.506674  0.430054   0.390142x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -0.32071     0.0661802  …      0.278937     -0.625206
2     │     0.913133      0.100443  …     -0.358155     -0.6932461000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.433206     2.50493
2     │   0.303345    0.330256
3     │    1.23583   -0.216768
4     │  -0.173058    -1.84116
5     │    -1.3909    -0.56068
6     │   0.130672    0.892612
7     │  -0.510532     -2.0156
8     │   0.958808     1.37582
9     │   0.874729   -0.717557
⋮                ⋮           ⋮
992   │    1.62227   -0.824416
993   │  -0.426901   0.0153343
994   │    1.18065   -0.429378
995   │    -1.1015   -0.129159
996   │  -0.544213   -0.505338
997   │  -0.281509    -1.75454
998   │    1.21686  -0.0871524
999   │   0.713464   0.0692015
1000  │  0.0535788    0.7914391000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.796946
2    │  -0.166681
3    │  -0.813118
4    │  -0.141354
5    │   0.130184
6    │  -0.149661
7    │     0.4947
8    │    2.07627
9    │  -0.746027
⋮               ⋮
992  │ -0.0697817
993  │   0.486462
994  │   0.824482
995  │   -1.87305
996  │  0.0378031
997  │   0.122078
998  │    1.18763
999  │    1.51822
1000 │    1.608292x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.092544   0.324875
1           │  0.464868  0.0280143

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.897633  0.247191
1           │ 0.657913  0.125281
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.817364
2  │ 0.311943
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0941604   0.713457
2     │  0.748432    0.33307
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.506179  0.468046
2     │ 0.478577   0.47313

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.786328  0.856716
2     │ 0.321813  0.548474
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.456138   0.79612
2     │ 0.392392  0.278873

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.215135   0.47289
2     │ 0.447939  0.191384

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.99798  0.170971
2     │ 0.699423  0.472684

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.388995  0.715437
2     │ 0.597928  0.564545
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.188106  0.300219
2     │ 0.179559  0.651614

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.747054  0.169107
2     │ 0.161384  0.516293

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.647276  0.959577
2     │  0.65692   0.91007
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.753701  0.934595

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.888249  0.0488999
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.145795
2     │ 0.104129

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.514403
2     │ 0.941335
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.730145  0.177984
2     │  0.67968  0.142342
1000×1000 Named sparse matrix with 100 Float64 nonzero entries:
	[5775042309115395854 ,  4913249781191789579]  =  0.2076840444125827
	[9782708399399209194 , 13888991764943741743]  =  0.05734810180179517
	[2057797465169484997 ,  2230070772219402886]  =  0.7671899562485138
	[2072770496586688023 , 11907679469289587679]  =  0.042919523504553414
	[2758171916068192631 ,  8097707444526576530]  =  0.7924366029287941
	[6947860236989419941 , 17609421066205025733]  =  0.07058646358717224
	[16992521057894414253, 12876006501778729182]  =  0.33871813466918943
	[11314283927973801071, 10684064542878956755]  =  0.22205906402483455
	                                              ⋮
	[17900418222753209643, 17737936919457265947]  =  0.6736799768535546
	[16752464052319560607, 17737936919457265947]  =  0.3498875078813817
	[11250402503384658013, 16365943061271568709]  =  0.917142002052894
	[13464983696880885265, 11314283927973801071]  =  0.3451814405228941
	[17678211741433686062,  1861743268047760089]  =  0.9554060419866912
	[5567682937376679626 , 14835807873575694564]  =  0.8951288088550153
	[17498567691103755585, 16202651256804923129]  =  0.9669457385618652
	[2588469222286953884 , 15240003619098155971]  =  0.5642631820687172
	[9051203263452778593 ,  6565262192402102057]  =  0.27594202256677725Timing named index: 0.000635653, array index: 0.00060678, named key: 0.120958961
Timing sum large sparse array: 0.009978926, named: 0.021372407
done!
INFO: NamedArrays tests passed

>>> End of log
