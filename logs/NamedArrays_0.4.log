>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (784.81640625 MB free)
Uptime: 14299.0 sec
Load Avg:  1.00439453125  1.0  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     683917 s       1546 s      57430 s     546314 s         22 s
#2  3503 MHz     468641 s       6738 s      48636 s     862007 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.46661688530765866	.1879189846142333	.7502766554389859	.3692178805114903
two	.4562158727274519	.9402447802138745	.06517932654655301	.27988941527126654
a	78
b	97
c	25
d	60
e	9
f	31
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.784998   0.538558   0.412516
b           │ 0.0121177   0.705217   0.917355 0.7849977455803219 0.7849977455803219
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.784998   0.538558   0.412516
b     │ 0.0121177   0.705217   0.917355
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.784998   0.538558   0.412516
b           │ 0.0121177   0.705217   0.917355
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.784998   0.538558   0.412516
b     │ 0.0121177   0.705217   0.917355
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.594778  0.817373  0.196086  0.161227
er              │ 0.665426  0.459383  0.873153  0.550021
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139805948335168
0-element Named Array{Any,1}

[0.043259019110315045 0.6251192111931776 0.6929841381705963 0.11937683522905362
 0.8866135166307085 0.5976745830763699 0.25722569333034584 0.878878917904375]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.043259  0.625119  0.692984  0.119377
two   │ 0.886614  0.597675  0.257226  0.8788792x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.043259  0.625119  0.692984  0.119377
two   │ 0.886614  0.597675  0.257226  0.8788792x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     0.74242    -0.298951  …    -0.611011     0.555057
2     │   -0.278602     0.111526  …      1.68616     -1.076441000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.05755     1.29343
2     │  -0.834386    -1.16901
3     │   -0.89902    0.321311
4     │    0.36715    0.680603
5     │   -1.13196  -0.0414663
6     │   -1.09342    -1.49565
7     │  -0.183671   -0.856061
8     │  -0.421559   -0.204744
9     │   -2.55159    0.151765
⋮                ⋮           ⋮
992   │    1.19455    -1.37023
993   │    1.15978     1.43004
994   │ -0.0495362    0.278014
995   │   0.943568   -0.713731
996   │    1.56057   -0.465597
997   │    0.86785    -1.11913
998   │   0.598112     1.07158
999   │  -0.811918    -1.29471
1000  │     0.6569  -0.07227061000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │     2.30067
2    │   -0.227172
3    │   -0.301163
4    │   0.0270476
5    │   -0.862293
6    │    -0.62269
7    │   -0.805982
8    │   0.0414798
9    │   -0.610425
⋮                ⋮
992  │ 0.000859102
993  │   -0.161378
994  │   -0.623903
995  │    -2.18558
996  │    0.262952
997  │   -0.382753
998  │     1.02669
999  │   0.0203725
1000 │     1.799242x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0842217   0.745704
1           │  0.273956   0.287517

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.610031   0.264497
1           │  0.410528  0.0197521
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0481631
2  │  0.658285
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.569561  0.299198
2     │ 0.279351  0.982521
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.366825  0.0310427
2     │  0.444438   0.304588

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.628562  0.434121
2     │ 0.362507  0.637299
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.93167  0.524996
2     │ 0.916519  0.295629

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.88665  0.672824
2     │ 0.555278  0.935371

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.610149  0.456346
2     │ 0.313142  0.728571

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.339654  0.495414
2     │ 0.281304  0.986837
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.29215  0.651103
2     │ 0.152969  0.913766

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.834722   0.284232
2     │ 0.0706667   0.833411

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.267538  0.958798
2     │ 0.922648  0.451123
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.492832  0.798796

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.51546  0.565668
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.902736
2     │ 0.457054

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.509265
2     │ 0.631647
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.189118     0.697
2     │ 0.260033  0.810095
1000×1000 Named sparse matrix with 98 Float64 nonzero entries:
	[11250402503384658013,  4400785119912308702]  =  0.4519133056356117
	[3159188428204763267 ,  5647414292592918739]  =  0.1569177818131171
	[13897873635935988725, 13888991764943741743]  =  0.5531820213188343
	[10973151624395076623,  6134978669850253296]  =  0.4112451828986954
	[6345398762637942383 , 10106592262940987645]  =  0.9776688520927772
	[8794079702498558299 ,  4394159825732135742]  =  0.5561180492974269
	[5579376550761991812 , 12295598998729798629]  =  0.44671760790419857
	[11711005111088208244,  3039451196773527828]  =  0.14508092662371452
	                                              ⋮
	[846219735909059185  ,  9051203263452778593]  =  0.9482404493200953
	[13882698648709482562, 13710539999002292266]  =  0.35495032788319114
	[10603672941428866019, 14944477062144183931]  =  0.826080214137844
	[9474715557068018910 , 14027562189529080231]  =  0.009503041903065945
	[18180706245899323906,  9815398096560962926]  =  0.694433640960022
	[12376285854513575894, 11993454575275700781]  =  0.8958489235505409
	[11727192159770649882, 14057278280866812536]  =  0.44784502822184713
	[9283096199793891681 ,   427459847123490633]  =  0.05846348038347182
	[3159188428204763267 ,  7519919299137062942]  =  0.7101443363977786Timing named index: 0.000293284, array index: 0.000724988, named key: 0.129213113
Timing sum large sparse array: 0.017815715, named: 0.0207179
done!
INFO: NamedArrays tests passed

>>> End of log
