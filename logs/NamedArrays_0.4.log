>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (860.421875 MB free)
Uptime: 14257.0 sec
Load Avg:  0.912109375  0.9873046875  1.03369140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     653408 s        459 s      52246 s     584970 s         20 s
#2  3500 MHz     449854 s       5950 s      43858 s     870790 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7959215627602385	.9898197591776434	.6731678727694534	.7589703957322995
two	.008541915528137656	.2324700961525361	.6973672384006397	.4379967641906075
a	36
b	3
c	26
d	25
e	88
f	61
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.256494  0.705476  0.245623
b           │ 0.312314  0.638128  0.995265 0.25649408941644003 0.25649408941644003
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.256494  0.705476  0.245623
b     │ 0.312314  0.638128  0.995265
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.256494  0.705476  0.245623
b           │ 0.312314  0.638128  0.995265
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.256494  0.705476  0.245623
b     │ 0.312314  0.638128  0.995265
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.331845   0.558517   0.164567  0.0448926
er              │  0.901362   0.775274   0.212965   0.295811
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139835745945104
0-element Named Array{Any,1}

[0.23923586279812215 0.11437567710277019 0.08340464221704402 0.5264402497741958
 0.6089973470143089 0.07551666205468344 0.3657485601783399 0.29952270344787957]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.239236   0.114376  0.0834046    0.52644
two   │  0.608997  0.0755167   0.365749   0.2995232x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.239236   0.114376  0.0834046    0.52644
two   │  0.608997  0.0755167   0.365749   0.2995232x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │   -0.0318443      0.552072  …     -0.309951      -0.58742
2     │     0.582948     -0.849562  …       0.51174      0.7983271000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.434221    0.708783
2     │   -1.71071   -0.087039
3     │   -2.17478   0.0898982
4     │      1.114  -0.0828557
5     │   -1.28335     1.22917
6     │   0.219688     1.28124
7     │   -1.45195   -0.654725
8     │  -0.273174    -1.18989
9     │   -1.37663   -0.201681
⋮                ⋮           ⋮
992   │   -1.54627    0.966403
993   │  -0.890913   -0.922384
994   │  -0.864032    -0.10894
995   │   -1.83114     1.65507
996   │    1.38478     1.16244
997   │ -0.0197002   -0.684787
998   │ -0.0568802    -3.22909
999   │    1.61835   0.0807484
1000  │   -1.20045   -0.1980651000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │ -0.0306517
2    │   0.562478
3    │   0.482497
4    │  -0.566694
5    │   -1.27973
6    │  -0.505094
7    │  -0.171196
8    │    1.52814
9    │  -0.817181
⋮               ⋮
992  │    0.27891
993  │    1.04342
994  │  0.0857956
995  │   0.983332
996  │   -1.35675
997  │  -0.287183
998  │   0.632592
999  │   0.391918
1000 │   0.9205632x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.772849   0.60368
1           │ 0.914649  0.415319

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.40463  0.951043
1           │ 0.786141  0.220761
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.695011
2  │ 0.203208
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.481257   0.466464
2     │  0.374941  0.0367165
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.548269  0.256028
2     │ 0.301554  0.902417

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.767448  0.119917
2     │ 0.514165  0.995381
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.343019  0.346064
2     │  0.16803   0.83709

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.559476  0.793959
2     │ 0.774471  0.330628

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.357706  0.147575
2     │ 0.648396  0.585663

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.112345  0.444259
2     │ 0.774953  0.693024
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.768746   0.342246
2     │  0.458065  0.0623672

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.2351  0.396523
2     │ 0.277835   0.31791

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.45684  0.426688
2     │ 0.955938   0.75784
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.686054  0.929251

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.254319  0.0568458
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0967364
2     │  0.985153

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.552486
2     │ 0.685827
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.106056  0.543371
2     │ 0.690665  0.144957
1000×1000 Named sparse matrix with 92 Float64 nonzero entries:
	[4174785917342603289 ,  5647414292592918739]  =  0.9566565642240961
	[12040599068173267596,  4913249781191789579]  =  0.9903358878851989
	[13073955458708776909,  8629498292780771804]  =  0.728122792438924
	[8568476733645628391 ,  3253468397832770835]  =  0.22651621448189996
	[13342932250377702532,  8725235013359650451]  =  0.7182077630681911
	[2365706432056806243 , 16246598853062742192]  =  0.1659423125948689
	[8305934159106380255 , 16246598853062742192]  =  0.66212751394307
	[17795748529514954214,   906960604709401733]  =  0.30596309021198786
	                                              ⋮
	[9861459413671678323 ,  6332455606016291123]  =  0.10960963220121323
	[9050964765503943907 ,  4788923618671962983]  =  0.9231007534829487
	[14596020527010292202, 11551291857879764225]  =  0.6511410600407623
	[3761119224343897378 ,  8090338657268802519]  =  0.5016490363006936
	[15465980046630820984,  6738482027934271349]  =  0.1412090311819505
	[17900418222753209643, 17718833055079784125]  =  0.16884982618923128
	[12040144181694387482,  1203336841330469213]  =  0.7992902891324303
	[6190951436752416480 ,  5122894113285174381]  =  0.27710363742081534
	[1523061068178304284 ,  4047135350800189603]  =  0.11564272598334657Timing named index: 0.000657282, array index: 0.000935331, named key: 0.126055999
Timing sum large sparse array: 0.00964225, named: 0.019563441
done!
INFO: NamedArrays tests passed

>>> End of log
