>>> 'Pkg.add("PDFIO")' log
[ Info: Cloning cache of AdobeGlyphList from https://github.com/sambitdash/AdobeGlyphList.jl.git
[ Info: Cloning cache of IntervalTrees from https://github.com/BioJulia/IntervalTrees.jl.git
[ Info: Cloning cache of LabelNumerals from https://github.com/sambitdash/LabelNumerals.jl.git
[ Info: Cloning cache of Mocking from https://github.com/invenia/Mocking.jl.git
[ Info: Cloning cache of PDFIO from https://github.com/sambitdash/PDFIO.jl.git
[ Info: Cloning cache of Primes from https://github.com/JuliaMath/Primes.jl.git
[ Info: Cloning cache of RomanNumerals from https://github.com/anthonyclays/RomanNumerals.jl.git
[ Info: Cloning cache of TimeZones from https://github.com/JuliaTime/TimeZones.jl.git
[ Info: Installing AdobeGlyphList v0.0.2
[ Info: Installing BufferedStreams v0.3.3
[ Info: Installing DataStructures v0.7.4
[ Info: Installing DocStringExtensions v0.4.3
[ Info: Installing Documenter v0.13.0
[ Info: Installing IntervalTrees v0.4.1
[ Info: Installing LabelNumerals v0.0.4
[ Info: Installing Libz v0.2.4
[ Info: Installing Mocking v0.4.4
[ Info: Installing PDFIO v0.0.9
[ Info: Installing Primes v0.2.0
[ Info: Installing RomanNumerals v0.2.2
[ Info: Installing TimeZones v0.6.0
[ Info: Building TimeZones
┌ Warning: `global const` declarations may no longer appear inside functions.
│ Instead, use a non-constant global, or a global `const var = Ref{T}()`.
└ @ nothing TimeZones.jl:52
┌ Warning: `findin(a, b)` is deprecated, use `findall(occursin(b), a)` instead.
│   caller = optional(::Expr) at utils.jl:51
└ @ TimeZones utils.jl:51
WARNING: importing deprecated binding Base.serialize into TZData.
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #build#34(::Bool, ::Function, ::String, ::Array{String,1}, ::String, ::String, ::String) at build.jl:36
└ @ TimeZones.TZData build.jl:36
INFO: Downloading 2017c tzdata
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
  4  327k    4 16383    0     0   9078      0  0:00:36  0:00:01  0:00:35  9078 29  327k   29 98304    0     0  35000      0  0:00:09  0:00:02  0:00:07 81675100  327k  100  327k    0     0   114k      0  0:00:02  0:00:02 --:--:--  297k
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #build#34(::Bool, ::Function, ::String, ::Array{String,1}, ::String, ::String, ::String) at build.jl:49
└ @ TimeZones.TZData build.jl:49
INFO: Extracting tzdata archive
africa
antarctica
asia
australasia
europe
northamerica
southamerica
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #build#34(::Bool, ::Function, ::String, ::Array{String,1}, ::String, ::String, ::String) at build.jl:54
└ @ TimeZones.TZData build.jl:54
INFO: Converting tz source files into TimeZone data
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = (::getfield(TimeZones.TZData, Symbol("##28#29")){Dict{AbstractString,Array{TimeZones.TZData.Zone,1}},Dict{AbstractString,Array{TimeZones.TZData.Rule,1}},Dict{AbstractString,AbstractString}})(::IOStream) at compile.jl:506
└ @ TimeZones.TZData compile.jl:506
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = ruleparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}, ::Any, ::SubString{String}, ::SubString{String}, ::Any) at compile.jl:165
└ @ TimeZones.TZData compile.jl:165
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = ruleparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}, ::Any, ::SubString{String}, ::SubString{String}, ::Any) at compile.jl:169
└ @ TimeZones.TZData compile.jl:169
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = ruleparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}, ::Any, ::SubString{String}, ::SubString{String}, ::Any) at compile.jl:180
└ @ TimeZones.TZData compile.jl:180
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = ruleparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}, ::Any, ::SubString{String}, ::SubString{String}, ::Any) at compile.jl:175
└ @ TimeZones.TZData compile.jl:175
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = zoneparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}) at compile.jl:226
└ @ TimeZones.TZData compile.jl:226
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = zoneparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::String) at compile.jl:226
└ @ TimeZones.TZData compile.jl:226
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = abbr_string(::SubString{String}, ::TimeZones.TZData.TimeOffset, ::String) at compile.jl:151
└ @ TimeZones.TZData compile.jl:151
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = abbr_string(::SubString{String}, ::TimeZones.TZData.TimeOffset, ::SubString{String}) at compile.jl:151
└ @ TimeZones.TZData compile.jl:151
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = abbr_string(::SubString{String}, ::TimeZones.TZData.TimeOffset, ::String) at compile.jl:151
└ @ TimeZones.TZData compile.jl:151
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = abbr_string(::SubString{String}, ::TimeZones.TZData.TimeOffset, ::SubString{String}) at compile.jl:151
└ @ TimeZones.TZData compile.jl:151
┌ Error: ------------------------------------------------------------
│ # Build failed for TimeZones
│   exception =
│    LoadError: Base.serialize has been moved to the standard library package Serialization.
│    Restart Julia and then run `using Serialization` to load it.
│    Stacktrace:
│     [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
│     [2] #serialize#934 at ./deprecated.jl:138 [inlined]
│     [3] serialize at ./deprecated.jl:138 [inlined]
│     [4] #32 at /home/vagrant/.julia/v0.7/TimeZones/src/tzdata/compile.jl:563 [inlined]
│     [5] open(::getfield(TimeZones.TZData, Symbol("##32#33")), ::String, ::String) at ./iostream.jl:310
│     [6] #compile#31(::Int64, ::Function, ::String, ::String) at /home/vagrant/.julia/v0.7/TimeZones/src/tzdata/compile.jl:562
│     [7] compile at /home/vagrant/.julia/v0.7/TimeZones/src/tzdata/compile.jl:551 [inlined]
│     [8] #build#34(::Bool, ::Function, ::String, ::Array{String,1}, ::String, ::String, ::String) at /home/vagrant/.julia/v0.7/TimeZones/src/tzdata/build.jl:55
│     [9] #build at ./<missing>:0 [inlined]
│     [10] build(::String, ::Array{String,1}) at /home/vagrant/.julia/v0.7/TimeZones/src/tzdata/build.jl:72
│     [11] #build#5 at /home/vagrant/.julia/v0.7/TimeZones/src/TimeZones.jl:118 [inlined]
│     [12] build at /home/vagrant/.julia/v0.7/TimeZones/src/TimeZones.jl:118 [inlined] (repeats 2 times)
│     [13] top-level scope
│     [14] include at ./boot.jl:292 [inlined]
│     [15] include_relative(::Module, ::String) at ./loading.jl:1011
│     [16] include at ./sysimg.jl:26 [inlined]
│     [17] include(::String) at ./loading.jl:1045
│     [18] top-level scope
│     [19] eval at ./boot.jl:295 [inlined]
│     [20] eval at ./sysimg.jl:71 [inlined]
│     [21] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [22] #2 at ./none:14 [inlined]
│     [23] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [24] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:13
│     [25] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [26] top-level scope
│     [27] eval at ./boot.jl:295 [inlined]
│     [28] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [29] process_options(::Base.JLOptions) at ./client.jl:311
│     [30] _start() at ./client.jl:386
│    in expression starting at /home/vagrant/.julia/v0.7/TimeZones/deps/build.jl:6
└ @ Main none:17
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ TimeZones had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("TimeZones")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:649
[ Info: Package database updated

>>> 'Pkg.test("PDFIO")' log
Julia Version 0.7.0-DEV.3519
Commit 5ecba29832 (2018-01-22 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     278835 s         72 s      18966 s     169577 s          4 s
       #2  3500 MHz      73364 s         94 s       9632 s     444953 s          0 s
       
  Memory: 2.93927001953125 GB (898.6875 MB free)
  Uptime: 5367.0 sec
  Load Avg:  0.95068359375  0.9765625  0.95751953125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - PDFIO                         0.0.9
14 additional packages:
 - AdobeGlyphList                0.0.2
 - BufferedStreams               0.3.3
 - Compat                        0.49.0
 - DataStructures                0.7.4
 - DocStringExtensions           0.4.3
 - Documenter                    0.13.0
 - IntervalTrees                 0.4.1
 - LabelNumerals                 0.0.4
 - Libz                          0.2.4
 - Mocking                       0.4.4
 - Nullables                     0.0.3
 - Primes                        0.2.0
 - RomanNumerals                 0.2.2
 - TimeZones                     0.6.0
[ Info: Testing PDFIO
┌ Warning: `map(f, d::T) where T <: AbstractDict` is deprecated, use `T((f(p) for p = pairs(d)))` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedinputstream.jl:15.
│ Use `mutable struct` instead.
└ @ nothing bufferedinputstream.jl:15
┌ Warning: Deprecated syntax `parametric method syntax BufferedInputStream{T}(source::T, bufsize::Integer = default_buffer_size)` around /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedinputstream.jl:36.
│ Use `BufferedInputStream(source::T, bufsize::Integer = default_buffer_size) where T` instead.
└ @ nothing bufferedinputstream.jl:36
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T}(io::IO, stream::BufferedInputStream{T})` around /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedinputstream.jl:43.
│ Use `Base.show(io::IO, stream::BufferedInputStream{T}) where T` instead.
└ @ nothing bufferedinputstream.jl:43
WARNING: importing deprecated binding Base.Void into BufferedStreams.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedinputstream.jl:207
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedinputstream.jl:207
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedinputstream.jl:207
┌ Warning: Deprecated syntax `parametric method syntax Base.seek{T}(stream::BufferedInputStream{T}, pos::Integer)` around /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedinputstream.jl:337.
│ Use `Base.seek(stream::BufferedInputStream{T}, pos::Integer) where T` instead.
└ @ nothing bufferedinputstream.jl:337
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedoutputstream.jl:21.
│ Use `mutable struct` instead.
└ @ nothing bufferedoutputstream.jl:21
┌ Warning: Deprecated syntax `parametric method syntax BufferedOutputStream{T}(sink::T, bufsize::Integer = default_buffer_size)` around /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedoutputstream.jl:31.
│ Use `BufferedOutputStream(sink::T, bufsize::Integer = default_buffer_size) where T` instead.
└ @ nothing bufferedoutputstream.jl:31
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T}(io::IO, stream::BufferedOutputStream{T})` around /home/vagrant/.julia/v0.7/BufferedStreams/src/bufferedoutputstream.jl:38.
│ Use `Base.show(io::IO, stream::BufferedOutputStream{T}) where T` instead.
└ @ nothing bufferedoutputstream.jl:38
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/BufferedStreams/src/emptystream.jl:8.
│ Use `struct` instead.
└ @ nothing emptystream.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BufferedStreams/src/emptystream.jl:121
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BufferedStreams/src/emptystream.jl:121
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BufferedStreams/src/io.jl:16
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BufferedStreams/src/io.jl:16
┌ Warning: Deprecated syntax `parametric method syntax get{T <: CosObject}(o::T)` around /home/vagrant/.julia/v0.7/PDFIO/src/CosObject.jl:38.
│ Use `get(o::T) where T <: CosObject` instead.
└ @ nothing CosObject.jl:38
┌ Warning: Deprecated syntax `parametric method syntax get{T <: CosString}(o::T)` around /home/vagrant/.julia/v0.7/PDFIO/src/CosObject.jl:49.
│ Use `get(o::T) where T <: CosString` instead.
└ @ nothing CosObject.jl:49
WARNING: importing deprecated binding Base.Nullable into Cos.
ERROR: LoadError: LoadError: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1011
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/PDFIO/src/Cos.jl:1
 [6] top-level scope
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1011
 [9] include at ./sysimg.jl:26 [inlined]
 [10] include(::String) at /home/vagrant/.julia/v0.7/PDFIO/src/PDFIO.jl:3
 [11] top-level scope
 [12] include at ./boot.jl:292 [inlined]
 [13] include_relative(::Module, ::String) at ./loading.jl:1011
 [14] include(::Module, ::String) at ./sysimg.jl:26
 [15] top-level scope
 [16] eval at ./boot.jl:295 [inlined]
 [17] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/PDFIO/src/CosObject.jl:337
in expression starting at /home/vagrant/.julia/v0.7/PDFIO/src/Cos.jl:12
in expression starting at /home/vagrant/.julia/v0.7/PDFIO/src/PDFIO.jl:8
ERROR: LoadError: Failed to precompile PDFIO to /home/vagrant/.julia/lib/v0.7/PDFIO.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1155
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:334
 [9] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/PDFIO/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for PDFIO
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PDFIO/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: PDFIO had test errors

>>> End of log
