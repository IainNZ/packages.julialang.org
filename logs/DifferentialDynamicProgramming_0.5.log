>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1684.66796875 MB free)
Uptime: 32614.0 sec
Load Avg:  0.98876953125  0.98486328125  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2055404 s       4521 s     177466 s     637380 s         39 s
#2  3500 MHz     734119 s       3304 s      86917 s    2357720 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.14.0
2 additional packages:
 - Compat                        0.37.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67312.411   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 3.01879e-12  final value -29.7054      factorizations 18
  6.870671 seconds (1.65 M allocations: 155.694 MB, 0.75% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.725      29.2        29.2        0.119       0.0         
2           22.5236     8.61        8.61        0.0782      -0.2        
3           13.9158     3.47        3.47        0.0727      -0.6        
4           10.4478     1.64        1.64        0.0865      -1.2        
5           8.8063      0.648       0.648       0.109       -2.0        
6           8.1584      0.22        0.22        0.12        -3.1        
7           7.9379      0.0179      0.0179      0.0481      -4.3        
8           7.92005     2.18e-05    2.18e-05    0.00208     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.920028    

            final grad:   3.464188e-06

            final lambda: 4.4841551e-08

            time / iter:  209   ms

            total time:   1.88  seconds, of which

            derivs:     2.8 %

            back pass:  67.9%

            fwd pass:   6.3 %

            other:      23.0% (graphics etc.)
 =========== end iLQG ===========
 14.910537 seconds (6.26 M allocations: 429.226 MB, 1.45% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
