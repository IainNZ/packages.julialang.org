>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1683.51171875 MB free)
Uptime: 29714.0 sec
Load Avg:  1.00830078125  1.03662109375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1836422 s       5390 s     160626 s     623139 s         39 s
#2  3500 MHz     756078 s       4386 s      87878 s    2026350 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64417.178   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 2.93008e-12  final value -30.263       factorizations 14
  6.093228 seconds (1.65 M allocations: 133.573 MB, 0.55% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.6606     26.4        26.4        0.11        0.0         
2           22.2793     9.21        9.21        0.0752      -0.2        
3           13.0675     3.63        3.63        0.0683      -0.6        
4           9.43366     1.69        1.69        0.0819      -1.2        
5           7.74836     0.765       0.765       0.13        -2.0        
6           6.98338     0.132       0.132       0.128       -3.1        
7           6.85165     0.00429     0.00429     0.0432      -4.3        
8           6.84737     4.69e-06    4.69e-06    0.00172     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   6.847361    

            final grad:   2.879549e-06

            final lambda: 4.4841551e-08

            time / iter:  185   ms

            total time:   1.66  seconds, of which

            derivs:     1.9 %

            back pass:  65.9%

            fwd pass:   10.0%

            other:      22.2% (graphics etc.)
 =========== end iLQG ===========
 11.752971 seconds (6.26 M allocations: 429.226 MB, 1.49% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
