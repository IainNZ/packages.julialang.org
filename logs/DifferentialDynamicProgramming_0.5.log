>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1672.046875 MB free)
Uptime: 29820.0 sec
Load Avg:  1.03076171875  1.0146484375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1866995 s         56 s     154102 s     589595 s         47 s
#2  3499 MHz     730668 s       7067 s      80884 s    2092496 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.31.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67039.150   
RESULT: Gradient norm smaller than tolerance.
iterations 22  gradient 2.93829e-12  final value -29.5921      factorizations 21
  5.770654 seconds (1.66 M allocations: 173.241 MB, 0.68% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.7386     21.4        21.4        0.0994      0.0         
2           28.32       11.7        11.7        0.0875      -0.2        
3           16.612      6.55        6.55        0.0971      -0.6        
4           10.0638     3.01        3.01        0.113       -1.2        
5           7.05431     1.65        1.65        0.162       -2.0        
6           5.40061     0.793       0.793       0.223       -3.1        
7           4.60746     0.0538      0.0538      0.0688      -4.3        
8           4.55364     5.64e-05    5.64e-05    0.00256     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.553587    

            final grad:   4.034907e-06

            final lambda: 4.4841551e-08

            time / iter:  223   ms

            total time:   2.01  seconds, of which

            derivs:     1.5 %

            back pass:  65.8%

            fwd pass:   9.1 %

            other:      23.6% (graphics etc.)
 =========== end iLQG ===========
 13.658007 seconds (6.26 M allocations: 429.226 MB, 1.60% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
