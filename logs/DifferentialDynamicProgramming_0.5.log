>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1719.91015625 MB free)
Uptime: 29987.0 sec
Load Avg:  0.951171875  0.95751953125  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1725692 s       7465 s     192766 s     671450 s         32 s
#2  3500 MHz     771422 s         66 s      87372 s    2026095 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61599.741   
RESULT: Gradient norm smaller than tolerance.
iterations 22  gradient 2.73356e-12  final value -26.6892      factorizations 20
  6.063227 seconds (1.66 M allocations: 168.890 MB, 0.58% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.8985     24          24          0.119       0.0         
2           26.8959     8.11        8.11        0.0801      -0.2        
3           18.7879     4.97        4.97        0.0877      -0.6        
4           13.8206     3.86        3.86        0.139       -1.2        
5           9.96507     1.95        1.95        0.18        -2.0        
6           8.01525     0.482       0.482       0.165       -3.1        
7           7.53311     0.0305      0.0305      0.0571      -4.3        
8           7.50264     3.8e-05    3.8e-05    0.0022      -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.502599    

            final grad:   3.582116e-06

            final lambda: 4.4841551e-08

            time / iter:  183   ms

            total time:   1.65  seconds, of which

            derivs:     1.9 %

            back pass:  64.8%

            fwd pass:   8.2 %

            other:      25.1% (graphics etc.)
 =========== end iLQG ===========
 14.764640 seconds (6.26 M allocations: 429.226 MB, 1.48% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
