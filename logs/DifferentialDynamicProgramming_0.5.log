>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1733.90625 MB free)
Uptime: 29907.0 sec
Load Avg:  0.95458984375  1.0166015625  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1819208 s       6334 s     158388 s     644062 s         34 s
#2  3499 MHz     778522 s        120 s      81568 s    2026639 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 59490.059   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 3.01486e-12  final value -23.4985      factorizations 12
  4.705069 seconds (1.65 M allocations: 122.481 MB, 0.61% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.8509     22.2        22.2        0.101       0.0         
2           27.6045     10.3        10.3        0.0793      -0.2        
3           17.2619     5.6         5.6         0.084       -0.6        
4           11.6655     3.99        3.99        0.126       -1.2        
5           7.67762     3.04        3.04        0.261       -2.0        
6           4.63501     0.862       0.862       0.296       -3.1        
7           3.77253     0.0367      0.0367      0.073       -4.3        
8           3.73583     3.16e-05    3.16e-05    0.00251     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.735801    

            final grad:   3.671188e-06

            final lambda: 4.4841551e-08

            time / iter:  177   ms

            total time:   1.59  seconds, of which

            derivs:     2.3 %

            back pass:  64.1%

            fwd pass:   7.8 %

            other:      25.7% (graphics etc.)
 =========== end iLQG ===========
 12.138656 seconds (6.26 M allocations: 429.226 MB, 1.52% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
