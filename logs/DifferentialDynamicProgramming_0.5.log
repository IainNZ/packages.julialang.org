>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1659.9296875 MB free)
Uptime: 28092.0 sec
Load Avg:  0.98583984375  1.01611328125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1729678 s       1750 s     143096 s     598704 s         20 s
#2  3500 MHz     649316 s       6667 s      70525 s    2000602 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.14.0
2 additional packages:
 - Compat                        0.32.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 74677.775   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.51317e-12  final value -21.1008      factorizations 13
  4.089437 seconds (1.65 M allocations: 127.134 MB, 0.66% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.5102     25.9        25.9        0.113       0.0         
2           23.6559     9.88        9.88        0.0824      -0.2        
3           13.7794     4.25        4.25        0.0802      -0.6        
4           9.52975     1.95        1.95        0.0949      -1.2        
5           7.57511     1.15        1.15        0.157       -2.0        
6           6.42224     0.578       0.578       0.183       -3.1        
7           5.84467     0.048       0.048       0.0645      -4.3        
8           5.79663     6.04e-05    6.04e-05    0.00252     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.79657     

            final grad:   4.115833e-06

            final lambda: 4.4841551e-08

            time / iter:  132   ms

            total time:   1.18  seconds, of which

            derivs:     2.4 %

            back pass:  64.2%

            fwd pass:   9.0 %

            other:      24.4% (graphics etc.)
 =========== end iLQG ===========
  9.996395 seconds (6.26 M allocations: 429.226 MB, 1.66% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
