>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1739.2578125 MB free)
Uptime: 28476.0 sec
Load Avg:  0.9736328125  0.9853515625  1.0302734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1647976 s       6438 s     128229 s     740330 s         24 s
#2  3499 MHz     632274 s        744 s      67240 s    2069683 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61072.570   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.11332e-12  final value -24.1091      factorizations 16
  5.810462 seconds (1.65 M allocations: 147.159 MB, 0.61% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.2132     26          26          0.108       0.0         
2           24.2274     10.5        10.5        0.0806      -0.2        
3           13.7708     4.78        4.78        0.0737      -0.6        
4           8.98615     3.09        3.09        0.0933      -1.2        
5           5.89698     2.09        2.09        0.159       -2.0        
6           3.80802     0.713       0.713       0.177       -3.1        
7           3.0946      0.048       0.048       0.0678      -4.3        
8           3.04659     5.56e-05    5.56e-05    0.00262     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.046533    

            final grad:   4.167578e-06

            final lambda: 4.4841551e-08

            time / iter:  223   ms

            total time:   2.00  seconds, of which

            derivs:     2.4 %

            back pass:  64.1%

            fwd pass:   9.3 %

            other:      24.2% (graphics etc.)
 =========== end iLQG ===========
 13.678254 seconds (6.26 M allocations: 429.226 MB, 1.66% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
