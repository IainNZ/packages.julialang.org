>>> 'Pkg.add("BoundaryValueDiffEq")' log
INFO: Installing BandedMatrices v0.4.0
INFO: Installing BinDeps v0.8.7
INFO: Installing BoundaryValueDiffEq v1.0.0
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.7.4
INFO: Installing DiffBase v0.3.2
INFO: Installing DiffEqBase v3.6.2
INFO: Installing DiffEqDiffTools v0.4.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.3
INFO: Installing Distances v0.5.0
INFO: Installing FillArrays v0.0.1
INFO: Installing ForwardDiff v0.7.3
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LineSearches v3.2.5
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.0
INFO: Installing NLSolversBase v4.3.0
INFO: Installing NLsolve v1.0.1
INFO: Installing NaNMath v0.3.1
INFO: Installing NamedTuples v4.0.0
INFO: Installing Parameters v0.8.1
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.14.6
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing SimpleTraits v0.6.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.7.0
INFO: Installing TableTraits v0.1.0
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Package database updated

>>> 'Pkg.test("BoundaryValueDiffEq")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (705.73046875 MB free)
Uptime: 21001.0 sec
Load Avg:  1.0283203125  1.00537109375  1.02685546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1226543 s         69 s      65974 s     512844 s         17 s
#2  3500 MHz     278301 s       6331 s      31362 s    1748265 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - BoundaryValueDiffEq           1.0.0
 - JSON                          0.17.1
34 additional packages:
 - BandedMatrices                0.4.0
 - BinDeps                       0.8.7
 - CommonSubexpressions          0.0.1
 - Compat                        0.56.0
 - DataStructures                0.7.4
 - DiffBase                      0.3.2
 - DiffEqBase                    3.6.2
 - DiffEqDiffTools               0.4.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.3
 - Distances                     0.5.0
 - FillArrays                    0.0.1
 - ForwardDiff                   0.7.3
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LineSearches                  3.2.5
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - NLSolversBase                 4.3.0
 - NLsolve                       1.0.1
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.0
 - Nullables                     0.0.4
 - Parameters                    0.8.1
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - SimpleTraits                  0.6.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.7.0
 - TableTraits                   0.1.0
 - URIParser                     0.3.1
INFO: Computing test dependencies for BoundaryValueDiffEq...
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing DiffEqDevTools v1.0.0
INFO: Installing DiffEqMonteCarlo v0.10.0
INFO: Installing DiffEqNoiseProcess v1.0.0
INFO: Installing DiffEqPDEBase v0.4.0
INFO: Installing DistributedArrays v0.4.0
INFO: Installing Distributions v0.15.0
INFO: Installing EllipsisNotation v0.3.0
INFO: Installing GenericSVD v0.1.0
INFO: Installing Juno v0.4.0
INFO: Installing Media v0.3.0
INFO: Installing Missings v0.2.7
INFO: Installing MuladdMacro v0.0.2
INFO: Installing OrdinaryDiffEq v3.3.0
INFO: Installing PDMats v0.8.0
INFO: Installing Primes v0.2.0
INFO: Installing QuadGK v0.2.0
INFO: Installing RandomNumbers v0.1.1
INFO: Installing ResettableStacks v0.3.1
INFO: Installing Rmath v0.3.2
INFO: Installing Roots v0.5.0
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing StatsBase v0.20.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Testing BoundaryValueDiffEq
Shooting method
  5.544558 seconds (13.10 M allocations: 289.928 MiB, 1.69% gc time)
  1.201584 seconds (11.80 M allocations: 218.781 MiB, 4.68% gc time)
 10.726234 seconds (9.24 M allocations: 282.796 MiB, 0.96% gc time)
Test Summary:         | Pass  Total
Shooting Method Tests |    4      4
 64.013341 seconds (70.77 M allocations: 2.361 GiB, 1.31% gc time)
Collocation method (GeneralMIRK)
Affineness Test
WARNING: bzeros(::Type{T}, n::Integer, m::Integer, a::Integer, b::Integer) where T is deprecated, use BandedMatrix(Zeros{T}(n, m), (a, b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] bzeros(::Type{Float64}, ::Int64, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] ConstructJacobian(::BoundaryValueDiffEq.BVPJacobianWrapper{BoundaryValueDiffEq.##22#24{DiffEqBase.BVProblem{Array{Float64,1},Float64,true,Void,Void,#func_1!,#boundary!,DiffEqBase.StandardBVProblem,Void,UniformScaling{Int64}}}}, ::BoundaryValueDiffEq.BVPSystem{Float64,Array{Float64,1},Void}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/BoundaryValueDiffEq/src/jacobian.jl:17
 [4] #solve#20(::Float64, ::Array{Any,1}, ::Function, ::DiffEqBase.BVProblem{Array{Float64,1},Float64,true,Void,Void,#func_1!,#boundary!,DiffEqBase.StandardBVProblem,Void,UniformScaling{Int64}}, ::BoundaryValueDiffEq.GeneralMIRK4) at /home/vagrant/.julia/v0.6/BoundaryValueDiffEq/src/solve.jl:65
 [5] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.BVProblem{Array{Float64,1},Float64,true,Void,Void,#func_1!,#boundary!,DiffEqBase.StandardBVProblem,Void,UniformScaling{Int64}}, ::BoundaryValueDiffEq.GeneralMIRK4) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] macro expansion at /home/vagrant/.julia/v0.6/BoundaryValueDiffEq/test/runtests.jl:11 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] macro expansion at ./util.jl:237 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/BoundaryValueDiffEq/test/mirk_convergence_tests.jl, in expression starting on line 237
  5.292950 seconds (2.59 M allocations: 139.712 MiB, 1.21% gc time)
Convergence Test on Linear
  3.750036 seconds (33.29 M allocations: 2.532 GiB, 21.04% gc time)
Collocation method (MIRK)
Affineness Test
  0.432200 seconds (624.06 k allocations: 47.299 MiB, 3.56% gc time)
Convergence Test on Linear
  2.492192 seconds (33.00 M allocations: 2.517 GiB, 22.64% gc time)
Test Summary:                   | Pass  Total
Collocation Method (MIRK) Tests |    4      4
 16.051732 seconds (70.60 M allocations: 5.289 GiB, 9.16% gc time)
INFO: BoundaryValueDiffEq tests passed
INFO: Removing Calculus v0.2.2
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing DiffEqDevTools v1.0.0
INFO: Removing DiffEqMonteCarlo v0.10.0
INFO: Removing DiffEqNoiseProcess v1.0.0
INFO: Removing DiffEqPDEBase v0.4.0
INFO: Removing DistributedArrays v0.4.0
INFO: Removing Distributions v0.15.0
INFO: Removing EllipsisNotation v0.3.0
INFO: Removing GenericSVD v0.1.0
INFO: Removing Juno v0.4.0
INFO: Removing Media v0.3.0
INFO: Removing Missings v0.2.7
INFO: Removing MuladdMacro v0.0.2
INFO: Removing OrdinaryDiffEq v3.3.0
INFO: Removing PDMats v0.8.0
INFO: Removing Primes v0.2.0
INFO: Removing QuadGK v0.2.0
INFO: Removing RandomNumbers v0.1.1
INFO: Removing ResettableStacks v0.3.1
INFO: Removing Rmath v0.3.2
INFO: Removing Roots v0.5.0
INFO: Removing SortingAlgorithms v0.2.0
INFO: Removing StatsBase v0.20.1
INFO: Removing StatsFuns v0.5.0
INFO: Removing VectorizedRoutines v0.0.2

>>> End of log
