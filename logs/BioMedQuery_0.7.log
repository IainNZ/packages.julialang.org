>>> 'Pkg.add("BioMedQuery")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of BioMedQuery from https://github.com/bcbi/BioMedQuery.jl.git
[ Info: Cloning cache of BioServices from https://github.com/BioJulia/BioServices.jl.git
[ Info: Cloning cache of DecFP from https://github.com/stevengj/DecFP.jl.git
[ Info: Cloning cache of EzXML from https://github.com/bicycle1885/EzXML.jl.git
[ Info: Cloning cache of MySQL from https://github.com/JuliaDatabases/MySQL.jl.git
[ Info: Cloning cache of SQLite from https://github.com/JuliaDatabases/SQLite.jl.git
[ Info: Installing AbstractTrees v0.1.0
[ Info: Installing ArgParse v0.5.0
[ Info: Installing BaseTestNext v0.2.2
[ Info: Installing BinDeps v0.8.8
[ Info: Installing BinaryProvider v0.3.0
[ Info: Installing BioMedQuery v0.4.0
[ Info: Installing BioServices v0.1.0
[ Info: Installing BufferedStreams v0.4.0
[ Info: Installing CategoricalArrays v0.3.9
[ Info: Installing CodecZlib v0.4.3
[ Info: Installing Codecs v0.4.0
[ Info: Installing DataFrames v0.11.6
[ Info: Installing DataStreams v0.3.4
[ Info: Installing DataStructures v0.8.1
[ Info: Installing DecFP v0.4.3
[ Info: Installing EzXML v0.6.3
[ Info: Installing Gumbo v0.4.0
[ Info: Installing HttpCommon v0.4.0
[ Info: Installing HttpParser v0.3.1
[ Info: Installing IterTools v0.2.1
[ Info: Installing LegacyStrings v0.3.0
[ Info: Installing Libz v0.2.4
[ Info: Installing LightXML v0.6.0
[ Info: Installing MbedTLS v0.5.8
[ Info: Installing Missings v0.2.9
[ Info: Installing MySQL v0.5.2
[ Info: Installing NamedTuples v4.0.1
[ Info: Installing Reexport v0.1.0
[ Info: Installing Requests v0.5.1
[ Info: Installing SHA v0.5.7
[ Info: Installing SQLite v0.5.0
[ Info: Installing SortingAlgorithms v0.2.1
[ Info: Installing StatsBase v0.22.0
[ Info: Installing TextWrap v0.2.0
[ Info: Installing TranscodingStreams v0.5.2
[ Info: Installing URIParser v0.3.1
[ Info: Installing WeakRefStrings v0.4.6
[ Info: Installing XMLDict v0.1.3
[ Info: Installing ZipFile v0.5.0
[ Info: Building LightXML
[ Info: Building CodecZlib
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = valid_dl_path(::String, ::BinaryProvider.Linux) at PlatformNames.jl:376
└ @ BinaryProvider PlatformNames.jl:376
WARNING: importing deprecated binding Base.Libdl into Sys.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/CodecZlib/deps/build.jl:98
[ Info: Building SQLite
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope at build.jl:11
└ @ Core build.jl:11
┌ Warning: `is_linux` is deprecated, use `Sys.islinux` instead.
│   caller = top-level scope at build.jl:14
└ @ Core build.jl:14
[ Info: Building Gumbo
[ Info: Building EzXML
[ Info: Directory /home/vagrant/.julia/v0.7/EzXML/deps/usr/lib does not exist!
┌ Warning: `rsearch(s::AbstractString, c::Char)` is deprecated, use `coalesce(findlast(isequal(c), s), 0)` instead.
│   caller = extract_platform_key(::String) at Prefix.jl:223
└ @ BinaryProvider Prefix.jl:223
[ Info: Downloading https://github.com/bicycle1885/XML2Builder/releases/download/v1.0.0/XML2Builder.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.7/EzXML/deps/usr/downloads/XML2Builder.x86_64-linux-gnu.tar.gz...
┌ Warning: `wait(t::Task)` is deprecated, use `fetch(t)` instead.
│   caller = macro expansion at OutputCollector.jl:62 [inlined]
└ @ Core OutputCollector.jl:62
[05:57:40] [05:57:40] ######################################################################## 100.0%[05:57:40] ######################################################################## 100.0%[05:57:40] ###                                                                        5.4%[05:57:40] ###################                                                       26.8%[05:57:40] #####################################                                     51.7%[05:57:41] ######################################################                    76.1%[05:57:41] ######################################################################## 100.0%
┌ Warning: `wait(t::Task)` is deprecated, use `fetch(t)` instead.
│   caller = wait(::BinaryProvider.OutputCollector) at OutputCollector.jl:158
└ @ BinaryProvider OutputCollector.jl:158
┌ Warning: `wait(t::Task)` is deprecated, use `fetch(t)` instead.
│   caller = wait(::BinaryProvider.OutputCollector) at OutputCollector.jl:159
└ @ BinaryProvider OutputCollector.jl:159
┌ Warning: `wait(t::Task)` is deprecated, use `fetch(t)` instead.
│   caller = wait(::BinaryProvider.OutputCollector) at OutputCollector.jl:163
└ @ BinaryProvider OutputCollector.jl:163
[ Info: No hash cache found
[ Info: Calculated hash d3125723e5c75ded1eb01e5ce06c7dfae149ee276aa2d3f82a64edb2e8df23b8 for file /home/vagrant/.julia/v0.7/EzXML/deps/usr/downloads/XML2Builder.x86_64-linux-gnu.tar.gz
[ Info: Installing /home/vagrant/.julia/v0.7/EzXML/deps/usr/downloads/XML2Builder.x86_64-linux-gnu.tar.gz into /home/vagrant/.julia/v0.7/EzXML/deps/usr
WARNING: importing deprecated binding Base.Libdl into Sys.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/EzXML/deps/build.jl:25
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = valid_dl_path(::String, ::BinaryProvider.Linux) at PlatformNames.jl:376
└ @ BinaryProvider PlatformNames.jl:376
Inconsistency detected by ld.so: dl-version.c: 224: _dl_check_map_versions: Assertion `needed != ((void *)0)' failed!
ERROR: Build process failed.
error at ./error.jl:33 [inlined]
build!(::Array{String,1}, ::Set{Any}, ::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:630
build!(::Array{String,1}, ::Set{Any}, ::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:627 (repeats 2 times)
(::getfield(Pkg.Entry, Symbol("##51#52")){Array{String,1},Dict{Any,Any},Set{Any}})(::String, ::IOStream) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:636
mktemp(::getfield(Pkg.Entry, Symbol("##51#52")){Array{String,1},Dict{Any,Any},Set{Any}}, ::String) at ./file.jl:425
mktemp at ./file.jl:423 [inlined]
build! at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:635 [inlined] (repeats 2 times)
build(::Array{String,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:647
resolve(::Dict{String,Pkg.Types.VersionSet}, ::Dict{String,Dict{VersionNumber,Pkg.Types.Available}}, ::Dict{String,Tuple{VersionNumber,Bool}}, ::Dict{String,Pkg.Types.Fixed}, ::Dict{String,VersionNumber}, ::Set{String}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:579
resolve at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:487 [inlined] (repeats 4 times)
edit(::Function, ::String, ::Pkg.Types.VersionSet, ::Vararg{Pkg.Types.VersionSet,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:31
(::getfield(Pkg.Entry, Symbol("##1#3")){String,Pkg.Types.VersionSet})() at ./task.jl:344
Stacktrace:
 [1] sync_end() at ./task.jl:296
 [2] macro expansion at ./task.jl:312 [inlined]
 [3] add(::String, ::Pkg.Types.VersionSet) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:52
 [4] add at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:81 [inlined]
 [5] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
 [6] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(Pkg.Entry.add),Tuple{String}}, ::String) at ./file.jl:72
 [7] #cd#1(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
 [8] cd at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:25 [inlined]
 [9] add(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:119
 [10] top-level scope

>>> 'Pkg.test("BioMedQuery")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5025
Commit 74af87841b (2018-05-06 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1279449 s         74 s      98117 s     453625 s         13 s
       #2  3499 MHz     330296 s         96 s      38072 s    1731130 s          0 s
       
  Memory: 2.939197540283203 GB (688.74609375 MB free)
  Uptime: 21341.0 sec
  Load Avg:  1.03662109375  0.978515625  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
1 required packages:
 - JSON                          0.17.2
41 additional packages:
 - AbstractTrees                 0.1.0
 - ArgParse                      0.5.0
 - BaseTestNext                  0.2.2
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.0
 - BioMedQuery                   0.4.0
 - BioServices                   0.1.0
 - BufferedStreams               0.4.0
 - CategoricalArrays             0.3.9
 - CodecZlib                     0.4.3
 - Codecs                        0.4.0
 - Compat                        0.64.0
 - DataFrames                    0.11.6
 - DataStreams                   0.3.4
 - DataStructures                0.8.1
 - DecFP                         0.4.3
 - EzXML                         0.6.3
 - Gumbo                         0.4.0
 - HttpCommon                    0.4.0
 - HttpParser                    0.3.1
 - IterTools                     0.2.1
 - LegacyStrings                 0.3.0
 - Libz                          0.2.4
 - LightXML                      0.6.0
 - MbedTLS                       0.5.8
 - Missings                      0.2.9
 - MySQL                         0.5.2
 - NamedTuples                   4.0.1
 - Nullables                     0.0.5
 - Reexport                      0.1.0
 - Requests                      0.5.1
 - SHA                           0.5.7
 - SQLite                        0.5.0
 - SortingAlgorithms             0.2.1
 - StatsBase                     0.22.0
 - TextWrap                      0.2.0
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - WeakRefStrings                0.4.6
 - XMLDict                       0.1.3
 - ZipFile                       0.5.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing BioMedQuery
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BioMedQuery/test/runtests.jl:4
ERROR: LoadError: DecFP not installed properly, run Pkg.build("DecFP"), restart Julia and try again
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope at /home/vagrant/.julia/v0.7/DecFP/src/DecFP.jl:28
 [3] include at ./boot.jl:314 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1067
 [5] include(::Module, ::String) at ./sysimg.jl:29
 [6] top-level scope
 [7] eval at ./boot.jl:317 [inlined]
 [8] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/DecFP/src/DecFP.jl:28
ERROR: LoadError: LoadError: Failed to precompile DecFP to /home/vagrant/.julia/compiled/v0.7/DecFP.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:974
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include at ./sysimg.jl:29 [inlined]
 [9] include(::String) at /home/vagrant/.julia/v0.7/MySQL/src/MySQL.jl:2
 [10] top-level scope
 [11] include at ./boot.jl:314 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1067
 [13] include(::Module, ::String) at ./sysimg.jl:29
 [14] top-level scope
 [15] eval at ./boot.jl:317 [inlined]
 [16] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/MySQL/src/api.jl:3
in expression starting at /home/vagrant/.julia/v0.7/MySQL/src/MySQL.jl:23
ERROR: LoadError: LoadError: LoadError: LoadError: Failed to precompile MySQL to /home/vagrant/.julia/compiled/v0.7/MySQL.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:1003
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include at ./sysimg.jl:29 [inlined]
 [9] include(::String) at /home/vagrant/.julia/v0.7/BioMedQuery/src/BioMedQuery.jl:4
 [10] top-level scope
 [11] include at ./boot.jl:314 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1067
 [13] include at ./sysimg.jl:29 [inlined]
 [14] include(::String) at /home/vagrant/.julia/v0.7/BioMedQuery/src/BioMedQuery.jl:4
 [15] top-level scope
 [16] include at ./boot.jl:314 [inlined]
 [17] include_relative(::Module, ::String) at ./loading.jl:1067
 [18] _require(::Base.PkgId) at ./loading.jl:993
 [19] require(::Base.PkgId) at ./loading.jl:874
 [20] require(::Module, ::Symbol) at ./loading.jl:869
 [21] include at ./boot.jl:314 [inlined]
 [22] include_relative(::Module, ::String) at ./loading.jl:1067
 [23] include(::Module, ::String) at ./sysimg.jl:29
 [24] exec_options(::Base.JLOptions) at ./client.jl:327
 [25] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/BioMedQuery/src/DBUtils/mysql_db_utils.jl:1
in expression starting at /home/vagrant/.julia/v0.7/BioMedQuery/src/DBUtils/DBUtils.jl:3
in expression starting at /home/vagrant/.julia/v0.7/BioMedQuery/src/BioMedQuery.jl:16
in expression starting at /home/vagrant/.julia/v0.7/BioMedQuery/test/runtests.jl:7
┌ Error: ------------------------------------------------------------
│ # Testing failed for BioMedQuery
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/BioMedQuery/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: BioMedQuery had test errors

>>> End of log
