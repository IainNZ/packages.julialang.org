>>> 'Pkg.add("Conda")' log
[ Info: Installing BinDeps v0.8.6
[ Info: Installing Conda v0.7.1
[ Info: Installing SHA v0.5.6
[ Info: Installing URIParser v0.3.0
[ Info: Building Conda
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Conda
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Conda")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2227419 s       6509 s     116699 s     792611 s         19 s
       #2  3500 MHz     687871 s       1744 s      55813 s    2826926 s          0 s
       
  Memory: 2.93927001953125 GB (908.26953125 MB free)
  Uptime: 36601.0 sec
  Load Avg:  1.01806640625  1.001953125  0.96533203125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Conda                         0.7.1
 - JSON                          0.16.4
5 additional packages:
 - BinDeps                       0.8.6
 - Compat                        0.49.0
 - Nullables                     0.0.3
 - SHA                           0.5.6
 - URIParser                     0.3.0
[ Info: Testing Conda
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Conda/test/runtests.jl:3
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Union{AbstractString, Symbol}(::Symbol)` should be defined instead.
│   caller = top-level scope
└ @ Core :0
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.7/Conda/deps/usr/envs/test_conda_jl:

The following NEW packages will be INSTALLED:

    zlib: 1.2.11-0 conda-forge

zlib-1.2.11-0.   0% |                              | ETA:  --:--:--   0.00  B/szlib-1.2.11-0.  17% |#####                          | ETA:  0:00:00   1.40 MB/szlib-1.2.11-0.  34% |##########                     | ETA:  0:00:00   1.35 MB/szlib-1.2.11-0.  51% |################               | ETA:  0:00:00   1.34 MB/szlib-1.2.11-0.  69% |#####################          | ETA:  0:00:00   1.76 MB/szlib-1.2.11-0.  86% |##########################     | ETA:  0:00:00   1.67 MB/szlib-1.2.11-0. 100% |###############################| ETA:  0:00:00 209.26 kB/szlib-1.2.11-0. 100% |###############################| Time: 0:00:00 208.59 kB/s
#
# To activate this environment, use:
# > source activate /home/vagrant/.julia/v0.7/Conda/deps/usr/envs/test_conda_jl
#
# To deactivate an active environment, use:
# > source deactivate
#

┌ Warning: `readstring(cmd::AbstractCmd)` is deprecated, use `read(cmd, String)` instead.
│   caller = parseconda(::Cmd, ::Symbol) at Conda.jl:136
└ @ Conda Conda.jl:136
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = #parse#1(::Type{Dict{String,Any}}, ::Type{Int64}, ::Function, ::String) at Parser.jl:386
└ @ JSON.Parser Parser.jl:386
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = predict_string(::JSON.Parser.MemoryParserState) at specialized.jl:47
└ @ JSON.Parser specialized.jl:47
┌ Warning: `unsafe_copy!(dest, args...)` is deprecated, use `unsafe_copyto!(dest, args...)` instead.
│   caller = parse_string(::JSON.Parser.MemoryParserState) at specialized.jl:15
└ @ JSON.Parser specialized.jl:15
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = hasmore at Parser.jl:102 [inlined]
└ @ Core Parser.jl:102
Fetching package metadata ...........
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.7/Conda/deps/usr/envs/test_conda_jl:

The following NEW packages will be INSTALLED:

    ca-certificates: 2017.08.26-h1d4fec5_0
    curl:            7.57.0-h84994c4_0    
    libcurl:         7.57.0-h1ad7b7a_0    
    libgcc-ng:       7.2.0-h7cc24e2_2     
    libssh2:         1.8.0-h9cfc8f7_4     
    openssl:         1.0.2n-hb7f436b_0    

libssh2-1.8.0-   0% |                              | ETA:  --:--:--   0.00  B/slibssh2-1.8.0-   6% |##                             | ETA:  0:00:00   8.76 MB/slibssh2-1.8.0-  13% |####                           | ETA:  0:00:00   9.37 MB/slibssh2-1.8.0-  19% |######                         | ETA:  0:00:00  11.74 MB/slibssh2-1.8.0-  26% |########                       | ETA:  0:00:00  14.20 MB/slibssh2-1.8.0-  32% |##########                     | ETA:  0:00:00  16.32 MB/slibssh2-1.8.0-  39% |############                   | ETA:  0:00:00  18.48 MB/slibssh2-1.8.0-  46% |##############                 | ETA:  0:00:00  20.48 MB/slibssh2-1.8.0-  52% |################               | ETA:  0:00:00  21.34 MB/slibssh2-1.8.0-  59% |##################             | ETA:  0:00:00  22.90 MB/slibssh2-1.8.0-  65% |####################           | ETA:  0:00:00  24.45 MB/slibssh2-1.8.0-  72% |######################         | ETA:  0:00:00  26.19 MB/slibssh2-1.8.0-  79% |########################       | ETA:  0:00:00  27.42 MB/slibssh2-1.8.0-  85% |##########################     | ETA:  0:00:00  28.34 MB/slibssh2-1.8.0-  92% |############################   | ETA:  0:00:00  29.31 MB/slibssh2-1.8.0-  98% |############################## | ETA:  0:00:00  30.65 MB/slibssh2-1.8.0- 100% |###############################| ETA:  0:00:00  30.41 MB/slibssh2-1.8.0- 100% |###############################| Time: 0:00:00  29.67 MB/s
libcurl-7.57.0   0% |                              | ETA:  --:--:--   0.00  B/slibcurl-7.57.0   3% |                               | Time: 0:00:00  31.34 MB/slibcurl-7.57.0   6% |#                              | Time: 0:00:00  21.01 MB/slibcurl-7.57.0   9% |##                             | Time: 0:00:00  19.51 MB/slibcurl-7.57.0  12% |###                            | Time: 0:00:00  15.33 MB/slibcurl-7.57.0  15% |####                           | Time: 0:00:00  15.34 MB/slibcurl-7.57.0  18% |#####                          | Time: 0:00:00  15.31 MB/slibcurl-7.57.0  21% |######                         | Time: 0:00:00  14.71 MB/slibcurl-7.57.0  25% |#######                        | Time: 0:00:00  14.72 MB/slibcurl-7.57.0  28% |########                       | Time: 0:00:00  14.64 MB/slibcurl-7.57.0  31% |#########                      | Time: 0:00:00  15.06 MB/slibcurl-7.57.0  34% |##########                     | Time: 0:00:00  15.90 MB/slibcurl-7.57.0  37% |###########                    | Time: 0:00:00  16.84 MB/slibcurl-7.57.0  40% |############                   | Time: 0:00:00  17.77 MB/slibcurl-7.57.0  43% |#############                  | Time: 0:00:00  18.67 MB/slibcurl-7.57.0  47% |##############                 | Time: 0:00:00  19.50 MB/slibcurl-7.57.0  50% |###############                | Time: 0:00:00  20.34 MB/slibcurl-7.57.0  53% |################               | Time: 0:00:00  21.18 MB/slibcurl-7.57.0  56% |#################              | Time: 0:00:00  22.01 MB/slibcurl-7.57.0  59% |##################             | Time: 0:00:00  22.75 MB/slibcurl-7.57.0  62% |###################            | Time: 0:00:00  23.43 MB/slibcurl-7.57.0  65% |####################           | Time: 0:00:00  24.14 MB/slibcurl-7.57.0  69% |#####################          | Time: 0:00:00  24.88 MB/slibcurl-7.57.0  72% |######################         | Time: 0:00:00  25.58 MB/slibcurl-7.57.0  75% |#######################        | Time: 0:00:00  26.00 MB/slibcurl-7.57.0  78% |########################       | Time: 0:00:00  26.64 MB/slibcurl-7.57.0  81% |#########################      | Time: 0:00:00  27.30 MB/slibcurl-7.57.0  84% |##########################     | Time: 0:00:00  27.92 MB/slibcurl-7.57.0  87% |###########################    | Time: 0:00:00  28.42 MB/slibcurl-7.57.0  90% |############################   | Time: 0:00:00  28.60 MB/slibcurl-7.57.0  94% |#############################  | Time: 0:00:00  29.11 MB/slibcurl-7.57.0  97% |############################## | Time: 0:00:00  29.66 MB/slibcurl-7.57.0 100% |###############################| Time: 0:00:00  29.94 MB/slibcurl-7.57.0 100% |###############################| Time: 0:00:00  29.58 MB/s
curl-7.57.0-h8   0% |                              | ETA:  --:--:--   0.00  B/scurl-7.57.0-h8  11% |###                            | Time: 0:00:00  16.45 MB/scurl-7.57.0-h8  23% |#######                        | Time: 0:00:00  22.43 MB/scurl-7.57.0-h8  35% |##########                     | Time: 0:00:00  26.86 MB/scurl-7.57.0-h8  47% |##############                 | Time: 0:00:00  30.84 MB/scurl-7.57.0-h8  58% |##################             | Time: 0:00:00  34.18 MB/scurl-7.57.0-h8  70% |#####################          | Time: 0:00:00  36.31 MB/scurl-7.57.0-h8  82% |#########################      | Time: 0:00:00  37.89 MB/scurl-7.57.0-h8  94% |#############################  | Time: 0:00:00  39.61 MB/scurl-7.57.0-h8 100% |###############################| Time: 0:00:00  39.83 MB/scurl-7.57.0-h8 100% |###############################| Time: 0:00:00  38.08 MB/s
Fetching package metadata ...........
Solving package specifications: .

Package plan for package removal in environment /home/vagrant/.julia/v0.7/Conda/deps/usr/envs/test_conda_jl:

The following packages will be REMOVED:

    curl: 7.57.0-h84994c4_0

Test Failed at /home/vagrant/.julia/v0.7/Conda/test/runtests.jl:23
  Expression: !(isfile(curl_path))
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/Conda/test/runtests.jl:23
┌ Error: ------------------------------------------------------------
│ # Testing failed for Conda
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Conda/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: Conda had test errors

>>> End of log
