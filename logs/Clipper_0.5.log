>>> 'Pkg.add("Clipper")' log
INFO: Cloning cache of Clipper from https://github.com/Voxel8/Clipper.jl.git
INFO: Installing Clipper v0.0.2
INFO: Building Clipper
WARNING: `@windows_only` is deprecated, use `@static if is_windows()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @windows_only(::Any) at ./deprecated.jl:1210
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Clipper/deps/build.jl, in expression starting on line 5
cclipper.cpp:25:77: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC bool CDECL orientation(ClipperLib::IntPoint** path, size_t count) {
                                                                             ^
cclipper.cpp:34:72: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC double CDECL area(ClipperLib::IntPoint** path, size_t count) {
                                                                        ^
cclipper.cpp:46:52: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC ClipperLib::Clipper* CDECL get_clipper() {
                                                    ^
cclipper.cpp:50:63: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC void CDECL delete_clipper(ClipperLib::Clipper *ptr) {
                                                               ^
cclipper.cpp:54:144: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC bool CDECL add_path(ClipperLib::Clipper *ptr, ClipperLib::IntPoint** path, size_t count, ClipperLib::PolyType polyType, bool closed) {
                                                                                                                                                ^
cclipper.cpp: In function ‘bool add_path(ClipperLib::Clipper*, ClipperLib::IntPoint**, size_t, ClipperLib::PolyType, bool)’:
cclipper.cpp:65:19: warning: format not a string literal and no format arguments [-Wformat-security]
    printf(e.what());
                   ^
cclipper.cpp: At global scope:
cclipper.cpp:72:74: warning: ‘cdecl’ attribute ignored [-Wattributes]
                  size_t count, ClipperLib::PolyType polyType, bool closed) {
                                                                          ^
cclipper.cpp: In function ‘bool add_paths(ClipperLib::Clipper*, ClipperLib::IntPoint***, size_t*, size_t, ClipperLib::PolyType, bool)’:
cclipper.cpp:87:19: warning: format not a string literal and no format arguments [-Wformat-security]
    printf(e.what());
                   ^
cclipper.cpp: At global scope:
cclipper.cpp:95:114: warning: ‘cdecl’ attribute ignored [-Wattributes]
                 void* outputArray, void(*append)(void* outputArray, size_t polyIndex, ClipperLib::IntPoint point)) {
                                                                                                                  ^
cclipper.cpp: In function ‘bool execute(ClipperLib::Clipper*, ClipperLib::ClipType, ClipperLib::PolyFillType, ClipperLib::PolyFillType, void*, void (*)(void*, size_t, ClipperLib::IntPoint))’:
cclipper.cpp:103:19: warning: format not a string literal and no format arguments [-Wformat-security]
    printf(e.what());
                   ^
cclipper.cpp: At global scope:
cclipper.cpp:118:54: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC void CDECL clear(ClipperLib::Clipper *ptr) {
                                                      ^
cclipper.cpp:122:74: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC ClipperLib::IntRect CDECL get_bounds(ClipperLib::Clipper *ptr) {
                                                                          ^
cclipper.cpp:129:105: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC ClipperLib::ClipperOffset* CDECL get_clipper_offset(double miterLimit, double roundPrecision) {
                                                                                                         ^
cclipper.cpp:133:76: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC void CDECL delete_clipper_offset(ClipperLib::ClipperOffset *ptr) {
                                                                            ^
cclipper.cpp:138:79: warning: ‘cdecl’ attribute ignored [-Wattributes]
                     ClipperLib::JoinType joinType, ClipperLib::EndType endType) {
                                                                               ^
cclipper.cpp: In function ‘void add_offset_path(ClipperLib::ClipperOffset*, ClipperLib::IntPoint**, size_t, ClipperLib::JoinType, ClipperLib::EndType)’:
cclipper.cpp:147:19: warning: format not a string literal and no format arguments [-Wformat-security]
    printf(e.what());
                   ^
cclipper.cpp: At global scope:
cclipper.cpp:152:93: warning: ‘cdecl’ attribute ignored [-Wattributes]
                     size_t count, ClipperLib::JoinType joinType, ClipperLib::EndType endType) {
                                                                                             ^
cclipper.cpp: In function ‘void add_offset_paths(ClipperLib::ClipperOffset*, ClipperLib::IntPoint***, size_t*, size_t, ClipperLib::JoinType, ClipperLib::EndType)’:
cclipper.cpp:165:19: warning: format not a string literal and no format arguments [-Wformat-security]
    printf(e.what());
                   ^
cclipper.cpp: At global scope:
cclipper.cpp:169:67: warning: ‘cdecl’ attribute ignored [-Wattributes]
  DLL_PUBLIC void CDECL clear_offset(ClipperLib::ClipperOffset *ptr) {
                                                                   ^
cclipper.cpp:175:117: warning: ‘cdecl’ attribute ignored [-Wattributes]
                    void* outputArray, void(*append)(void* outputArray, size_t polyIndex, ClipperLib::IntPoint point)) {
                                                                                                                     ^
cclipper.cpp: In function ‘void execute_offset(ClipperLib::ClipperOffset*, double, void*, void (*)(void*, size_t, ClipperLib::IntPoint))’:
cclipper.cpp:181:19: warning: format not a string literal and no format arguments [-Wformat-security]
    printf(e.what());
                   ^
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of Clipper
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Clipper")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Clipper
WARNING: `@windows_only` is deprecated, use `@static if is_windows()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @windows_only(::Any) at ./deprecated.jl:1210
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Clipper/src/Clipper.jl, in expression starting on line 21
Test Add path to clipper
Test Union
Test Failed
  Expression: string(polys) == "[[[0,0],[2,0],[2,1],[0,1]]]"
   Evaluated: "Array{Clipper.IntPoint,1}[Clipper.IntPoint[[0,0],[2,0],[2,1],[0,1]]]" == "[[[0,0],[2,0],[2,1],[0,1]]]"
Error running: Test Union
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Fail) at ./test.jl:321
 in do_test(::Base.Test.Returned, ::Expr) at ./test.jl:219
 in (::##4#5)() at /home/vagrant/.julia/v0.5/Clipper/test/clipper_test.jl:36
 in #test#1(::Bool, ::Function, ::##4#5, ::String) at /home/vagrant/.julia/v0.5/Clipper/test/runtests.jl:10
 in test(::Function, ::String) at /home/vagrant/.julia/v0.5/Clipper/test/runtests.jl:5
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Clipper/test/clipper_test.jl, in expression starting on line 16
while loading /home/vagrant/.julia/v0.5/Clipper/test/runtests.jl, in expression starting on line 17
===============================[ ERROR: Clipper ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Clipper/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Clipper had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
