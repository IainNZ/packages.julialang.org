>>> 'Pkg.add("Homotopies")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Cloning cache of FixedPolynomials from https://github.com/JuliaAlgebra/FixedPolynomials.jl.git
[ Info: Cloning cache of Homotopies from https://github.com/JuliaHomotopyContinuation/Homotopies.jl.git
[ Info: Cloning cache of MultivariatePolynomials from https://github.com/JuliaAlgebra/MultivariatePolynomials.jl.git
[ Info: Installing FixedPolynomials v0.2.2
[ Info: Installing Homotopies v0.1.0
[ Info: Installing MultivariatePolynomials v0.1.2
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Homotopies
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Homotopies")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
Julia Version 0.7.0-DEV.3664
Commit 9d5aebb07a (2018-01-30 22:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3503 MHz    1104462 s         59 s      63846 s     310681 s         11 s
       #2  3503 MHz     253780 s        100 s      29678 s    1417746 s          0 s
       
  Memory: 2.93927001953125 GB (768.61328125 MB free)
  Uptime: 17336.0 sec
  Load Avg:  0.8984375  0.96044921875  1.1357421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Homotopies                    0.1.0
 - JSON                          0.16.4
4 additional packages:
 - Compat                        0.49.0
 - FixedPolynomials              0.2.2
 - MultivariatePolynomials       0.1.2
 - Nullables                     0.0.3
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Computing test dependencies for Homotopies...
[ Info: Cloning cache of DynamicPolynomials from https://github.com/JuliaAlgebra/DynamicPolynomials.jl.git
[ Info: Installing DynamicPolynomials v0.0.2
[ Info: Testing Homotopies
WARNING: importing deprecated binding Base.dot into MultivariatePolynomials.
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/polynomial.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/polynomial.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/operators.jl:107
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/operators.jl:108
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/operators.jl:109
WARNING: importing deprecated binding Base.Void into MultivariatePolynomials.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/comparison.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/comparison.jl:11
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/comparison.jl:14
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/comparison.jl:15
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/src/bigfloat_utilities.jl:2
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/src/bigfloat_utilities.jl:2
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/src/bigfloat_utilities.jl:2
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/src/bigfloat_utilities.jl:3
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/src/bigfloat_utilities.jl:3
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/src/bigfloat_utilities.jl:3
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/runtests.jl:2
WARNING: importing deprecated binding Base.dot into DynamicPolynomials.
WARNING: importing deprecated binding Base.IntSet into DynamicPolynomials.
WARNING: Base.IntSet is deprecated, use BitSet instead.
 in module DynamicPolynomials
WARNING: Base.IntSet is deprecated, use BitSet instead.
 in module DynamicPolynomials
WARNING: Base.IntSet is deprecated, use BitSet instead.
 in module DynamicPolynomials
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Monomial{true}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = Type at mono.jl:25 [inlined]
└ @ Core mono.jl:25
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Monomial{true}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = DynamicPolynomials.Term{true,T} where T(::DynamicPolynomials.PolyVar{true}) at term.jl:11
└ @ DynamicPolynomials term.jl:11
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = DynamicPolynomials.Term{true,T} where T(::DynamicPolynomials.Monomial{true}) at term.jl:10
└ @ DynamicPolynomials term.jl:10
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
┌ Warning: `find` is deprecated, use `findall` instead.
│   caller = mergevars(::Array{Array{DynamicPolynomials.PolyVar{true},1},1}) at var.jl:55
└ @ DynamicPolynomials var.jl:55
┌ Warning: `find` is deprecated, use `findall` instead.
│   caller = _removedups! at monovec.jl:185 [inlined]
└ @ Core monovec.jl:185
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = degree(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.PolyVar{true}) at monomial.jl:75
└ @ MultivariatePolynomials monomial.jl:75
StraightLineHomotopy: Error During Test at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:8
  Test threw an exception of type MethodError
  Expression: StraightLineHomotopy(f, g) isa StraightLineHomotopy{Float64}
  MethodError: no method matching zero(::Nothing)
  Closest candidates are:
    zero(!Matched::Type{Base.LibGit2.GitHash}) at libgit2/oid.jl:208
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuildItem}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:80
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuild}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:116
    ...
  Stacktrace:
   [1] iszero(::Nothing) at ./number.jl:32
   [2] degree(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.PolyVar{true}) at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:76
   [3] degree at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:69 [inlined]
   [4] _coefficients_exponents at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:73 [inlined]
   [5] FixedPolynomials.Polynomial{Float64}(::DynamicPolynomials.Polynomial{true,Int64}, ::Array{DynamicPolynomials.PolyVar{true},1}, ::Bool) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:58 (repeats 2 times)
   [6] #14 at ./<missing>:0 [inlined]
   [7] next at ./generator.jl:47 [inlined]
   [8] collect_to!(::Array{FixedPolynomials.Polynomial{Float64},1}, ::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}, ::Int64, ::Int64) at ./array.jl:575
   [9] collect_to_with_first! at ./array.jl:562 [inlined]
   [10] collect(::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}) at ./array.jl:543
   [11] convert(::Type{Array{FixedPolynomials.Polynomial{Float64},1}}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/convert_promote.jl:11
   [12] construct at /home/vagrant/.julia/v0.7/Homotopies/src/constructors.jl:43 [inlined]
   [13] StraightLineHomotopy(::DynamicPolynomials.Polynomial{true,Int64}, ::DynamicPolynomials.Polynomial{true,Int64}) at /home/vagrant/.julia/v0.7/Homotopies/src/homotopies/straightline.jl:42
   [14] macro expansion at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:8 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1008 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:2
StraightLineHomotopy: Error During Test at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:9
  Test threw an exception of type MethodError
  Expression: StraightLineHomotopy([f, f], [g, h]) isa StraightLineHomotopy{Float64}
  MethodError: no method matching zero(::Nothing)
  Closest candidates are:
    zero(!Matched::Type{Base.LibGit2.GitHash}) at libgit2/oid.jl:208
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuildItem}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:80
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuild}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:116
    ...
  Stacktrace:
   [1] iszero(::Nothing) at ./number.jl:32
   [2] degree(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.PolyVar{true}) at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:76
   [3] degree at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:69 [inlined]
   [4] _coefficients_exponents at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:73 [inlined]
   [5] FixedPolynomials.Polynomial{Float64}(::DynamicPolynomials.Polynomial{true,Int64}, ::Array{DynamicPolynomials.PolyVar{true},1}, ::Bool) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:58 (repeats 2 times)
   [6] #14 at ./<missing>:0 [inlined]
   [7] next at ./generator.jl:47 [inlined]
   [8] collect(::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}) at ./array.jl:542
   [9] convert(::Type{Array{FixedPolynomials.Polynomial{Float64},1}}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/convert_promote.jl:11
   [10] construct at /home/vagrant/.julia/v0.7/Homotopies/src/constructors.jl:31 [inlined]
   [11] StraightLineHomotopy(::Array{DynamicPolynomials.Polynomial{true,Int64},1}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/Homotopies/src/homotopies/straightline.jl:42
   [12] macro expansion at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:9 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1008 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:2
StraightLineHomotopy: Error During Test at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:10
  Test threw an exception of type MethodError
  Expression: StraightLineHomotopy{Float64}([f, g], [f, h]) isa StraightLineHomotopy{Float64}
  MethodError: no method matching zero(::Nothing)
  Closest candidates are:
    zero(!Matched::Type{Base.LibGit2.GitHash}) at libgit2/oid.jl:208
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuildItem}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:80
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuild}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:116
    ...
  Stacktrace:
   [1] iszero(::Nothing) at ./number.jl:32
   [2] degree(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.PolyVar{true}) at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:76
   [3] degree at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:69 [inlined]
   [4] _coefficients_exponents at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:73 [inlined]
   [5] FixedPolynomials.Polynomial{Float64}(::DynamicPolynomials.Polynomial{true,Int64}, ::Array{DynamicPolynomials.PolyVar{true},1}, ::Bool) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:58 (repeats 2 times)
   [6] #14 at ./<missing>:0 [inlined]
   [7] next at ./generator.jl:47 [inlined]
   [8] collect_to!(::Array{FixedPolynomials.Polynomial{Float64},1}, ::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}, ::Int64, ::Int64) at ./array.jl:575
   [9] collect_to_with_first! at ./array.jl:562 [inlined]
   [10] collect(::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}) at ./array.jl:543
   [11] convert(::Type{Array{FixedPolynomials.Polynomial{Float64},1}}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/convert_promote.jl:11
   [12] construct at /home/vagrant/.julia/v0.7/Homotopies/src/constructors.jl:25 [inlined]
   [13] StraightLineHomotopy{Float64}(::Array{DynamicPolynomials.Polynomial{true,Int64},1}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/Homotopies/src/homotopies/straightline.jl:36
   [14] macro expansion at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:10 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1008 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:2
StraightLineHomotopy: Error During Test at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:11
  Test threw an exception of type MethodError
  Expression: StraightLineHomotopy{Float64}(f, g) isa StraightLineHomotopy{Float64}
  MethodError: no method matching zero(::Nothing)
  Closest candidates are:
    zero(!Matched::Type{Base.LibGit2.GitHash}) at libgit2/oid.jl:208
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuildItem}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:80
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuild}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:116
    ...
  Stacktrace:
   [1] iszero(::Nothing) at ./number.jl:32
   [2] degree(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.PolyVar{true}) at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:76
   [3] degree at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:69 [inlined]
   [4] _coefficients_exponents at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:73 [inlined]
   [5] FixedPolynomials.Polynomial{Float64}(::DynamicPolynomials.Polynomial{true,Int64}, ::Array{DynamicPolynomials.PolyVar{true},1}, ::Bool) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:58 (repeats 2 times)
   [6] #14 at ./<missing>:0 [inlined]
   [7] next at ./generator.jl:47 [inlined]
   [8] collect_to!(::Array{FixedPolynomials.Polynomial{Float64},1}, ::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}, ::Int64, ::Int64) at ./array.jl:575
   [9] collect_to_with_first! at ./array.jl:562 [inlined]
   [10] collect(::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}) at ./array.jl:543
   [11] convert(::Type{Array{FixedPolynomials.Polynomial{Float64},1}}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/convert_promote.jl:11
   [12] construct at /home/vagrant/.julia/v0.7/Homotopies/src/constructors.jl:36 [inlined]
   [13] StraightLineHomotopy{Float64}(::DynamicPolynomials.Polynomial{true,Int64}, ::DynamicPolynomials.Polynomial{true,Int64}) at /home/vagrant/.julia/v0.7/Homotopies/src/homotopies/straightline.jl:36
   [14] macro expansion at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:11 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1008 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:2
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
StraightLineHomotopy: Error During Test at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:16
  Test threw an exception of type MethodError
  Expression: StraightLineHomotopy{BigFloat}(FP.Polynomial{Float64}.([f, f]), convert(Vector{FP.Polynomial{Float64}}, [g, h])) isa StraightLineHomotopy{BigFloat}
  MethodError: no method matching zero(::Nothing)
  Closest candidates are:
    zero(!Matched::Type{Base.LibGit2.GitHash}) at libgit2/oid.jl:208
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuildItem}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:80
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuild}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:116
    ...
  Stacktrace:
   [1] iszero(::Nothing) at ./number.jl:32
   [2] degree(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.PolyVar{true}) at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:76
   [3] degree at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:69 [inlined]
   [4] _coefficients_exponents at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:73 [inlined]
   [5] FixedPolynomials.Polynomial{Float64}(::DynamicPolynomials.Polynomial{true,Int64}, ::Array{DynamicPolynomials.PolyVar{true},1}, ::Bool) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:58 (repeats 2 times)
   [6] #14 at ./<missing>:0 [inlined]
   [7] next at ./generator.jl:47 [inlined]
   [8] collect(::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}) at ./array.jl:542
   [9] convert(::Type{Array{FixedPolynomials.Polynomial{Float64},1}}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/convert_promote.jl:11
   [10] macro expansion at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:16 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1008 [inlined]
   [12] top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:2
StraightLineHomotopy: Error During Test at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching zero(::Nothing)
  Closest candidates are:
    zero(!Matched::Type{Base.LibGit2.GitHash}) at libgit2/oid.jl:208
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuildItem}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:80
    zero(!Matched::Type{Pkg.Resolve.VersionWeights.VWPreBuild}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/resolve/versionweight.jl:116
    ...
  Stacktrace:
   [1] iszero(::Nothing) at ./number.jl:32
   [2] degree(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.PolyVar{true}) at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:76
   [3] degree at /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/monomial.jl:69 [inlined]
   [4] _coefficients_exponents at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:73 [inlined]
   [5] FixedPolynomials.Polynomial{Float64}(::DynamicPolynomials.Polynomial{true,Int64}, ::Array{DynamicPolynomials.PolyVar{true},1}, ::Bool) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/poly.jl:58 (repeats 2 times)
   [6] #14 at ./<missing>:0 [inlined]
   [7] next at ./generator.jl:47 [inlined]
   [8] collect_to!(::Array{FixedPolynomials.Polynomial{Float64},1}, ::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}, ::Int64, ::Int64) at ./array.jl:575
   [9] collect_to_with_first! at ./array.jl:562 [inlined]
   [10] collect(::Base.Generator{Array{DynamicPolynomials.Polynomial{true,Int64},1},getfield(FixedPolynomials, Symbol("##14#15")){Float64,Array{DynamicPolynomials.PolyVar{true},1}}}) at ./array.jl:543
   [11] convert(::Type{Array{FixedPolynomials.Polynomial{Float64},1}}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/FixedPolynomials/src/convert_promote.jl:11
   [12] construct at /home/vagrant/.julia/v0.7/Homotopies/src/constructors.jl:25 [inlined]
   [13] StraightLineHomotopy{Float64}(::Array{DynamicPolynomials.Polynomial{true,Int64},1}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at /home/vagrant/.julia/v0.7/Homotopies/src/homotopies/straightline.jl:36
   [14] macro expansion at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:18 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1008 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:2
   [17] include at ./boot.jl:292 [inlined]
   [18] include_relative(::Module, ::String) at ./loading.jl:1012
   [19] include(::Module, ::String) at ./sysimg.jl:26
   [20] include(::String) at ./sysimg.jl:65
   [21] top-level scope
   [22] include at ./boot.jl:292 [inlined]
   [23] include_relative(::Module, ::String) at ./loading.jl:1012
   [24] include(::Module, ::String) at ./sysimg.jl:26
   [25] exec_options(::Base.JLOptions) at ./client.jl:332
   [26] _start() at ./client.jl:447
Test Summary:        | Pass  Error  Total
StraightLineHomotopy |    3      6      9
ERROR: LoadError: LoadError: Some tests did not pass: 3 passed, 0 failed, 6 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/Homotopies/test/straightline_test.jl:1
in expression starting at /home/vagrant/.julia/v0.7/Homotopies/test/runtests.jl:7
┌ Error: ------------------------------------------------------------
│ # Testing failed for Homotopies
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Homotopies/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:447
└ @ Pkg.Entry entry.jl:734
[ Info: Removing DynamicPolynomials v0.0.2
ERROR: Homotopies had test errors

>>> End of log
