>>> 'Pkg.add("SumOfSquares")' log
INFO: Cloning cache of MultivariateMoments from https://github.com/JuliaAlgebra/MultivariateMoments.jl.git
INFO: Cloning cache of SumOfSquares from https://github.com/JuliaOpt/SumOfSquares.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.4
INFO: Installing ForwardDiff v0.7.5
INFO: Installing JuMP v0.18.1
INFO: Installing MathProgBase v0.7.0
INFO: Installing MultivariateMoments v0.0.1
INFO: Installing MultivariatePolynomials v0.1.4
INFO: Installing NaNMath v0.3.1
INFO: Installing PolyJuMP v0.1.0
INFO: Installing ReverseDiffSparse v0.8.1
INFO: Installing RowEchelon v0.1.0
INFO: Installing SemialgebraicSets v0.0.2
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing SumOfSquares v0.1.1
INFO: Building SpecialFunctions
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SumOfSquares
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SumOfSquares")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1987.78515625 MB free)
Uptime: 73591.0 sec
Load Avg:  0.9970703125  0.9853515625  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    4477933 s       5233 s     288257 s    1575658 s         62 s
#2  3498 MHz    1229373 s       1867 s     122666 s    5864882 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
6 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - RDatasets                     0.4.0
 - SumOfSquares                  0.1.1
44 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.0
 - CSV                           0.2.4
 - Calculus                      0.2.2
 - CategoricalArrays             0.3.9
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - CommonSubexpressions          0.1.0
 - Compat                        0.63.0
 - DataFrames                    0.11.6
 - DataStreams                   0.3.4
 - DataStructures                0.8.1
 - DiffResults                   0.0.3
 - DiffRules                     0.0.4
 - FileIO                        0.7.0
 - FixedPointNumbers             0.4.6
 - ForwardDiff                   0.7.5
 - JuMP                          0.18.1
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - MathProgBase                  0.7.0
 - Missings                      0.2.9
 - Mocking                       0.5.2
 - MultivariateMoments           0.0.1
 - MultivariatePolynomials       0.1.4
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - PolyJuMP                      0.1.0
 - RData                         0.4.0
 - Reexport                      0.1.0
 - ReverseDiffSparse             0.8.1
 - RowEchelon                    0.1.0
 - SHA                           0.5.7
 - SemialgebraicSets             0.0.2
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - StatsBase                     0.21.0
 - TimeZones                     0.6.5
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - WeakRefStrings                0.4.4
INFO: Computing test dependencies for SumOfSquares...
INFO: Installing CSDP v0.0.3
INFO: Installing DynamicPolynomials v0.0.3
INFO: Installing GZip v0.3.0
INFO: Installing Glob v1.1.1
INFO: Installing SCS v0.3.3
INFO: Installing SemidefiniteModels v0.0.3
INFO: Building CSDP
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CSDP/deps/downloads
Info: Directory /home/vagrant/.julia/v0.6/CSDP/deps/downloads already exists
Info: Downloading file http://www.coin-or.org/download/source/Csdp/Csdp-6.1.1.tgz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:06 --:--:--     0curl: (7) Failed to connect to www.coin-or.org port 80: Connection timed out
================================[ ERROR: CSDP ]=================================

LoadError: failed process: Process(`curl -f -o /home/vagrant/.julia/v0.6/CSDP/deps/downloads/Csdp-6.1.1.tgz -L http://www.coin-or.org/download/source/Csdp/Csdp-6.1.1.tgz`, ProcessExited(7)) [7]
while loading /home/vagrant/.julia/v0.6/CSDP/deps/build.jl, in expression starting on line 48

================================================================================
INFO: Building SCS

================================[ BUILD ERRORS ]================================

WARNING: CSDP had build errors.

 - packages with build errors remain installed in /home/vagrant/.julia/v0.6
 - build the package(s) and all dependencies with `Pkg.build("CSDP")`
 - build a single package by running its `deps/build.jl` script

================================================================================
INFO: Testing SumOfSquares
Test Summary:       | Pass  Total
MatPolynomial tests |   48     48
Test Summary:                                 | Pass  Total
Creating polynomial with empty MonomialVector |    1      1
Test Summary:          | Pass  Total
MatPolynomial getvalue |    1      1
Test Summary:                       | Pass  Total
Non-symmetric matrix SOS constraint |    1      1
Test Summary:                      | Pass  Total
Monomial selection for certificate |    2      2
Test Summary:                                                                                        | Pass  Total
Random SOS should be SOS with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |   21     21
WARNING: Not solved to optimality, status: Infeasible
Test Summary:                                                                       | Pass  Total
Motzkin with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    2      2
Test Summary:                                                                            | Pass  Total
Example 3.25 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    1      1
Test Summary:                                                                            | Pass  Total
Example 3.35 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    1      1
Test Summary:                                                                            | Pass  Total
Example 3.38 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    1      1
Test Summary:                                                                        | Pass  Total
SOSDEMO1 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    9      9
Test Summary:                                                                                  | Pass  Total
[PJ08] Example 2.8 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    6      6
Test Summary:                                                                        | Pass  Total
SOSDEMO2 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    2      2
Test Summary:                                                                        | Pass  Total
SOSDEMO3 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    2      2
WARNING: Not solved to optimality, status: Infeasible
Test Summary:                                                                        | Pass  Total
SOSDEMO4 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    2      2
Test Summary:                                                                        |
SOSDEMO5 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) | No tests
WARNING: Not solved to optimality, status: Infeasible
Test Summary:                                                                        | Pass  Total
SOSDEMO6 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    2      2
Test Summary:                                                                        |
SOSDEMO7 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) | No tests
Test Summary:                                                                        | Pass  Total
SOSDEMO8 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    2      2
WARNING: Solver does not appear to support adding variables to an existing model. JuMP's internal model will be discarded.
Test Summary:                                                                                    | Pass  Total
[BPT12] Example 3.99 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    4      4
Test Summary:                                                                                     | Pass  Total
Example 3.77 and 3.79 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    2      2
WARNING: Not solved to optimality, status: Infeasible
Test Summary:                                                                    | Pass  Total
Choi with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    1      1
Test Summary:                                                                        | Pass  Total
SOSDEMO9 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    1      1
Test Summary:                                                                         | Pass  Total
SOSDEMO10 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    1      1
Test Summary:                              | Pass  Total
Polynomial equality constraint with domain |    1      1
Test Summary:                                                                                  | Pass  Total
[AM17] Section 4.1 with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) |    4      4
Test Summary:                                                                               |
Options Pricing with SCS.SCSSolver(Any[(:eps, 1.0e-6), (:max_iters, 60000), (:verbose, 0)]) | No tests
INFO: SumOfSquares tests passed
INFO: Removing CSDP v0.0.3
INFO: Removing DynamicPolynomials v0.0.3
INFO: Removing GZip v0.3.0
INFO: Removing Glob v1.1.1
INFO: Removing SCS v0.3.3
INFO: Removing SemidefiniteModels v0.0.3

>>> End of log
