>>> 'Pkg.add("DiffEqBayes")' log
INFO: Cloning cache of DiffEqBayes from https://github.com/JuliaDiffEq/DiffEqBayes.jl.git
INFO: Cloning cache of DiffWrappers from https://github.com/tpapp/DiffWrappers.jl.git
INFO: Cloning cache of DynamicHMC from https://github.com/tpapp/DynamicHMC.jl.git
INFO: Cloning cache of Mamba from https://github.com/brian-j-smith/Mamba.jl.git
INFO: Cloning cache of Stan from https://github.com/goedman/Stan.jl.git
INFO: Cloning cache of Turing from https://github.com/TuringLang/Turing.jl.git
INFO: Installing ApproxBayes v0.0.1
INFO: Installing ArgCheck v0.6.0
INFO: Installing AutoHashEquals v0.2.0
INFO: Installing AxisAlgorithms v0.2.0
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Cairo v0.5.2
INFO: Installing Calculus v0.4.0
INFO: Installing CategoricalArrays v0.3.10
INFO: Installing CodecZlib v0.4.3
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing Compose v0.6.0
INFO: Installing Conda v0.8.1
INFO: Installing ContinuousTransformations v0.0.2
INFO: Installing Contour v0.4.0
INFO: Installing CoupledFields v0.0.1
INFO: Installing DataArrays v0.7.0
INFO: Installing DataFrames v0.11.6
INFO: Installing DataStreams v0.3.6
INFO: Installing DataStructures v0.8.3
INFO: Installing DiffBase v0.3.2
INFO: Installing DiffEqBase v3.13.0
INFO: Installing DiffEqBayes v0.5.0
INFO: Installing DiffEqDiffTools v0.4.1
INFO: Installing DiffEqOperators v1.3.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.6
INFO: Installing DiffWrappers v0.0.1
INFO: Installing Distances v0.6.0
INFO: Installing Distributions v0.15.0
INFO: Installing DocStringExtensions v0.4.5
INFO: Installing Documenter v0.18.0
INFO: Installing DualNumbers v0.4.0
INFO: Installing DynamicHMC v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing ForwardDiff v0.7.5
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing GR v0.31.0
INFO: Installing Gadfly v0.7.0
INFO: Installing GenericSVD v0.1.0
INFO: Installing Graphics v0.3.0
INFO: Installing Hexagons v0.1.0
INFO: Installing IndirectArrays v0.4.2
INFO: Installing Interpolations v0.7.3
INFO: Installing IterTools v0.2.1
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing Juno v0.4.1
INFO: Installing KernelDensity v0.4.1
INFO: Installing Lazy v0.12.1
INFO: Installing LightGraphs v0.12.0
INFO: Installing LineSearches v3.2.5
INFO: Installing LinearMaps v1.0.4
INFO: Installing Loess v0.3.0
INFO: Installing MacroTools v0.4.2
INFO: Installing Mamba v0.11.2
INFO: Installing Measures v0.2.0
INFO: Installing Media v0.3.0
INFO: Installing Missings v0.2.10
INFO: Installing MuladdMacro v0.0.2
INFO: Installing NLSolversBase v4.4.1
INFO: Installing NLsolve v1.0.1
INFO: Installing NaNMath v0.3.1
INFO: Installing NamedTuples v4.0.2
INFO: Installing Optim v0.14.1
INFO: Installing OrdinaryDiffEq v3.19.1
INFO: Installing PDMats v0.8.0
INFO: Installing ParameterizedFunctions v3.0.0
INFO: Installing Parameters v0.9.0
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.17.3
INFO: Installing PositiveFactorizations v0.1.0
INFO: Installing ProgressMeter v0.5.6
INFO: Installing QuadGK v0.3.0
INFO: Installing Ratios v0.2.0
INFO: Installing RecipesBase v0.3.1
INFO: Installing RecursiveArrayTools v0.15.0
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.4
INFO: Installing ReverseDiff v0.2.0
INFO: Installing Rmath v0.4.0
INFO: Installing Roots v0.6.0
INFO: Installing SHA v0.5.7
INFO: Installing ShowItLikeYouBuildIt v0.2.0
INFO: Installing Showoff v0.2.0
INFO: Installing SimpleTraits v0.6.0
INFO: Installing SortingAlgorithms v0.2.1
INFO: Installing SpecialFunctions v0.6.0
INFO: Installing Stan v2.0.3
INFO: Installing StaticArrays v0.7.2
INFO: Installing StatsBase v0.23.1
INFO: Installing StatsFuns v0.6.1
INFO: Installing SymEngine v0.4.0
INFO: Installing TableTraits v0.2.0
INFO: Installing TranscodingStreams v0.5.2
INFO: Installing Turing v0.4.3
INFO: Installing URIParser v0.3.1
INFO: Installing Unrolled v0.0.2
INFO: Installing VersionParsing v1.1.1
INFO: Installing WeakRefStrings v0.4.7
INFO: Installing WoodburyMatrices v0.3.0
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building CodecZlib
INFO: Building GR
INFO: Downloading pre-compiled GR 0.31.0 Ubuntu binary
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0 38.8M    0  128k    0     0  87629      0  0:07:44  0:00:01  0:07:43 87614  2 38.8M    2 1152k    0     0   467k      0  0:01:25  0:00:02  0:01:23  467k 13 38.8M   13 5344k    0     0  1555k      0  0:00:25  0:00:03  0:00:22 1554k 42 38.8M   42 16.3M    0     0  3770k      0  0:00:10  0:00:04  0:00:06 3770k100 38.8M  100 38.8M    0     0  7336k      0  0:00:05  0:00:05 --:--:-- 8101k
INFO: Building Plots
INFO: Building Cairo
INFO: Building Conda
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building Stan
INFO: Building SymEngine
INFO: Building Turing
Info: Downloading https://github.com/hessammehr/LibtaskBuilder2/releases/download/0.1.12/libtask.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Turing/deps/usr/downloads/libtask.x86_64-linux-gnu.tar.gz...
[17:21:47] [17:21:47] ######################################################################## 100.0%[17:21:48] ######################################################################## 100.0%[17:21:48] ######################################################################## 100.0%
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqBayes
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqBayes")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1317.015625 MB free)
Uptime: 62490.0 sec
Load Avg:  1.04638671875  1.0673828125  1.12255859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    3759904 s       5670 s     271010 s    1272353 s         10 s
#2  3504 MHz     891717 s         89 s     137693 s    5056376 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqBayes                   0.5.0
 - JSON                          0.17.2
104 additional packages:
 - ApproxBayes                   0.0.1
 - ArgCheck                      0.6.0
 - AutoHashEquals                0.2.0
 - AxisAlgorithms                0.2.0
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Cairo                         0.5.2
 - Calculus                      0.4.0
 - CategoricalArrays             0.3.10
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - CommonSubexpressions          0.1.0
 - Compat                        0.69.0
 - Compose                       0.6.0
 - Conda                         0.8.1
 - ContinuousTransformations     0.0.2
 - Contour                       0.4.0
 - CoupledFields                 0.0.1
 - DataArrays                    0.7.0
 - DataFrames                    0.11.6
 - DataStreams                   0.3.6
 - DataStructures                0.8.3
 - DiffBase                      0.3.2
 - DiffEqBase                    3.13.0
 - DiffEqDiffTools               0.4.1
 - DiffEqOperators               1.3.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.6
 - DiffWrappers                  0.0.1
 - Distances                     0.6.0
 - Distributions                 0.15.0
 - DocStringExtensions           0.4.5
 - Documenter                    0.18.0
 - DualNumbers                   0.4.0
 - DynamicHMC                    0.0.1
 - FixedPointNumbers             0.4.6
 - ForwardDiff                   0.7.5
 - FunctionWrappers              0.1.0
 - GR                            0.31.0
 - Gadfly                        0.7.0
 - GenericSVD                    0.1.0
 - Graphics                      0.3.0
 - Hexagons                      0.1.0
 - IndirectArrays                0.4.2
 - Interpolations                0.7.3
 - IterTools                     0.2.1
 - IteratorInterfaceExtensions   0.0.2
 - Juno                          0.4.1
 - KernelDensity                 0.4.1
 - Lazy                          0.12.1
 - LightGraphs                   0.12.0
 - LineSearches                  3.2.5
 - LinearMaps                    1.0.4
 - Loess                         0.3.0
 - MacroTools                    0.4.2
 - Mamba                         0.11.2
 - Measures                      0.2.0
 - Media                         0.3.0
 - Missings                      0.2.10
 - MuladdMacro                   0.0.2
 - NLSolversBase                 4.4.1
 - NLsolve                       1.0.1
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.2
 - Nullables                     0.0.5
 - Optim                         0.14.1
 - OrdinaryDiffEq                3.19.1
 - PDMats                        0.8.0
 - ParameterizedFunctions        3.0.0
 - Parameters                    0.9.0
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.17.3
 - PositiveFactorizations        0.1.0
 - ProgressMeter                 0.5.6
 - QuadGK                        0.3.0
 - Ratios                        0.2.0
 - RecipesBase                   0.3.1
 - RecursiveArrayTools           0.15.0
 - Reexport                      0.1.0
 - Requires                      0.4.4
 - ReverseDiff                   0.2.0
 - Rmath                         0.4.0
 - Roots                         0.6.0
 - SHA                           0.5.7
 - ShowItLikeYouBuildIt          0.2.0
 - Showoff                       0.2.0
 - SimpleTraits                  0.6.0
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.6.0
 - Stan                          2.0.3
 - StaticArrays                  0.7.2
 - StatsBase                     0.23.1
 - StatsFuns                     0.6.1
 - SymEngine                     0.4.0
 - TableTraits                   0.2.0
 - TranscodingStreams            0.5.2
 - Turing                        0.4.3
 - URIParser                     0.3.1
 - Unrolled                      0.0.2
 - VersionParsing                1.1.1
 - WeakRefStrings                0.4.7
 - WoodburyMatrices              0.3.0
INFO: Computing test dependencies for DiffEqBayes...
INFO: No packages to install, update or remove
INFO: Testing DiffEqBayes
WARNING: Environment variable CMDSTAN_HOME not found. Use set_cmdstan_home!.
WARNING: ignoring conflicting import of ReverseDiff.gradient into Turing
[Turing]: AD chunk size is set as 40
WARNING: Method definition produce(Any) in module Base at deprecated.jl:909 overwritten in module Traces at /home/vagrant/.julia/v0.6/Turing/src/trace/taskcopy.jl:45.
WARNING: Method definition consume(Task, Any...) in module Base at deprecated.jl:955 overwritten in module Traces at /home/vagrant/.julia/v0.6/Turing/src/trace/taskcopy.jl:90.
WARNING: Error requiring Juno from Plots:
ArgumentError: Module Hiccup not found in current path.
Run `Pkg.add("Hiccup")` to install the Hiccup package.
Stacktrace:
 [1] _require(::Symbol) at ./loading.jl:435
 [2] require(::Symbol) at ./loading.jl:405
 [3] err(::Plots.##703#710, ::Module, ::String) at /home/vagrant/.julia/v0.6/Requires/src/require.jl:44
 [4] withpath(::Plots.##702#709, ::String) at /home/vagrant/.julia/v0.6/Requires/src/require.jl:34
 [5] listenmod(::Plots.##701#708, ::Symbol) at /home/vagrant/.julia/v0.6/Requires/src/require.jl:15
 [6] macro expansion at /home/vagrant/.julia/v0.6/Requires/src/require.jl:55 [inlined]
 [7] (::Plots.##700#707)() at /home/vagrant/.julia/v0.6/Requires/src/init.jl:17
 [8] __init__() at /home/vagrant/.julia/v0.6/Requires/src/init.jl:24
 [9] _include_from_serialized(::String) at ./loading.jl:157
 [10] _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:200
 [11] _require_search_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:236
 [12] _require(::Symbol) at ./loading.jl:441
 [13] require(::Symbol) at ./loading.jl:405
 [14] include_from_node1(::String) at ./loading.jl:576
 [15] eval(::Module, ::Any) at ./boot.jl:235
 [16] _require(::Symbol) at ./loading.jl:490
 [17] require(::Symbol) at ./loading.jl:405
 [18] include_from_node1(::String) at ./loading.jl:576
 [19] eval(::Module, ::Any) at ./boot.jl:235
 [20] _require(::Symbol) at ./loading.jl:490
 [21] require(::Symbol) at ./loading.jl:405
 [22] include_from_node1(::String) at ./loading.jl:576
 [23] include(::String) at ./sysimg.jl:14
 [24] process_options(::Base.JLOptions) at ./client.jl:305
 [25] _start() at ./client.jl:371
WARNING: logsumexp(x::Real, y::Real) is deprecated, use logaddexp(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] logsumexp(::Float64, ::Float64) at ./deprecated.jl:57
 [3] combined_logprob_logweight(::Float64, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:616
 [4] combine_proposals(::MersenneTwister, ::DynamicHMC.Proposal{DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},Float64}, ::DynamicHMC.Proposal{DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},Float64}, ::Bool) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:628
 [5] sample_trajectory(::MersenneTwister, ::DynamicHMC.Trajectory{DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}},Float64}, ::DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:583
 [6] #NUTS_transition#14(::Array{Any,1}, ::Function, ::MersenneTwister, ::DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}, ::Array{Float64,1}, ::Float64, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:838
 [7] mcmc_adapting_Ïµ(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::Int64, ::DynamicHMC.DualAveragingParameters{Float64}, ::DynamicHMC.DualAveragingAdaptation{Float64}) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:901
 [8] tune(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::DynamicHMC.StepsizeTuner) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1018
 [9] tune(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::DynamicHMC.TunerSequence{Tuple{DynamicHMC.StepsizeTuner,DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeTuner}}) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1095
 [10] #NUTS_init_tune_mcmc#18(::Array{Any,1}, ::Function, ::MersenneTwister, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1123
 [11] (::DynamicHMC.#kw##NUTS_init_tune_mcmc)(::Array{Any,1}, ::DynamicHMC.#NUTS_init_tune_mcmc, ::MersenneTwister, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at ./<missing>:0
 [12] #NUTS_init_tune_mcmc#19(::Array{Any,1}, ::Function, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1133
 [13] (::DynamicHMC.#kw##NUTS_init_tune_mcmc)(::Array{Any,1}, ::DynamicHMC.#NUTS_init_tune_mcmc, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at ./<missing>:0
 [14] #dynamichmc_inference#15(::Float64, ::Array{Float64,1}, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest1,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Function, ::Array{Distributions.Normal{Float64},1}, ::Array{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/dynamichmc_inference.jl:74
 [15] (::DiffEqBayes.#kw##dynamichmc_inference)(::Array{Any,1}, ::DiffEqBayes.#dynamichmc_inference, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest1,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Function, ::Array{Distributions.Normal{Float64},1}, ::Array{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},1}) at ./<missing>:0
 [16] #dynamichmc_inference#8(::Float64, ::Float64, ::Array{Float64,1}, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest1,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Distributions.Normal{Float64},1}, ::Array{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/dynamichmc_inference.jl:37
 [17] dynamichmc_inference(::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest1,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Distributions.Normal{Float64},1}, ::Array{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/dynamichmc_inference.jl:34
 [18] include_from_node1(::String) at ./loading.jl:576
 [19] include(::String) at ./sysimg.jl:14
 [20] macro expansion at /home/vagrant/.julia/v0.6/DiffEqBayes/test/runtests.jl:5 [inlined]
 [21] macro expansion at ./test.jl:860 [inlined]
 [22] macro expansion at ./util.jl:237 [inlined]
 [23] anonymous at ./<missing>:?
 [24] include_from_node1(::String) at ./loading.jl:576
 [25] include(::String) at ./sysimg.jl:14
 [26] process_options(::Base.JLOptions) at ./client.jl:305
 [27] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqBayes/test/dynamicHMC.jl, in expression starting on line 20
WARNING: logsumexp(x::Real, y::Real) is deprecated, use logaddexp(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] logsumexp(::Float64, ::Float64) at ./deprecated.jl:57
 [3] combined_logprob_logweight(::Float64, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:616
 [4] combine_proposals(::MersenneTwister, ::DynamicHMC.Proposal{DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},Float64}, ::DynamicHMC.Proposal{DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},Float64}, ::Bool) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:628
 [5] sample_trajectory(::MersenneTwister, ::DynamicHMC.Trajectory{DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}},Float64}, ::DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:583
 [6] #NUTS_transition#14(::Array{Any,1}, ::Function, ::MersenneTwister, ::DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}, ::Array{Float64,1}, ::Float64, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:838
 [7] mcmc_adapting_Ïµ(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::Int64, ::DynamicHMC.DualAveragingParameters{Float64}, ::DynamicHMC.DualAveragingAdaptation{Float64}) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:901
 [8] tune(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::DynamicHMC.StepsizeTuner) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1018
 [9] tune(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::DynamicHMC.TunerSequence{Tuple{DynamicHMC.StepsizeTuner,DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeTuner}}) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1095
 [10] #NUTS_init_tune_mcmc#18(::Array{Any,1}, ::Function, ::MersenneTwister, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1123
 [11] (::DynamicHMC.#kw##NUTS_init_tune_mcmc)(::Array{Any,1}, ::DynamicHMC.#NUTS_init_tune_mcmc, ::MersenneTwister, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at ./<missing>:0
 [12] #NUTS_init_tune_mcmc#19(::Array{Any,1}, ::Function, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1133
 [13] (::DynamicHMC.#kw##NUTS_init_tune_mcmc)(::Array{Any,1}, ::DynamicHMC.#NUTS_init_tune_mcmc, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,1},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at ./<missing>:0
 [14] #dynamichmc_inference#15(::Float64, ::Array{Float64,1}, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest1,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Function, ::Array{Distributions.Truncated{Distributions.Normal{Float64},Distributions.Continuous},1}, ::Array{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/dynamichmc_inference.jl:74
 [15] dynamichmc_inference(::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest1,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Function, ::Array{Distributions.Truncated{Distributions.Normal{Float64},Distributions.Continuous},1}, ::Array{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/dynamichmc_inference.jl:45
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DiffEqBayes/test/runtests.jl:5 [inlined]
 [19] macro expansion at ./test.jl:860 [inlined]
 [20] macro expansion at ./util.jl:237 [inlined]
 [21] anonymous at ./<missing>:?
 [22] include_from_node1(::String) at ./loading.jl:576
 [23] include(::String) at ./sysimg.jl:14
 [24] process_options(::Base.JLOptions) at ./client.jl:305
 [25] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqBayes/test/dynamicHMC.jl, in expression starting on line 36
WARNING: logsumexp(x::Real, y::Real) is deprecated, use logaddexp(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] logsumexp(::Float64, ::Float64) at ./deprecated.jl:57
 [3] combined_logprob_logweight(::Float64, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:616
 [4] combine_proposals(::MersenneTwister, ::DynamicHMC.Proposal{DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},Float64}, ::DynamicHMC.Proposal{DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},Float64}, ::Bool) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:628
 [5] sample_trajectory(::MersenneTwister, ::DynamicHMC.Trajectory{DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}},Float64}, ::DynamicHMC.PhasePoint{Array{Float64,1},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:583
 [6] #NUTS_transition#14(::Array{Any,1}, ::Function, ::MersenneTwister, ::DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}, ::Array{Float64,1}, ::Float64, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:838
 [7] mcmc_adapting_Ïµ(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::Int64, ::DynamicHMC.DualAveragingParameters{Float64}, ::DynamicHMC.DualAveragingAdaptation{Float64}) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:901
 [8] tune(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::DynamicHMC.StepsizeTuner) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1018
 [9] tune(::DynamicHMC.NUTS{Array{Float64,1},Float64,MersenneTwister,DynamicHMC.Hamiltonian{DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}},DynamicHMC.GaussianKE{Diagonal{Float64},UpperTriangular{Float64,Array{Float64,2}}}}}, ::DynamicHMC.TunerSequence{Tuple{DynamicHMC.StepsizeTuner,DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeCovTuner{Float64},DynamicHMC.StepsizeTuner}}) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1095
 [10] #NUTS_init_tune_mcmc#18(::Array{Any,1}, ::Function, ::MersenneTwister, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1123
 [11] (::DynamicHMC.#kw##NUTS_init_tune_mcmc)(::Array{Any,1}, ::DynamicHMC.#NUTS_init_tune_mcmc, ::MersenneTwister, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at ./<missing>:0
 [12] #NUTS_init_tune_mcmc#19(::Array{Any,1}, ::Function, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/DynamicHMC/src/DynamicHMC.jl:1133
 [13] (::DynamicHMC.#kw##NUTS_init_tune_mcmc)(::Array{Any,1}, ::DynamicHMC.#NUTS_init_tune_mcmc, ::DiffWrappers.ForwardGradientWrapper{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},ForwardDiff.GradientConfig{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4,Array{ForwardDiff.Dual{ForwardDiff.Tag{ContinuousTransformations.TransformLogLikelihood{DiffEqBayes.DynamicHMCPosterior,ContinuousTransformations.TransformationTuple{Tuple{ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp},ContinuousTransformations.Affine{Int64},ContinuousTransformations.ComposedTransformation{ContinuousTransformations.Affine{Float64},ContinuousTransformations.Exp}}}},Float64},Float64,4},1}},DiffResults.MutableDiffResult{1,Float64,Tuple{Array{Float64,1}}}}, ::Array{Float64,1}, ::Int64) at ./<missing>:0
 [14] #dynamichmc_inference#15(::Float64, ::Array{Float64,1}, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest4,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Function, ::Array{Distributions.Truncated{Distributions.Normal{Float64},Distributions.Continuous},1}, ::Array{ContinuousTransformations.UnivariateTransformation,1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/dynamichmc_inference.jl:74
 [15] (::DiffEqBayes.#kw##dynamichmc_inference)(::Array{Any,1}, ::DiffEqBayes.#dynamichmc_inference, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest4,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Function, ::Array{Distributions.Truncated{Distributions.Normal{Float64},Distributions.Continuous},1}, ::Array{ContinuousTransformations.UnivariateTransformation,1}) at ./<missing>:0
 [16] #dynamichmc_inference#8(::Float64, ::Float64, ::Array{Float64,1}, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest4,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Distributions.Truncated{Distributions.Normal{Float64},Distributions.Continuous},1}, ::Array{ContinuousTransformations.UnivariateTransformation,1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/dynamichmc_inference.jl:37
 [17] dynamichmc_inference(::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest4,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Distributions.Truncated{Distributions.Normal{Float64},Distributions.Continuous},1}, ::Array{ContinuousTransformations.UnivariateTransformation,1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/dynamichmc_inference.jl:34
 [18] include_from_node1(::String) at ./loading.jl:576
 [19] include(::String) at ./sysimg.jl:14
 [20] macro expansion at /home/vagrant/.julia/v0.6/DiffEqBayes/test/runtests.jl:5 [inlined]
 [21] macro expansion at ./test.jl:860 [inlined]
 [22] macro expansion at ./util.jl:237 [inlined]
 [23] anonymous at ./<missing>:?
 [24] include_from_node1(::String) at ./loading.jl:576
 [25] include(::String) at ./sysimg.jl:14
 [26] process_options(::Base.JLOptions) at ./client.jl:305
 [27] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqBayes/test/dynamicHMC.jl, in expression starting on line 55
Test Summary: | Pass  Total
DynamicHMC    |    6      6
113.043031 seconds (133.87 M allocations: 18.049 GiB, 4.40% gc time)
Starting the test
Test Summary: | Pass  Total
Stan_String   |   50     50
  1.589354 seconds (226.91 k allocations: 12.549 MiB, 0.92% gc time)
One parameter case

File /home/vagrant/.julia/v0.6/DiffEqBayes/test/tmp/parameter_estimation_model.stan will be updated.


Stan: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: chdir : no such file or directory (ENOENT)
  Stacktrace:
   [1] uv_error at ./libuv.jl:68 [inlined]
   [2] cd(::String) at ./file.jl:50
   [3] #stan#4(::Type{T} where T, ::Bool, ::Bool, ::String, ::Function, ::Stan.Stanmodel, ::Array{Dict{String,Any},1}, ::String) at /home/vagrant/.julia/v0.6/Stan/src/main/stancode.jl:94
   [4] (::Stan.#kw##stan)(::Array{Any,1}, ::Stan.#stan, ::Stan.Stanmodel, ::Array{Dict{String,Any},1}, ::String) at ./<missing>:0 (repeats 2 times)
   [5] #stan_inference#3(::Symbol, ::Int64, ::Int64, ::Float64, ::Float64, ::Int64, ::Type{T} where T, ::Tuple{DiffEqBayes.StanODEData,Distributions.InverseGamma{Float64}}, ::DiffEqBayes.#stan_inference, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest1,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Distributions.Truncated{Distributions.Normal{Float64},Distributions.Continuous},1}) at /home/vagrant/.julia/v0.6/DiffEqBayes/src/stan_inference.jl:139
   [6] (::DiffEqBayes.#kw##stan_inference)(::Array{Any,1}, ::DiffEqBayes.#stan_inference, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,Array{Float64,1},LotkaVolterraTest1,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Distributions.Truncated{Distributions.Normal{Float64},Distributions.Continuous},1}) at ./<missing>:0
   [7] include_from_node1(::String) at ./loading.jl:576
   [8] include(::String) at ./sysimg.jl:14
   [9] macro expansion at /home/vagrant/.julia/v0.6/DiffEqBayes/test/runtests.jl:7 [inlined]
   [10] macro expansion at ./test.jl:860 [inlined]
   [11] macro expansion at ./util.jl:237 [inlined]
   [12] anonymous at ./<missing>:?
   [13] include_from_node1(::String) at ./loading.jl:576
   [14] include(::String) at ./sysimg.jl:14
   [15] process_options(::Base.JLOptions) at ./client.jl:305
   [16] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DiffEqBayes/test/stan.jl, in expression starting on line 19
Test Summary: | Error  Total
Stan          |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DiffEqBayes/test/runtests.jl, in expression starting on line 7
=============================[ ERROR: DiffEqBayes ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cgeneric -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DiffEqBayes/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: DiffEqBayes had test errors

>>> End of log
