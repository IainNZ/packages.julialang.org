>>> 'Pkg.add("BasisMatrices")' log
INFO: Cloning cache of BasisMatrices from https://github.com/QuantEcon/BasisMatrices.jl.git
INFO: Cloning cache of Combinatorics from https://github.com/JuliaMath/Combinatorics.jl.git
INFO: Installing AbstractFFTs v0.2.0
INFO: Installing BasisMatrices v0.4.0
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing Combinatorics v0.4.1
INFO: Installing DSP v0.3.2
INFO: Installing DataStructures v0.6.0
INFO: Installing Distributions v0.14.1
INFO: Installing FFTW v0.0.2
INFO: Installing GZip v0.3.0
INFO: Installing IterTools v0.1.0
INFO: Installing Iterators v0.3.1
INFO: Installing LightGraphs v0.9.4
INFO: Installing MacroTools v0.3.7
INFO: Installing PDMats v0.7.0
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing QuadGK v0.1.2
INFO: Installing QuantEcon v0.12.0
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.7
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building FFTW
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/FFTW/deps/build.jl:73
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("BasisMatrices")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (570.29296875 MB free)
Uptime: 11030.0 sec
Load Avg:  0.93505859375  0.97509765625  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     628097 s       1194 s      39362 s     267490 s          8 s
#2  3500 MHz     199549 s       6126 s      27583 s     843387 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - BasisMatrices                 0.4.0
 - JSON                          0.13.0
27 additional packages:
 - AbstractFFTs                  0.2.0
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - Combinatorics                 0.4.1
 - Compat                        0.27.0
 - DSP                           0.3.2
 - DataStructures                0.6.0
 - Distributions                 0.14.1
 - FFTW                          0.0.2
 - GZip                          0.3.0
 - IterTools                     0.1.0
 - Iterators                     0.3.1
 - LightGraphs                   0.9.4
 - MacroTools                    0.3.7
 - PDMats                        0.7.0
 - Polynomials                   0.1.5
 - Primes                        0.1.3
 - QuadGK                        0.1.2
 - QuantEcon                     0.12.0
 - Reexport                      0.0.3
 - Rmath                         0.1.7
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.2.0
 - StatsBase                     0.17.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Testing BasisMatrices
WARNING: Method definition plan_fft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft(Union{DenseArray{#s24, N}, Base.SubArray{#s24, N, A, I, L} where L, Base.ReshapedArray{#s24, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s24<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{#s26, N}, Base.SubArray{#s26, N, A, I, L} where L, Base.ReshapedArray{#s26, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s26<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{#s32, N}, Base.SubArray{#s32, N, A, I, L} where L, Base.ReshapedArray{#s32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s32<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{#s34, N}, Base.SubArray{#s34, N, A, I, L} where L, Base.ReshapedArray{#s34, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s34<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft(Union{DenseArray{#s18, N}, Base.SubArray{#s18, N, A, I, L} where L, Base.ReshapedArray{#s18, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s18<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{#s16, N}, Base.SubArray{#s16, N, A, I, L} where L, Base.ReshapedArray{#s16, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s16<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft!(Union{DenseArray{#s10, N}, Base.SubArray{#s10, N, A, I, L} where L, Base.ReshapedArray{#s10, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s10<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{#s3, N}, Base.SubArray{#s3, N, A, I, L} where L, Base.ReshapedArray{#s3, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s3<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_fft(Union{DenseArray{#s24, N}, Base.SubArray{#s24, N, A, I, L} where L, Base.ReshapedArray{#s24, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s24<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_fft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{#s16, N}, Base.SubArray{#s16, N, A, I, L} where L, Base.ReshapedArray{#s16, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s16<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{#s34, N}, Base.SubArray{#s34, N, A, I, L} where L, Base.ReshapedArray{#s34, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s34<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{#s26, N}, Base.SubArray{#s26, N, A, I, L} where L, Base.ReshapedArray{#s26, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s26<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{#s32, N}, Base.SubArray{#s32, N, A, I, L} where L, Base.ReshapedArray{#s32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s32<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_fft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition plan_bfft!(Union{DenseArray{#s10, N}, Base.SubArray{#s10, N, A, I, L} where L, Base.ReshapedArray{#s10, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s10<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_bfft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{#s3, N}, Base.SubArray{#s3, N, A, I, L} where L, Base.ReshapedArray{#s3, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s3<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft(Union{DenseArray{#s18, N}, Base.SubArray{#s18, N, A, I, L} where L, Base.ReshapedArray{#s18, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s18<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_bfft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_fft(Union{DenseArray{#s24, N}, Base.SubArray{#s24, N, A, I, L} where L, Base.ReshapedArray{#s24, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s24<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_fft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{#s16, N}, Base.SubArray{#s16, N, A, I, L} where L, Base.ReshapedArray{#s16, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s16<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{#s34, N}, Base.SubArray{#s34, N, A, I, L} where L, Base.ReshapedArray{#s34, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s34<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{#s26, N}, Base.SubArray{#s26, N, A, I, L} where L, Base.ReshapedArray{#s26, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s26<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{#s32, N}, Base.SubArray{#s32, N, A, I, L} where L, Base.ReshapedArray{#s32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s32<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_fft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition plan_bfft!(Union{DenseArray{#s10, N}, Base.SubArray{#s10, N, A, I, L} where L, Base.ReshapedArray{#s10, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s10<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_bfft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{#s3, N}, Base.SubArray{#s3, N, A, I, L} where L, Base.ReshapedArray{#s3, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s3<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft(Union{DenseArray{#s18, N}, Base.SubArray{#s18, N, A, I, L} where L, Base.ReshapedArray{#s18, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s18<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_bfft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_fft(Union{DenseArray{#s24, N}, Base.SubArray{#s24, N, A, I, L} where L, Base.ReshapedArray{#s24, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s24<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_fft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{#s16, N}, Base.SubArray{#s16, N, A, I, L} where L, Base.ReshapedArray{#s16, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s16<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{#s34, N}, Base.SubArray{#s34, N, A, I, L} where L, Base.ReshapedArray{#s34, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s34<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{#s26, N}, Base.SubArray{#s26, N, A, I, L} where L, Base.ReshapedArray{#s26, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s26<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{#s32, N}, Base.SubArray{#s32, N, A, I, L} where L, Base.ReshapedArray{#s32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s32<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_fft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition plan_bfft!(Union{DenseArray{#s10, N}, Base.SubArray{#s10, N, A, I, L} where L, Base.ReshapedArray{#s10, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s10<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_bfft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{#s3, N}, Base.SubArray{#s3, N, A, I, L} where L, Base.ReshapedArray{#s3, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s3<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft(Union{DenseArray{#s18, N}, Base.SubArray{#s18, N, A, I, L} where L, Base.ReshapedArray{#s18, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s18<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_bfft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition count() in module IterTools at deprecated.jl:56 overwritten in module Iterators at deprecated.jl:56.
WARNING: Method definition count(Number) in module IterTools at deprecated.jl:56 overwritten in module Iterators at deprecated.jl:56.
WARNING: Method definition count(Number, Number) in module IterTools at deprecated.jl:56 overwritten in module Iterators at deprecated.jl:56.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_fft(Union{DenseArray{#s24, N}, Base.SubArray{#s24, N, A, I, L} where L, Base.ReshapedArray{#s24, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s24<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_fft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{#s16, N}, Base.SubArray{#s16, N, A, I, L} where L, Base.ReshapedArray{#s16, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s16<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{#s34, N}, Base.SubArray{#s34, N, A, I, L} where L, Base.ReshapedArray{#s34, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s34<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{#s26, N}, Base.SubArray{#s26, N, A, I, L} where L, Base.ReshapedArray{#s26, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s26<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{#s32, N}, Base.SubArray{#s32, N, A, I, L} where L, Base.ReshapedArray{#s32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s32<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_fft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition plan_bfft!(Union{DenseArray{#s10, N}, Base.SubArray{#s10, N, A, I, L} where L, Base.ReshapedArray{#s10, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s10<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_bfft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{#s3, N}, Base.SubArray{#s3, N, A, I, L} where L, Base.ReshapedArray{#s3, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s3<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft(Union{DenseArray{#s18, N}, Base.SubArray{#s18, N, A, I, L} where L, Base.ReshapedArray{#s18, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s18<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_bfft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition count() in module IterTools at deprecated.jl:56 overwritten in module Iterators at deprecated.jl:56.
WARNING: Method definition count(Number) in module IterTools at deprecated.jl:56 overwritten in module Iterators at deprecated.jl:56.
WARNING: Method definition count(Number, Number) in module IterTools at deprecated.jl:56 overwritten in module Iterators at deprecated.jl:56.
* types.jl
Test Summary:          | Pass  Total
Test subtype structure |    9      9
Test Summary:      | Pass  Total
test _param method |    6      6
Test Summary:           | Pass  Total
test more Param methods |    8      8
* basis.jl
Test Summary: | Pass  Total
Test Basis    |   52     52
* util.jl
Test Summary:             | Pass  Total
test BasisMatrices.lookup |   16     16
Test Summary:                   | Pass  Total
test BasisMatrices._check_order |    7      7
Test Summary:             | Pass  Total
test BasisMatrices.ckronx |    1      1
Test Summary: | Pass  Total
test row_kron |  303    303
Test Summary: | Pass  Total
RowKron       |   30     30
Test Summary: | Pass  Total
cdprodx       |  397    397
Test Summary: | Pass  Total
nodeunif      |    7      7
* spline.jl
Test Summary:                | Pass  Total
Test Spline Basis Evaluation |   13     13
* interp.jl
Test Summary:                | Pass  Total
(i, case) = (1, "B-splines") |   68     68
Test Summary:           | Pass  Total
(i, case) = (2, "Cheb") |   68     68
Test Summary:          | Pass  Total
(i, case) = (3, "Lin") |   65     65
* cheb.jl
Test Summary: | Pass  Total
test Cheb     |   22     22
* lin.jl
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:57
 [3] funfitf(::BasisMatrices.Basis{1,Tuple{BasisMatrices.LinParams{Array{Float64,1}}}}, ::Function) at /home/vagrant/.julia/v0.6/BasisMatrices/src/interp.jl:68
 [4] macro expansion at /home/vagrant/.julia/v0.6/BasisMatrices/test/lin.jl:26 [inlined]
 [5] macro expansion at ./test.jl:860 [inlined]
 [6] macro expansion at /home/vagrant/.julia/v0.6/BasisMatrices/test/lin.jl:22 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/BasisMatrices/test/runtests.jl:18 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/BasisMatrices/test/lin.jl, in expression starting on line 1
Test Summary:     | Pass  Total
Test Linear Basis |   16     16
* basis_structure.jl
Test Summary:                        | Pass  Total
Test Basis Structure Representations |   95     95
* complete.jl
Test Summary:               | Pass  Total
Testing logic using strings |    4      4
Test Summary:               | Pass  Total
testing numerical routintes |  117    117
* spline_sparse.jl
Test Summary:     | Pass  Total
Test SplineSparse |   77     77
* smol.jl
Test Summary: | Pass  Total
Smolyak       | 7926   7926
INFO: BasisMatrices tests passed

>>> End of log
