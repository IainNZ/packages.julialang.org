>>> 'Pkg.add("SampledSignals")' log
INFO: Installing SIUnits v0.0.6
INFO: Installing SampledSignals v0.0.1
INFO: Installing TexExtensions v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SampledSignals
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SampledSignals")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for SampledSignals...
INFO: Installing BaseTestNext v0.2.1
INFO: Installing FixedPointNumbers v0.1.3
INFO: Testing SampledSignals
Supports audio interface: Error During Test
  Test threw an exception of type InexactError
  Expression: domain(tbuf) == collect(0:63) / TEST_SR
  InexactError()
   in setindex!(::Array{SIUnits.SIQuantity{Int64,m,kg,s,A,K,mol,cd,rad,sr},1}, ::SIUnits.SIQuantity{Float64,0,0,1,0,0,0,0,0,0}, ::Int64) at ./array.jl:340
   in ./(::Array{Int64,1}, ::SIUnits.SIQuantity{Int64,0,0,-1,0,0,0,0,0,0}) at ./arraymath.jl:96
   in /(::Array{Int64,1}, ::SIUnits.SIQuantity{Int64,0,0,-1,0,0,0,0,0,0}) at ./abstractarraymath.jl:57
   in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/SampleBuf.jl:11 [inlined]
   in macro expansion; at ./test.jl:583 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/SampleBuf.jl:6 [inlined]
   in macro expansion; at ./test.jl:583 [inlined]
   in anonymous at ./<missing>:580
   in include_from_node1(::String) at ./loading.jl:426
   in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/runtests.jl:14 [inlined]
   in macro expansion; at ./test.jl:583 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/runtests.jl:12 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426
   in process_options(::Base.JLOptions) at ./client.jl:266
   in _start() at ./client.jl:322
WARNING: utf8(x) is deprecated, use convert(String,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in utf8(::Array{Char,1}) at ./deprecated.jl:50
 in showchannels(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::SampledSignals.SampleBuf{Float64,2,SIUnits.SIQuantity{Int64,0,0,-1,0,0,0,0,0,0}}, ::Int64) at /home/vagrant/.julia/v0.5/SampledSignals/src/SampleBuf.jl:64
 in writemime(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::MIME{Symbol("text/plain")}, ::SampledSignals.SampleBuf{Float64,2,SIUnits.SIQuantity{Int64,0,0,-1,0,0,0,0,0,0}}) at /home/vagrant/.julia/v0.5/SampledSignals/src/SampleBuf.jl:44
 in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/SampleBuf.jl:229 [inlined]
 in macro expansion; at ./test.jl:583 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/SampleBuf.jl:221 [inlined]
 in macro expansion; at ./test.jl:583 [inlined]
 in anonymous at ./<missing>:580
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/runtests.jl:14 [inlined]
 in macro expansion; at ./test.jl:583 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/runtests.jl:12 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/SampledSignals/test/SampleBuf.jl, in expression starting on line 1
WARNING: utf8(x) is deprecated, use convert(String,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in utf8(::Array{Char,1}) at ./deprecated.jl:50
 in showchannels(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::SampledSignals.SampleBuf{Float64,1,SIUnits.SIQuantity{Int64,0,0,-1,0,0,0,0,0,0}}, ::Int64) at /home/vagrant/.julia/v0.5/SampledSignals/src/SampleBuf.jl:64
 in writemime(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::MIME{Symbol("text/plain")}, ::SampledSignals.SampleBuf{Float64,1,SIUnits.SIQuantity{Int64,0,0,-1,0,0,0,0,0,0}}) at /home/vagrant/.julia/v0.5/SampledSignals/src/SampleBuf.jl:44
 in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/SampleBuf.jl:239 [inlined]
 in macro expansion; at ./test.jl:583 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/SampleBuf.jl:232 [inlined]
 in macro expansion; at ./test.jl:583 [inlined]
 in anonymous at ./<missing>:580
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/runtests.jl:14 [inlined]
 in macro expansion; at ./test.jl:583 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.5/SampledSignals/test/runtests.jl:12 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/SampledSignals/test/SampleBuf.jl, in expression starting on line 1
Test Summary:                                        | Pass  Error  Total
SampledSignals Tests                                 |  135      1    136
  DummySampleStream Tests                            |   10            10
  SampleBuf Tests                                    |   78      1     79
    Supports audio interface                         |    3      1      4
    Supports size()                                  |    1             1
    Can get type params from contained array         |    2             2
    supports equality                                |    5             5
    Can be indexed with 1D indices                   |    1             1
    Can be indexed with 2D indices                   |    1             1
    Can be indexed with 1D ranges                    |    4             4
    can be indexed with 2D ranges                    |    8             8
    can be sliced in 1D                              |    4             4
    can be indexed with Intervals                    |    8             8
    Can be indexed with bool arrays                  |    1             1
    Channel pointer                                  |    4             4
    Nice syntax for creating buffers                 |    4             4
    Can be created without units                     |    2             2
    sub references the original instead of copying   |    2             2
    Invalid units throw an error                     |    1             1
    SampleBufs can be indexed in seconds             |    8             8
    Frequency-domain SampleBufs can be indexed in Hz |    4             4
    Supports arithmetic                              |    2             2
    FFT of SampleBuf gives FrequencySampleBuf        |   10            10
    multichannel buf prints prettily                 |    1             1
    1D buf prints prettily                           |    1             1
    zero-length buf prints prettily                  |    1             1
  Interval Tests                                     |   23            23
  SampleStream Tests                                 |   20            20
  Signal Generator Tests                             |    4             4
===========================[ ERROR: SampledSignals ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/SampledSignals/test/runtests.jl`, ProcessExited(255)) [255]

================================================================================
INFO: Removing BaseTestNext v0.2.1
INFO: Removing FixedPointNumbers v0.1.3
ERROR: SampledSignals had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
