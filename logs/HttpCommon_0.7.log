>>> 'Pkg.add("HttpCommon")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing HttpCommon v0.4.0
[ Info: Installing URIParser v0.3.0
[ Info: Package database updated

>>> 'Pkg.test("HttpCommon")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.3951
Commit 80a8175422 (2018-02-10 19:43 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1189768 s         67 s      63060 s     340025 s          5 s
       #2  3499 MHz     272481 s        112 s      30076 s    1540656 s          0 s
       
  Memory: 2.93927001953125 GB (1333.51171875 MB free)
  Uptime: 18951.0 sec
  Load Avg:  0.92431640625  1.06982421875  1.0947265625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - HttpCommon                    0.4.0
 - JSON                          0.16.4
3 additional packages:
 - Compat                        0.53.0
 - Nullables                     0.0.3
 - URIParser                     0.3.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing HttpCommon
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = Request(::String, ::String, ::Dict{String,String}, ::String) at HttpCommon.jl:44
└ @ HttpCommon HttpCommon.jl:44
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = Response(::Int64, ::Dict{String,String}, ::String) at HttpCommon.jl:97
└ @ HttpCommon HttpCommon.jl:97
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = Response(::Int64, ::Dict{AbstractString,AbstractString}, ::String) at HttpCommon.jl:99
└ @ HttpCommon HttpCommon.jl:99
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = Response(::Int64, ::String) at HttpCommon.jl:103
└ @ HttpCommon HttpCommon.jl:103
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = Response(::String, ::Dict{String,String}) at HttpCommon.jl:104
└ @ HttpCommon HttpCommon.jl:104
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = Response(::String, ::Dict{AbstractString,AbstractString}) at HttpCommon.jl:105
└ @ HttpCommon HttpCommon.jl:105
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = Response(::String) at HttpCommon.jl:106
└ @ HttpCommon HttpCommon.jl:106
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = escapeHTML(::String) at HttpCommon.jl:125
└ @ HttpCommon HttpCommon.jl:125
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = escapeHTML(::String) at HttpCommon.jl:126
└ @ HttpCommon HttpCommon.jl:126
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = escapeHTML(::String) at HttpCommon.jl:127
└ @ HttpCommon HttpCommon.jl:127
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = escapeHTML(::String) at HttpCommon.jl:128
└ @ HttpCommon HttpCommon.jl:128
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = escapeHTML(::String) at HttpCommon.jl:129
└ @ HttpCommon HttpCommon.jl:129
┌ Warning: `parse(T::Type{<:Integer}, s, base)` is deprecated, use `parse(T, s, base=base)` instead.
│   caller = unescape(::SubString{String}) at esc.jl:25
└ @ URIParser esc.jl:25
[ Info: HttpCommon tests passed

>>> End of log
