>>> 'Pkg.add("StringDistances")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing Distances v0.5.0
[ Info: Installing IterTools v0.2.1
[ Info: Installing StringDistances v0.2.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of StringDistances
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("StringDistances")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4465
Commit f569ebe9bc (2018-03-04 15:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3515 MHz    3084870 s         81 s     173112 s     909569 s         60 s
       #2  3515 MHz     714703 s       5803 s      68110 s    4012701 s          1 s
       
  Memory: 2.93927001953125 GB (770.62890625 MB free)
  Uptime: 48884.0 sec
  Load Avg:  1.3173828125  1.07421875  0.99755859375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.1
 - StringDistances               0.2.0
5 additional packages:
 - Compat                        0.56.0
 - Distances                     0.5.0
 - IterTools                     0.2.1
 - Nullables                     0.0.4
 - tmpmuUYsF                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing StringDistances
Running tests:
WARNING: Base.STDOUT is deprecated, use stdout instead.
  likely near /home/vagrant/.julia/v0.7/StringDistances/test/runtests.jl:7
in top-level scope at <missing>
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/StringDistances/test/distances.jl:2
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = evaluate(::Levenshtein, ::String, ::String) at edit.jl:53
└ @ StringDistances edit.jl:53
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = evaluate(::DamerauLevenshtein, ::String, ::String) at edit.jl:100
└ @ StringDistances edit.jl:100
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = evaluate(::DamerauLevenshtein, ::String, ::String) at edit.jl:104
└ @ StringDistances edit.jl:104
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = collect(::StringDistances.QGramIterator{String,Int64}) at qgram.jl:29
└ @ StringDistances qgram.jl:29
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = start at qgram.jl:14 [inlined]
└ @ Core qgram.jl:14
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = start at qgram.jl:14 [inlined]
└ @ Core qgram.jl:14
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:35
└ @ StringDistances RatcliffObershelp.jl:35
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:36
└ @ StringDistances RatcliffObershelp.jl:36
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:35
└ @ StringDistances RatcliffObershelp.jl:35
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:36
└ @ StringDistances RatcliffObershelp.jl:36
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
	[1m[32mPASSED[0m: distances.jl
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/StringDistances/test/modifiers.jl:2
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = compare(::Partial{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:46
└ @ StringDistances fuzzywuzzy.jl:46
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = compare(::Partial{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:47
└ @ StringDistances fuzzywuzzy.jl:47
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:35
└ @ StringDistances RatcliffObershelp.jl:35
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:36
└ @ StringDistances RatcliffObershelp.jl:36
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = compare(::Partial{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:47
└ @ StringDistances fuzzywuzzy.jl:47
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = start at qgram.jl:14 [inlined]
└ @ Core qgram.jl:14
┌ Warning: `search(s::AbstractString, c::Union{Tuple{Vararg{Char}}, AbstractVector{Char}, Set{Char}})` is deprecated, use `findfirst(occursin(c), s)` instead.
│   caller = compare(::TokenSort{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:65
└ @ StringDistances fuzzywuzzy.jl:65
┌ Warning: `search(s::AbstractString, c::Union{Tuple{Vararg{Char}}, AbstractVector{Char}, Set{Char}})` is deprecated, use `findfirst(occursin(c), s)` instead.
│   caller = compare(::TokenSort{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:68
└ @ StringDistances fuzzywuzzy.jl:68
Error During Test at /home/vagrant/.julia/v0.7/StringDistances/test/modifiers.jl:57
  Test threw exception MethodError(isless, (0, nothing), 0x0000000000006986)
  Expression: compare(TokenSort(RatcliffObershelp()), "New York Mets vs Atlanta Braves", "") ≈ 0.0
  MethodError: no method matching isless(::Int64, ::Nothing)
  Closest candidates are:
    isless(!Matched::Missing, ::Any) at missing.jl:62
    isless(::Real, !Matched::AbstractFloat) at operators.jl:143
    isless(::Real, !Matched::Real) at operators.jl:331
    ...
  Stacktrace:
   [1] <(::Int64, ::Nothing) at ./operators.jl:253
   [2] >(::Nothing, ::Int64) at ./operators.jl:279
   [3] compare(::TokenSort{RatcliffObershelp}, ::String, ::String) at /home/vagrant/.julia/v0.7/StringDistances/src/modifiers/fuzzywuzzy.jl:68
   [4] top-level scope
   [5] include at ./boot.jl:305 [inlined]
   [6] include_relative(::Module, ::String) at ./loading.jl:1072
   [7] include(::Module, ::String) at ./sysimg.jl:29
   [8] include(::String) at ./sysimg.jl:68
   [9] top-level scope at ./<missing>:9
   [10] include at ./boot.jl:305 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1072
   [12] include(::Module, ::String) at ./sysimg.jl:29
   [13] exec_options(::Base.JLOptions) at ./client.jl:332
   [14] _start() at ./client.jl:448
	[1m[31mFAILED[0m: modifiers.jl
LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/StringDistances/test/modifiers.jl:57ERROR: LoadError: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/StringDistances/test/modifiers.jl:57
in expression starting at /home/vagrant/.julia/v0.7/StringDistances/test/runtests.jl:7
┌ Error: ------------------------------------------------------------
│ # Testing failed for StringDistances
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/StringDistances/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#534(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [17] top-level scope
│     [18] eval at ./boot.jl:308 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:309
│     [21] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
ERROR: StringDistances had test errors

>>> End of log
