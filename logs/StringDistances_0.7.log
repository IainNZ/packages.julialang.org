>>> 'Pkg.add("StringDistances")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing Distances v0.6.0
[ Info: Installing IterTools v0.2.1
[ Info: Installing StringDistances v0.2.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of StringDistances
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("StringDistances")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4737
Commit c4c93ea692 (2018-04-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3502 MHz    3496733 s       2737 s     264822 s    1058319 s         62 s
       #2  3502 MHz     842026 s       4574 s      93766 s    4563207 s          0 s
       
  Memory: 2.939197540283203 GB (782.69140625 MB free)
  Uptime: 56090.0 sec
  Load Avg:  0.994140625  0.98046875  0.96630859375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
5 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - StringDistances               0.2.0
14 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Distances                     0.6.0
 - FixedPointNumbers             0.4.6
 - IterTools                     0.2.1
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - Nullables                     0.0.5
 - Reexport                      0.1.0
 - SHA                           0.5.6
 - URIParser                     0.3.1
 - tmpvbu5JM                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing StringDistances
Running tests:
WARNING: Base.STDOUT is deprecated, use stdout instead.
  likely near /home/vagrant/.julia/v0.7/StringDistances/test/runtests.jl:7
in top-level scope at <missing>
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/StringDistances/test/distances.jl:2
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = evaluate(::Levenshtein, ::String, ::String) at edit.jl:53
└ @ StringDistances edit.jl:53
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = evaluate(::DamerauLevenshtein, ::String, ::String) at edit.jl:100
└ @ StringDistances edit.jl:100
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = evaluate(::DamerauLevenshtein, ::String, ::String) at edit.jl:104
└ @ StringDistances edit.jl:104
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = collect(::StringDistances.QGramIterator{String,Int64}) at qgram.jl:29
└ @ StringDistances qgram.jl:29
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = start at qgram.jl:14 [inlined]
└ @ Core qgram.jl:14
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = start at qgram.jl:14 [inlined]
└ @ Core qgram.jl:14
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:35
└ @ StringDistances RatcliffObershelp.jl:35
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:36
└ @ StringDistances RatcliffObershelp.jl:36
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::String, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:35
└ @ StringDistances RatcliffObershelp.jl:35
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:36
└ @ StringDistances RatcliffObershelp.jl:36
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::SubString{String}, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("a", "a")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("", "foo")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
strings[i] = ("martha", "marhta")
strings[i] = ("dwayne", "duane")
strings[i] = ("dixon", "dicksonx")
strings[i] = ("william", "williams")
strings[i] = ("abc", "xyz")
strings[i] = ("abc", "ccc")
strings[i] = ("kitten", "sitting")
strings[i] = ("saturday", "sunday")
strings[i] = ("hi, my name is", "my name is")
strings[i] = ("alborgów", "amoniak")
strings[i] = ("cape sand recycling ", "edith ann graham")
strings[i] = ("jellyifhs", "jellyfish")
strings[i] = ("ifhs", "fish")
strings[i] = ("leia", "leela")
	[1m[32mPASSED[0m: distances.jl
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/StringDistances/test/modifiers.jl:2
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = compare(::Partial{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:46
└ @ StringDistances fuzzywuzzy.jl:46
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = compare(::Partial{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:47
└ @ StringDistances fuzzywuzzy.jl:47
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:35
└ @ StringDistances RatcliffObershelp.jl:35
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:36
└ @ StringDistances RatcliffObershelp.jl:36
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:38
└ @ StringDistances RatcliffObershelp.jl:38
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = compare(::Partial{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:47
└ @ StringDistances fuzzywuzzy.jl:47
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = start at qgram.jl:14 [inlined]
└ @ Core qgram.jl:14
┌ Warning: `search(s::AbstractString, c::Union{Tuple{Vararg{Char}}, AbstractVector{Char}, Set{Char}})` is deprecated, use `coalesce(findfirst((in)(c), s), 0)` instead.
│   caller = compare(::TokenSort{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:65
└ @ StringDistances fuzzywuzzy.jl:65
┌ Warning: `search(s::AbstractString, c::Union{Tuple{Vararg{Char}}, AbstractVector{Char}, Set{Char}})` is deprecated, use `coalesce(findfirst((in)(c), s), 0)` instead.
│   caller = compare(::TokenSort{RatcliffObershelp}, ::String, ::String) at fuzzywuzzy.jl:68
└ @ StringDistances fuzzywuzzy.jl:68
┌ Warning: `search(s::AbstractString, c::Union{Tuple{Vararg{Char}}, AbstractVector{Char}, Set{Char}})` is deprecated, use `coalesce(findfirst((in)(c), s), 0)` instead.
│   caller = compare(::TokenSort{Partial{RatcliffObershelp}}, ::String, ::String) at fuzzywuzzy.jl:65
└ @ StringDistances fuzzywuzzy.jl:65
┌ Warning: `search(s::AbstractString, c::Union{Tuple{Vararg{Char}}, AbstractVector{Char}, Set{Char}})` is deprecated, use `coalesce(findfirst((in)(c), s), 0)` instead.
│   caller = compare(::TokenSort{Partial{RatcliffObershelp}}, ::String, ::String) at fuzzywuzzy.jl:68
└ @ StringDistances fuzzywuzzy.jl:68
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:39
└ @ StringDistances RatcliffObershelp.jl:39
┌ Warning: `chr2ind(s::AbstractString, n::Integer)` is deprecated, use `nextind(s, 0, n)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
┌ Warning: `endof(a)` is deprecated, use `lastindex(a)` instead.
│   caller = matching_blocks!(::Set{Tuple{Int64,Int64,Int64}}, ::String, ::SubString{String}, ::Int64, ::Int64) at RatcliffObershelp.jl:40
└ @ StringDistances RatcliffObershelp.jl:40
	[1m[32mPASSED[0m: modifiers.jl
[ Info: StringDistances tests passed

>>> End of log
