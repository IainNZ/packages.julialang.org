>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2388.16015625 MB free)
Uptime: 75671.0 sec
Load Avg:  0.9248046875  1.04345703125  1.01904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    4937290 s         68 s     200330 s    1285801 s         79 s
#2  3501 MHz    1149095 s       6545 s      93696 s    6173021 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.52.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0205666 0.0880314; -0.0205666 0.0 0.105301; -0.0880314 -0.105301 0.0])
dAA = TransformUtils.so3([0.0 0.0924915 0.140787; -0.0924915 0.0 -0.185899; -0.140787 0.185899 0.0])
dAA = TransformUtils.so3([0.0 -0.057016 -0.0642463; 0.057016 0.0 0.152845; 0.0642463 -0.152845 0.0])
dAA = TransformUtils.Quaternion(0.9981962501152615, [0.0239621, 0.0271495, 0.047885])
dAA = TransformUtils.SO3([0.996917 0.0713469 -0.0326452; -0.0712385 0.997449 0.00447308; 0.032881 -0.0021337 0.999457])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.92554 0.359517 -0.118841; -0.368711 0.927144 -0.0667476; 0.0861856 0.105595 0.990667]), [-0.866763, -0.333668, -0.429922])
xj = TransformUtils.SE3(TransformUtils.SO3([0.893974 -0.431204 0.121958; 0.42116 0.90145 0.100058; -0.153084 -0.0380854 0.987479]), [-0.200429, -0.375201, 0.293843])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.658929 -0.734753 0.161091; 0.69571 0.676728 0.240888; -0.286008 -0.0466551 0.957091]), [0.69441, 0.277478, 0.640594])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
