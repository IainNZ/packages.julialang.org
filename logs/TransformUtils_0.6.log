>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2383.98828125 MB free)
Uptime: 80040.0 sec
Load Avg:  1.00732421875  1.04638671875  1.0029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    4908291 s       7079 s     269998 s    1588147 s         77 s
#2  3501 MHz    1254039 s         68 s     117822 s    6479479 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.53.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.10993 -0.236101; -0.10993 0.0 0.0464196; 0.236101 -0.0464196 0.0])
dAA = TransformUtils.so3([0.0 0.0399376 -0.0791966; -0.0399376 0.0 0.132767; 0.0791966 -0.132767 0.0])
dAA = TransformUtils.so3([0.0 -0.0341151 -0.0386266; 0.0341151 0.0 0.0848978; 0.0386266 -0.0848978 0.0])
dAA = TransformUtils.Quaternion(0.9973521875161586, [0.0655711, -0.0278601, 0.0145896])
dAA = TransformUtils.SO3([0.997884 -0.0523574 0.0385641; 0.0540647 0.997539 -0.0446462; -0.0361316 0.0466367 0.998258])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.929683 -0.366991 -0.0317382; 0.356407 0.917941 -0.174237; 0.0930772 0.150674 0.984192]), [-1.24845, 0.222145, 0.447756])
xj = TransformUtils.SE3(TransformUtils.SO3([0.998506 0.0462402 -0.0291307; -0.0352679 0.952378 0.302874; 0.0417484 -0.301394 0.952585]), [0.131064, -0.834047, 0.409417])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.91961 0.35437 0.169528; -0.392526 0.811845 0.432241; 0.0155427 -0.464037 0.88568]), [0.902506, -1.48157, 0.102511])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
