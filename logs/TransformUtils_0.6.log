>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2406.65234375 MB free)
Uptime: 71581.0 sec
Load Avg:  0.96923828125  1.06640625  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz    4572556 s        114 s     189625 s    1237488 s         33 s
#2  3497 MHz    1007266 s         48 s      86029 s    5919341 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.198038 0.104705; -0.198038 0.0 -0.00395274; -0.104705 0.00395274 0.0])
dAA = TransformUtils.so3([0.0 0.12779 -0.0280946; -0.12779 0.0 0.10702; 0.0280946 -0.10702 0.0])
dAA = TransformUtils.so3([0.0 0.2103 0.0197935; -0.2103 0.0 0.0295421; -0.0197935 -0.0295421 0.0])
dAA = TransformUtils.Quaternion(0.9989822311767911, [0.035498, -0.0135644, -0.0242981])
dAA = TransformUtils.SO3([0.98278 0.184752 0.00312277; -0.18324 0.97228 0.145238; 0.0237968 -0.14331 0.989392])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.980307 0.0228989 0.196149; -0.0310517 0.998773 0.0385896; -0.195025 -0.0439204 0.979814]), [-1.11452, 0.27617, 0.606331])
xj = TransformUtils.SE3(TransformUtils.SO3([0.941776 0.198814 -0.271167; -0.198755 0.97965 0.027972; 0.27121 0.0275525 0.962126]), [0.252199, 0.608504, -0.744803])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.876508 0.159105 -0.454334; -0.188857 0.98179 -0.0205287; 0.442794 0.103798 0.890595]), [1.59299, 0.422565, -1.04295])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
