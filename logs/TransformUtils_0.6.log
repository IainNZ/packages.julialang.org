>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2398.859375 MB free)
Uptime: 73104.0 sec
Load Avg:  1.0283203125  1.05322265625  0.998046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4788345 s       7567 s     185663 s    1172920 s         43 s
#2  3500 MHz     963848 s         93 s      85054 s    6130499 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0960743 0.0709304; -0.0960743 0.0 -0.0594278; -0.0709304 0.0594278 0.0])
dAA = TransformUtils.so3([0.0 0.166849 0.158652; -0.166849 0.0 -0.0708637; -0.158652 0.0708637 0.0])
dAA = TransformUtils.so3([0.0 0.141087 0.119499; -0.141087 0.0 -0.0673973; -0.119499 0.0673973 0.0])
dAA = TransformUtils.Quaternion(0.9953903438163699, [-0.0327382, 0.0795688, 0.0423685])
dAA = TransformUtils.SO3([0.953474 0.0334743 0.299611; -0.00593217 0.995707 -0.0923681; -0.301416 0.0862933 0.94958])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.939014 -0.216676 0.267027; 0.176643 0.970166 0.166055; -0.295041 -0.108759 0.949275]), [0.873087, -0.0909925, 0.223553])
xj = TransformUtils.SE3(TransformUtils.SO3([0.980872 -0.178477 0.0776858; 0.177697 0.98394 0.016896; -0.0794537 -0.0027683 0.996835]), [-0.626594, 0.307796, 0.410217])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.975884 0.00703024 -0.218175; -0.031494 0.993559 -0.108856; 0.216004 0.113102 0.96982]), [-1.39285, 0.691534, -0.15704])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
