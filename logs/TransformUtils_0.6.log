>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2389.7890625 MB free)
Uptime: 77238.0 sec
Load Avg:  1.0029296875  1.04248046875  1.0029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4866122 s       7690 s     188856 s    1499067 s         54 s
#2  3500 MHz    1237609 s         45 s      91349 s    6239820 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 -0.105727 0.0448501; 0.105727 0.0 0.0136946; -0.0448501 -0.0136946 0.0])
dAA = TransformUtils.so3([0.0 -0.0442542 0.0562277; 0.0442542 0.0 0.00475373; -0.0562277 -0.00475373 0.0])
dAA = TransformUtils.so3([0.0 0.172428 0.14528; -0.172428 0.0 -0.0218425; -0.14528 0.0218425 0.0])
dAA = TransformUtils.Quaternion(0.9987870313024638, [-0.0299232, 0.0377521, -0.0101905])
dAA = TransformUtils.SO3([0.994804 -0.101776 0.00259205; 0.100264 0.974961 -0.198488; 0.0176743 0.197717 0.9801])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.938206 0.00762575 -0.345993; 0.116198 0.934779 0.335688; 0.325986 -0.355148 0.876129]), [0.480675, 1.08457, -1.79592])
xj = TransformUtils.SE3(TransformUtils.SO3([0.972086 -0.0568502 0.227635; -0.0135943 0.954924 0.296538; -0.234232 -0.291355 0.927495]), [0.849361, -0.566306, 0.720623])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.834081 -0.0373551 0.550376; 0.0778925 0.995684 -0.0504649; -0.546116 0.084962 0.83339]), [0.974435, -2.43414, 1.52307])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
