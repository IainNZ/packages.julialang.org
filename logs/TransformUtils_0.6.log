>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2390.484375 MB free)
Uptime: 72197.0 sec
Load Avg:  1.01806640625  1.01513671875  0.9794921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4716853 s       7507 s     196370 s    1171833 s         40 s
#2  3499 MHz    1039472 s         55 s      89177 s    5978028 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0427267 -0.145974; -0.0427267 0.0 0.0219399; 0.145974 -0.0219399 0.0])
dAA = TransformUtils.so3([0.0 -0.21937 0.104345; 0.21937 0.0 0.198652; -0.104345 -0.198652 0.0])
dAA = TransformUtils.so3([0.0 -0.158539 0.0239562; 0.158539 0.0 -0.187227; -0.0239562 0.187227 0.0])
dAA = TransformUtils.Quaternion(0.9991134204303549, [0.0176952, -0.0115886, 0.0364])
dAA = TransformUtils.SO3([0.988389 -0.131932 0.0753725; 0.132172 0.991225 0.00182096; -0.0749514 0.00816232 0.997154])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.912843 0.17813 0.367406; -0.211733 0.975894 0.0529199; -0.349122 -0.1261 0.928554]), [1.39697, -0.24345, 0.527751])
xj = TransformUtils.SE3(TransformUtils.SO3([0.994143 0.0891756 0.0610565; -0.0512361 0.88631 -0.460249; -0.095158 0.454425 0.885688]), [0.90503, 0.933678, -1.58893])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.951567 -0.264908 -0.156028; 0.139085 0.823526 -0.549963; 0.274183 0.501625 0.820485]), [0.0406843, 1.32804, -2.0839])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
