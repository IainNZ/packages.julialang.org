>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2376.96484375 MB free)
Uptime: 78671.0 sec
Load Avg:  1.00048828125  0.9794921875  0.95556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4968867 s         56 s     211580 s    1499169 s         76 s
#2  3500 MHz    1155137 s       6870 s     103790 s    6451844 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.1
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.56.0
 - Nullables                     0.0.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0248694 -0.037457; -0.0248694 0.0 0.0886998; 0.037457 -0.0886998 0.0])
dAA = TransformUtils.so3([0.0 -0.0727169 -0.170841; 0.0727169 0.0 -0.0457804; 0.170841 0.0457804 0.0])
dAA = TransformUtils.so3([0.0 -0.0929092 0.0522351; 0.0929092 0.0 0.0366678; -0.0522351 -0.0366678 0.0])
dAA = TransformUtils.Quaternion(0.9964896587844989, [-0.0162241, -0.0497523, 0.0653441])
dAA = TransformUtils.SO3([0.993105 0.0648137 0.0976826; -0.060998 0.997272 -0.0415582; -0.10011 0.0353132 0.99435])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.956507 0.274463 -0.0988113; -0.28875 0.938952 -0.187062; 0.0414374 0.207458 0.977366]), [0.603613, 0.850158, -2.70948])
xj = TransformUtils.SE3(TransformUtils.SO3([0.975363 -0.0603251 0.212197; 0.091704 0.985711 -0.141291; -0.200641 0.15727 0.966959]), [-0.436152, -2.39439, 0.111692])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.898149 -0.335808 0.283834; 0.312182 0.941606 0.126178; -0.309631 -0.0247185 0.950535]), [0.0592222, -2.74658, 3.46699])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
