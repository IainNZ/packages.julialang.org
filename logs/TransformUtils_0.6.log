>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2402.125 MB free)
Uptime: 72746.0 sec
Load Avg:  0.9169921875  0.96875  0.9755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4691472 s       7272 s     282414 s    1179924 s         48 s
#2  3500 MHz    1027140 s        357 s      95798 s    6055754 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.136979 -0.0629231; -0.136979 0.0 0.073126; 0.0629231 -0.073126 0.0])
dAA = TransformUtils.so3([0.0 0.125068 0.0748303; -0.125068 0.0 -0.00585343; -0.0748303 0.00585343 0.0])
dAA = TransformUtils.so3([0.0 0.0388846 0.0315779; -0.0388846 0.0 -0.156232; -0.0315779 0.156232 0.0])
dAA = TransformUtils.Quaternion(0.9984202225165068, [-0.0541612, 0.000182864, -0.0149531])
dAA = TransformUtils.SO3([0.99338 0.0743568 -0.0875642; -0.0731794 0.997181 0.016584; 0.0885505 -0.0100663 0.996021])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.873336 -0.472779 0.117318; 0.459756 0.879599 0.122185; -0.160959 -0.0527708 0.985549]), [1.09791, 1.03763, 1.68681])
xj = TransformUtils.SE3(TransformUtils.SO3([0.94648 -0.264947 -0.184335; 0.259701 0.964261 -0.0524902; 0.191654 0.00180897 0.981461]), [0.191166, -0.023757, 0.642118])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.915146 0.211646 -0.343094; -0.229156 0.97333 -0.0108133; 0.331655 0.0885179 0.939239]), [-1.11172, -0.449775, -1.26566])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
