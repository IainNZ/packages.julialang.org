>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2401.49609375 MB free)
Uptime: 107639.0 sec
Load Avg:  1.03173828125  1.0654296875  1.00830078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    7000557 s        118 s     302337 s    1778132 s        116 s
#2  3499 MHz    1745910 s       6434 s     157647 s    8670054 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.41.0
 - Nullables                     0.0.1
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 -0.0385324 0.124117; 0.0385324 0.0 0.00758104; -0.124117 -0.00758104 0.0])
dAA = TransformUtils.so3([0.0 -0.0692936 -0.0713594; 0.0692936 0.0 -0.0244666; 0.0713594 0.0244666 0.0])
dAA = TransformUtils.so3([0.0 -0.153518 -0.0468021; 0.153518 0.0 -0.108823; 0.0468021 0.108823 0.0])
dAA = TransformUtils.Quaternion(0.9938340776084092, [0.0530387, 0.0682321, -0.0694629])
dAA = TransformUtils.SO3([0.99407 0.0331428 -0.103568; -0.0362582 0.99894 -0.028344; 0.102519 0.0319311 0.994218])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.990781 -0.0106678 0.135052; 0.0357831 0.982098 -0.184939; -0.130661 0.188067 0.973426]), [-0.268391, -0.458064, 0.606794])
xj = TransformUtils.SE3(TransformUtils.SO3([0.927809 -0.366588 -0.0691609; 0.348352 0.917694 -0.191018; 0.133493 0.153136 0.979147]), [-0.959455, 1.11846, -1.6019])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.914279 -0.350379 -0.203295; 0.357324 0.933976 -0.00271543; 0.190824 -0.0701596 0.979114]), [-0.33969, 1.14029, -2.53489])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
