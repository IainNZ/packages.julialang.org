>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2360.2890625 MB free)
Uptime: 90840.0 sec
Load Avg:  0.99365234375  0.998046875  1.01123046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    5523129 s       6830 s     354355 s    1901404 s         77 s
#2  3499 MHz    1325130 s       2604 s     136066 s    7408551 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.64.0
 - Nullables                     0.0.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0410498 -0.0452233; -0.0410498 0.0 -0.037909; 0.0452233 0.037909 0.0])
dAA = TransformUtils.so3([0.0 0.16996 -0.0207429; -0.16996 0.0 -0.0517278; 0.0207429 0.0517278 0.0])
dAA = TransformUtils.so3([0.0 0.00826426 -0.0111281; -0.00826426 0.0 0.0912582; 0.0111281 -0.0912582 0.0])
dAA = TransformUtils.Quaternion(0.9989865535896737, [-0.0198701, 0.0402574, 0.00322306])
dAA = TransformUtils.SO3([0.997392 -0.0702126 0.0167237; 0.0710089 0.996063 -0.0530706; -0.0129317 0.0541197 0.998451])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.933855 -0.143225 0.327723; 0.155454 0.987779 -0.0112812; -0.322102 0.0614808 0.944707]), [-1.04679, -0.377744, 0.882554])
xj = TransformUtils.SE3(TransformUtils.SO3([0.924554 0.279667 0.258816; -0.214767 0.943509 -0.25232; -0.314761 0.177699 0.932389]), [-0.56384, 0.0144556, -1.43999])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.931398 0.350604 -0.0978521; -0.363913 0.902848 -0.228982; 0.00806377 0.248883 0.9685]), [1.26007, 0.175445, -2.04027])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
