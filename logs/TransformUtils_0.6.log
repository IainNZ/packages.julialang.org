>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2397.953125 MB free)
Uptime: 69121.0 sec
Load Avg:  1.09423828125  1.06884765625  1.0029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4417257 s       6603 s     187398 s    1206019 s         37 s
#2  3500 MHz     882810 s        264 s      78488 s    5853828 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.43.0
 - Nullables                     0.0.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 -0.112572 -0.0422506; 0.112572 0.0 -0.00265891; 0.0422506 0.00265891 0.0])
dAA = TransformUtils.so3([0.0 0.0683761 -0.00433769; -0.0683761 0.0 0.0200405; 0.00433769 -0.0200405 0.0])
dAA = TransformUtils.so3([0.0 0.139432 -0.149679; -0.139432 0.0 -0.104598; 0.149679 0.104598 0.0])
dAA = TransformUtils.Quaternion(0.9950327560145916, [-0.092711, -0.0362321, 0.00131374])
dAA = TransformUtils.SO3([0.997093 -0.0619337 0.0443742; 0.0601989 0.997408 0.0394215; -0.0467007 -0.0366356 0.998237])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.925122 0.050658 -0.376276; -0.114177 0.982303 -0.148471; 0.362096 0.180316 0.914534]), [-1.14898, 0.830868, 0.536932])
xj = TransformUtils.SE3(TransformUtils.SO3([0.976372 -0.115988 0.182328; 0.167697 0.938832 -0.300786; -0.136288 0.324255 0.9361]), [2.27212, 0.408588, 0.32345])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.834767 -0.0970846 0.541977; 0.189616 0.97481 -0.117433; -0.516924 0.200796 0.832148]), [3.13585, -0.279995, -1.41982])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
