>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TranscodingStreams v0.5.2
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2338.51953125 MB free)
Uptime: 88615.0 sec
Load Avg:  1.00537109375  1.05322265625  1.015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    5426294 s       7109 s     337976 s    1839511 s         92 s
#2  3500 MHz    1362882 s       1156 s     140468 s    7153471 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
6 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - RDatasets                     0.4.0
 - TransformUtils                0.1.0
29 additional packages:
 - BinDeps                       0.8.7
 - BinaryProvider                0.3.0
 - CSV                           0.2.4
 - CategoricalArrays             0.3.7
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - DataFrames                    0.11.5
 - DataStreams                   0.3.4
 - DataStructures                0.7.4
 - FileIO                        0.7.0
 - FixedPointNumbers             0.4.6
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - Missings                      0.2.9
 - Mocking                       0.5.1
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - RData                         0.4.0
 - Reexport                      0.1.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StatsBase                     0.20.1
 - TimeZones                     0.6.4
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - WeakRefStrings                0.4.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.109316 0.0364937; -0.109316 0.0 -0.0857309; -0.0364937 0.0857309 0.0])
dAA = TransformUtils.so3([0.0 -0.042143 -0.157657; 0.042143 0.0 -0.206234; 0.157657 0.206234 0.0])
dAA = TransformUtils.so3([0.0 0.0906666 0.116788; -0.0906666 0.0 0.250584; -0.116788 -0.250584 0.0])
dAA = TransformUtils.Quaternion(0.9966787360866082, [0.000487227, -0.0651267, 0.0488853])
dAA = TransformUtils.SO3([0.992934 -0.0403845 -0.111589; 0.0537785 0.991346 0.119758; 0.105786 -0.124912 0.986512])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.985387 -0.0838432 0.148265; 0.120266 0.958883 -0.25706; -0.120616 0.271135 0.954954]), [-1.15331, -0.3703, -0.676263])
xj = TransformUtils.SE3(TransformUtils.SO3([0.989687 0.133252 -0.0525757; -0.14079 0.837098 -0.528626; -0.0264295 0.530576 0.847225]), [0.965751, -1.05246, -0.11314])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.96148 0.167984 -0.217572; -0.225146 0.935364 -0.27277; 0.157688 0.311248 0.937155]), [1.93814, -0.679096, 1.02729])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
