>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2381.57421875 MB free)
Uptime: 78003.0 sec
Load Avg:  1.09033203125  1.15966796875  1.083984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4915434 s         58 s     210364 s    1536945 s         81 s
#2  3499 MHz    1182853 s       6572 s     104160 s    6340322 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.1
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.56.0
 - Nullables                     0.0.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.00403094 -0.0907828; -0.00403094 0.0 0.135499; 0.0907828 -0.135499 0.0])
dAA = TransformUtils.so3([0.0 -0.074195 -0.103268; 0.074195 0.0 -0.047345; 0.103268 0.047345 0.0])
dAA = TransformUtils.so3([0.0 0.020145 -0.0126307; -0.020145 0.0 0.0765919; 0.0126307 -0.0765919 0.0])
dAA = TransformUtils.Quaternion(0.9957548157338506, [0.0824913, -0.0142307, -0.0382755])
dAA = TransformUtils.SO3([0.999964 -0.00538169 0.00662366; 0.00592181 0.996412 -0.0844268; -0.00614553 0.084463 0.996408])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.792203 0.105642 -0.601044; -0.203517 0.974254 -0.097005; 0.575321 0.19917 0.793307]), [0.503699, 0.215592, 0.0330933])
xj = TransformUtils.SE3(TransformUtils.SO3([0.948291 -0.0570166 -0.312238; 0.0894544 0.991865 0.090559; 0.304535 -0.113807 0.945678]), [-0.397324, 0.509507, -0.981121])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.90824 -0.312506 0.278282; 0.247985 0.937638 0.243593; -0.337052 -0.152231 0.929097]), [-1.35711, -0.0108391, -0.291541])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
