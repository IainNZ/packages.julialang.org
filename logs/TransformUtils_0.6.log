>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2397.0859375 MB free)
Uptime: 104645.0 sec
Load Avg:  1.04345703125  1.0556640625  0.99560546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    7009646 s       4997 s     302071 s    1483922 s         43 s
#2  3500 MHz    1554867 s         57 s     141806 s    8578138 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 -0.0479957 -0.0603963; 0.0479957 0.0 -0.0305099; 0.0603963 0.0305099 0.0])
dAA = TransformUtils.so3([0.0 -0.0967138 -0.103615; 0.0967138 0.0 0.112818; 0.103615 -0.112818 0.0])
dAA = TransformUtils.so3([0.0 0.0379532 0.141467; -0.0379532 0.0 0.201728; -0.141467 -0.201728 0.0])
dAA = TransformUtils.Quaternion(0.9994814245330819, [-0.0271445, 0.0132573, -0.0111491])
dAA = TransformUtils.SO3([0.988894 -0.0454569 0.141499; 0.0711872 0.98063 -0.182476; -0.130464 0.190523 0.972975])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.864355 -0.408532 -0.293242; 0.468771 0.865661 0.175741; 0.182052 -0.289366 0.939747]), [-0.655476, 0.491212, -0.060623])
xj = TransformUtils.SE3(TransformUtils.SO3([0.927715 0.26912 -0.258689; -0.270817 0.962171 0.0297608; 0.256912 0.0424477 0.965502]), [-0.376433, 0.201493, 0.0191902])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.721696 0.691381 -0.0338763; -0.687778 0.710686 -0.147938; -0.0782063 0.130066 0.988416]), [0.119911, -0.387891, -0.0577384])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
