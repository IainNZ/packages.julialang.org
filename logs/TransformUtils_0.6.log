>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2384.1875 MB free)
Uptime: 78499.0 sec
Load Avg:  1.0205078125  1.0498046875  0.9921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4931614 s         90 s     211304 s    1544821 s         66 s
#2  3499 MHz    1081384 s       7088 s      97069 s    6514939 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.1
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.55.1
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0505064 0.0929435; -0.0505064 0.0 0.0151204; -0.0929435 -0.0151204 0.0])
dAA = TransformUtils.so3([0.0 -0.082367 0.0286748; 0.082367 0.0 -0.0830331; -0.0286748 0.0830331 0.0])
dAA = TransformUtils.so3([0.0 -0.0110876 0.0370538; 0.0110876 0.0 -0.172578; -0.0370538 0.172578 0.0])
dAA = TransformUtils.Quaternion(0.9996007694585566, [-0.0144477, 0.0052211, 0.023713])
dAA = TransformUtils.SO3([0.993314 -0.0596624 0.098831; 0.06261 0.997673 -0.0269936; -0.0969905 0.0330009 0.994738])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.997196 0.0372994 -0.0648818; -0.0243812 0.981566 0.189561; 0.0707563 -0.187448 0.979723]), [-0.256102, 0.452387, -0.0577223])
xj = TransformUtils.SE3(TransformUtils.SO3([0.986843 -0.109864 0.118619; 0.0957482 0.988293 0.11878; -0.13028 -0.105859 0.98581]), [0.405631, -0.618212, 0.479514])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.972523 -0.141142 0.185143; 0.155213 0.985821 -0.063773; -0.173516 0.0907572 0.98064]), [0.723992, -1.12688, 0.280464])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
