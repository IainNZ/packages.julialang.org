>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2384.97265625 MB free)
Uptime: 73169.0 sec
Load Avg:  1.0283203125  1.1142578125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4690095 s       7026 s     200124 s    1296425 s         39 s
#2  3499 MHz    1091410 s        391 s      90436 s    6020836 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.110023 0.0737736; -0.110023 0.0 -0.156366; -0.0737736 0.156366 0.0])
dAA = TransformUtils.so3([0.0 -0.0113053 0.080439; 0.0113053 0.0 -0.13224; -0.080439 0.13224 0.0])
dAA = TransformUtils.so3([0.0 -0.0262596 0.063863; 0.0262596 0.0 0.0797975; -0.063863 -0.0797975 0.0])
dAA = TransformUtils.Quaternion(0.9954949303872451, [0.0514339, 0.0783139, -0.0145369])
dAA = TransformUtils.SO3([0.998281 -0.0306309 -0.0499726; 0.0340859 0.996977 0.0698182; 0.0476829 -0.0714015 0.996307])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.928506 -0.232237 -0.289729; 0.133249 0.936697 -0.323797; 0.346586 0.262041 0.900673]), [1.57129, 0.953353, 2.5374])
xj = TransformUtils.SE3(TransformUtils.SO3([0.901064 -0.100772 0.421816; 0.0748052 0.994166 0.0777115; -0.427186 -0.0384689 0.903345]), [1.7355, -0.173079, 1.26274])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.698554 0.0255709 0.7151; -0.251131 0.944554 0.211545; -0.670041 -0.327359 0.666244]), [-0.439408, -1.42727, -0.830892])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
