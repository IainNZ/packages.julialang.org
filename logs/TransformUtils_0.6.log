>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2394.59375 MB free)
Uptime: 77723.0 sec
Load Avg:  1.08203125  1.09375  1.02099609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4902652 s       7672 s     204945 s    1521655 s         86 s
#2  3499 MHz    1131473 s         92 s      97976 s    6387013 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.53.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0919284 0.142589; -0.0919284 0.0 -0.0550185; -0.142589 0.0550185 0.0])
dAA = TransformUtils.so3([0.0 0.00550597 0.0750507; -0.00550597 0.0 0.183318; -0.0750507 -0.183318 0.0])
dAA = TransformUtils.so3([0.0 0.0034848 -0.125187; -0.0034848 0.0 0.0189959; 0.125187 -0.0189959 0.0])
dAA = TransformUtils.Quaternion(0.9922999017326162, [0.1134, 0.0173097, 0.0467089])
dAA = TransformUtils.SO3([0.99451 0.0974461 0.0381453; -0.094942 0.993505 -0.0627192; -0.0440093 0.0587532 0.997302])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.903093 -0.104279 -0.416593; 0.141255 0.988223 0.0588491; 0.40555 -0.111992 0.907186]), [-1.95953, 2.52974, -0.403191])
xj = TransformUtils.SE3(TransformUtils.SO3([0.999246 0.0388105 0.000555237; -0.0384853 0.988812 0.144115; 0.00504414 -0.144028 0.989561]), [-0.475551, -0.871872, 1.33582])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.899022 0.116314 0.422174; -0.142797 0.989249 0.0315367; -0.413968 -0.0886374 0.905966]), [1.56493, -3.71106, 0.759216])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
