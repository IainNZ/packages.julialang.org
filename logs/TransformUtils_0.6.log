>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2402.93359375 MB free)
Uptime: 71677.0 sec
Load Avg:  1.03173828125  1.07763671875  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4627398 s       6625 s     192912 s    1250617 s         42 s
#2  3500 MHz    1030501 s         28 s      87867 s    5909795 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.45.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0812441 -0.0880391; -0.0812441 0.0 0.0888156; 0.0880391 -0.0888156 0.0])
dAA = TransformUtils.so3([0.0 -0.206089 0.0693046; 0.206089 0.0 0.0139183; -0.0693046 -0.0139183 0.0])
dAA = TransformUtils.so3([0.0 0.00661074 -0.00751731; -0.00661074 0.0 0.0981103; 0.00751731 -0.0981103 0.0])
dAA = TransformUtils.Quaternion(0.9934856149291588, [0.111601, 0.000671115, -0.0230453])
dAA = TransformUtils.SO3([0.992439 -0.12182 0.0149834; 0.118615 0.9833 0.138031; -0.0315482 -0.13521 0.990315])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.881147 0.0652877 0.468314; 0.0756585 0.958194 -0.275936; -0.466751 0.278572 0.83937]), [0.0441543, -0.68943, -0.198837])
xj = TransformUtils.SE3(TransformUtils.SO3([0.982778 -0.153871 -0.102329; 0.155687 0.987756 0.0099612; 0.0995438 -0.0257211 0.994701]), [-0.975653, 0.682946, 0.892006])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.831288 -0.0488451 -0.553691; 0.241072 0.929251 0.279959; 0.500843 -0.366206 0.784251]), [-1.30392, 1.5523, 0.0593426])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
