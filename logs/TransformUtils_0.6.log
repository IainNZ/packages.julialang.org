>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2391.78515625 MB free)
Uptime: 75015.0 sec
Load Avg:  1.1044921875  1.1015625  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4833790 s       2634 s     199058 s    1319373 s         60 s
#2  3499 MHz    1177281 s       3521 s      92172 s    6087618 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 -0.133193 0.0397499; 0.133193 0.0 -0.00818633; -0.0397499 0.00818633 0.0])
dAA = TransformUtils.so3([0.0 -0.00540133 0.0457685; 0.00540133 0.0 0.0418206; -0.0457685 -0.0418206 0.0])
dAA = TransformUtils.so3([0.0 0.0552974 0.107876; -0.0552974 0.0 0.0109022; -0.107876 -0.0109022 0.0])
dAA = TransformUtils.Quaternion(0.9994361871136563, [-0.013187, 0.0308439, 0.00143769])
dAA = TransformUtils.SO3([0.986019 -0.0529339 0.157999; 0.0486592 0.99834 0.0308049; -0.159368 -0.0226862 0.986959])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.985745 0.0528648 0.159726; 0.0064213 0.936841 -0.349697; -0.168125 0.345737 0.923147]), [2.31932, 0.721933, 1.64656])
xj = TransformUtils.SE3(TransformUtils.SO3([0.943154 0.231894 -0.238086; -0.183194 0.960439 0.209756; 0.277308 -0.154217 0.948323]), [0.991805, 2.39353, 1.80716])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.881911 0.260684 -0.392781; -0.0258884 0.858719 0.511793; 0.470705 -0.441187 0.764062]), [-1.32486, 1.55137, -0.648337])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
