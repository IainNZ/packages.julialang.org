>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2383.52734375 MB free)
Uptime: 79574.0 sec
Load Avg:  1.00390625  1.0068359375  0.97314453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    5046608 s        961 s     223849 s    1517827 s         86 s
#2  3499 MHz    1178496 s       6364 s     103617 s    6521449 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.1
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.56.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 -0.109951 0.0918611; 0.109951 0.0 -0.183246; -0.0918611 0.183246 0.0])
dAA = TransformUtils.so3([0.0 0.0469819 -0.07452; -0.0469819 0.0 -0.251421; 0.07452 0.251421 0.0])
dAA = TransformUtils.so3([0.0 -0.136953 -0.088613; 0.136953 0.0 0.0745854; 0.088613 -0.0745854 0.0])
dAA = TransformUtils.Quaternion(0.993982877775307, [-0.0125412, 0.0242214, -0.106085])
dAA = TransformUtils.SO3([0.997003 -0.00905883 -0.0768269; 0.00955672 0.999936 0.00611543; 0.0767666 -0.00683132 0.997026])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.990254 -0.0865327 0.109133; -0.00461986 0.762732 0.646698; -0.1392 -0.640899 0.754898]), [-0.125883, -1.10765, -0.449808])
xj = TransformUtils.SE3(TransformUtils.SO3([0.991546 -0.0919695 0.0915338; 0.0975258 0.99353 -0.0581952; -0.0855894 0.0666302 0.9941]), [0.321862, -0.193943, -0.955309])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.993345 -0.104938 -0.047468; 0.0434391 0.723052 -0.689426; 0.106669 0.682776 0.722799]), [0.509526, 0.982141, 0.258151])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
