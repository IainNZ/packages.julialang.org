>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2381.29296875 MB free)
Uptime: 80770.0 sec
Load Avg:  1.35009765625  1.16162109375  1.046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    5044099 s       7156 s     212265 s    1592441 s         72 s
#2  3504 MHz    1281759 s        135 s     100171 s    6553567 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.54.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.0284431 0.0192464; -0.0284431 0.0 0.0716544; -0.0192464 -0.0716544 0.0])
dAA = TransformUtils.so3([0.0 -0.0290163 -0.110576; 0.0290163 0.0 0.0409478; 0.110576 -0.0409478 0.0])
dAA = TransformUtils.so3([0.0 0.0103456 0.00580479; -0.0103456 0.0 0.00543708; -0.00580479 -0.00543708 0.0])
dAA = TransformUtils.Quaternion(0.9979895734201094, [-0.0223614, -0.048578, -0.0340142])
dAA = TransformUtils.SO3([0.99923 -0.0158775 0.0358758; 0.0154169 0.999796 0.0130799; -0.0360761 -0.0125168 0.999271])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.826039 0.50998 -0.239959; -0.450228 0.853185 0.263384; 0.33905 -0.109529 0.934371]), [-0.391688, 0.075623, 1.09849])
xj = TransformUtils.SE3(TransformUtils.SO3([0.903769 0.355301 0.238667; -0.377155 0.924712 0.0515807; -0.202372 -0.136632 0.969731]), [-0.653508, 0.587624, 0.827286])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.84774 -0.169164 0.502713; 0.161287 0.985112 0.0595096; -0.505295 0.0306322 0.862403]), [-0.538741, 0.333013, -0.0557259])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
