>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2401.6640625 MB free)
Uptime: 69859.0 sec
Load Avg:  1.0078125  1.076171875  1.0302734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4385566 s         56 s     177829 s    1325438 s         46 s
#2  3500 MHz     974578 s         97 s      80543 s    5817358 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.43.0
 - Nullables                     0.0.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.00326156 0.0500908; -0.00326156 0.0 -0.0101276; -0.0500908 0.0101276 0.0])
dAA = TransformUtils.so3([0.0 0.0262984 -0.112086; -0.0262984 0.0 0.106254; 0.112086 -0.106254 0.0])
dAA = TransformUtils.so3([0.0 0.0864469 -0.207712; -0.0864469 0.0 0.0471849; 0.207712 -0.0471849 0.0])
dAA = TransformUtils.Quaternion(0.9991888442028161, [-0.0105356, -0.012224, -0.0368949])
dAA = TransformUtils.SO3([0.9988 -0.0226502 0.0434271; 0.027605 0.992734 -0.117122; -0.0404588 0.11818 0.992168])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.992491 0.00672462 -0.122135; 0.00639276 0.994272 0.106692; 0.122153 -0.106672 0.986762]), [0.498447, 1.23464, -1.37978])
xj = TransformUtils.SE3(TransformUtils.SO3([0.956646 -0.158417 0.244404; 0.227341 0.930684 -0.286608; -0.182059 0.329746 0.926349]), [-0.897861, -0.270909, -0.721594])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.928676 -0.110999 0.353892; 0.251892 0.889112 -0.382139; -0.272233 0.444026 0.853657]), [-1.31505, -1.57652, 0.659384])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
