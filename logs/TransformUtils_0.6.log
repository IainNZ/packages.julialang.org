>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2391.40625 MB free)
Uptime: 72967.0 sec
Load Avg:  1.01318359375  1.06982421875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    4720506 s        108 s     193806 s    1293017 s         52 s
#2  3498 MHz    1138134 s       6944 s      94216 s    5933761 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TransformUtils                0.1.0
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 0.134109 -0.205177; -0.134109 0.0 -0.0642951; 0.205177 0.0642951 0.0])
dAA = TransformUtils.so3([0.0 -0.0552241 0.112031; 0.0552241 0.0 0.0802717; -0.112031 -0.0802717 0.0])
dAA = TransformUtils.so3([0.0 0.14981 -0.112237; -0.14981 0.0 0.0216546; 0.112237 -0.0216546 0.0])
dAA = TransformUtils.Quaternion(0.9988012082879156, [-0.0275097, 0.0279212, 0.0293218])
dAA = TransformUtils.SO3([0.986702 -0.0200493 -0.161299; 0.0213555 0.999752 0.00636854; 0.161131 -0.00972847 0.986885])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.962907 0.196233 -0.185209; -0.214509 0.973083 -0.084232; 0.163695 0.120837 0.979083]), [0.0717543, 0.711411, 0.73264])
xj = TransformUtils.SE3(TransformUtils.SO3([0.953215 -0.189542 0.235489; 0.250872 0.930634 -0.266427; -0.168655 0.31304 0.934645]), [-1.14307, -0.995077, 0.794124])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.836435 -0.330898 0.436901; 0.410792 0.906217 -0.100106; -0.362803 0.263208 0.893922]), [-0.793641, -1.89151, 0.428935])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
