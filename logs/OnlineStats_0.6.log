>>> 'Pkg.add("OnlineStats")' log
INFO: Cloning cache of OnlineStats from https://github.com/joshday/OnlineStats.jl.git
INFO: Cloning cache of OnlineStatsBase from https://github.com/joshday/OnlineStatsBase.jl.git
INFO: Cloning cache of PenaltyFunctions from https://github.com/JuliaML/PenaltyFunctions.jl.git
INFO: Cloning cache of SweepOperator from https://github.com/joshday/SweepOperator.jl.git
INFO: Installing BinDeps v0.8.2
INFO: Installing DataStructures v0.7.3
INFO: Installing LearnBase v0.1.6
INFO: Installing LossFunctions v0.2.0
INFO: Installing NamedTuples v4.0.0
INFO: Installing OnlineStats v0.13.2
INFO: Installing OnlineStatsBase v0.3.1
INFO: Installing PenaltyFunctions v0.0.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.5.2
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.6
INFO: Installing StatsBase v0.19.4
INFO: Installing SweepOperator v0.1.0
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Package database updated

>>> 'Pkg.test("OnlineStats")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (857.84765625 MB free)
Uptime: 47289.0 sec
Load Avg:  0.99267578125  0.9580078125  0.97998046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2990941 s        113 s     141798 s     960042 s        100 s
#2  3499 MHz    1009957 s       6432 s      91307 s    3521394 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - OnlineStats                   0.13.2
17 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.41.0
 - DataStructures                0.7.3
 - LearnBase                     0.1.6
 - LossFunctions                 0.2.0
 - NamedTuples                   4.0.0
 - Nullables                     0.0.1
 - OnlineStatsBase               0.3.1
 - PenaltyFunctions              0.0.2
 - RecipesBase                   0.2.3
 - Reexport                      0.0.3
 - SHA                           0.5.2
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.6
 - StatsBase                     0.19.4
 - SweepOperator                 0.1.0
 - URIParser                     0.3.0
INFO: Testing OnlineStats
INFO: Show
Mean(0.0)
MV{Mean}(0.0, 0.0)
Variance(0.0)
MV{Variance}(0.0, 0.0)
CStat: re = Mean(0.0), im = Mean(0.0)
MV{CStat{Mean}}((0.0, 0.0), (0.0, 0.0))
CovMatrix([0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0])
Diff{Float64}(0.0)
MV{Diff{Float64}}(0.0, 0.0)
Extrema((Inf, -Inf))
MV{Extrema}((Inf, -Inf), (Inf, -Inf))
HyperLogLog(16 registers, estimate = 0.0)
MV{HyperLogLog}(0.0, 0.0)
Moments([0.0, 0.0, 0.0, 0.0])
MV{Moments}([0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0])
OrderStats([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
MV{OrderStats}([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
Quantile{OMAS}([0.0, 0.0, 0.0])
MV{Quantile{OMAS{Tuple{Array{Float64,1},Array{Float64,1}}}}}([0.0, 0.0, 0.0], [0.0, 0.0, 0.0])
PQuantile(0.0)
MV{PQuantile}(0.0, 0.0)
ReservoirSample{Float64}([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
MV{ReservoirSample{Float64}}([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
Sum{Float64}(0.0)
MV{Sum{Float64}}(0.0, 0.0)
StatLearn{SGD,LPDistLoss{2},L2Penalty}
    > β       : [0.0, 0.0, 0.0, 0.0, 0.0]
    > λfactor : [0.1, 0.1, 0.1, 0.1, 0.1]
    > Loss    : L2DistLoss
    > Penalty : L2Penalty
    > Updater : SGD
LinRegBuilder of 5 variables
LinReg: β(0.0) = [0.0 0.0 0.0 0.0 0.0]
CallFun: Mean(0.0) |> info
MV{CallFun{Mean,#info}}(0.0, 0.0)
Bootstrap(100): Mean(0.0)
MV{Bootstrap{Mean,Array{Int64,1}}}([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
▦ Series{0}  |  EqualWeight  |  nobs = 0
└── Mean(0.0)
▦ Series{0}  |  EqualWeight  |  nobs = 0
├── Mean(0.0)
├── Variance(0.0)
└── Moments([0.0, 0.0, 0.0, 0.0])
MV{Mean}(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...)
this should print twice
this should print twice



Test Summary: | Pass  Total
test_merge 0  |   10     10
Test Summary: | Pass  Total
test_merge 1  |    4      4
Test Summary:    | Pass  Total
test_merge (1,0) |    2      2
Test Summary: | Pass  Total
Series        |   32     32
Test Summary: | Pass  Total
mapblocks     |    5      5
Test Summary:      | Pass  Total
Quantile/PQuantile |   15     15
Test Summary: | Pass  Total
Distributions |   34     34
Test Summary: | Pass  Total
StatLearn     |  100    100
Test Summary: | Pass  Total
LinRegBuilder |   13     13
Test Summary: | Pass  Total
CovMatrix     |    4      4
Test Summary: | Pass  Total
Extrema       |    2      2
Test Summary: | Pass  Total
Moments       |    5      5
Test Summary: | Pass  Total
LinReg        |    7      7
Test Summary: | Pass  Total
IHistogram    |  108    108
Test Summary: | Pass  Total
OHistogram    |    4      4
Test Summary: | Pass  Total
Other         |    4      4
Test Summary: | Pass  Total
Diff          |    4      4
Test Summary:   | Pass  Total
ReservoirSample |   11     11
Test Summary: | Pass  Total
Bootstrap     |  103    103
Test Summary: |
KMeans        | No tests
INFO: OnlineStats tests passed

>>> End of log
