>>> 'Pkg.add("MPI")' log
[ Info: Cloning cache of MPI from https://github.com/JuliaParallel/MPI.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MPI v0.6.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building MPI @ Main none:10
┌ Warning: Deprecated syntax `implicit assignment to global variable `configure``.
│ Use `global configure` instead.
└ @ nothing none:0
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/MPI/deps/build.jl:54
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = run(::BinDeps.DirectoryRule) at BinDeps.jl:492
└ @ BinDeps BinDeps.jl:492
INFO: Attempting to create directory /home/vagrant/.julia/v0.7/MPI/deps/build
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = run(::BinDeps.SynchronousStepCollection) at BinDeps.jl:520
└ @ BinDeps BinDeps.jl:520
INFO: Changing directory to /home/vagrant/.julia/v0.7/MPI/deps/build
-- The Fortran compiler identification is GNU 4.8.4
-- The C compiler identification is GNU 4.8.4
-- Check for working Fortran compiler: /usr/bin/f95
-- Check for working Fortran compiler: /usr/bin/f95  -- works
-- Detecting Fortran compiler ABI info
-- Detecting Fortran compiler ABI info - done
-- Checking whether /usr/bin/f95 supports Fortran 90
-- Checking whether /usr/bin/f95 supports Fortran 90 -- yes
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Found Git: /usr/bin/git (found version "1.9.1") 
CMake Error at /usr/share/cmake-3.7/Modules/FindPackageHandleStandardArgs.cmake:138 (message):
  Could NOT find MPI_C (missing: MPI_C_LIBRARIES MPI_C_INCLUDE_PATH)
Call Stack (most recent call first):
  /usr/share/cmake-3.7/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE)
  /usr/share/cmake-3.7/Modules/FindMPI.cmake:616 (find_package_handle_standard_args)
  CMakeLists.txt:5 (find_package)


-- Configuring incomplete, errors occurred!
See also "/home/vagrant/.julia/v0.7/MPI/deps/build/CMakeFiles/CMakeOutput.log".
┌ Error: ------------------------------------------------------------
│ # Build failed for MPI
│   exception = LoadError("/home/vagrant/.julia/v0.7/MPI/deps/build.jl", 975, ErrorException("failed process: Process(`cmake -DCMAKE_INSTALL_PREFIX=/home/vagrant/.julia/v0.7/MPI/deps/src -DCMAKE_LIB_INSTALL_PREFIX=/home/vagrant/.julia/v0.7/MPI/deps/usr/lib ..`, ProcessExited(1)) [1]"))
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ MPI had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("MPI")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:656
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of MPI
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("MPI")' log
Package was unable to be tested.

>>> End of log
