>>> 'Pkg.add("CxxWrap")' log
INFO: Cloning cache of CxxWrap from https://github.com/JuliaInterop/CxxWrap.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing CxxWrap v0.5.0
INFO: Installing SHA v0.5.2
INFO: Installing URIParser v0.2.0
INFO: Building CxxWrap
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/jlcxx
INFO: Changing Directory to /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/jlcxx
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Julia_EXECUTABLE:     /home/vagrant/julia/bin/julia
-- Julia_VERSION_STRING: 0.6.1
-- Julia_INCLUDE_DIRS:   /home/vagrant/julia/include/julia
-- Julia_LIBRARY_DIR:    /home/vagrant/julia/lib
-- Julia_LIBRARY:        /home/vagrant/julia/lib/libjulia.so
-- JULIA_HOME:           /home/vagrant/julia/bin
-- Julia_LLVM_VERSION:   3.9.1
-- Found Julia: /home/vagrant/julia/lib/libjulia.so (found version "0.6.1") 
-- Performing Test HAS_CPP11_FLAG
-- Performing Test HAS_CPP11_FLAG - Success
-- JlCxx version: v0.1.1
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/jlcxx
Scanning dependencies of target jlcxx
[  5%] Building CXX object CMakeFiles/jlcxx.dir/src/jlcxx.cpp.o
[ 10%] Building CXX object CMakeFiles/jlcxx.dir/src/c_interface.cpp.o
[ 15%] Building CXX object CMakeFiles/jlcxx.dir/src/functions.cpp.o
[ 20%] Linking CXX shared library libjlcxx.so
[ 20%] Built target jlcxx
Scanning dependencies of target functions
Scanning dependencies of target extended
Scanning dependencies of target except
Scanning dependencies of target parametric
[ 25%] Building CXX object examples/CMakeFiles/except.dir/except.cpp.o
[ 30%] Building CXX object examples/CMakeFiles/functions.dir/functions.cpp.o
[ 35%] Building CXX object examples/CMakeFiles/extended.dir/extended.cpp.o
[ 40%] Building CXX object examples/CMakeFiles/parametric.dir/parametric.cpp.o
[ 45%] Linking CXX shared library libexcept.so
[ 45%] Built target except
Scanning dependencies of target inheritance
[ 50%] Building CXX object examples/CMakeFiles/inheritance.dir/inheritance.cpp.o
[ 55%] Linking CXX shared library libextended.so
[ 55%] Built target extended
Scanning dependencies of target jlcxx_containers
[ 60%] Building CXX object examples/CMakeFiles/jlcxx_containers.dir/containers.cpp.o
[ 65%] Linking CXX shared library libinheritance.so
[ 70%] Linking CXX shared library libfunctions.so
[ 70%] Built target inheritance
Scanning dependencies of target hello
[ 75%] Building CXX object examples/CMakeFiles/hello.dir/hello.cpp.o
[ 75%] Built target functions
Scanning dependencies of target types
[ 80%] Linking CXX shared library libjlcxx_containers.so
[ 85%] Building CXX object examples/CMakeFiles/types.dir/types.cpp.o
[ 85%] Built target jlcxx_containers
[ 90%] Linking CXX shared library libhello.so
[ 90%] Built target hello
[ 95%] Linking CXX shared library libparametric.so
[ 95%] Built target parametric
[100%] Linking CXX shared library libtypes.so
[100%] Built target types
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx.so.0.1.1
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx.so.0
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx.so.0.1.1" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/array.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/const_array.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/jlcxx.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/jlcxx_config.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/functions.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/smart_pointers.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/tuple.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/type_conversion.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigExports.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigExports-release.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfig.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigVersion.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/FindJulia.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx_containers.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx_containers.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libexcept.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libexcept.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libextended.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libextended.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libfunctions.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libfunctions.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libhello.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libhello.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libinheritance.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libinheritance.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libparametric.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libparametric.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libtypes.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libtypes.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
INFO: Package database updated

>>> 'Pkg.test("CxxWrap")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1355.3125 MB free)
Uptime: 46615.0 sec
Load Avg:  1.4482421875  1.63232421875  1.7431640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2965129 s       6681 s     144366 s     872982 s         41 s
#2  3499 MHz     922839 s         94 s      86426 s    3532579 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CxxWrap                       0.5.0
 - JSON                          0.16.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.37.0
 - SHA                           0.5.2
 - URIParser                     0.2.0
INFO: Testing CxxWrap
Displaying const matrix
3×2 CxxWrap.ConstArray{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
Displaying mutable matrix
3×2 Array{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
exception 1
exception 2
exception 3
methods(CppHalfFunctions.half_d) = # 1 method for generic function "half_d":
half_d(arg1::Union{Float64, Int64, Irrational}) in CppHalfFunctions
c_func = safe_cfunction(testf, Float64, (Float64, Float64)) = CxxWrap.SafeCFunction(Ptr{Void} @0x00007f7fe31f4fb0, Float64, Type[Float64, Float64])
callback result for function 0x7f7fe31f4fb0 is 3
callback result for function 0x7f7fe31f4fb0 is 3
---- Half test timings ----
Julia test:
  0.101511 seconds (84 allocations: 6.529 KiB)
  0.110895 seconds (4 allocations: 160 bytes)
  0.104252 seconds (4 allocations: 160 bytes)
C test:
  0.148545 seconds (4 allocations: 160 bytes)
  0.140541 seconds (4 allocations: 160 bytes)
  0.146402 seconds (4 allocations: 160 bytes)
C++ test:
  0.137441 seconds (4 allocations: 160 bytes)
  0.145135 seconds (4 allocations: 160 bytes)
  0.143299 seconds (4 allocations: 160 bytes)
C++ lambda test:
  0.202775 seconds (4 allocations: 160 bytes)
  0.204038 seconds (4 allocations: 160 bytes)
  0.208649 seconds (4 allocations: 160 bytes)
C++ test, loop in the C++ code:
  0.113080 seconds (23 allocations: 1.609 KiB)
  0.100483 seconds (4 allocations: 160 bytes)
  0.114797 seconds (4 allocations: 160 bytes)
cfunction in C++ loop
  0.490299 seconds (1.27 k allocations: 68.530 KiB)
  0.460185 seconds (4 allocations: 160 bytes)
  0.449872 seconds (4 allocations: 160 bytes)
jl_call inside C++ loop (array is 100 times smaller than other tests):
  0.173585 seconds (1.00 M allocations: 15.312 MiB, 63.76% gc time)
  0.055344 seconds (1.00 M allocations: 15.259 MiB)
  0.150445 seconds (1.00 M allocations: 15.259 MiB, 61.50% gc time)
CppHello.greet() = "hello, world"
Dumping object p1:
TemplateTypeAllocated{P1,P2}
  cpp_object: Ptr{Void} Ptr{Void} @0x00000000047cfd70
Dumping type w...
WorldAllocated
  cpp_object: Ptr{Void} Ptr{Void} @0x000000000460f530
fw = CppTypes.world_factory() = WorldRef(Ptr{Void} @0x000000000483f450)
uwf = CppTypes.unique_world_factory() = CxxWrap.SmartPointerWithDeref{World,0xef6180661ff0d2b6,Ptr{Void} @0x00007f7fadd62640,Ptr{Void} @0x00007f7fadd63d50,Ptr{Void} @0x00007f7fadd63d40}(Ptr{Void} @0x00000000044f72b0)
Destroying World with message world by value hello
CppTypes.greet(w) = "hello"
Destroying World with message constructed
finalized w
throw test 1 passed
throw test 2 passed
completed deepcopy test
a: 2.0, b: 3.0
Test Summary: | Pass  Total
CxxWrap tests |  154    154
Destroying World with message hello
Destroying World with message shared factory hello
Destroying World with message unique factory hello
Destroying World with message world by value hello
Destroying World with message constructed
Destroying World with message default hello
Destroying World with message boxed world pointer
Destroying World with message boxed world
INFO: CxxWrap tests passed

>>> End of log
