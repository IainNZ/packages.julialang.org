>>> 'Pkg.add("CxxWrap")' log
INFO: Cloning cache of CxxWrap from https://github.com/JuliaInterop/CxxWrap.jl.git
INFO: Installing BinDeps v0.8.6
INFO: Installing CxxWrap v0.5.0
INFO: Installing SHA v0.5.6
INFO: Installing URIParser v0.3.0
INFO: Building CxxWrap
INFO: Attempting to create directory /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/jlcxx
INFO: Changing directory to /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/jlcxx
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Julia_EXECUTABLE:     /home/vagrant/julia/bin/julia
-- Julia_VERSION_STRING: 0.6.2
-- Julia_INCLUDE_DIRS:   /home/vagrant/julia/include/julia
-- Julia_LIBRARY_DIR:    /home/vagrant/julia/lib
-- Julia_LIBRARY:        /home/vagrant/julia/lib/libjulia.so
-- JULIA_HOME:           /home/vagrant/julia/bin
-- Julia_LLVM_VERSION:   3.9.1
-- Found Julia: /home/vagrant/julia/lib/libjulia.so (found version "0.6.2") 
-- Performing Test HAS_CPP11_FLAG
-- Performing Test HAS_CPP11_FLAG - Success
-- JlCxx version: v0.1.1
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/jlcxx
Scanning dependencies of target jlcxx
[  5%] Building CXX object CMakeFiles/jlcxx.dir/src/jlcxx.cpp.o
[ 10%] Building CXX object CMakeFiles/jlcxx.dir/src/c_interface.cpp.o
[ 15%] Building CXX object CMakeFiles/jlcxx.dir/src/functions.cpp.o
[ 20%] Linking CXX shared library libjlcxx.so
[ 20%] Built target jlcxx
Scanning dependencies of target parametric
Scanning dependencies of target except
Scanning dependencies of target functions
[ 25%] Building CXX object examples/CMakeFiles/except.dir/except.cpp.o
Scanning dependencies of target extended
[ 30%] Building CXX object examples/CMakeFiles/functions.dir/functions.cpp.o
[ 35%] Building CXX object examples/CMakeFiles/parametric.dir/parametric.cpp.o
[ 40%] Building CXX object examples/CMakeFiles/extended.dir/extended.cpp.o
[ 45%] Linking CXX shared library libexcept.so
[ 45%] Built target except
Scanning dependencies of target inheritance
[ 50%] Building CXX object examples/CMakeFiles/inheritance.dir/inheritance.cpp.o
[ 55%] Linking CXX shared library libextended.so
[ 55%] Built target extended
Scanning dependencies of target jlcxx_containers
[ 60%] Building CXX object examples/CMakeFiles/jlcxx_containers.dir/containers.cpp.o
[ 65%] Linking CXX shared library libfunctions.so
[ 65%] Built target functions
[ 70%] Linking CXX shared library libinheritance.so
Scanning dependencies of target hello
[ 75%] Building CXX object examples/CMakeFiles/hello.dir/hello.cpp.o
[ 75%] Built target inheritance
Scanning dependencies of target types
[ 80%] Building CXX object examples/CMakeFiles/types.dir/types.cpp.o
[ 85%] Linking CXX shared library libjlcxx_containers.so
[ 85%] Built target jlcxx_containers
[ 90%] Linking CXX shared library libhello.so
[ 90%] Built target hello
[ 95%] Linking CXX shared library libparametric.so
[ 95%] Built target parametric
[100%] Linking CXX shared library libtypes.so
[100%] Built target types
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx.so.0.1.1
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx.so.0
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx.so.0.1.1" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/array.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/const_array.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/jlcxx.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/jlcxx_config.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/functions.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/smart_pointers.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/tuple.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/jlcxx/type_conversion.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigExports.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigExports-release.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfig.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigVersion.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/share/cmake/JlCxx/FindJulia.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx_containers.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libjlcxx_containers.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libexcept.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libexcept.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libextended.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libextended.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libfunctions.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libfunctions.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libhello.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libhello.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libinheritance.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libinheritance.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libparametric.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libparametric.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libtypes.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libtypes.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
INFO: Package database updated

>>> 'Pkg.test("CxxWrap")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1756.04296875 MB free)
Uptime: 52254.0 sec
Load Avg:  1.66162109375  1.75830078125  1.79150390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3506 MHz    3135251 s       4218 s     156723 s    1233916 s         44 s
#2  3506 MHz     990820 s       2584 s      85859 s    4040169 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CxxWrap                       0.5.0
 - JSON                          0.16.4
5 additional packages:
 - BinDeps                       0.8.6
 - Compat                        0.53.0
 - Nullables                     0.0.3
 - SHA                           0.5.6
 - URIParser                     0.3.0
INFO: Testing CxxWrap
Displaying const matrix
3×2 CxxWrap.ConstArray{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
Displaying mutable matrix
3×2 Array{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
exception 1
exception 2
exception 3
methods(CppHalfFunctions.half_d) = # 1 method for generic function "half_d":
half_d(arg1::Union{Float64, Int64, Irrational}) in CppHalfFunctions
c_func = safe_cfunction(testf, Float64, (Float64, Float64)) = CxxWrap.SafeCFunction(Ptr{Void} @0x00007ff7062a08b0, Float64, Type[Float64, Float64])
callback result for function 0x7ff7062a08b0 is 3
callback result for function 0x7ff7062a08b0 is 3
---- Half test timings ----
Julia test:
  0.121260 seconds (84 allocations: 6.529 KiB)
  0.121003 seconds (4 allocations: 160 bytes)
  0.163708 seconds (4 allocations: 160 bytes)
C test:
  0.148128 seconds (4 allocations: 160 bytes)
  0.147706 seconds (4 allocations: 160 bytes)
  0.144218 seconds (4 allocations: 160 bytes)
C++ test:
  0.140710 seconds (4 allocations: 160 bytes)
  0.161955 seconds (4 allocations: 160 bytes)
  0.149888 seconds (4 allocations: 160 bytes)
C++ lambda test:
  0.216407 seconds (4 allocations: 160 bytes)
  0.210763 seconds (4 allocations: 160 bytes)
  0.245286 seconds (4 allocations: 160 bytes)
C++ test, loop in the C++ code:
  0.113918 seconds (23 allocations: 1.609 KiB)
  0.098089 seconds (4 allocations: 160 bytes)
  0.124579 seconds (4 allocations: 160 bytes)
cfunction in C++ loop
  0.469218 seconds (1.22 k allocations: 66.327 KiB)
  0.469747 seconds (4 allocations: 160 bytes)
  0.465039 seconds (4 allocations: 160 bytes)
jl_call inside C++ loop (array is 100 times smaller than other tests):
  0.222290 seconds (1.00 M allocations: 15.310 MiB, 68.17% gc time)
  0.077011 seconds (1.00 M allocations: 15.259 MiB)
  0.165467 seconds (1.00 M allocations: 15.259 MiB, 52.58% gc time)
CppHello.greet() = "hello, world"
Dumping object p1:
TemplateTypeAllocated{P1,P2}
  cpp_object: Ptr{Void} Ptr{Void} @0x00000000049d37d0
Dumping type w...
WorldAllocated
  cpp_object: Ptr{Void} Ptr{Void} @0x00000000048ae800
fw = CppTypes.world_factory() = WorldRef(Ptr{Void} @0x000000000489c0b0)
uwf = CppTypes.unique_world_factory() = CxxWrap.SmartPointerWithDeref{World,0xef6180661ff0d2b6,Ptr{Void} @0x00007ff6cce02640,Ptr{Void} @0x00007ff6cce03d50,Ptr{Void} @0x00007ff6cce03d40}(Ptr{Void} @0x00000000046d2310)
Destroying World with message world by value hello
CppTypes.greet(w) = "hello"
Destroying World with message constructed
finalized w
throw test 1 passed
throw test 2 passed
completed deepcopy test
a: 2.0, b: 3.0
Test Summary: | Pass  Total
CxxWrap tests |  154    154
Destroying World with message hello
Destroying World with message shared factory hello
Destroying World with message unique factory hello
Destroying World with message world by value hello
Destroying World with message constructed
Destroying World with message default hello
Destroying World with message boxed world pointer
Destroying World with message boxed world
INFO: CxxWrap tests passed

>>> End of log
