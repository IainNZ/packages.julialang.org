>>> 'Pkg.add("InformationMeasures")' log
INFO: Cloning cache of InformationMeasures from https://github.com/Tchanders/InformationMeasures.jl.git
INFO: Installing DataArrays v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Discretizers v0.3.1
INFO: Installing InformationMeasures v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.14.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of InformationMeasures
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("InformationMeasures")' log
Julia Version 0.6.0-pre.beta.0
Commit bd84fa1 (2017-03-31 12:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2341.92578125 MB free)
Uptime: 45958.0 sec
Load Avg:  1.01806640625  1.0546875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2733789 s         72 s     221783 s    1102449 s        160 s
#2  3499 MHz    1220644 s       6297 s     141895 s    3060101 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - InformationMeasures           0.0.1
 - JSON                          0.10.0
7 additional packages:
 - Compat                        0.24.0
 - DataArrays                    0.4.0
 - DataStructures                0.5.3
 - Discretizers                  0.3.1
 - Reexport                      0.0.3
 - SpecialFunctions              0.1.1
 - StatsBase                     0.14.0
INFO: Testing InformationMeasures

WARNING: deprecated syntax "abstract AbstractDiscretizer{N,D}" at /home/vagrant/.julia/v0.6/Discretizers/src/common.jl:6.
Use "abstract type AbstractDiscretizer{N,D} end" instead.

WARNING: deprecated syntax "abstract DiscretizationAlgorithm" at /home/vagrant/.julia/v0.6/Discretizers/src/common.jl:16.
Use "abstract type DiscretizationAlgorithm end" instead.

WARNING: deprecated syntax "abstract AbstractSampleMethod" at /home/vagrant/.julia/v0.6/Discretizers/src/sample_methods.jl:2.
Use "abstract type AbstractSampleMethod end" instead.

WARNING: deprecated syntax "abstract DiscretizeMODL<:DiscretizationAlgorithm" at /home/vagrant/.julia/v0.6/Discretizers/src/disc_MODL.jl:4.
Use "abstract type DiscretizeMODL<:DiscretizationAlgorithm end" instead.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 6
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 6
Discretize values with 1 array passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:29
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 10
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:30
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 10
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:31
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 10
Discretize values with 2 arrays passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:42
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 14
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:43
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 14
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:44
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 14
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:45
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 14
Discretize values with 3 arrays passed.
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Array{Int64,N} where N}, ::Int64) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:59
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 18
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:60
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 18
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:63
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 18
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:64
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 18
Discretize values with >3 arrays passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 22
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 22
Discretize values with uniform width passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 26
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] binedges(::Discretizers.DiscretizeUniformCount, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/disc_uniformcount.jl:15
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:113
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 26
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:113
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 26
Discretize values with uniform count passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 34
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 34
Discretize values with number of bins passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 38
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 38
Discretize values with get number of bins passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
Entropy with 1 array passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, arr) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:29
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:30
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:31
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
Entropy with 2 arrays passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, arr, arr) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:42
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:43
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:44
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:45
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
Entropy with 3 arrays passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, mode="uniform_width") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 19
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 19
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 19
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 19
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 19
Entropy with uniform width passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, mode="uniform_count") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 23
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 23
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] binedges(::Discretizers.DiscretizeUniformCount, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/disc_uniformcount.jl:15
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:113
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 23
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:113
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 23
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 23
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 23
Entropy with uniform count passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, number_of_bins=5) â‰ˆ log2(5) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 31
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 31
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 31
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 31
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 31
Entropy with number of bins passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, get_number_of_bins=function (values,) # /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, line 35:
            return 2
        end) â‰ˆ log2(2) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 35
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 35
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 35
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 35
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 35
Entropy with get number of bins passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="maximum_likelihood") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 39
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 39
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 39
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 39
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 39
Entropy with maximum likelihood passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="shrinkage") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 43
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 43
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 43
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 43
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 43
Entropy with shrinkage passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="shrinkage", lambda=0) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 47
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Int64, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 47
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Int64, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 47
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Int64, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 47
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Int64, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 47
Entropy with shrinkage and lambda passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="dirichlet") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 51
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 51
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 51
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 51
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 51
Entropy with Dirichlet passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="dirichlet", prior=1) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 55
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 55
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 55
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 55
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 55
Entropy with Dirichlet and prior passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="miller_madow") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 59
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 59
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 59
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 59
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 59
Entropy with Miller-Madow passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, base=e) â‰ˆ log(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 63
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Irrational{:e}, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 63
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_entropy#9(::String, ::Irrational{:e}, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [9] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 63
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Irrational{:e}, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Irrational{:e}, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 63
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Irrational{:e}, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 63
Entropy with change of base passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(discretize_values(arr), discretized=true) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 67
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 67
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:19
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:26
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 67
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Int64,2}, ::Vararg{Array{Int64,2},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Int64,2}, ::Vararg{Array{Int64,2},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 67
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Int64,2}, ::Vararg{Array{Int64,2},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Int64,2}, ::Vararg{Array{Int64,2},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 67
Entropy with discretized input passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_conditional_entropy(arr1, arr1) â‰ˆ 0 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:29
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_entropy#10 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114 [inlined]
 [7] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:30
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_entropy#10 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114 [inlined]
 [7] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:31
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_conditional_entropy#10 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114 [inlined]
 [9] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_entropy#11(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:134
 [5] (::#kw##get_conditional_entropy)(::Array{Any,1}, ::#get_conditional_entropy, ::Array{Int64,2}) at ./<missing>:0
 [6] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_entropy#11(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:134
 [5] (::#kw##get_conditional_entropy)(::Array{Any,1}, ::#get_conditional_entropy, ::Array{Int64,2}) at ./<missing>:0
 [6] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_entropy#11(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:135
 [5] (::#kw##get_conditional_entropy)(::Array{Any,1}, ::#get_conditional_entropy, ::Array{Int64,2}) at ./<missing>:0
 [6] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_entropy#11(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:135
 [5] (::#kw##get_conditional_entropy)(::Array{Any,1}, ::#get_conditional_entropy, ::Array{Int64,2}) at ./<missing>:0
 [6] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
Conditional entropy with 1 array passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_conditional_entropy(arr1, arr2) â‰ˆ get_entropy(arr1, arr2) - get_entropy(arr2) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:29
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_entropy#10 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114 [inlined]
 [7] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:30
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_entropy#10 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114 [inlined]
 [7] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:31
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_conditional_entropy#10 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114 [inlined]
 [9] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_entropy#11(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:134
 [5] (::#kw##get_conditional_entropy)(::Array{Any,1}, ::#get_conditional_entropy, ::Array{Int64,2}) at ./<missing>:0
 [6] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_entropy#11(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:134
 [5] (::#kw##get_conditional_entropy)(::Array{Any,1}, ::#get_conditional_entropy, ::Array{Int64,2}) at ./<missing>:0
 [6] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_entropy#11(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:135
 [5] (::#kw##get_conditional_entropy)(::Array{Any,1}, ::#get_conditional_entropy, ::Array{Int64,2}) at ./<missing>:0
 [6] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_entropy#11(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:135
 [5] (::#kw##get_conditional_entropy)(::Array{Any,1}, ::#get_conditional_entropy, ::Array{Int64,2}) at ./<missing>:0
 [6] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:114
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
Conditional entropy formula passed.
WARNING: @test_approx_eq is deprecated, use `@test get_mutual_information(arr1, arr2) â‰ˆ (get_entropy(arr1) + get_entropy(arr2)) - get_entropy(arr1, arr2)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1044
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:29
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#12 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:30
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#12 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:31
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_mutual_information#12 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165 [inlined]
 [9] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:186
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:186
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:187
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:187
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:188
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:188
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
Mutual information formula passed.
WARNING: @test_approx_eq is deprecated, use `@test get_conditional_mutual_information(arr1, arr2, arr3) â‰ˆ ((get_entropy(arr1, arr3) + get_entropy(arr2, arr3)) - get_entropy(arr1, arr2, arr3)) - get_entropy(arr3)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1044
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:42
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_mutual_information#14 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220 [inlined]
 [7] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:43
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_mutual_information#14 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220 [inlined]
 [7] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:44
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_mutual_information#14 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220 [inlined]
 [7] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:45
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_conditional_mutual_information#14 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220 [inlined]
 [9] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:242
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:242
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:243
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:243
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:244
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:244
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:245
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:245
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:29
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:30
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
Conditional mutual information formula passed.
WARNING: @test_approx_eq is deprecated, use `@test get_interaction_information(arr1, arr2, arr3) â‰ˆ get_conditional_mutual_information(arr1, arr2, arr3) - get_mutual_information(arr1, arr2)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1044
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:42
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#16 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:43
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#16 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:44
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#16 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:45
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_interaction_information#16 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278 [inlined]
 [9] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:242
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:298
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:242
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:298
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:243
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:298
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:243
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:298
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:244
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:298
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:244
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:298
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:245
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:298
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:245
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:298
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:186
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:299
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:186
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:299
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:187
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:299
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:187
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:299
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:188
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:299
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:188
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Float64,3}) at ./<missing>:0
 [6] #get_interaction_information#17(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:299
 [7] (::#kw##get_interaction_information)(::Array{Any,1}, ::#get_interaction_information, ::Array{Int64,3}) at ./<missing>:0
 [8] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:278
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:242
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:242
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:243
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:243
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:244
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:244
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:245
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_conditional_mutual_information#15(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:245
 [5] (::#kw##get_conditional_mutual_information)(::Array{Any,1}, ::#get_conditional_mutual_information, ::Array{Int64,3}) at ./<missing>:0
 [6] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:220
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:29
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#12 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:30
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#12 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:186
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:186
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:187
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:187
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:188
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_mutual_information#13(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:188
 [5] (::#kw##get_mutual_information)(::Array{Any,1}, ::#get_mutual_information, ::Array{Int64,2}) at ./<missing>:0
 [6] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:165
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
Interaction information formula passed.
WARNING: @test_approx_eq is deprecated, use `@test get_total_correlation(arr1, arr2, arr3) â‰ˆ (get_entropy(arr1) + get_entropy(arr2) + get_entropy(arr3)) - get_entropy(arr1, arr2, arr3)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1044
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:42
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_total_correlation#18 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324 [inlined]
 [7] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:43
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_total_correlation#18 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324 [inlined]
 [7] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:44
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_total_correlation#18 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324 [inlined]
 [7] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:45
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_total_correlation#18 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324 [inlined]
 [9] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_total_correlation#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:347
 [5] (::#kw##get_total_correlation)(::Array{Any,1}, ::#get_total_correlation, ::Array{Int64,3}) at ./<missing>:0
 [6] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_total_correlation#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:347
 [5] (::#kw##get_total_correlation)(::Array{Any,1}, ::#get_total_correlation, ::Array{Int64,3}) at ./<missing>:0
 [6] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_total_correlation#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:348
 [5] (::#kw##get_total_correlation)(::Array{Any,1}, ::#get_total_correlation, ::Array{Int64,3}) at ./<missing>:0
 [6] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_total_correlation#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:348
 [5] (::#kw##get_total_correlation)(::Array{Any,1}, ::#get_total_correlation, ::Array{Int64,3}) at ./<missing>:0
 [6] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_total_correlation#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:349
 [5] (::#kw##get_total_correlation)(::Array{Any,1}, ::#get_total_correlation, ::Array{Int64,3}) at ./<missing>:0
 [6] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_total_correlation#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:349
 [5] (::#kw##get_total_correlation)(::Array{Any,1}, ::#get_total_correlation, ::Array{Int64,3}) at ./<missing>:0
 [6] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_total_correlation#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:350
 [5] (::#kw##get_total_correlation)(::Array{Any,1}, ::#get_total_correlation, ::Array{Int64,3}) at ./<missing>:0
 [6] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_total_correlation#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Function, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:350
 [5] (::#kw##get_total_correlation)(::Array{Any,1}, ::#get_total_correlation, ::Array{Int64,3}) at ./<missing>:0
 [6] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:324
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:18
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_entropy#9(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 [5] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
Total correlation formula passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:42
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#20 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380 [inlined]
 [7] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:43
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#20 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380 [inlined]
 [7] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:44
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#20 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380 [inlined]
 [7] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:45
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_partial_information_decomposition#20 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380 [inlined]
 [9] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:441
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:441
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:442
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:442
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:443
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:443
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:444
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:444
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:445
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:445
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:446
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:446
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:458
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:458
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [6] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] (::#get_specific_information#23{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Float64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:405
 [4] (::#get_redundancy#22{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Int64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:415
 [5] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:506
 [6] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [7] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isfinite(::Array{Float64,3}) at ./deprecated.jl:51
 [3] (::#get_specific_information#23{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Float64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:406
 [4] (::#get_redundancy#22{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Int64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:415
 [5] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:506
 [6] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 [7] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: @test_approx_eq_eps is deprecated, use `@test pid["redundancy"] â‰ˆ 0.3 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 6
WARNING: @test_approx_eq_eps is deprecated, use `@test pid["unique_1"] â‰ˆ 0 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 7
WARNING: @test_approx_eq_eps is deprecated, use `@test pid["unique_2"] â‰ˆ 0 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 8
WARNING: @test_approx_eq_eps is deprecated, use `@test pid["synergy"] â‰ˆ 0.5 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 9
Partial information decomposition with AND gate passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:42
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#20 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380 [inlined]
 [7] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:43
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#20 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380 [inlined]
 [7] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:51
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:44
 [4] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [5] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#20 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380 [inlined]
 [7] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:51
 [3] encode(::Discretizers.LinearDiscretizer{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Discretizers/src/linear_discretizer.jl:116
 [4] get_bin_ids!(::Array{Float64,1}, ::String, ::Int64, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:107
 [5] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Discretization.jl:45
 [6] #discretize_values#7(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:30
 [7] (::#kw##discretize_values)(::Array{Any,1}, ::#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] #get_partial_information_decomposition#20 at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380 [inlined]
 [9] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:441
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:441
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:442
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:442
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:443
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:443
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:444
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:444
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:445
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:445
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:446
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:446
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:458
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,3}) at ./deprecated.jl:51
 [3] apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 [4] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:458
 [5] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: log{T1 <: Number}(x::Number, y::AbstractArray{T1}) is deprecated, use log.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:51
 [3] (::#get_specific_information#23{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Float64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:405
 [4] (::#get_redundancy#22{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Int64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:415
 [5] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:467
 [6] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isfinite(::Array{Float64,3}) at ./deprecated.jl:51
 [3] (::#get_specific_information#23{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Float64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:406
 [4] (::#get_redundancy#22{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Int64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:415
 [5] #get_partial_information_decomposition#21(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:467
 [6] (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0 (repeats 2 times)
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: @test_approx_eq_eps is deprecated, use `@test (pid["z"])["redundancy"] â‰ˆ 0.3 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 14
WARNING: @test_approx_eq_eps is deprecated, use `@test (pid["z"])["unique_1"] â‰ˆ 0 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 15
WARNING: @test_approx_eq_eps is deprecated, use `@test (pid["z"])["unique_2"] â‰ˆ 0 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 16
WARNING: @test_approx_eq_eps is deprecated, use `@test (pid["z"])["synergy"] â‰ˆ 0.5 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 17
Partial information decomposition with AND gate (all orientations) passed.
INFO: InformationMeasures tests passed

>>> End of log
