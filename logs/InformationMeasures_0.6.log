>>> 'Pkg.add("InformationMeasures")' log
INFO: Cloning cache of InformationMeasures from https://github.com/Tchanders/InformationMeasures.jl.git
INFO: Installing DataArrays v0.6.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Discretizers v1.1.0
INFO: Installing InformationMeasures v0.1.0
INFO: Installing Reexport v0.0.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.17.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of InformationMeasures
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("InformationMeasures")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2360.87109375 MB free)
Uptime: 73517.0 sec
Load Avg:  1.0029296875  0.9853515625  0.97021484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4710850 s         89 s     219356 s    1305071 s         42 s
#2  3500 MHz    1233896 s       6133 s     120784 s    5866494 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - InformationMeasures           0.1.0
 - JSON                          0.12.0
7 additional packages:
 - Compat                        0.26.0
 - DataArrays                    0.6.1
 - DataStructures                0.5.3
 - Discretizers                  1.1.0
 - Reexport                      0.0.3
 - SpecialFunctions              0.1.1
 - StatsBase                     0.17.0
INFO: Testing InformationMeasures
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 6
Discretize values with 1 array passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:29
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 10
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:30
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 10
Discretize values with 2 arrays passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 14
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 14
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 14
Discretize values with 3 arrays passed.
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Int64,N} where N}, ::Int64) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:59
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 18
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Int64) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:60
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 18
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:63
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 18
Discretize values with >3 arrays passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 22
Discretize values with uniform width passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 26
Discretize values with uniform count passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 34
Discretize values with number of bins passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testDiscretization.jl, in expression starting on line 38
Discretize values with get number of bins passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
Entropy with 1 array passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, arr) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:29
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:30
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 11
Entropy with 2 arrays passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, arr, arr) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
Entropy with 3 arrays passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, mode="uniform_width") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 19
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 19
Entropy with uniform width passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, mode="uniform_count") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 23
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 23
Entropy with uniform count passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, number_of_bins=5) â‰ˆ log2(5) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 31
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 31
Entropy with number of bins passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, get_number_of_bins=function (values,) # /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, line 35:
            return 2
        end) â‰ˆ log2(2) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 35
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 35
Entropy with get number of bins passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="maximum_likelihood") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 39
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 39
Entropy with maximum likelihood passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="shrinkage") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 43
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 43
Entropy with shrinkage passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="shrinkage", lambda=0) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 47
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Int64, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 47
Entropy with shrinkage and lambda passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="dirichlet") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 51
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 51
Entropy with Dirichlet passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="dirichlet", prior=1) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 55
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 55
Entropy with Dirichlet and prior passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, estimator="miller_madow") â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 59
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 59
Entropy with Miller-Madow passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(arr, base=e) â‰ˆ log(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 63
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Irrational{:e}, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] (::InformationMeasures.#kw##get_entropy)(::Array{Any,1}, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 63
Entropy with change of base passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_entropy(discretize_values(arr), discretized=true) â‰ˆ log2(sqrt_1000) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 67
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] discretize_values(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:29
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 67
Entropy with discretized input passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_conditional_entropy(arr1, arr1) â‰ˆ 0 atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:29
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_entropy#16 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:117 [inlined]
 [7] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:117
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:30
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_entropy#16 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:117 [inlined]
 [7] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:117
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 4
Conditional entropy with 1 array passed.
WARNING: @test_approx_eq_eps is deprecated, use `@test get_conditional_entropy(arr1, arr2) â‰ˆ get_entropy(arr1, arr2) - get_entropy(arr2) atol=0.05` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:29
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_entropy#16 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:117 [inlined]
 [7] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:117
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:30
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_entropy#16 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:117 [inlined]
 [7] get_conditional_entropy(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:117
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalEntropy.jl, in expression starting on line 8
Conditional entropy formula passed.
WARNING: @test_approx_eq is deprecated, use `@test get_mutual_information(arr1, arr2) â‰ˆ (get_entropy(arr1) + get_entropy(arr2)) - get_entropy(arr1, arr2)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1052
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:29
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#18 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:30
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#18 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testMutualInformation.jl, in expression starting on line 8
Mutual information formula passed.
WARNING: @test_approx_eq is deprecated, use `@test get_conditional_mutual_information(arr1, arr2, arr3) â‰ˆ ((get_entropy(arr1, arr3) + get_entropy(arr2, arr3)) - get_entropy(arr1, arr2, arr3)) - get_entropy(arr3)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1052
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_mutual_information#20 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:223 [inlined]
 [7] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:223
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_mutual_information#20 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:223 [inlined]
 [7] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:223
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_conditional_mutual_information#20 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:223 [inlined]
 [7] get_conditional_mutual_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:223
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:29
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:30
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testConditionalMutualInformation.jl, in expression starting on line 4
Conditional mutual information formula passed.
WARNING: @test_approx_eq is deprecated, use `@test get_interaction_information(arr1, arr2, arr3) â‰ˆ get_conditional_mutual_information(arr1, arr2, arr3) - get_mutual_information(arr1, arr2)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1052
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#22 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#22 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#22 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:29
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#18 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:30
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#18 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testInteractionInformation.jl, in expression starting on line 4
Interaction information formula passed.
WARNING: @test_approx_eq is deprecated, use `@test get_total_correlation(arr1, arr2, arr3) â‰ˆ (get_entropy(arr1) + get_entropy(arr2) + get_entropy(arr3)) - get_entropy(arr1, arr2, arr3)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1052
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_total_correlation#24 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:327 [inlined]
 [7] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:327
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_total_correlation#24 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:327 [inlined]
 [7] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:327
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_total_correlation#24 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:327 [inlined]
 [7] get_total_correlation(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:327
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:18
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_entropy#15(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::InformationMeasures.#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [7] get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:83
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testTotalCorrelation.jl, in expression starting on line 4
Total correlation formula passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#26 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383 [inlined]
 [7] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#26 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383 [inlined]
 [7] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#26 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383 [inlined]
 [7] get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: @test_approx_eq_eps is deprecated, use `@test pid["redundancy"] â‰ˆ 0.3 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 6
WARNING: @test_approx_eq_eps is deprecated, use `@test pid["unique_1"] â‰ˆ 0 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 7
WARNING: @test_approx_eq_eps is deprecated, use `@test pid["unique_2"] â‰ˆ 0 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 8
WARNING: @test_approx_eq_eps is deprecated, use `@test pid["synergy"] â‰ˆ 0.5 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 9
Partial information decomposition with AND gate passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#26 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383 [inlined]
 [7] (::InformationMeasures.#kw##get_partial_information_decomposition)(::Array{Any,1}, ::InformationMeasures.#get_partial_information_decomposition, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 12
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#26 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383 [inlined]
 [7] (::InformationMeasures.#kw##get_partial_information_decomposition)(::Array{Any,1}, ::InformationMeasures.#get_partial_information_decomposition, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 12
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_partial_information_decomposition#26 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:383 [inlined]
 [7] (::InformationMeasures.#kw##get_partial_information_decomposition)(::Array{Any,1}, ::InformationMeasures.#get_partial_information_decomposition, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 12
WARNING: @test_approx_eq_eps is deprecated, use `@test (pid["z"])["redundancy"] â‰ˆ 0.3 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 13
WARNING: @test_approx_eq_eps is deprecated, use `@test (pid["z"])["unique_1"] â‰ˆ 0 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 14
WARNING: @test_approx_eq_eps is deprecated, use `@test (pid["z"])["unique_2"] â‰ˆ 0 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 15
WARNING: @test_approx_eq_eps is deprecated, use `@test (pid["z"])["synergy"] â‰ˆ 0.5 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 16
Partial information decomposition with AND gate (all orientations) passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_redundancy#28 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:525 [inlined]
 [7] get_redundancy(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:525
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 20
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_redundancy#28 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:525 [inlined]
 [7] get_redundancy(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:525
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 20
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_redundancy#28 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:525 [inlined]
 [7] get_redundancy(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:525
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 20
WARNING: @test_approx_eq_eps is deprecated, use `@test redundancy â‰ˆ 0.3 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 21
Redundancy with AND gate passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:29
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#18 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 25
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:30
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_mutual_information#18 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168 [inlined]
 [7] get_mutual_information(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:168
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 25
WARNING: @test_approx_eq_eps is deprecated, use `@test apply_unique_information_formula(mutual_information, redundancy) â‰ˆ 0 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 26
Unique information with AND gate passed.
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:42
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#22 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 30
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:43
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#22 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 30
WARNING: Array{T, N}(::Type{T}, d::NTuple{N, Int}) is deprecated, use Array{T}(d) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Tuple{Int64}) at ./deprecated.jl:57
 [3] get_frequencies(::String, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Discretization.jl:44
 [4] #discretize_values#13(::String, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:33
 [5] (::InformationMeasures.#kw##discretize_values)(::Array{Any,1}, ::InformationMeasures.#discretize_values, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at ./<missing>:0
 [6] #get_interaction_information#22 at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281 [inlined]
 [7] get_interaction_information(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/src/../src/Measures.jl:281
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 30
WARNING: @test_approx_eq_eps is deprecated, use `@test apply_synergy_formula(interaction_information, redundancy) â‰ˆ 0.5 atol=0.1` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 31
Synergy with AND gate passed.
INFO: InformationMeasures tests passed

>>> End of log
