>>> 'Pkg.add("Gym")' log
INFO: Cloning cache of Gym from https://github.com/ozanarkancan/Gym.jl.git
INFO: Installing Conda v1.0.0
INFO: Installing Gym v1.0.0
INFO: Installing MacroTools v0.4.2
INFO: Installing PyCall v1.17.1
INFO: Installing VersionParsing v1.1.1
INFO: Building Conda
INFO: Building PyCall
Info: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Info: Running `conda install -y numpy` in root environment
Solving environment: ...working... done

# All requested packages already installed.

Info: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 3.7.0) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython3.7m
Info: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
Info: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Building Gym
WARNING: special characters "#{}()[]<>|&*?~;" should now be quoted in commands
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] warn_shell_special(::String) at ./shell.jl:8
 [3] #shell_parse#238(::String, ::Function, ::String, ::Bool) at ./shell.jl:103
 [4] (::Base.#kw##shell_parse)(::Array{Any,1}, ::Base.#shell_parse, ::String, ::Bool) at ./<missing>:0 (repeats 2 times)
 [5] @cmd(::ANY) at ./process.jl:796
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] evalfile(::String, ::Array{String,1}) at ./loading.jl:610
 [9] cd(::##2#4{String}, ::String) at ./file.jl:70
 [10] (::##1#3)(::IOStream) at ./none:11
 [11] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [12] eval(::Module, ::Any) at ./boot.jl:235
 [13] process_options(::Base.JLOptions) at ./client.jl:286
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Gym/deps/build.jl, in expression starting on line 1
INFO: Downloading OpenAi gym
Cloning into 'gym'...
INFO: Installing OpenAi gym
=================================[ ERROR: Gym ]=================================

LoadError: could not spawn `pip install -e .`: no such file or directory (ENOENT)
while loading /home/vagrant/.julia/v0.6/Gym/deps/build.jl, in expression starting on line 46

================================================================================

================================[ BUILD ERRORS ]================================

WARNING: Gym had build errors.

 - packages with build errors remain installed in /home/vagrant/.julia/v0.6
 - build the package(s) and all dependencies with `Pkg.build("Gym")`
 - build a single package by running its `deps/build.jl` script

================================================================================
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Gym
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Gym")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (742.40234375 MB free)
Uptime: 16290.0 sec
Load Avg:  0.98486328125  0.939453125  0.71630859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     834090 s         23 s      76533 s     507701 s          3 s
#2  3502 MHz     147424 s        153 s      29268 s    1428570 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Gym                           1.0.0
 - JSON                          0.17.2
6 additional packages:
 - Compat                        1.0.0
 - Conda                         1.0.0
 - MacroTools                    0.4.2
 - Nullables                     0.0.6
 - PyCall                        1.17.1
 - VersionParsing                1.1.1
INFO: Testing Gym
ERROR: LoadError: InitError: PyError (PyImport_ImportModule) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'gym'")

Stacktrace:
 [1] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:473
 [2] __init__() at /home/vagrant/.julia/v0.6/Gym/src/Gym.jl:10
 [3] _include_from_serialized(::String) at ./loading.jl:157
 [4] _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:200
 [5] _require(::Symbol) at ./loading.jl:498
 [6] require(::Symbol) at ./loading.jl:405
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
during initialization of module Gym
while loading /home/vagrant/.julia/v0.6/Gym/test/runtests.jl, in expression starting on line 1
=================================[ ERROR: Gym ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cgeneric -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Gym/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Gym had test errors

>>> End of log
