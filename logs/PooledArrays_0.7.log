>>> 'Pkg.add("PooledArrays")' log
[ Info: Cloning cache of PooledArrays from https://github.com/JuliaComputing/PooledArrays.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing PooledArrays v0.1.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of PooledArrays
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("PooledArrays")' log
Julia Version 0.7.0-DEV.3309
Commit b96097b66f (2018-01-07 00:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     784618 s         65 s      46539 s     253306 s          5 s
       #2  3499 MHz     146302 s         88 s      20021 s    1088190 s          0 s
       
  Memory: 2.93927001953125 GB (909.44140625 MB free)
  Uptime: 12726.0 sec
  Load Avg:  0.97216796875  1.0341796875  1.04541015625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - PooledArrays                  0.1.1
2 additional packages:
 - Compat                        0.43.0
 - Nullables                     0.0.2
[ Info: Testing PooledArrays @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/PooledArrays/test/runtests.jl:1
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:17.
│ Use `mutable struct` instead.
└ @ nothing PooledArrays.jl:17
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:21.
│ Use `struct` instead.
└ @ nothing PooledArrays.jl:21
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:17.
│ Use `mutable struct` instead.
└ @ nothing PooledArrays.jl:17
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:21.
│ Use `struct` instead.
└ @ nothing PooledArrays.jl:21
┌ Warning: Deprecated syntax `parametric method syntax (::Type{PooledArray}){T, R, N, RA <: AbstractArray{R, N}}(rs::RefArray{RA}, p::Vector{T})` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:27.
│ Use `(::Type{PooledArray})(rs::RefArray{RA}, p::Vector{T}) where {T, R, N, RA <: AbstractArray{R, N}}` instead.
└ @ nothing PooledArrays.jl:27
┌ Warning: Deprecated syntax `parametric method syntax PooledArray{T, R}(refs::RefArray{R}, pool::Vector{T})` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:52.
│ Use `PooledArray(refs::RefArray{R}, pool::Vector{T}) where {T, R}` instead.
└ @ nothing PooledArrays.jl:52
┌ Warning: Deprecated syntax `parametric method syntax PooledArray{T, R <: Integer}(d::AbstractArray, pool::Vector{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE)` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:61.
│ Use `PooledArray(d::AbstractArray, pool::Vector{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE) where {T, R <: Integer}` instead.
└ @ nothing PooledArrays.jl:61
┌ Warning: Deprecated syntax `parametric method syntax (::Type{PooledArray{T}}){T, R <: Integer}(d::AbstractArray, r::Type{R})` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:90.
│ Use `(::Type{PooledArray{T}})(d::AbstractArray, r::Type{R}) where {T, R <: Integer}` instead.
└ @ nothing PooledArrays.jl:90
┌ Warning: Deprecated syntax `parametric method syntax (::Type{PooledArray{T}}){T}(d::AbstractArray)` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:98.
│ Use `(::Type{PooledArray{T}})(d::AbstractArray) where T` instead.
└ @ nothing PooledArrays.jl:98
┌ Warning: Deprecated syntax `parametric method syntax PooledArray{T, R <: Integer}(d::AbstractArray{T}, r::Type{R})` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:108.
│ Use `PooledArray(d::AbstractArray{T}, r::Type{R}) where {T, R <: Integer}` instead.
└ @ nothing PooledArrays.jl:108
┌ Warning: Deprecated syntax `parametric method syntax PooledArray{T}(d::AbstractArray{T})` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:109.
│ Use `PooledArray(d::AbstractArray{T}) where T` instead.
└ @ nothing PooledArrays.jl:109
┌ Warning: Deprecated syntax `parametric method syntax PooledArray{R <: Integer}(t::Type, r::Type{R})` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:113.
│ Use `PooledArray(t::Type, r::Type{R}) where R <: Integer` instead.
└ @ nothing PooledArrays.jl:113
┌ Warning: Deprecated syntax `parametric method syntax Base.resize!{T, R}(pa::PooledArray{T, R, 1}, n::Integer)` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:129.
│ Use `Base.resize!(pa::PooledArray{T, R, 1}, n::Integer) where {T, R}` instead.
└ @ nothing PooledArrays.jl:129
┌ Warning: Deprecated syntax `parametric method syntax Base.permute!!{T <: Integer}(x::PooledArray, p::AbstractVector{T})` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:138.
│ Use `Base.permute!!(x::PooledArray, p::AbstractVector{T}) where T <: Integer` instead.
└ @ nothing PooledArrays.jl:138
┌ Warning: Deprecated syntax `parametric method syntax Base.ipermute!!{T <: Integer}(x::PooledArray, p::AbstractVector{T})` around /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:143.
│ Use `Base.ipermute!!(x::PooledArray, p::AbstractVector{T}) where T <: Integer` instead.
└ @ nothing PooledArrays.jl:143
ERROR: LoadError: UndefVarError: ipermute!! not defined
Stacktrace:
 [1] getproperty(::Module, ::Symbol) at ./sysimg.jl:14
 [2] top-level scope
 [3] include at ./boot.jl:295 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:521
 [5] include(::Module, ::String) at ./sysimg.jl:26
 [6] top-level scope
 [7] eval at ./boot.jl:298 [inlined]
 [8] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/PooledArrays/src/PooledArrays.jl:142
ERROR: LoadError: Failed to precompile PooledArrays to /home/vagrant/.julia/lib/v0.7/PooledArrays.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:295 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/PooledArrays/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for PooledArrays
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PooledArrays/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: PooledArrays had test errors

>>> End of log
