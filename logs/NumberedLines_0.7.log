>>> 'Pkg.add("NumberedLines")' log
[ Info: Installing NumberedLines v0.1.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of NumberedLines
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NumberedLines")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4377328 s       8703 s     220235 s     802141 s         34 s
       #2  3500 MHz     703818 s        256 s      72163 s    5566518 s          0 s
       
  Memory: 2.93927001953125 GB (1260.03515625 MB free)
  Uptime: 64407.0 sec
  Load Avg:  0.9609375  0.9921875  1.03466796875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - NumberedLines                 0.1.0
2 additional packages:
 - Compat                        0.48.0
 - Nullables                     0.0.3
[ Info: Computing test dependencies for NumberedLines...
[ Info: Installing DocStringExtensions v0.4.3
[ Info: Installing Documenter v0.13.0
[ Info: Testing NumberedLines
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
WARNING: importing deprecated binding Base.ObjectIdDict into DocChecks.
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
in allbindings at /home/vagrant/.julia/v0.7/Documenter/src/DocChecks.jl
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
┌ Warning: `nb_available` is deprecated, use `bytesavailable` instead.
│   caller = savebuffer!(::Array{String,1}, ::Base.GenericIOBuffer{Array{UInt8,1}}) at DocChecks.jl:380
└ @ Documenter.DocChecks DocChecks.jl:380
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = attach_append!(::Array{Any,1}, ::Array{Any,1}) at numbered_lines.jl:152
└ @ NumberedLines numbered_lines.jl:152
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = attach_append!(::Array{Any,1}, ::Array{Any,1}) at numbered_lines.jl:157
└ @ NumberedLines numbered_lines.jl:157
=====[Test Error]==============================

> File: src/index.md

> Code block:

```jldoctest
julia> using NumberedLines

julia> link(head, tail::Expr) = Expr(:let, tail, Expr( :(=), :_, wrap(head) ) );

julia> link(head, tail::NumberedLine) = without_line_number(tail) do tail
           link(head, tail)
       end;

julia> simple_chain(e) = with_numbered_lines(e) do e
           foldl(link, e.args) |> wrap
       end;

julia> macro simple_chain(e)
           simple_chain(e)
       end;

julia> @simple_chain begin
           1
           vcat(2,_)
           vcat(_,3)
       end
3-element Array{Int64,1}:
 2
 1
 3
```

> Subexpression:

    @simple_chain begin
        1
        vcat(2,_)
        vcat(_,3)
    end

> Output Diff (REQUIRES COLOR):

3-element Array{Int64,1}:
 2
 1
 3ERROR: syntax: invalid let syntax

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> NumberedLine(LineNumberNode(1), 1)
:( # line 1:
    1)
```

> Subexpression:

    NumberedLine(LineNumberNode(1), 1)

> Output Diff (REQUIRES COLOR):

:( # :(#= line 1:
    1 =#
  1)

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> test = attach_line_number(1, LineNumberNode(1) )
:( # line 1:
    1)

julia> attach_line_number(test, LineNumberNode(2) )
ERROR: Line already has line number
[...]
```

> Subexpression:

    test = attach_line_number(1, LineNumberNode(1) )

> Output Diff (REQUIRES COLOR):

:( # :(#= line 1:
    1 =#
  1)

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> attach_line_number( [1, 2], LineNumberNode(1) )
2-element Array{NumberedLines.NumberedLine,1}:
 :( # line 1:
    1)
 :( # line 1:
    2)
```

> Subexpression:

    attach_line_number( [1, 2], LineNumberNode(1) )

> Output Diff (REQUIRES COLOR):

2-element Array{NumberedLines.NumberedLine,1}:
 :( # Array{NumberedLine,1}:
 :(#= line 1:
    1 =#
  1)
 :( # :(#= line 1:
    1 =#
  2)

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> e = quote
           a = 1
           if a == 1
               2
           end
       end |> attach_line_numbers;

julia> NumberedLines.pretty_number(e) # renumber for reproducibility
quote
     # line 1:
    a = 1
     # line 2:
    if a == 1
         # line 3:
        2
    end
end
```

> Subexpression:

    NumberedLines.pretty_number(e) # renumber for reproducibility

> Output Diff (REQUIRES COLOR):

quote
     # quote
    #= line 1:
    1 =#
    a = 1
     # 1
    #= line 2:
    2 =#
    if a == 1
         # 1
        #= line 3:
        3 =#
        2
    end
end

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> e = quote
            a = 1
            b = 2
        end;

julia> insert_line_number(attach_line_numbers(e), LineNumberNode(1))
quote
     # line 1:
    a = 1
     # line 1:
    b = 2
end
```

> Subexpression:

    insert_line_number(attach_line_numbers(e), LineNumberNode(1))

> Output Diff (REQUIRES COLOR):

quote
     # quote
    #= line 1:
    1 =#
    a = 1
     # 1
    #= line 1:
    1 =#
    b = 2
end

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> e = :(a = 1; b = 2);

julia> insert_line_number(e, LineNumberNode(1))
quote
     # line 1:
    a = 1
     # line 1:
    b = 2
end
```

> Subexpression:

    insert_line_number(e, LineNumberNode(1))

> Output Diff (REQUIRES COLOR):

quote
     # quote
    #= line 1:
    1 =#
    a = 1
     # 1
    #= line 1:
    1 =#
    b = 2
end

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> add_one(a) = :($a + 1);

julia> without_line_number(add_one, 1)
:(1 + 1)

julia> n = NumberedLine(LineNumberNode(1), 1)
:( # line 1:
    1)

julia> without_line_number(add_one, n)
:( # line 1:
    1 + 1)
```

> Subexpression:

    n = NumberedLine(LineNumberNode(1), 1)

> Output Diff (REQUIRES COLOR):

:( # :(#= line 1:
    1 =#
  1)

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> add_one(a) = :($a + 1);

julia> without_line_number(add_one, 1)
:(1 + 1)

julia> n = NumberedLine(LineNumberNode(1), 1)
:( # line 1:
    1)

julia> without_line_number(add_one, n)
:( # line 1:
    1 + 1)
```

> Subexpression:

    without_line_number(add_one, n)

> Output Diff (REQUIRES COLOR):

:( # :(#= line 1:
    1 =#
  1 + 1)

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/NumberedLines/src/numbered_lines.jl

> Code block:

```jldoctest
julia> using NumberedLines

julia> wrap(1)
1

julia> NumberedLine(LineNumberNode(1), 1) |> wrap
quote
     # line 1:
    1
end
```

> Subexpression:

    NumberedLine(LineNumberNode(1), 1) |> wrap

> Output Diff (REQUIRES COLOR):

quote
     # quote
    #= line 1:
    1 =#
    1
end

=====[End Error]===============================
 > checking footnote links.
Documenter: populating indices.
ERROR: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.7/Documenter/src/Builder.jl:202
 [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document, ::Vararg{Documenter.Documents.Document,N} where N) at /home/vagrant/.julia/v0.7/Documenter/src/Selectors.jl:167
 [4] #2 at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:194 [inlined]
 [5] cd(::getfield(Documenter, Symbol("##2#3")){Documenter.Documents.Document}, ::String) at ./file.jl:70
 [6] #makedocs#1(::Bool, ::Base.Iterators.IndexValue{Symbol,Any,NTuple{7,Symbol},NamedTuple{(:modules, :root, :format, :sitename, :pages, :authors, :strict),Tuple{Module,String,Symbol,String,Array{String,1},String,Bool}}}, ::Function) at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:193
 [7] (::getfield(Documenter, Symbol("#kw##makedocs")))(::NamedTuple{(:modules, :root, :format, :sitename, :pages, :authors, :strict),Tuple{Module,String,Symbol,String,Array{String,1},String,Bool}}, ::typeof(Documenter.makedocs)) at ./<missing>:0
 [8] top-level scope
 [9] include at ./boot.jl:292 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1011
 [11] include(::Module, ::String) at ./sysimg.jl:26
 [12] process_options(::Base.JLOptions) at ./client.jl:324
 [13] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for NumberedLines
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/NumberedLines/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
[ Info: Removing DocStringExtensions v0.4.3
[ Info: Removing Documenter v0.13.0
ERROR: NumberedLines had test errors

>>> End of log
