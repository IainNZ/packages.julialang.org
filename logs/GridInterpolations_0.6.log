>>> 'Pkg.add("GridInterpolations")' log
INFO: Cloning cache of GridInterpolations from https://github.com/sisl/GridInterpolations.jl.git
INFO: Installing GridInterpolations v0.1.1
INFO: Installing StaticArrays v0.7.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GridInterpolations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GridInterpolations")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (765.35546875 MB free)
Uptime: 13315.0 sec
Load Avg:  1.0302734375  0.99609375  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     794701 s        106 s      64610 s     296735 s          3 s
#2  3500 MHz     128985 s         44 s      30423 s    1151996 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GridInterpolations            0.1.1
 - JSON                          0.17.2
3 additional packages:
 - Compat                        0.70.0
 - Nullables                     0.0.6
 - StaticArrays                  0.7.2
INFO: Computing test dependencies for GridInterpolations...
INFO: Installing AxisAlgorithms v0.2.0
INFO: Installing Calculus v0.4.0
INFO: Installing DualNumbers v0.4.0
INFO: Installing Interpolations v0.7.3
INFO: Installing NaNMath v0.3.1
INFO: Installing Ratios v0.2.0
INFO: Installing ShowItLikeYouBuildIt v0.2.0
INFO: Installing WoodburyMatrices v0.3.0
INFO: Testing GridInterpolations
1000 interpolations of 6 dimensions with 15 cut points per dimension:
  Rectangle required 0.0018427102190000009 +/- 0.004334204816274407 sec
  Simplex   required 0.0015857456189999981 +/- 0.007106714866969171 sec
How large is the simplex grid speed up over the multilinear grid?
  limiting to 2 dimensions and therefore 316 points per dim:
    mean speed: 0.0011991055, std dev: 0.0012077026515508547
  limiting to 3 dimensions and therefore 46 points per dim:
    mean speed: 0.0012790507333333332, std dev: 0.0010526418370133681
  limiting to 4 dimensions and therefore 18 points per dim:
    mean speed: 0.0013452632333333333, std dev: 0.0012166818967878261
  limiting to 5 dimensions and therefore 10 points per dim:
    mean speed: 0.0015445233666666672, std dev: 0.0009801417444595109
100 interpolations of 4 dimensions with 10 cut points per dimension:
  Rectangle required 0.0006542643499999998 +/- 0.0010586397723832345 sec
  Simplex   required 0.0009564664300000003 +/- 0.0010520367987467325 sec
All tests complete
INFO: GridInterpolations tests passed
INFO: Removing AxisAlgorithms v0.2.0
INFO: Removing Calculus v0.4.0
INFO: Removing DualNumbers v0.4.0
INFO: Removing Interpolations v0.7.3
INFO: Removing NaNMath v0.3.1
INFO: Removing Ratios v0.2.0
INFO: Removing ShowItLikeYouBuildIt v0.2.0
INFO: Removing WoodburyMatrices v0.3.0

>>> End of log
