>>> 'Pkg.add("GridInterpolations")' log
INFO: Cloning cache of GridInterpolations from https://github.com/sisl/GridInterpolations.jl.git
INFO: Installing GridInterpolations v0.1.1
INFO: Installing StaticArrays v0.7.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GridInterpolations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GridInterpolations")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (704.73046875 MB free)
Uptime: 12734.0 sec
Load Avg:  1.03125  0.99658203125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     722569 s         23 s      64434 s     311785 s          3 s
#2  3502 MHz     127837 s        153 s      25771 s    1101070 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GridInterpolations            0.1.1
 - JSON                          0.17.2
3 additional packages:
 - Compat                        1.0.0
 - Nullables                     0.0.6
 - StaticArrays                  0.7.2
INFO: Computing test dependencies for GridInterpolations...
INFO: Installing AxisAlgorithms v0.3.0
INFO: Installing Interpolations v0.8.0
INFO: Installing OffsetArrays v0.6.0
INFO: Installing Ratios v0.2.0
INFO: Installing ShowItLikeYouBuildIt v0.2.0
INFO: Installing WoodburyMatrices v0.3.0
INFO: Testing GridInterpolations
1000 interpolations of 6 dimensions with 15 cut points per dimension:
  Rectangle required 0.0021832798640000037 +/- 0.004610342885939595 sec
  Simplex   required 0.0019401559280000018 +/- 0.008107886783425729 sec
How large is the simplex grid speed up over the multilinear grid?
  limiting to 2 dimensions and therefore 316 points per dim:
    mean speed: 0.0013220850333333335, std dev: 0.0015855974050080091
  limiting to 3 dimensions and therefore 46 points per dim:
    mean speed: 0.0013724639333333336, std dev: 0.0009810744940307922
  limiting to 4 dimensions and therefore 18 points per dim:
    mean speed: 0.0014252248333333334, std dev: 0.0010114703212604134
  limiting to 5 dimensions and therefore 10 points per dim:
    mean speed: 0.0015190673999999997, std dev: 0.0009990376445646427
100 interpolations of 4 dimensions with 10 cut points per dimension:
  Rectangle required 0.00060984392 +/- 0.0007072159367383497 sec
  Simplex   required 0.0009688337400000001 +/- 0.0010537090028101693 sec
All tests complete
INFO: GridInterpolations tests passed
INFO: Removing AxisAlgorithms v0.3.0
INFO: Removing Interpolations v0.8.0
INFO: Removing OffsetArrays v0.6.0
INFO: Removing Ratios v0.2.0
INFO: Removing ShowItLikeYouBuildIt v0.2.0
INFO: Removing WoodburyMatrices v0.3.0

>>> End of log
