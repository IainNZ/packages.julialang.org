>>> 'Pkg.add("PyTest")' log
INFO: Cloning cache of PyTest from https://github.com/pdobacz/PyTest.jl.git
INFO: Installing ArgParse v0.5.0
INFO: Installing Iterators v0.3.1
INFO: Installing PyTest v0.0.1
INFO: Installing TextWrap v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PyTest
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyTest")' log
Julia Version 0.6.0-pre.beta.388
Commit 4ddd9fa (2017-04-27 21:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (759.44921875 MB free)
Uptime: 45421.0 sec
Load Avg:  0.9970703125  0.9853515625  0.9775390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz    2840365 s       5354 s     119805 s     873725 s         47 s
#2  3497 MHz     692535 s       1580 s      62677 s    3710601 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.9.1
 - PyTest                        0.0.1
4 additional packages:
 - ArgParse                      0.5.0
 - Compat                        0.24.0
 - Iterators                     0.3.1
 - TextWrap                      0.2.0
INFO: Testing PyTest
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] consume(::Task) at ./deprecated.jl:938
 [3] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:175
 [4] collect(::Base.Generator{Array{PyTest.Fixture,1},PyTest.##6#8{Dict{Symbol,Any},Dict{Symbol,Any},Dict{Symbol,Task}}}) at ./array.jl:429
 [5] #do_single_test_run#5(::Dict{Symbol,Any}, ::Function, ::Array{PyTest.Fixture,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:127
 [6] (::PyTest.#kw##do_single_test_run)(::Array{Any,1}, ::PyTest.#do_single_test_run, ::Array{PyTest.Fixture,1}, ::Function, ::String) at ./<missing>:0
 [7] run_pytest_test(::Function, ::Array{PyTest.Fixture,1}, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:110
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:11 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] produce(::Array{Any,1}) at ./deprecated.jl:892
 [3] (::tst.##61#65{Array{Any,1}})() at /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl:124
 [4] (::PyTest.##14#16{PyTest.Fixture})() at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:174
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] produce(::Array{Any,1}) at ./deprecated.jl:892
 [3] (::tst.##63#67{Array{Any,1}})(::Array{Any,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl:129
 [4] (::PyTest.##14#16{PyTest.Fixture})() at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:174
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] consume(::Task) at ./deprecated.jl:938
 [3] teardown_fixture(::PyTest.Fixture, ::Dict{Symbol,Task}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:200
 [4] collect(::Base.Generator{Array{Symbol,1},PyTest.##17#18{PyTest.Fixture,Dict{Symbol,Task}}}) at ./array.jl:429
 [5] teardown_fixture(::PyTest.Fixture, ::Dict{Symbol,Task}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:196
 [6] collect(::Base.Generator{Array{PyTest.Fixture,1},PyTest.##7#9{Dict{Symbol,Task}}}) at ./array.jl:429
 [7] #do_single_test_run#5(::Dict{Symbol,Any}, ::Function, ::Array{PyTest.Fixture,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:133
 [8] (::PyTest.#kw##do_single_test_run)(::Array{Any,1}, ::PyTest.#do_single_test_run, ::Array{PyTest.Fixture,1}, ::Function, ::String) at ./<missing>:0
 [9] run_pytest_test(::Function, ::Array{PyTest.Fixture,1}, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:110
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:11 [inlined]
 [13] macro expansion at ./test.jl:853 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] produce(::Void) at ./deprecated.jl:892
 [3] (::tst.##69#72{Array{Any,1}})() at /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl:142
 [4] (::PyTest.##14#16{PyTest.Fixture})() at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:174
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] produce(::Void) at ./deprecated.jl:892
 [3] (::tst.##75#78{Array{Any,1}})() at /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl:154
 [4] (::PyTest.##14#16{PyTest.Fixture})() at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:174
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] produce(::Void) at ./deprecated.jl:892
 [3] (::tst.##76#79{Array{Any,1}})(::Void) at /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl:158
 [4] (::PyTest.##14#16{PyTest.Fixture})() at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:174
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] produce(::Void) at ./deprecated.jl:892
 [3] (::tst.##81#85{Array{Any,1}})() at /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl:169
 [4] (::PyTest.##14#16{PyTest.Fixture})() at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:174
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] produce(::Void) at ./deprecated.jl:892
 [3] (::tst.##82#86{Array{Any,1}})(::Void) at /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl:173
 [4] (::PyTest.##14#16{PyTest.Fixture})() at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:174
while loading /home/vagrant/.julia/v0.6/PyTest/test/base_fixtures.jl, in expression starting on line 77
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] consume(::Task) at ./deprecated.jl:938
 [3] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:175
 [4] (::PyTest.#kw##get_fixture_result)(::Array{Any,1}, ::PyTest.#get_fixture_result, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at ./<missing>:0
 [5] collect(::Base.Generator{Array{Symbol,1},PyTest.##13#15{PyTest.Fixture,Dict{Symbol,Any},Dict{Symbol,Task},Dict{Symbol,Any}}}) at ./array.jl:429
 [6] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:171
 [7] collect(::Base.Generator{Array{PyTest.Fixture,1},PyTest.##6#8{Dict{Symbol,Any},Dict{Symbol,Any},Dict{Symbol,Task}}}) at ./array.jl:429
 [8] #do_single_test_run#5(::Dict{Symbol,Any}, ::Function, ::Array{PyTest.Fixture,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:127
 [9] (::PyTest.#kw##do_single_test_run)(::Array{Any,1}, ::PyTest.#do_single_test_run, ::Array{PyTest.Fixture,1}, ::Function, ::String) at ./<missing>:0
 [10] run_pytest_test(::Function, ::Array{PyTest.Fixture,1}, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:110
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:12 [inlined]
 [14] macro expansion at ./test.jl:853 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyTest/test/request.jl, in expression starting on line 77

WARNING: deprecated syntax "Expr(:(=>), ...)".
Use "Expr(:call, :(=>), ...)" instead.
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] consume(::Task) at ./deprecated.jl:938
 [3] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:175
 [4] (::PyTest.#kw##get_fixture_result)(::Array{Any,1}, ::PyTest.#get_fixture_result, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at ./<missing>:0
 [5] collect(::Base.Generator{Array{Symbol,1},PyTest.##13#15{PyTest.Fixture,Dict{Symbol,Any},Dict{Symbol,Task},Dict{Symbol,Any}}}) at ./array.jl:429
 [6] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:171
 [7] collect(::Base.Generator{Array{PyTest.Fixture,1},PyTest.##6#8{Dict{Symbol,Any},Dict{Symbol,Any},Dict{Symbol,Task}}}) at ./array.jl:429
 [8] #do_single_test_run#5(::Dict{Symbol,Any}, ::Function, ::Array{PyTest.Fixture,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:127
 [9] (::PyTest.#kw##do_single_test_run)(::Array{Any,1}, ::PyTest.#do_single_test_run, ::Array{PyTest.Fixture,1}, ::Function, ::String) at ./<missing>:0
 [10] run_pytest_test(::Function, ::Array{PyTest.Fixture,1}, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:110
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:853 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyTest/test/parametrized.jl, in expression starting on line 77

WARNING: deprecated syntax "Expr(:(=>), ...)".
Use "Expr(:call, :(=>), ...)" instead.

WARNING: deprecated syntax "Expr(:(=>), ...)".
Use "Expr(:call, :(=>), ...)" instead.

WARNING: deprecated syntax "Expr(:(=>), ...)".
Use "Expr(:call, :(=>), ...)" instead.

WARNING: deprecated syntax "Expr(:(=>), ...)".
Use "Expr(:call, :(=>), ...)" instead.

WARNING: deprecated syntax "Expr(:(=>), ...)".
Use "Expr(:call, :(=>), ...)" instead.

WARNING: deprecated syntax "Expr(:(=>), ...)".
Use "Expr(:call, :(=>), ...)" instead.

WARNING: deprecated syntax "Expr(:(=>), ...)".
Use "Expr(:call, :(=>), ...)" instead.
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] consume(::Task) at ./deprecated.jl:938
 [3] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:175
 [4] (::PyTest.#kw##get_fixture_result)(::Array{Any,1}, ::PyTest.#get_fixture_result, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at ./<missing>:0
 [5] collect(::Base.Generator{Array{Symbol,1},PyTest.##13#15{PyTest.Fixture,Dict{Symbol,Any},Dict{Symbol,Task},Dict{Symbol,Any}}}) at ./array.jl:429
 [6] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:171
 [7] (::PyTest.#kw##get_fixture_result)(::Array{Any,1}, ::PyTest.#get_fixture_result, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at ./<missing>:0
 [8] collect(::Base.Generator{Array{Symbol,1},PyTest.##13#15{PyTest.Fixture,Dict{Symbol,Any},Dict{Symbol,Task},Dict{Symbol,Any}}}) at ./array.jl:429
 [9] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:171
 [10] (::PyTest.#kw##get_fixture_result)(::Array{Any,1}, ::PyTest.#get_fixture_result, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at ./<missing>:0
 [11] collect(::Base.Generator{Array{Symbol,1},PyTest.##13#15{PyTest.Fixture,Dict{Symbol,Any},Dict{Symbol,Task},Dict{Symbol,Any}}}) at ./array.jl:429
 [12] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:171
 [13] collect(::Base.Generator{Array{PyTest.Fixture,1},PyTest.##6#8{Dict{Symbol,Any},Dict{Symbol,Any},Dict{Symbol,Task}}}) at ./array.jl:429
 [14] #do_single_test_run#5(::Dict{Symbol,Any}, ::Function, ::Array{PyTest.Fixture,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:127
 [15] (::PyTest.#kw##do_single_test_run)(::Array{Any,1}, ::PyTest.#do_single_test_run, ::Array{PyTest.Fixture,1}, ::Function, ::String) at ./<missing>:0
 [16] run_pytest_test(::Function, ::Array{PyTest.Fixture,1}, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:110
 [17] macro expansion at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:77 [inlined]
 [18] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/basetest_integration.jl:17 [inlined]
 [19] macro expansion at ./test.jl:914 [inlined]
 [20] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/basetest_integration.jl:16 [inlined]
 [21] anonymous at ./<missing>:?
 [22] include_from_node1(::String) at ./loading.jl:539
 [23] include(::String) at ./sysimg.jl:14
 [24] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:14 [inlined]
 [25] macro expansion at ./test.jl:853 [inlined]
 [26] anonymous at ./<missing>:?
 [27] include_from_node1(::String) at ./loading.jl:539
 [28] include(::String) at ./sysimg.jl:14
 [29] process_options(::Base.JLOptions) at ./client.jl:305
 [30] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyTest/test/basetest_integration.jl, in expression starting on line 9
PyTest tests: Test Failed
  Expression: contains(readstring(@cmd("\$julia_exe \$runner_path")), tests_count_indicator(3, 3))
Stacktrace:
 [1] (::tst.##149#150)() at /home/vagrant/.julia/v0.6/PyTest/test/runner.jl:11
 [2] cd(::tst.##149#150, ::String) at ./file.jl:70
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:15 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] anonymous at ./<missing>:?
PyTest tests: Test Failed
  Expression: contains(readstring(@cmd("\$julia_exe \$runner_path runtests.jl/one")), tests_count_indicator(1, 1))
Stacktrace:
 [1] (::tst.##149#150)() at /home/vagrant/.julia/v0.6/PyTest/test/runner.jl:14
 [2] cd(::tst.##149#150, ::String) at ./file.jl:70
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:15 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] anonymous at ./<missing>:?
PyTest tests: Test Failed
  Expression: contains(readstring(@cmd("\$julia_exe \$runner_path runtests.jl")), tests_count_indicator(3, 3))
Stacktrace:
 [1] (::tst.##149#150)() at /home/vagrant/.julia/v0.6/PyTest/test/runner.jl:17
 [2] cd(::tst.##149#150, ::String) at ./file.jl:70
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:15 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] anonymous at ./<missing>:?
PyTest tests: Test Failed
  Expression: contains(readstring(@cmd("\$julia_exe \$runner_path runtests.jl/one runtests.jl/two")), tests_count_indicator(2, 2))
Stacktrace:
 [1] (::tst.##149#150)() at /home/vagrant/.julia/v0.6/PyTest/test/runner.jl:20
 [2] cd(::tst.##149#150, ::String) at ./file.jl:70
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:15 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] anonymous at ./<missing>:?
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] consume(::Task) at ./deprecated.jl:938
 [3] #get_fixture_result#12(::Symbol, ::Function, ::PyTest.Fixture, ::Dict{Symbol,Any}, ::Dict{Symbol,Task}, ::Dict{Symbol,Any}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:175
 [4] collect(::Base.Generator{Array{PyTest.Fixture,1},PyTest.##6#8{Dict{Symbol,Any},Dict{Symbol,Any},Dict{Symbol,Task}}}) at ./array.jl:429
 [5] #do_single_test_run#5(::Dict{Symbol,Any}, ::Function, ::Array{PyTest.Fixture,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:127
 [6] (::PyTest.#kw##do_single_test_run)(::Array{Any,1}, ::PyTest.#do_single_test_run, ::Array{PyTest.Fixture,1}, ::Function, ::String) at ./<missing>:0
 [7] run_pytest_test(::Function, ::Array{PyTest.Fixture,1}, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:110
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:16 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyTest/test/builtin/tempdir.jl, in expression starting on line 77
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] produce(::String) at ./deprecated.jl:892
 [3] (::PyTest.##21#22)() at /home/vagrant/.julia/v0.6/PyTest/src/builtin.jl:16
 [4] (::PyTest.##14#16{PyTest.Fixture})() at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:174
while loading /home/vagrant/.julia/v0.6/PyTest/test/builtin/tempdir.jl, in expression starting on line 77
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] consume(::Task) at ./deprecated.jl:938
 [3] teardown_fixture(::PyTest.Fixture, ::Dict{Symbol,Task}) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:200
 [4] collect(::Base.Generator{Array{PyTest.Fixture,1},PyTest.##7#9{Dict{Symbol,Task}}}) at ./array.jl:429
 [5] #do_single_test_run#5(::Dict{Symbol,Any}, ::Function, ::Array{PyTest.Fixture,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:133
 [6] (::PyTest.#kw##do_single_test_run)(::Array{Any,1}, ::PyTest.#do_single_test_run, ::Array{PyTest.Fixture,1}, ::Function, ::String) at ./<missing>:0
 [7] run_pytest_test(::Function, ::Array{PyTest.Fixture,1}, ::String) at /home/vagrant/.julia/v0.6/PyTest/src/macros.jl:110
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl:16 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyTest/test/builtin/tempdir.jl, in expression starting on line 77
Test Summary:                                                                                    | Pass  Fail  Total
PyTest tests                                                                                     |   58     4     62
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    1            1
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    1            1
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    4            4
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    1            1
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    2            2
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    1            1
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |             No tests
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    2            2
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    2            2
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    1            1
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    2            2
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    1            1
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |    1            1
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |             No tests
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |             No tests
  base_fixtures.jl/anonymous[Dict{Symbol,Any}()]                                                 |             No tests
  request.jl/anonymous[Dict{Symbol,Any}()]                                                       |             No tests
  request.jl/anonymous[Dict{Symbol,Any}()]                                                       |             No tests
  request.jl/anonymous[Dict{Symbol,Any}()]                                                       |    1            1
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 0))]                           |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 1))]                           |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 0),Pair{Symbol,Any}(:g, 'a'))] |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 1),Pair{Symbol,Any}(:g, 'a'))] |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 0),Pair{Symbol,Any}(:g, 0.1))] |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 1),Pair{Symbol,Any}(:g, 0.1))] |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 0))]                           |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 1))]                           |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:g, 'a'))]                         |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:g, 0.1))]                         |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:g, Any[]))]                       |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, Any[]))]                       |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, "a"))]                         |             No tests
  parametrized.jl/anonymous[Dict{Symbol,Any}(Pair{Symbol,Any}(:f, 'a'))]                         |             No tests
  basetest_integration.jl/test_name[Dict{Symbol,Any}()]                                          |    1            1
  testset description 1, a                                                                       |    2            2
  testset description 2, a                                                                       |    2            2
  testset description 3, a                                                                       |    2            2
  testset description 4, a                                                                       |    2            2
  testset description 5, a                                                                       |    2            2
  testset description 1, b                                                                       |    2            2
  testset description 2, b                                                                       |    2            2
  testset description 3, b                                                                       |    2            2
  testset description 4, b                                                                       |    2            2
  testset description 5, b                                                                       |    2            2
  builtin/tempdir.jl/anonymous[Dict{Symbol,Any}()]                                               |    2            2
  builtin/tempdir.jl/anonymous[Dict{Symbol,Any}()]                                               |             No tests
ERROR: LoadError: Some tests did not pass: 58 passed, 4 failed, 0 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl, in expression starting on line 10
===============================[ ERROR: PyTest ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/PyTest/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PyTest had test errors

>>> End of log
