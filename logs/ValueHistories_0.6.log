>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.7.4
INFO: Installing RecipesBase v0.2.3
INFO: Installing ValueHistories v0.4.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ValueHistories
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1292.015625 MB free)
Uptime: 83105.0 sec
Load Avg:  1.0029296875  1.01025390625  1.0048828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    5261647 s       7672 s     218775 s    1610902 s        110 s
#2  3499 MHz    1210798 s         92 s     103454 s    6826454 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - ValueHistories                0.4.0
4 additional packages:
 - Compat                        0.53.0
 - DataStructures                0.7.4
 - Nullables                     0.0.3
 - RecipesBase                   0.2.3
INFO: Testing ValueHistories
100 elements {Int64,Float64}
History
  * types: Int64, Float64
  * length: 100
History
  * types: UInt8, String
  * length: 100
100 elements {Int64,Float64}
QHistory
    types: Int64, Float64
    length: 100
QHistory
    types: UInt8, String
    length: 100
Test Summary:       | Pass  Total
[->] tst_history.jl | 1028   1028
MVHistory{ValueHistories.History}
  :myint2 => 5 elements {Int64,Int64}
  :myf => 56 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
MVHistory{ValueHistories.History}
  :myint2 => 5 elements {Int64,Int64}
  :myf => 56 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
Test Summary:         | Pass  Total
[->] tst_mvhistory.jl |  543    543
   --> Baseline: 100 loops that accumulates a Float64
  0.010474 seconds (1.26 k allocations: 68.660 KiB)
  0.000006 seconds (5 allocations: 176 bytes)
   --> ValueHistories.History: 100 loops tracking accumulator as Float64
  0.011571 seconds (1.25 k allocations: 69.402 KiB)
  0.000101 seconds (13 allocations: 4.391 KiB)
   --> ValueHistories.History: Converting result into arrays
  0.000025 seconds (3 allocations: 96 bytes)
  0.000029 seconds (3 allocations: 96 bytes)
   --> ValueHistories.QHistory: 100 loops tracking accumulator as Float64
  0.013725 seconds (1.23 k allocations: 64.980 KiB)
  0.000010 seconds (1 allocation: 16 bytes)
   --> ValueHistories.QHistory: Converting result into arrays
  0.000358 seconds (1.11 k allocations: 30.016 KiB)
  0.022317 seconds (1.11 k allocations: 30.016 KiB)
   --> MVHistory: 100 loops tracking accumulator as Float64 and String
  0.038045 seconds (7.71 k allocations: 424.268 KiB)
  0.000139 seconds (633 allocations: 31.141 KiB)
   --> MVHistory: Converting result into arrays
  0.038680 seconds (1.46 k allocations: 80.698 KiB)
  0.000322 seconds (426 allocations: 15.391 KiB)
Test Summary:      |
[->] bm_history.jl | No tests
INFO: ValueHistories tests passed

>>> End of log
