>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.7.1
INFO: Installing RecipesBase v0.2.2
INFO: Installing ValueHistories v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ValueHistories
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1974.30859375 MB free)
Uptime: 81018.0 sec
Load Avg:  0.98974609375  0.98095703125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    5358697 s       5929 s     243019 s    1174415 s         71 s
#2  3496 MHz    1127116 s        169 s     116801 s    6718693 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.13.0
 - ValueHistories                0.3.0
3 additional packages:
 - Compat                        0.31.0
 - DataStructures                0.7.1
 - RecipesBase                   0.2.2
INFO: Testing ValueHistories
100 elements {Int64,Float64}
History
  * types: Int64, Float64
  * length: 100
History
  * types: UInt8, String
  * length: 100
100 elements {Int64,Float64}
QHistory
    types: Int64, Float64
    length: 100
QHistory
    types: UInt8, String
    length: 100
Test Summary:       | Pass  Total
[->] tst_history.jl | 1028   1028
MVHistory{ValueHistories.History}
  :myint2 => 5 elements {Int64,Int64}
  :myf => 56 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
MVHistory{ValueHistories.History}
  :myint2 => 5 elements {Int64,Int64}
  :myf => 56 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
Test Summary:         | Pass  Total
[->] tst_mvhistory.jl |  538    538
   --> Baseline: 100 loops that accumulates a Float64
  0.005610 seconds (1.19 k allocations: 67.176 KiB)
  0.000003 seconds (5 allocations: 176 bytes)
   --> ValueHistories.History: 100 loops tracking accumulator as Float64
  0.006263 seconds (1.17 k allocations: 67.340 KiB)
  0.000008 seconds (13 allocations: 4.391 KiB)
   --> ValueHistories.History: Converting result into arrays
  0.000017 seconds (3 allocations: 96 bytes)
  0.000008 seconds (3 allocations: 96 bytes)
   --> ValueHistories.QHistory: 100 loops tracking accumulator as Float64
  0.006365 seconds (1.16 k allocations: 62.918 KiB)
  0.000005 seconds (1 allocation: 16 bytes)
   --> ValueHistories.QHistory: Converting result into arrays
  0.000124 seconds (1.11 k allocations: 30.016 KiB)
  0.000098 seconds (1.11 k allocations: 30.016 KiB)
   --> MVHistory: 100 loops tracking accumulator as Float64 and String
  0.019477 seconds (7.63 k allocations: 433.393 KiB)
  0.000055 seconds (633 allocations: 31.141 KiB)
   --> MVHistory: Converting result into arrays
  0.008286 seconds (1.56 k allocations: 88.229 KiB)
  0.000166 seconds (426 allocations: 15.391 KiB)
Test Summary:      |
[->] bm_history.jl | No tests
INFO: ValueHistories tests passed

>>> End of log
