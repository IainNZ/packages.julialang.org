>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1321.05078125 MB free)
Uptime: 48361.0 sec
Load Avg:  1.0029296875  1.0146484375  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    3016830 s       6280 s     238806 s     982252 s         86 s
#2  3504 MHz    1089188 s        810 s     121908 s    3502387 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - KrylovMethods                 0.3.0
6 additional packages:
 - Compat                        0.24.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.3
 - DocOpt                        0.2.1
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.91e-02
  2	1.01e-02
  3	2.37e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.01e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.40e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.59e-02
  2	1.76e-02
  3	3.44e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.76e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 7.76e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.19e-01
cg iterated maxIter (=1) times but reached only residual norm 1.19e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.17e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.95e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.95e-16.
=== blockcg ===
iter	max(relres)
  1	9.67e-16
blockCG iterated maxIter (=1) times but reached only residual norm 9.67e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.95e-01
  2	2.32e-01
  3	1.42e-01
  4	9.87e-02
  5	6.83e-02
  6	5.01e-02
  7	3.00e-02
  8	1.78e-02
  9	8.67e-03
 10	3.54e-03
 11	1.37e-03
 12	5.36e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 5.36e-04.
=== blockcg ===
iter	max(relres)
  1	3.95e-01
  2	2.32e-01
  3	1.42e-01
  4	9.87e-02
  5	6.83e-02
  6	5.01e-02
  7	3.00e-02
  8	1.78e-02
  9	8.67e-03
 10	3.54e-03
 11	1.37e-03
 12	5.36e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 5.36e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.03e+01	5.56e-01	1.02e+01
  2	2.39e+00	6.44e-01	1.02e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.39e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  4.18e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 9.3e-02 3.0e-02 	 3.0e-02
  2	8.9e-03 2.3e-03 6.1e-04 	 6.1e-04
  3	1.9e-04 4.9e-05 1.5e-05 	 1.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.37e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.7931095973622093]
Givens rotation for v=[0.19827424151306966,0.0]
Givens rotation for v=[-0.624441151936948,0.40617303547788297]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 53. Residual norm is 9.94e-03.
ssor achieved desired tolerance at iteration 79. Residual norm is 9.98e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.40e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.36e-02
  3	3.89e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.89e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.36e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.60e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 9.12e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.06e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 7.74e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.74e-02	9.55e-02	5.77e+00		1.24e+00
2	3.88e-03	2.92e-03	5.77e+00		1.31e+00
3	2.53e-04	2.61e-04	5.77e+00		1.31e+00
4	1.31e-05	9.98e-06	5.77e+00		1.35e+00
5	1.05e-06	1.47e-06	5.77e+00		1.35e+00
6	3.34e-09	1.62e-10	5.77e+00		1.35e+00
7	2.05e-22	1.83e-34	5.77e+00		1.36e+00
minres converged at iteration 7. |A r_k|=1.83e-34 and |r_k|=2.05e-22.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.13e-03	9.90e-03	4.41e+00		1.00e+00
2	2.56e-04	1.45e-04	4.69e+00		1.07e+00
3	1.69e-05	1.61e-05	4.69e+00		1.11e+00
4	1.28e-06	1.66e-06	5.02e+00		1.19e+00
5	6.74e-08	5.81e-08	5.02e+00		1.19e+00
6	3.02e-10	2.08e-11	5.02e+00		1.19e+00
7	1.39e-23	9.25e-36	5.02e+00		1.19e+00
minres converged at iteration 7. |A r_k|=9.25e-36 and |r_k|=1.39e-23.
test stop by condlim
The estimated condition number (=3.15e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.39e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
