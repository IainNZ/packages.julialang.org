>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.4.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (798.56640625 MB free)
Uptime: 53356.0 sec
Load Avg:  1.0029296875  0.9853515625  0.9833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3334889 s       1762 s     266558 s    1042227 s         29 s
#2  3500 MHz    1051729 s       6676 s     121326 s    4020660 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.14.0
 - KrylovMethods                 0.4.0
2 additional packages:
 - Compat                        0.32.0
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.1
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== bicgstb ===
iter	 relres
  1	8.35e-02
  2	8.88e-03
  3	9.31e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 8.88e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.11e-07.
=== block bicgstb ===
iter	 relres
  1	1.04e-01
  2	3.39e-02
  3	1.78e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.39e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.51e-07.
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.00e-01
cg iterated maxIter (=1) times but reached only residual norm 1.00e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
CG: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching size(::Type{Int64})
  Closest candidates are:
    size{N}(::Any, !Matched::Integer, !Matched::Integer, !Matched::Integer...) at abstractarray.jl:48
    size(!Matched::BitArray{1}) at bitarray.jl:39
    size(!Matched::BitArray{1}, !Matched::Any) at bitarray.jl:43
    ...
   in broadcast_shape(::Type{T}, ::Float64) at ./broadcast.jl:31
   in broadcast_t(::Function, ::Type{Any}, ::Type{T}, ::Vararg{Any,N}) at ./broadcast.jl:213
   in spdiags(::Array{Float64,2}, ::Array{Int64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:24
   in ddx at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 [inlined]
   in getDivGrad(::Int64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/testCG.jl:26 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/runtests.jl:12 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== blockcg ===
iter	max(relres)
  1	2.44e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.44e-16.
=== blockcg ===
iter	max(relres)
  1	1.54e-14
blockCG iterated maxIter (=1) times but reached only residual norm 1.54e-14 instead of tol=1.00e-30.
blockCG: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching size(::Type{Int64})
  Closest candidates are:
    size{N}(::Any, !Matched::Integer, !Matched::Integer, !Matched::Integer...) at abstractarray.jl:48
    size(!Matched::BitArray{1}) at bitarray.jl:39
    size(!Matched::BitArray{1}, !Matched::Any) at bitarray.jl:43
    ...
   in broadcast_shape(::Type{T}, ::Float64) at ./broadcast.jl:31
   in broadcast_t(::Function, ::Type{Any}, ::Type{T}, ::Vararg{Any,N}) at ./broadcast.jl:213
   in spdiags(::Array{Float64,2}, ::Array{Int64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:24
   in ddx at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 [inlined]
   in getDivGrad(::Int64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/testBlockCG.jl:22 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/runtests.jl:13 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	8.00e+00	6.86e-01	8.66e+00
  2	4.88e-01	7.32e-01	8.64e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.88e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.79e-12.
=== gmres ===
iter	 relres

  1	3.1e-01 1.1e-01 3.5e-02 	 3.5e-02
  2	1.1e-02 3.0e-03 9.5e-04 	 9.5e-04
  3	3.1e-04 1.1e-04 3.5e-05 	 3.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.53e-07.
Givens rotation for v=[0.0,0.22902230116641406]
Givens rotation for v=[1.034541303949679,0.0]
Givens rotation for v=[-1.5608639490589074,0.3125741262385158]
=== Testing Lanczos Bidiagonalization ===
small full system: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching size(::Type{Int64})
  Closest candidates are:
    size{N}(::Any, !Matched::Integer, !Matched::Integer, !Matched::Integer...) at abstractarray.jl:48
    size(!Matched::BitArray{1}) at bitarray.jl:39
    size(!Matched::BitArray{1}, !Matched::Any) at bitarray.jl:43
    ...
   in broadcast_shape(::Type{T}, ::Float64) at ./broadcast.jl:31
   in broadcast_t(::Function, ::Type{Any}, ::Type{T}, ::Vararg{Any,N}) at ./broadcast.jl:213
   in spdiags(::Array{Float64,2}, ::Array{Int64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:24
   in ddx at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 [inlined]
   in getDivGrad(::Int64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/testSSOR.jl:5 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/testSSOR.jl:3 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/runtests.jl:18 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
preconditioner: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching size(::Type{Int64})
  Closest candidates are:
    size{N}(::Any, !Matched::Integer, !Matched::Integer, !Matched::Integer...) at abstractarray.jl:48
    size(!Matched::BitArray{1}) at bitarray.jl:39
    size(!Matched::BitArray{1}, !Matched::Any) at bitarray.jl:43
    ...
   in broadcast_shape(::Type{T}, ::Float64) at ./broadcast.jl:31
   in broadcast_t(::Function, ::Type{Any}, ::Type{T}, ::Vararg{Any,N}) at ./broadcast.jl:213
   in spdiags(::Array{Float64,2}, ::Array{Int64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:24
   in ddx at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 [inlined]
   in getDivGrad(::Int64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/testSSOR.jl:22 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/testSSOR.jl:20 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/runtests.jl:18 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
complex : Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching size(::Type{Int64})
  Closest candidates are:
    size{N}(::Any, !Matched::Integer, !Matched::Integer, !Matched::Integer...) at abstractarray.jl:48
    size(!Matched::BitArray{1}) at bitarray.jl:39
    size(!Matched::BitArray{1}, !Matched::Any) at bitarray.jl:43
    ...
   in broadcast_shape(::Type{T}, ::Float64) at ./broadcast.jl:31
   in broadcast_t(::Function, ::Type{Any}, ::Type{T}, ::Vararg{Any,N}) at ./broadcast.jl:213
   in spdiags(::Array{Float64,2}, ::Array{Int64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:24
   in ddx at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 [inlined]
   in getDivGrad(::Int64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/testSSOR.jl:34 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/testSSOR.jl:31 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/KrylovMethods/test/runtests.jl:18 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.08e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.77e+00.
minres iterated maxIter (=1) times but reached only residual norm 7.93e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.93e-02	1.14e-01	6.13e+00		1.26e+00
2	6.87e-03	9.51e-03	6.13e+00		1.43e+00
3	1.62e-04	7.02e-05	6.13e+00		1.43e+00
4	7.77e-06	7.26e-06	6.13e+00		1.43e+00
5	4.23e-08	3.50e-09	6.13e+00		1.50e+00
6	9.69e-11	3.35e-12	6.13e+00		1.52e+00
7	3.61e-21	2.01e-30	6.13e+00		1.53e+00
minres converged at iteration 7. |A r_k|=2.01e-30 and |r_k|=3.61e-21.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.28e-03	1.74e-02	4.31e+00		1.00e+00
2	1.77e-04	6.09e-05	5.00e+00		1.16e+00
3	8.03e-06	7.12e-06	5.24e+00		1.22e+00
4	5.17e-07	5.18e-07	5.24e+00		1.26e+00
5	7.25e-09	1.81e-09	5.24e+00		1.26e+00
6	1.72e-11	6.15e-13	5.24e+00		1.30e+00
7	3.91e-23	1.33e-33	5.24e+00		1.31e+00
minres converged at iteration 7. |A r_k|=1.33e-33 and |r_k|=3.91e-23.
test stop by condlim
The estimated condition number (=3.55e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 19.
test stop by beta
minres stopped because beta (=4.79e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
Test Summary:         | Pass  Error  Total
  KrylovMethods       |  135      5    140
  bicgstb             |   17            17
  blockBiCGSTB        |   17            17
  CG                  |    5      1      6
  blockCG             |    4      1      5
  CLGS                |    9             9
  GS                  |   10            10
  gmres               |   15            15
  lanczos             |   13            13
  SSOR                |           3      3
  small full system   |           1      1
  preconditioner      |           1      1
  complex             |           1      1
  LSQR                |   14            14
  MINRES              |   11            11
  MatrixDepot         |   20            20
ERROR: LoadError: Some tests did not pass: 135 passed, 0 failed, 5 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./test.jl:681 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/KrylovMethods/test/runtests.jl, in expression starting on line 8
============================[ ERROR: KrylovMethods ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/KrylovMethods/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.1
INFO: Removing MatrixDepot v0.5.6
ERROR: KrylovMethods had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
