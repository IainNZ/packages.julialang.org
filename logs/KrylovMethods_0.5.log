>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (835.7734375 MB free)
Uptime: 57348.0 sec
Load Avg:  1.03564453125  1.04443359375  1.046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3617694 s        840 s     310256 s    1085727 s        118 s
#2  3500 MHz    1232156 s       5458 s     151606 s    4182744 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - KrylovMethods                 0.3.0
2 additional packages:
 - Compat                        0.30.0
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	6.20e-02
  2	7.17e-03
  3	6.44e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 7.17e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.44e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.33e-02
  2	4.18e-01
  3	7.35e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.18e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.28e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	6.50e-02
cg iterated maxIter (=1) times but reached only residual norm 6.50e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 6.43e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.80e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.80e-16.
=== blockcg ===
iter	max(relres)
  1	3.22e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.22e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.47e-01
  3	1.83e-01
  4	1.41e-01
  5	9.94e-02
  6	6.59e-02
  7	4.02e-02
  8	2.43e-02
  9	1.39e-02
 10	6.75e-03
 11	3.19e-03
 12	1.59e-03
 13	6.98e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.98e-04.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.47e-01
  3	1.83e-01
  4	1.41e-01
  5	9.94e-02
  6	6.59e-02
  7	4.02e-02
  8	2.43e-02
  9	1.39e-02
 10	6.75e-03
 11	3.19e-03
 12	1.59e-03
 13	6.98e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.98e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.44e+01	6.31e-01	9.30e+00
  2	1.54e+00	7.40e-01	9.23e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.54e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.21e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 1.1e-01 3.5e-02 	 3.5e-02
  2	1.1e-02 3.7e-03 1.1e-03 	 1.1e-03
  3	3.5e-04 1.3e-04 4.3e-05 	 4.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.64e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.7402479290007472]
Givens rotation for v=[0.9552971031421097,0.0]
Givens rotation for v=[1.4973092294648125,-2.4947554416511424]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 34. Residual norm is 9.86e-03.
ssor achieved desired tolerance at iteration 51. Residual norm is 9.84e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 8.26e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.22e-02
  3	3.79e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.79e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.62e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.85e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.31e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.00e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.13e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.13e-01	8.20e-02	4.45e+00		1.07e+00
2	1.18e-02	1.17e-02	6.31e+00		1.51e+00
3	3.09e-04	5.68e-05	6.31e+00		1.51e+00
4	6.23e-06	8.06e-07	6.31e+00		1.51e+00
5	1.46e-07	2.34e-08	6.31e+00		1.51e+00
6	2.47e-09	2.67e-10	6.31e+00		1.51e+00
7	3.03e-20	2.33e-30	6.31e+00		1.56e+00
minres converged at iteration 7. |A r_k|=2.33e-30 and |r_k|=3.03e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.72e-02	2.52e-02	6.20e+00		1.00e+00
2	8.16e-04	2.55e-04	6.20e+00		1.43e+00
3	7.57e-06	4.79e-07	6.20e+00		1.43e+00
4	3.03e-07	7.97e-08	6.20e+00		1.46e+00
5	3.15e-09	2.18e-10	6.20e+00		1.46e+00
6	3.05e-11	1.83e-12	6.20e+00		1.54e+00
7	3.32e-19	2.32e-26	6.20e+00		1.54e+00
minres converged at iteration 7. |A r_k|=2.32e-26 and |r_k|=3.32e-19.
test stop by condlim
The estimated condition number (=2.71e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.11e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
