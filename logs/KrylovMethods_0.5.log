>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1255.546875 MB free)
Uptime: 48076.0 sec
Load Avg:  1.0029296875  1.0146484375  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3030206 s       4880 s     234992 s     920985 s         71 s
#2  3500 MHz    1031342 s       1767 s     121660 s    3524420 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - KrylovMethods                 0.3.0
6 additional packages:
 - Compat                        0.23.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.3
 - DocOpt                        0.2.1
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.78e-02
  2	1.15e-02
  3	9.32e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.15e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 5.09e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.06e-01
  2	4.01e-02
  3	3.95e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.01e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 6.32e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	5.25e-02
cg iterated maxIter (=1) times but reached only residual norm 5.25e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.90e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.94e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.94e-16.
=== blockcg ===
iter	max(relres)
  1	3.96e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.96e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.19e-01
  3	1.50e-01
  4	1.02e-01
  5	7.29e-02
  6	4.97e-02
  7	3.16e-02
  8	1.59e-02
  9	7.44e-03
 10	3.32e-03
 11	1.52e-03
 12	6.59e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.59e-04.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.19e-01
  3	1.50e-01
  4	1.02e-01
  5	7.29e-02
  6	4.97e-02
  7	3.16e-02
  8	1.59e-02
  9	7.44e-03
 10	3.32e-03
 11	1.52e-03
 12	6.59e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.59e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.56e+01	5.03e-01	9.92e+00
  2	6.99e+00	6.70e-01	9.85e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.99e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.92e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 1.1e-01 3.6e-02 	 3.6e-02
  2	1.1e-02 3.1e-03 1.0e-03 	 1.0e-03
  3	3.3e-04 1.0e-04 2.9e-05 	 2.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.43e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.4411390860643103]
Givens rotation for v=[0.05512396852830397,0.0]
Givens rotation for v=[-1.7044746485483133,0.1535699163720124]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 35. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 52. Residual norm is 9.87e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.63e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.41e-02
  3	3.97e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.97e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.13e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.68e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.33e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.09e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.05e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.05e-01	9.75e-01	5.15e+00		1.11e+00
2	1.02e-01	8.95e-01	1.32e+01		2.86e+00
3	1.23e-02	2.54e-02	1.32e+01		2.86e+00
4	1.64e-03	3.30e-03	1.32e+01		2.86e+00
5	1.98e-05	2.31e-06	1.32e+01		3.06e+00
6	3.01e-16	4.18e-26	1.32e+01		3.27e+00
minres converged at iteration 6. |A r_k|=4.18e-26 and |r_k|=3.01e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.32e-01	1.56e+00	1.21e+01		1.00e+00
2	3.91e-02	1.52e-01	1.21e+01		1.88e+00
3	4.27e-03	6.22e-03	1.21e+01		1.97e+00
4	2.42e-04	1.99e-04	1.21e+01		1.97e+00
5	3.29e-06	4.25e-07	1.21e+01		2.90e+00
6	6.48e-16	1.17e-24	1.21e+01		3.00e+00
minres converged at iteration 6. |A r_k|=1.17e-24 and |r_k|=6.48e-16.
test stop by condlim
The estimated condition number (=3.77e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.08e-11) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
