>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1307.234375 MB free)
Uptime: 49699.0 sec
Load Avg:  1.08544921875  1.0419921875  1.05224609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3004010 s       7355 s     246772 s    1139228 s        176 s
#2  3499 MHz    1167718 s         54 s     143184 s    3470080 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.3.0
6 additional packages:
 - Compat                        0.22.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.3
 - DocOpt                        0.2.1
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.47e-02
  2	2.41e-01
  3	1.13e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.41e-01 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 9.77e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.49e-02
  2	6.84e-02
  3	1.57e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 6.84e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 5.58e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	3.52e-03
cg iterated maxIter (=1) times but reached only residual norm 3.52e-03 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.84e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.33e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.33e-16.
=== blockcg ===
iter	max(relres)
  1	1.86e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.86e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.26e-01
  3	1.50e-01
  4	9.94e-02
  5	6.95e-02
  6	5.47e-02
  7	3.29e-02
  8	1.54e-02
  9	7.99e-03
 10	4.33e-03
 11	2.21e-03
 12	9.84e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.84e-04.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.26e-01
  3	1.50e-01
  4	9.94e-02
  5	6.95e-02
  6	5.47e-02
  7	3.29e-02
  8	1.54e-02
  9	7.99e-03
 10	4.33e-03
 11	2.21e-03
 12	9.84e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.84e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.20e+01	7.15e-01	9.63e+00
  2	1.86e+00	7.76e-01	9.60e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.86e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.77e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 1.0e-01 3.1e-02 	 3.1e-02
  2	8.5e-03 2.6e-03 8.0e-04 	 8.0e-04
  3	2.6e-04 7.3e-05 2.3e-05 	 2.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.69e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.7342972990365565]
Givens rotation for v=[-0.8130544504328946,0.0]
Givens rotation for v=[-0.3061136549429419,1.5191442837082727]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.94e-03.
ssor achieved desired tolerance at iteration 57. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.96e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.56e-02
  3	4.08e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.08e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.39e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.97e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.53e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.14e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.61e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.61e-01	8.23e-01	5.60e+00		1.11e+00
2	5.81e-02	1.82e-01	6.82e+00		1.35e+00
3	1.78e-03	8.81e-04	7.56e+00		1.49e+00
4	3.94e-04	1.07e-03	7.56e+00		1.49e+00
5	4.53e-06	6.20e-07	7.56e+00		1.49e+00
6	4.92e-08	7.93e-09	7.56e+00		1.49e+00
7	3.38e-19	2.22e-29	7.56e+00		1.89e+00
minres converged at iteration 7. |A r_k|=2.22e-29 and |r_k|=3.38e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	8.71e-02	4.24e-01	6.16e+00		1.01e+00
2	1.42e-02	3.00e-02	7.12e+00		1.24e+00
3	3.94e-04	1.58e-04	7.12e+00		1.24e+00
4	8.68e-05	2.35e-04	7.12e+00		1.38e+00
5	8.45e-07	9.76e-08	7.12e+00		1.39e+00
6	1.17e-08	2.40e-09	7.12e+00		1.39e+00
7	9.23e-19	6.95e-28	7.12e+00		1.78e+00
minres converged at iteration 7. |A r_k|=6.95e-28 and |r_k|=9.23e-19.
test stop by condlim
The estimated condition number (=2.06e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=3.31e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
