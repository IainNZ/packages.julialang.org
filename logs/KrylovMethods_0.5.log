>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (831.46875 MB free)
Uptime: 55764.0 sec
Load Avg:  0.9833984375  0.9853515625  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3394091 s       1200 s     265822 s    1273780 s        106 s
#2  3499 MHz    1399115 s       5793 s     138875 s    3866878 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - KrylovMethods                 0.3.0
2 additional packages:
 - Compat                        0.26.0
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.84e-02
  2	7.96e-03
  3	1.95e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 7.96e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 5.86e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.85e-02
  2	3.02e-02
  3	4.15e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.02e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 6.00e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.53e-01
cg iterated maxIter (=1) times but reached only residual norm 2.53e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.58e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.74e-15
  2	3.19e-31
blockCG achieved desired tolerance at iteration 2. Residual norm is 3.19e-31.
=== blockcg ===
iter	max(relres)
  1	3.74e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.74e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.27e-01
  2	2.47e-01
  3	1.89e-01
  4	1.52e-01
  5	1.19e-01
  6	7.64e-02
  7	4.13e-02
  8	2.00e-02
  9	9.86e-03
 10	4.49e-03
 11	1.93e-03
 12	7.98e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.98e-04.
=== blockcg ===
iter	max(relres)
  1	4.27e-01
  2	2.47e-01
  3	1.89e-01
  4	1.52e-01
  5	1.19e-01
  6	7.64e-02
  7	4.13e-02
  8	2.00e-02
  9	9.86e-03
 10	4.49e-03
 11	1.93e-03
 12	7.98e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.98e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	9.35e+00	6.68e-01	8.34e+00
  2	1.20e+00	7.33e-01	8.31e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.20e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  4.62e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 8.6e-02 2.1e-02 	 2.1e-02
  2	6.7e-03 2.2e-03 6.3e-04 	 6.3e-04
  3	1.9e-04 6.1e-05 1.7e-05 	 1.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.20e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.3431106632120264]
Givens rotation for v=[0.373856332655221,0.0]
Givens rotation for v=[-0.17801442205676335,0.1472359388925227]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 39. Residual norm is 9.87e-03.
ssor achieved desired tolerance at iteration 58. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 8.83e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.42e-02
  3	3.93e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.93e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.62e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.86e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.50e-02.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.68e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 5.15e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.15e-01	6.29e+00	8.72e+00		1.06e+00
2	1.29e-01	6.07e-01	1.20e+01		1.59e+00
3	7.61e-03	8.07e-03	1.20e+01		1.87e+00
4	5.84e-04	8.00e-04	1.20e+01		1.94e+00
5	1.65e-05	5.93e-06	1.20e+01		2.72e+00
6	2.26e-07	3.76e-08	1.20e+01		2.87e+00
7	2.67e-15	4.47e-22	1.20e+01		2.87e+00
minres converged at iteration 7. |A r_k|=4.47e-22 and |r_k|=2.67e-15.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.82e-01	3.34e+00	7.66e+00		1.02e+00
2	3.98e-02	1.05e-01	1.26e+01		1.67e+00
3	2.69e-03	3.52e-03	1.26e+01		1.85e+00
4	3.12e-04	6.43e-04	1.26e+01		2.04e+00
5	9.29e-06	3.58e-06	1.26e+01		2.78e+00
6	1.11e-07	1.60e-08	1.26e+01		2.99e+00
7	7.10e-16	6.44e-23	1.26e+01		2.99e+00
minres converged at iteration 7. |A r_k|=6.44e-23 and |r_k|=7.10e-16.
test stop by condlim
The estimated condition number (=3.30e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=3.92e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
