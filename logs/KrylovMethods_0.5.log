>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (860.6953125 MB free)
Uptime: 54546.0 sec
Load Avg:  1.0068359375  0.947265625  0.96044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3291526 s       3244 s     260955 s    1232433 s        187 s
#2  3499 MHz    1315090 s       3176 s     144865 s    3778433 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - KrylovMethods                 0.3.0
2 additional packages:
 - Compat                        0.26.0
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.80e-02
  2	2.00e-02
  3	1.14e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.00e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 6.18e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.04e-01
  2	3.34e-02
  3	1.67e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.34e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 8.21e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.51e-01
cg iterated maxIter (=1) times but reached only residual norm 2.51e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 25. Residual norm is 4.72e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.76e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 1.76e-16.
=== blockcg ===
iter	max(relres)
  1	2.29e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.29e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.65e-01
  2	3.01e-01
  3	2.23e-01
  4	1.55e-01
  5	1.15e-01
  6	8.25e-02
  7	4.89e-02
  8	2.90e-02
  9	1.70e-02
 10	8.75e-03
 11	3.89e-03
 12	1.67e-03
 13	7.04e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 7.04e-04.
=== blockcg ===
iter	max(relres)
  1	4.65e-01
  2	3.01e-01
  3	2.23e-01
  4	1.55e-01
  5	1.15e-01
  6	8.25e-02
  7	4.89e-02
  8	2.90e-02
  9	1.70e-02
 10	8.75e-03
 11	3.89e-03
 12	1.67e-03
 13	7.04e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 7.04e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.56e+01	4.83e-01	9.16e+00
  2	8.33e+00	6.07e-01	9.10e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  8.33e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  7.34e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.1e-02 2.9e-02 	 2.9e-02
  2	8.5e-03 2.6e-03 8.8e-04 	 8.8e-04
  3	2.6e-04 8.2e-05 2.6e-05 	 2.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.43e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.2404026063387832]
Givens rotation for v=[-1.3533393154064857,0.0]
Givens rotation for v=[-0.3081705639445955,-0.7505373896780895]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.77e-03.
ssor achieved desired tolerance at iteration 54. Residual norm is 1.00e-02.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.02e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.49e-02
  3	4.07e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.07e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.17e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.99e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.18e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.12e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.08e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.08e-01	1.46e-01	5.12e+00		1.24e+00
2	3.93e-02	3.63e-01	8.56e+00		2.07e+00
3	9.45e-03	5.86e-02	1.14e+01		2.75e+00
4	7.14e-04	9.22e-04	1.14e+01		2.75e+00
5	2.11e-05	8.99e-06	1.14e+01		2.75e+00
6	1.13e-08	1.14e-10	1.14e+01		2.75e+00
7	1.04e-17	1.17e-25	1.14e+01		2.84e+00
minres converged at iteration 7. |A r_k|=1.17e-25 and |r_k|=1.04e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.06e-02	3.89e-01	8.46e+00		1.00e+00
2	1.16e-02	8.25e-02	1.12e+01		1.32e+00
3	1.57e-03	3.42e-03	1.12e+01		2.01e+00
4	7.66e-05	5.27e-05	1.12e+01		2.38e+00
5	9.58e-06	1.73e-05	1.12e+01		2.38e+00
6	4.16e-10	3.21e-13	1.12e+01		2.38e+00
7	8.42e-17	2.06e-22	1.12e+01		2.79e+00
minres converged at iteration 7. |A r_k|=2.06e-22 and |r_k|=8.42e-17.
test stop by condlim
The estimated condition number (=2.92e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.08e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
