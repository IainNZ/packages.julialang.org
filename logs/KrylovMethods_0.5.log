>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1291.33203125 MB free)
Uptime: 48545.0 sec
Load Avg:  0.98779296875  0.998046875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2963304 s       5962 s     252429 s    1068986 s         82 s
#2  3499 MHz    1180792 s        725 s     129213 s    3403646 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - KrylovMethods                 0.3.0
6 additional packages:
 - Compat                        0.24.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.3
 - DocOpt                        0.2.1
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.52e-02
  2	8.69e-03
  3	8.46e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 8.69e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 7.27e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	7.97e-02
  2	8.50e-02
  3	6.81e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 8.50e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 2.13e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.87e-03
cg iterated maxIter (=1) times but reached only residual norm 2.87e-03 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.51e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.63e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.63e-16.
=== blockcg ===
iter	max(relres)
  1	3.51e-14
blockCG iterated maxIter (=1) times but reached only residual norm 3.51e-14 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.92e-01
  2	2.39e-01
  3	1.85e-01
  4	1.43e-01
  5	1.07e-01
  6	7.56e-02
  7	4.73e-02
  8	2.84e-02
  9	1.50e-02
 10	6.71e-03
 11	2.85e-03
 12	1.18e-03
 13	4.86e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.86e-04.
=== blockcg ===
iter	max(relres)
  1	3.92e-01
  2	2.39e-01
  3	1.85e-01
  4	1.43e-01
  5	1.07e-01
  6	7.56e-02
  7	4.73e-02
  8	2.84e-02
  9	1.50e-02
 10	6.71e-03
 11	2.85e-03
 12	1.18e-03
 13	4.86e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.86e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.37e+01	6.57e-01	1.06e+01
  2	7.48e+00	8.30e-01	1.05e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  7.48e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  4.22e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 7.8e-02 2.6e-02 	 2.6e-02
  2	7.0e-03 2.3e-03 7.6e-04 	 7.6e-04
  3	2.4e-04 7.7e-05 2.3e-05 	 2.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.97e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.2452437882409541]
Givens rotation for v=[1.9660499108781844,0.0]
Givens rotation for v=[-0.015507179677753715,0.26090290351820433]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 31. Residual norm is 9.83e-03.
ssor achieved desired tolerance at iteration 46. Residual norm is 9.91e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 8.91e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.49e-02
  3	4.01e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.01e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.90e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.38e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.17e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.84e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.72e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.72e-01	1.10e+00	5.84e+00		1.16e+00
2	1.00e-02	6.06e-03	6.52e+00		1.30e+00
3	2.67e-03	1.53e-02	7.25e+00		1.44e+00
4	5.37e-04	1.67e-03	7.25e+00		1.44e+00
5	1.05e-05	3.40e-06	7.25e+00		1.44e+00
6	2.17e-06	6.57e-06	7.25e+00		1.46e+00
7	4.39e-09	1.28e-10	7.25e+00		1.46e+00
8	8.25e-20	1.85e-29	7.25e+00		1.80e+00
minres converged at iteration 8. |A r_k|=1.85e-29 and |r_k|=8.25e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.44e-02	3.49e-01	5.82e+00		1.01e+00
2	4.94e-03	4.73e-03	5.93e+00		1.17e+00
3	6.11e-04	1.88e-03	8.43e+00		1.67e+00
4	1.09e-04	2.69e-04	8.43e+00		1.80e+00
5	2.19e-06	7.23e-07	8.43e+00		1.80e+00
6	4.31e-07	1.18e-06	8.43e+00		1.80e+00
7	1.02e-09	3.66e-11	8.43e+00		1.80e+00
8	4.71e-19	2.60e-27	8.43e+00		2.10e+00
minres converged at iteration 8. |A r_k|=2.60e-27 and |r_k|=4.71e-19.
test stop by condlim
The estimated condition number (=2.04e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=3.00e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
