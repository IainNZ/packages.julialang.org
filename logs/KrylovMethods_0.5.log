>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1266.71484375 MB free)
Uptime: 48127.0 sec
Load Avg:  1.0029296875  1.001953125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2895322 s       3905 s     247758 s    1095504 s         88 s
#2  3503 MHz    1147758 s       9922 s     121878 s    3368746 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - KrylovMethods                 0.3.0
6 additional packages:
 - Compat                        0.23.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.3
 - DocOpt                        0.2.1
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.34e-02
  2	1.25e-02
  3	7.85e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.25e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 9.48e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.97e-02
  2	2.94e-02
  3	1.08e-01
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.94e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.51e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	8.25e-02
cg iterated maxIter (=1) times but reached only residual norm 8.25e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.04e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.87e-15
  2	5.44e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 5.44e-30.
=== blockcg ===
iter	max(relres)
  1	3.78e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.78e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.41e-01
  3	1.93e-01
  4	1.51e-01
  5	1.23e-01
  6	8.33e-02
  7	5.06e-02
  8	2.59e-02
  9	1.23e-02
 10	6.07e-03
 11	2.73e-03
 12	1.22e-03
 13	5.17e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.17e-04.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.41e-01
  3	1.93e-01
  4	1.51e-01
  5	1.23e-01
  6	8.33e-02
  7	5.06e-02
  8	2.59e-02
  9	1.23e-02
 10	6.07e-03
 11	2.73e-03
 12	1.22e-03
 13	5.17e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.17e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.64e+01	5.77e-01	9.47e+00
  2	1.17e+01	7.25e-01	9.40e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.17e+01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  6.90e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 1.1e-01 3.5e-02 	 3.5e-02
  2	1.0e-02 3.4e-03 9.3e-04 	 9.3e-04
  3	3.2e-04 1.0e-04 3.1e-05 	 3.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.42e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.4053695869877697]
Givens rotation for v=[-0.100752932522757,0.0]
Givens rotation for v=[-0.8353427639853938,0.12520782810227302]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 34. Residual norm is 9.72e-03.
ssor achieved desired tolerance at iteration 50. Residual norm is 9.92e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.34e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.31e-02
  3	3.88e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.88e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.41e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.64e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.43e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.02e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 6.37e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.37e-02	4.24e-02	4.81e+00		1.18e+00
2	5.49e-04	6.40e-05	5.31e+00		1.31e+00
3	1.81e-06	6.15e-08	5.31e+00		1.32e+00
4	9.71e-19	5.40e-30	5.31e+00		1.32e+00
minres converged at iteration 4. |A r_k|=5.40e-30 and |r_k|=9.71e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.10e-03	3.58e-03	5.28e+00		1.00e+00
2	6.41e-06	1.05e-07	5.28e+00		1.30e+00
3	1.79e-08	5.16e-10	5.28e+00		1.31e+00
4	1.75e-19	1.78e-29	5.28e+00		1.31e+00
minres converged at iteration 4. |A r_k|=1.78e-29 and |r_k|=1.75e-19.
test stop by condlim
The estimated condition number (=2.70e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=2.33e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
