>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (804.19140625 MB free)
Uptime: 56198.0 sec
Load Avg:  1.0048828125  0.98779296875  1.017578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3474614 s       6034 s     264380 s    1190373 s        104 s
#2  3500 MHz    1282972 s         83 s     139424 s    4010454 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - KrylovMethods                 0.3.0
2 additional packages:
 - Compat                        0.28.0
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.53e-02
  2	8.28e-03
  3	1.99e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.28e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 5.26e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.18e-02
  2	1.16e-02
  3	3.95e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.16e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 9.88e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.36e-01
cg iterated maxIter (=1) times but reached only residual norm 1.36e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.41e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.48e-15
  2	1.41e-29
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.41e-29.
=== blockcg ===
iter	max(relres)
  1	4.00e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.00e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.93e-01
  2	2.27e-01
  3	1.74e-01
  4	1.41e-01
  5	1.03e-01
  6	7.00e-02
  7	4.60e-02
  8	2.65e-02
  9	1.37e-02
 10	6.11e-03
 11	2.53e-03
 12	1.09e-03
 13	4.42e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.42e-04.
=== blockcg ===
iter	max(relres)
  1	3.93e-01
  2	2.27e-01
  3	1.74e-01
  4	1.41e-01
  5	1.03e-01
  6	7.00e-02
  7	4.60e-02
  8	2.65e-02
  9	1.37e-02
 10	6.11e-03
 11	2.53e-03
 12	1.09e-03
 13	4.42e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.42e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.62e+01	6.61e-01	9.54e+00
  2	7.26e-01	7.67e-01	9.49e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  7.26e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  4.95e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 7.8e-02 2.6e-02 	 2.6e-02
  2	6.9e-03 2.3e-03 7.0e-04 	 7.0e-04
  3	2.0e-04 5.5e-05 1.6e-05 	 1.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.78e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.741932115670674]
Givens rotation for v=[-1.5921173284655847,0.0]
Givens rotation for v=[-1.532778593507883,0.05829439160255838]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 26. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 39. Residual norm is 9.75e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.10e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.36e-02
  3	3.92e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.92e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.02e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.57e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.02e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.07e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 6.48e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.48e-01	1.52e+01	9.98e+00		1.09e+00
2	3.15e-02	3.94e-02	1.73e+01		2.03e+00
3	2.00e-03	2.36e-03	1.73e+01		3.67e+00
4	1.49e-04	2.01e-04	1.73e+01		3.79e+00
5	8.71e-08	8.78e-10	1.73e+01		3.94e+00
6	1.17e-09	2.59e-10	1.73e+01		4.14e+00
7	9.66e-14	1.32e-16	1.73e+01		4.14e+00
minres converged at iteration 7. |A r_k|=1.32e-16 and |r_k|=9.66e-14.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.21e-01	9.20e+00	8.90e+00		1.04e+00
2	1.92e-02	2.42e-02	1.76e+01		2.07e+00
3	1.24e-03	1.49e-03	1.76e+01		3.75e+00
4	9.47e-05	1.30e-04	1.76e+01		3.86e+00
5	5.68e-08	5.94e-10	1.76e+01		3.99e+00
6	7.63e-10	1.69e-10	1.76e+01		4.22e+00
7	4.47e-14	4.33e-17	1.76e+01		4.22e+00
minres converged at iteration 7. |A r_k|=4.33e-17 and |r_k|=4.47e-14.
test stop by condlim
The estimated condition number (=2.64e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.94e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
