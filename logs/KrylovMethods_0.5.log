>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1255.78125 MB free)
Uptime: 48149.0 sec
Load Avg:  1.0576171875  1.0498046875  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    2841210 s        259 s     229365 s    1194106 s         84 s
#2  3507 MHz    1158404 s       6978 s     121368 s    3398077 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - KrylovMethods                 0.3.0
6 additional packages:
 - Compat                        0.23.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.3
 - DocOpt                        0.2.1
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.66e-02
  2	1.51e-02
  3	7.92e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.51e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 5.89e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.31e-02
  2	1.07e-02
  3	6.32e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.07e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 8.35e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	5.73e-02
cg iterated maxIter (=1) times but reached only residual norm 5.73e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.34e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.20e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.20e-16.
=== blockcg ===
iter	max(relres)
  1	2.39e-15
blockCG iterated maxIter (=1) times but reached only residual norm 2.39e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.43e-01
  3	1.78e-01
  4	1.19e-01
  5	9.57e-02
  6	7.45e-02
  7	4.54e-02
  8	2.57e-02
  9	1.50e-02
 10	7.11e-03
 11	3.12e-03
 12	1.36e-03
 13	6.13e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.13e-04.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.43e-01
  3	1.78e-01
  4	1.19e-01
  5	9.57e-02
  6	7.45e-02
  7	4.54e-02
  8	2.57e-02
  9	1.50e-02
 10	7.11e-03
 11	3.12e-03
 12	1.36e-03
 13	6.13e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.13e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	7.03e+00	4.65e-01	8.48e+00
  2	2.38e-01	5.30e-01	8.46e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.38e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.68e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.4e-01 6.7e-02 2.1e-02 	 2.1e-02
  2	6.5e-03 1.9e-03 5.9e-04 	 5.9e-04
  3	1.8e-04 5.5e-05 1.8e-05 	 1.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.89e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.32145179060103257]
Givens rotation for v=[-0.404967573664516,0.0]
Givens rotation for v=[1.5656099040957479,0.018165816996553674]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.77e-03.
ssor achieved desired tolerance at iteration 56. Residual norm is 9.95e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.58e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.48e-02
  3	4.00e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.00e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.77e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 1.00e-02.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.92e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.98e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.64e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.64e-01	9.45e-01	5.54e+00		1.17e+00
2	4.08e-02	1.17e-01	7.45e+00		1.57e+00
3	7.46e-03	2.52e-02	7.45e+00		1.57e+00
4	2.00e-04	8.82e-05	7.45e+00		1.57e+00
5	1.59e-18	1.47e-31	7.45e+00		1.83e+00
minres converged at iteration 5. |A r_k|=1.47e-31 and |r_k|=1.59e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.95e-02	4.60e-01	6.79e+00		1.01e+00
2	1.41e-02	3.51e-02	6.79e+00		1.32e+00
3	4.38e-04	2.64e-04	7.27e+00		1.41e+00
4	3.34e-05	3.63e-05	7.27e+00		1.45e+00
5	1.74e-18	1.08e-30	7.27e+00		1.74e+00
minres converged at iteration 5. |A r_k|=1.08e-30 and |r_k|=1.74e-18.
test stop by condlim
The estimated condition number (=2.47e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.29e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
