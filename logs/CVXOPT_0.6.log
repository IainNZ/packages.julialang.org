>>> 'Pkg.add("CVXOPT")' log
INFO: Cloning cache of CVXOPT from https://github.com/cvxopt/CVXOPT.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing CVXOPT v0.1.0
INFO: Installing Conda v0.5.3
INFO: Installing MacroTools v0.3.6
INFO: Installing PyCall v1.12.0
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CVXOPT
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CVXOPT")' log
Julia Version 0.6.0-pre.beta.459
Commit 609b3d1 (2017-05-02 04:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (716.4140625 MB free)
Uptime: 34165.0 sec
Load Avg:  0.9951171875  0.99951171875  1.26220703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2105528 s       6570 s      96444 s     679443 s         30 s
#2  3499 MHz     576001 s         43 s      61186 s    2707853 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CVXOPT                        0.1.0
 - JSON                          0.10.0
7 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - Conda                         0.5.3
 - MacroTools                    0.3.6
 - PyCall                        1.12.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing CVXOPT
INFO: Installing cvxopt via the Conda cvxopt package...
Warning: 'conda-forge' already in 'channels' list, moving to the top
Fetching package metadata .........
Solving package specifications: ..........

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    fftw-3.3.6                 |                0         5.0 MB  conda-forge
    metis-5.1.0                |                3         244 KB  conda-forge
    tbb-2017_20170226          |                0         1.2 MB  conda-forge
    glpk-4.61                  |                0         1.1 MB  conda-forge
    gsl-2.2.1                  |  blas_openblas_2         7.2 MB  conda-forge
    suitesparse-4.5.4          |blas_openblas_200         2.1 MB  conda-forge
    cvxopt-1.1.9               |py27_blas_openblas_200         687 KB  conda-forge
    ------------------------------------------------------------
                                           Total:        17.5 MB

The following NEW packages will be INSTALLED:

    cvxopt:      1.1.9-py27_blas_openblas_200 conda-forge [blas_openblas]
    fftw:        3.3.6-0                      conda-forge
    glpk:        4.61-0                       conda-forge
    gmp:         6.1.2-0                      conda-forge
    gsl:         2.2.1-blas_openblas_2        conda-forge [blas_openblas]
    metis:       5.1.0-3                      conda-forge
    suitesparse: 4.5.4-blas_openblas_200      conda-forge [blas_openblas]
    tbb:         2017_20170226-0              conda-forge

Fetching packages ...
fftw-3.3.6-0.t   0% |                              | ETA:  --:--:--   0.00  B/sfftw-3.3.6-0.t   1% |                               | ETA:  0:00:03   1.64 MB/sfftw-3.3.6-0.t   2% |                               | ETA:  0:00:02   1.97 MB/sfftw-3.3.6-0.t   3% |#                              | ETA:  0:00:02   2.11 MB/sfftw-3.3.6-0.t   5% |#                              | ETA:  0:00:02   2.46 MB/sfftw-3.3.6-0.t   6% |#                              | ETA:  0:00:01   2.71 MB/sfftw-3.3.6-0.t   7% |##                             | ETA:  0:00:01   2.94 MB/sfftw-3.3.6-0.t   8% |##                             | ETA:  0:00:01   3.13 MB/sfftw-3.3.6-0.t  10% |###                            | ETA:  0:00:01   3.28 MB/sfftw-3.3.6-0.t  11% |###                            | ETA:  0:00:01   3.67 MB/sfftw-3.3.6-0.t  12% |###                            | ETA:  0:00:01   3.79 MB/sfftw-3.3.6-0.t  13% |####                           | ETA:  0:00:01   4.15 MB/sfftw-3.3.6-0.t  15% |####                           | ETA:  0:00:01   4.21 MB/sfftw-3.3.6-0.t  16% |#####                          | ETA:  0:00:00   4.52 MB/sfftw-3.3.6-0.t  17% |#####                          | ETA:  0:00:00   4.60 MB/sfftw-3.3.6-0.t  18% |#####                          | ETA:  0:00:00   4.90 MB/sfftw-3.3.6-0.t  20% |######                         | ETA:  0:00:00   4.91 MB/sfftw-3.3.6-0.t  21% |######                         | ETA:  0:00:00   5.19 MB/sfftw-3.3.6-0.t  22% |######                         | ETA:  0:00:00   5.26 MB/sfftw-3.3.6-0.t  23% |#######                        | ETA:  0:00:00   5.49 MB/sfftw-3.3.6-0.t  25% |#######                        | ETA:  0:00:00   5.73 MB/sfftw-3.3.6-0.t  26% |########                       | ETA:  0:00:00   5.77 MB/sfftw-3.3.6-0.t  27% |########                       | ETA:  0:00:00   5.99 MB/sfftw-3.3.6-0.t  28% |########                       | ETA:  0:00:00   6.23 MB/sfftw-3.3.6-0.t  30% |#########                      | ETA:  0:00:00   6.25 MB/sfftw-3.3.6-0.t  31% |#########                      | ETA:  0:00:00   6.45 MB/sfftw-3.3.6-0.t  32% |##########                     | ETA:  0:00:00   6.68 MB/sfftw-3.3.6-0.t  33% |##########                     | ETA:  0:00:00   6.90 MB/sfftw-3.3.6-0.t  35% |##########                     | ETA:  0:00:00   6.87 MB/sfftw-3.3.6-0.t  36% |###########                    | ETA:  0:00:00   7.08 MB/sfftw-3.3.6-0.t  37% |###########                    | ETA:  0:00:02   1.44 MB/sfftw-3.3.6-0.t  38% |###########                    | ETA:  0:00:02   1.49 MB/sfftw-3.3.6-0.t  39% |############                   | ETA:  0:00:05 614.71 kB/sfftw-3.3.6-0.t  40% |############                   | ETA:  0:00:04 633.67 kB/sfftw-3.3.6-0.t  41% |#############                  | ETA:  0:00:04 652.85 kB/sfftw-3.3.6-0.t  43% |#############                  | ETA:  0:00:04 672.09 kB/sfftw-3.3.6-0.t  44% |#############                  | ETA:  0:00:04 691.08 kB/sfftw-3.3.6-0.t  45% |##############                 | ETA:  0:00:04 708.60 kB/sfftw-3.3.6-0.t  46% |##############                 | ETA:  0:00:03 726.63 kB/sfftw-3.3.6-0.t  48% |##############                 | ETA:  0:00:03 745.61 kB/sfftw-3.3.6-0.t  49% |###############                | ETA:  0:00:03 764.62 kB/sfftw-3.3.6-0.t  50% |###############                | ETA:  0:00:03 783.62 kB/sfftw-3.3.6-0.t  51% |################               | ETA:  0:00:03 802.62 kB/sfftw-3.3.6-0.t  53% |################               | ETA:  0:00:02 821.65 kB/sfftw-3.3.6-0.t  54% |################               | ETA:  0:00:02 840.68 kB/sfftw-3.3.6-0.t  55% |#################              | ETA:  0:00:02 859.67 kB/sfftw-3.3.6-0.t  56% |#################              | ETA:  0:00:02 878.46 kB/sfftw-3.3.6-0.t  58% |##################             | ETA:  0:00:02 897.41 kB/sfftw-3.3.6-0.t  59% |##################             | ETA:  0:00:02 916.32 kB/sfftw-3.3.6-0.t  60% |##################             | ETA:  0:00:02 935.03 kB/sfftw-3.3.6-0.t  61% |###################            | ETA:  0:00:02 953.84 kB/sfftw-3.3.6-0.t  63% |###################            | ETA:  0:00:01 971.11 kB/sfftw-3.3.6-0.t  64% |###################            | ETA:  0:00:01 989.07 kB/sfftw-3.3.6-0.t  65% |####################           | ETA:  0:00:01   1.01 MB/sfftw-3.3.6-0.t  67% |####################           | ETA:  0:00:01   1.03 MB/sfftw-3.3.6-0.t  68% |#####################          | ETA:  0:00:01   1.05 MB/sfftw-3.3.6-0.t  69% |#####################          | ETA:  0:00:01   1.06 MB/sfftw-3.3.6-0.t  70% |#####################          | ETA:  0:00:01   1.08 MB/sfftw-3.3.6-0.t  72% |######################         | ETA:  0:00:01   1.10 MB/sfftw-3.3.6-0.t  73% |######################         | ETA:  0:00:01   1.12 MB/sfftw-3.3.6-0.t  74% |#######################        | ETA:  0:00:01   1.14 MB/sfftw-3.3.6-0.t  75% |#######################        | ETA:  0:00:01   1.16 MB/sfftw-3.3.6-0.t  77% |#######################        | ETA:  0:00:01   1.18 MB/sfftw-3.3.6-0.t  78% |########################       | ETA:  0:00:00   1.19 MB/sfftw-3.3.6-0.t  79% |########################       | ETA:  0:00:00   1.21 MB/sfftw-3.3.6-0.t  80% |#########################      | ETA:  0:00:00   1.23 MB/sfftw-3.3.6-0.t  82% |#########################      | ETA:  0:00:00   1.25 MB/sfftw-3.3.6-0.t  83% |#########################      | ETA:  0:00:00   1.27 MB/sfftw-3.3.6-0.t  84% |##########################     | ETA:  0:00:00   1.29 MB/sfftw-3.3.6-0.t  85% |##########################     | ETA:  0:00:00   1.31 MB/sfftw-3.3.6-0.t  87% |##########################     | ETA:  0:00:00   1.32 MB/sfftw-3.3.6-0.t  88% |###########################    | ETA:  0:00:00   1.34 MB/sfftw-3.3.6-0.t  89% |###########################    | ETA:  0:00:00   1.36 MB/sfftw-3.3.6-0.t  90% |############################   | ETA:  0:00:00   1.38 MB/sfftw-3.3.6-0.t  92% |############################   | ETA:  0:00:00   1.40 MB/sfftw-3.3.6-0.t  93% |############################   | ETA:  0:00:00   1.42 MB/sfftw-3.3.6-0.t  94% |#############################  | ETA:  0:00:00   1.44 MB/sfftw-3.3.6-0.t  95% |#############################  | ETA:  0:00:00   1.45 MB/sfftw-3.3.6-0.t  97% |############################## | ETA:  0:00:00   1.47 MB/sfftw-3.3.6-0.t  98% |############################## | ETA:  0:00:00   1.49 MB/sfftw-3.3.6-0.t  99% |############################## | ETA:  0:00:00   1.51 MB/sfftw-3.3.6-0.t 100% |###############################| Time: 0:00:03   1.52 MB/s
metis-5.1.0-3.   0% |                              | ETA:  --:--:--   0.00  B/smetis-5.1.0-3.   6% |##                             | Time: 0:00:00   1.29 MB/smetis-5.1.0-3.  13% |####                           | Time: 0:00:00   1.27 MB/smetis-5.1.0-3.  19% |######                         | Time: 0:00:00   1.25 MB/smetis-5.1.0-3.  26% |########                       | Time: 0:00:00   1.24 MB/smetis-5.1.0-3.  32% |##########                     | Time: 0:00:00   1.53 MB/smetis-5.1.0-3.  39% |############                   | Time: 0:00:00   1.48 MB/smetis-5.1.0-3.  45% |##############                 | Time: 0:00:00   1.71 MB/smetis-5.1.0-3.  52% |################               | Time: 0:00:00   1.64 MB/smetis-5.1.0-3.  58% |##################             | Time: 0:00:00   1.84 MB/smetis-5.1.0-3.  65% |####################           | Time: 0:00:00   1.76 MB/smetis-5.1.0-3.  72% |######################         | Time: 0:00:00   1.93 MB/smetis-5.1.0-3.  78% |########################       | Time: 0:00:00   1.85 MB/smetis-5.1.0-3.  85% |##########################     | Time: 0:00:00   1.99 MB/smetis-5.1.0-3.  91% |############################   | Time: 0:00:00   2.13 MB/smetis-5.1.0-3.  98% |############################## | Time: 0:00:00   2.27 MB/smetis-5.1.0-3. 100% |###############################| Time: 0:00:00   2.31 MB/smetis-5.1.0-3. 100% |###############################| Time: 0:00:00   2.30 MB/s
tbb-2017_20170   0% |                              | ETA:  --:--:--   0.00  B/stbb-2017_20170   1% |                               | Time: 0:00:00   1.32 MB/stbb-2017_20170   2% |                               | Time: 0:00:00   1.27 MB/stbb-2017_20170   3% |#                              | Time: 0:00:00   1.84 MB/stbb-2017_20170   5% |#                              | Time: 0:00:00   1.66 MB/stbb-2017_20170   6% |#                              | Time: 0:00:00   1.55 MB/stbb-2017_20170   7% |##                             | Time: 0:00:00   1.83 MB/stbb-2017_20170   8% |##                             | Time: 0:00:00   1.73 MB/stbb-2017_20170  10% |###                            | Time: 0:00:00   1.96 MB/stbb-2017_20170  11% |###                            | Time: 0:00:00   1.85 MB/stbb-2017_20170  12% |###                            | Time: 0:00:00   2.04 MB/stbb-2017_20170  13% |####                           | Time: 0:00:00   1.94 MB/stbb-2017_20170  15% |####                           | Time: 0:00:00   2.10 MB/stbb-2017_20170  16% |#####                          | Time: 0:00:00   2.26 MB/stbb-2017_20170  17% |#####                          | Time: 0:00:00   2.16 MB/stbb-2017_20170  18% |#####                          | Time: 0:00:00   2.30 MB/stbb-2017_20170  20% |######                         | Time: 0:00:00   2.44 MB/stbb-2017_20170  21% |######                         | Time: 0:00:00   2.32 MB/stbb-2017_20170  22% |#######                        | Time: 0:00:00   2.44 MB/stbb-2017_20170  24% |#######                        | Time: 0:00:00   2.56 MB/stbb-2017_20170  25% |#######                        | Time: 0:00:00   2.69 MB/stbb-2017_20170  26% |########                       | Time: 0:00:00   2.58 MB/stbb-2017_20170  27% |########                       | Time: 0:00:00   2.68 MB/stbb-2017_20170  29% |#########                      | Time: 0:00:00   2.79 MB/stbb-2017_20170  30% |#########                      | Time: 0:00:00   2.90 MB/stbb-2017_20170  31% |#########                      | Time: 0:00:00   2.79 MB/stbb-2017_20170  32% |##########                     | Time: 0:00:00   2.89 MB/stbb-2017_20170  34% |##########                     | Time: 0:00:00   2.99 MB/stbb-2017_20170  35% |##########                     | Time: 0:00:00   3.09 MB/stbb-2017_20170  36% |###########                    | Time: 0:00:00   3.19 MB/stbb-2017_20170  37% |###########                    | Time: 0:00:00   3.07 MB/stbb-2017_20170  39% |############                   | Time: 0:00:00   3.16 MB/stbb-2017_20170  40% |############                   | Time: 0:00:00   3.25 MB/stbb-2017_20170  41% |############                   | Time: 0:00:00   3.34 MB/stbb-2017_20170  43% |#############                  | Time: 0:00:00   3.43 MB/stbb-2017_20170  44% |#############                  | Time: 0:00:00   3.52 MB/stbb-2017_20170  45% |##############                 | Time: 0:00:00   3.40 MB/stbb-2017_20170  46% |##############                 | Time: 0:00:00   3.48 MB/stbb-2017_20170  48% |##############                 | Time: 0:00:00   3.56 MB/stbb-2017_20170  49% |###############                | Time: 0:00:00   3.64 MB/stbb-2017_20170  50% |###############                | Time: 0:00:00   3.73 MB/stbb-2017_20170  51% |################               | Time: 0:00:00   3.81 MB/stbb-2017_20170  53% |################               | Time: 0:00:00   3.68 MB/stbb-2017_20170  54% |################               | Time: 0:00:00   3.75 MB/stbb-2017_20170  55% |#################              | Time: 0:00:00   3.83 MB/stbb-2017_20170  56% |#################              | Time: 0:00:00   3.90 MB/stbb-2017_20170  58% |##################             | Time: 0:00:00   3.98 MB/stbb-2017_20170  59% |##################             | Time: 0:00:00   4.06 MB/stbb-2017_20170  60% |##################             | Time: 0:00:00   4.13 MB/stbb-2017_20170  62% |###################            | Time: 0:00:00   3.99 MB/stbb-2017_20170  63% |###################            | Time: 0:00:00   4.05 MB/stbb-2017_20170  64% |####################           | Time: 0:00:00   4.12 MB/stbb-2017_20170  65% |####################           | Time: 0:00:00   4.20 MB/stbb-2017_20170  67% |####################           | Time: 0:00:00   4.27 MB/stbb-2017_20170  68% |#####################          | Time: 0:00:00   4.34 MB/stbb-2017_20170  69% |#####################          | Time: 0:00:00   4.41 MB/stbb-2017_20170  70% |#####################          | Time: 0:00:00   4.48 MB/stbb-2017_20170  72% |######################         | Time: 0:00:00   4.55 MB/stbb-2017_20170  73% |######################         | Time: 0:00:00   4.43 MB/stbb-2017_20170  74% |#######################        | Time: 0:00:00   4.49 MB/stbb-2017_20170  75% |#######################        | Time: 0:00:00   4.55 MB/stbb-2017_20170  77% |#######################        | Time: 0:00:00   4.62 MB/stbb-2017_20170  78% |########################       | Time: 0:00:00   4.68 MB/stbb-2017_20170  79% |########################       | Time: 0:00:00   4.75 MB/stbb-2017_20170  80% |#########################      | Time: 0:00:00   4.82 MB/stbb-2017_20170  82% |#########################      | Time: 0:00:00   4.88 MB/stbb-2017_20170  83% |#########################      | Time: 0:00:00   4.74 MB/stbb-2017_20170  84% |##########################     | Time: 0:00:00   4.80 MB/stbb-2017_20170  86% |##########################     | Time: 0:00:00   4.86 MB/stbb-2017_20170  87% |###########################    | Time: 0:00:00   4.92 MB/stbb-2017_20170  88% |###########################    | Time: 0:00:00   4.98 MB/stbb-2017_20170  89% |###########################    | Time: 0:00:00   5.04 MB/stbb-2017_20170  91% |############################   | Time: 0:00:00   5.10 MB/stbb-2017_20170  92% |############################   | Time: 0:00:00   5.17 MB/stbb-2017_20170  93% |#############################  | Time: 0:00:00   5.23 MB/stbb-2017_20170  94% |#############################  | Time: 0:00:00   5.29 MB/stbb-2017_20170  96% |#############################  | Time: 0:00:00   5.35 MB/stbb-2017_20170  97% |############################## | Time: 0:00:00   5.24 MB/stbb-2017_20170  98% |############################## | Time: 0:00:00   5.30 MB/stbb-2017_20170  99% |############################## | Time: 0:00:00   5.36 MB/stbb-2017_20170 100% |###############################| Time: 0:00:00   5.35 MB/stbb-2017_20170 100% |###############################| Time: 0:00:00   5.34 MB/s
glpk-4.61-0.ta   0% |                              | ETA:  --:--:--   0.00  B/sglpk-4.61-0.ta   1% |                               | Time: 0:00:00   1.27 MB/sglpk-4.61-0.ta   2% |                               | Time: 0:00:00   1.26 MB/sglpk-4.61-0.ta   4% |#                              | Time: 0:00:00   1.26 MB/sglpk-4.61-0.ta   5% |#                              | Time: 0:00:00   1.66 MB/sglpk-4.61-0.ta   7% |##                             | Time: 0:00:00   1.55 MB/sglpk-4.61-0.ta   8% |##                             | Time: 0:00:00   1.86 MB/sglpk-4.61-0.ta  10% |###                            | Time: 0:00:00   1.73 MB/sglpk-4.61-0.ta  11% |###                            | Time: 0:00:00   1.96 MB/sglpk-4.61-0.ta  13% |####                           | Time: 0:00:00   1.84 MB/sglpk-4.61-0.ta  14% |####                           | Time: 0:00:00   2.03 MB/sglpk-4.61-0.ta  16% |#####                          | Time: 0:00:00   2.23 MB/sglpk-4.61-0.ta  17% |#####                          | Time: 0:00:00   2.13 MB/sglpk-4.61-0.ta  19% |#####                          | Time: 0:00:00   2.29 MB/sglpk-4.61-0.ta  20% |######                         | Time: 0:00:00   2.45 MB/sglpk-4.61-0.ta  22% |######                         | Time: 0:00:00   2.62 MB/sglpk-4.61-0.ta  23% |#######                        | Time: 0:00:00   2.48 MB/sglpk-4.61-0.ta  25% |#######                        | Time: 0:00:00   2.62 MB/sglpk-4.61-0.ta  26% |########                       | Time: 0:00:00   2.76 MB/sglpk-4.61-0.ta  28% |########                       | Time: 0:00:00   2.91 MB/sglpk-4.61-0.ta  29% |#########                      | Time: 0:00:00   3.05 MB/sglpk-4.61-0.ta  31% |#########                      | Time: 0:00:00   3.20 MB/sglpk-4.61-0.ta  32% |##########                     | Time: 0:00:00   3.02 MB/sglpk-4.61-0.ta  34% |##########                     | Time: 0:00:00   3.14 MB/sglpk-4.61-0.ta  35% |###########                    | Time: 0:00:00   3.26 MB/sglpk-4.61-0.ta  37% |###########                    | Time: 0:00:00   3.37 MB/sglpk-4.61-0.ta  38% |###########                    | Time: 0:00:00   3.49 MB/sglpk-4.61-0.ta  40% |############                   | Time: 0:00:00   3.34 MB/sglpk-4.61-0.ta  41% |############                   | Time: 0:00:00   3.43 MB/sglpk-4.61-0.ta  43% |#############                  | Time: 0:00:00   3.55 MB/sglpk-4.61-0.ta  44% |#############                  | Time: 0:00:00   3.66 MB/sglpk-4.61-0.ta  46% |##############                 | Time: 0:00:00   3.78 MB/sglpk-4.61-0.ta  47% |##############                 | Time: 0:00:00   3.89 MB/sglpk-4.61-0.ta  48% |###############                | Time: 0:00:00   4.01 MB/sglpk-4.61-0.ta  50% |###############                | Time: 0:00:00   3.82 MB/sglpk-4.61-0.ta  51% |################               | Time: 0:00:00   3.90 MB/sglpk-4.61-0.ta  53% |################               | Time: 0:00:00   3.99 MB/sglpk-4.61-0.ta  54% |#################              | Time: 0:00:00   4.09 MB/sglpk-4.61-0.ta  56% |#################              | Time: 0:00:00   4.18 MB/sglpk-4.61-0.ta  57% |#################              | Time: 0:00:00   4.28 MB/sglpk-4.61-0.ta  59% |##################             | Time: 0:00:00   4.37 MB/sglpk-4.61-0.ta  60% |##################             | Time: 0:00:00   4.47 MB/sglpk-4.61-0.ta  62% |###################            | Time: 0:00:00   4.33 MB/sglpk-4.61-0.ta  63% |###################            | Time: 0:00:00   4.41 MB/sglpk-4.61-0.ta  65% |####################           | Time: 0:00:00   4.48 MB/sglpk-4.61-0.ta  66% |####################           | Time: 0:00:00   4.57 MB/sglpk-4.61-0.ta  68% |#####################          | Time: 0:00:00   4.66 MB/sglpk-4.61-0.ta  69% |#####################          | Time: 0:00:00   4.75 MB/sglpk-4.61-0.ta  71% |######################         | Time: 0:00:00   4.83 MB/sglpk-4.61-0.ta  72% |######################         | Time: 0:00:00   4.91 MB/sglpk-4.61-0.ta  74% |#######################        | Time: 0:00:00   5.00 MB/sglpk-4.61-0.ta  75% |#######################        | Time: 0:00:00   4.80 MB/sglpk-4.61-0.ta  77% |#######################        | Time: 0:00:00   4.88 MB/sglpk-4.61-0.ta  78% |########################       | Time: 0:00:00   4.95 MB/sglpk-4.61-0.ta  80% |########################       | Time: 0:00:00   5.03 MB/sglpk-4.61-0.ta  81% |#########################      | Time: 0:00:00   5.11 MB/sglpk-4.61-0.ta  83% |#########################      | Time: 0:00:00   5.18 MB/sglpk-4.61-0.ta  84% |##########################     | Time: 0:00:00   5.26 MB/sglpk-4.61-0.ta  86% |##########################     | Time: 0:00:00   5.33 MB/sglpk-4.61-0.ta  87% |###########################    | Time: 0:00:00   5.41 MB/sglpk-4.61-0.ta  89% |###########################    | Time: 0:00:00   5.49 MB/sglpk-4.61-0.ta  90% |############################   | Time: 0:00:00   5.37 MB/sglpk-4.61-0.ta  92% |############################   | Time: 0:00:00   5.44 MB/sglpk-4.61-0.ta  93% |############################   | Time: 0:00:00   5.51 MB/sglpk-4.61-0.ta  95% |#############################  | Time: 0:00:00   5.58 MB/sglpk-4.61-0.ta  96% |#############################  | Time: 0:00:00   5.65 MB/sglpk-4.61-0.ta  97% |############################## | Time: 0:00:00   5.73 MB/sglpk-4.61-0.ta  99% |############################## | Time: 0:00:00   5.80 MB/sglpk-4.61-0.ta 100% |###############################| Time: 0:00:00   5.82 MB/sglpk-4.61-0.ta 100% |###############################| Time: 0:00:00   5.81 MB/s
gsl-2.2.1-blas   0% |                              | ETA:  --:--:--   0.00  B/sgsl-2.2.1-blas   0% |                               | Time: 0:00:00   1.21 MB/sgsl-2.2.1-blas   0% |                               | Time: 0:00:00   1.22 MB/sgsl-2.2.1-blas   0% |                               | Time: 0:00:00   1.22 MB/sgsl-2.2.1-blas   0% |                               | Time: 0:00:00   1.61 MB/sgsl-2.2.1-blas   1% |                               | Time: 0:00:00   1.52 MB/sgsl-2.2.1-blas   1% |                               | Time: 0:00:00   1.82 MB/sgsl-2.2.1-blas   1% |                               | Time: 0:00:00   1.71 MB/sgsl-2.2.1-blas   1% |                               | Time: 0:00:00   1.94 MB/sgsl-2.2.1-blas   1% |                               | Time: 0:00:00   1.83 MB/sgsl-2.2.1-blas   2% |                               | Time: 0:00:00   2.01 MB/sgsl-2.2.1-blas   2% |                               | Time: 0:00:00   1.92 MB/sgsl-2.2.1-blas   2% |                               | Time: 0:00:00   2.09 MB/sgsl-2.2.1-blas   2% |                               | Time: 0:00:00   2.25 MB/sgsl-2.2.1-blas   3% |                               | Time: 0:00:00   2.14 MB/sgsl-2.2.1-blas   3% |#                              | Time: 0:00:00   2.28 MB/sgsl-2.2.1-blas   3% |#                              | Time: 0:00:00   2.43 MB/sgsl-2.2.1-blas   3% |#                              | Time: 0:00:00   2.57 MB/sgsl-2.2.1-blas   3% |#                              | Time: 0:00:00   2.72 MB/sgsl-2.2.1-blas   4% |#                              | Time: 0:00:00   2.59 MB/sgsl-2.2.1-blas   4% |#                              | Time: 0:00:00   2.71 MB/sgsl-2.2.1-blas   4% |#                              | Time: 0:00:00   2.84 MB/sgsl-2.2.1-blas   4% |#                              | Time: 0:00:00   2.97 MB/sgsl-2.2.1-blas   4% |#                              | Time: 0:00:00   2.82 MB/sgsl-2.2.1-blas   5% |#                              | Time: 0:00:00   2.92 MB/sgsl-2.2.1-blas   5% |#                              | Time: 0:00:00   3.03 MB/sgsl-2.2.1-blas   5% |#                              | Time: 0:00:00   3.14 MB/sgsl-2.2.1-blas   5% |#                              | Time: 0:00:00   3.26 MB/sgsl-2.2.1-blas   6% |#                              | Time: 0:00:00   3.11 MB/sgsl-2.2.1-blas   6% |#                              | Time: 0:00:00   3.21 MB/sgsl-2.2.1-blas   6% |##                             | Time: 0:00:00   3.31 MB/sgsl-2.2.1-blas   6% |##                             | Time: 0:00:00   3.41 MB/sgsl-2.2.1-blas   6% |##                             | Time: 0:00:00   3.51 MB/sgsl-2.2.1-blas   7% |##                             | Time: 0:00:00   3.61 MB/sgsl-2.2.1-blas   7% |##                             | Time: 0:00:00   3.47 MB/sgsl-2.2.1-blas   7% |##                             | Time: 0:00:00   3.55 MB/sgsl-2.2.1-blas   7% |##                             | Time: 0:00:00   3.64 MB/sgsl-2.2.1-blas   8% |##                             | Time: 0:00:00   3.69 MB/sgsl-2.2.1-blas   8% |##                             | Time: 0:00:00   3.77 MB/sgsl-2.2.1-blas   8% |##                             | Time: 0:00:00   3.86 MB/sgsl-2.2.1-blas   8% |##                             | Time: 0:00:00   3.95 MB/sgsl-2.2.1-blas   8% |##                             | Time: 0:00:00   3.87 MB/sgsl-2.2.1-blas   9% |##                             | Time: 0:00:00   3.94 MB/sgsl-2.2.1-blas   9% |##                             | Time: 0:00:00   4.02 MB/sgsl-2.2.1-blas   9% |##                             | Time: 0:00:00   4.11 MB/sgsl-2.2.1-blas   9% |###                            | Time: 0:00:00   4.19 MB/sgsl-2.2.1-blas   9% |###                            | Time: 0:00:00   4.28 MB/sgsl-2.2.1-blas  10% |###                            | Time: 0:00:00   4.36 MB/sgsl-2.2.1-blas  10% |###                            | Time: 0:00:00   4.44 MB/sgsl-2.2.1-blas  10% |###                            | Time: 0:00:00   4.29 MB/sgsl-2.2.1-blas  10% |###                            | Time: 0:00:00   4.35 MB/sgsl-2.2.1-blas  11% |###                            | Time: 0:00:00   4.42 MB/sgsl-2.2.1-blas  11% |###                            | Time: 0:00:00   4.50 MB/sgsl-2.2.1-blas  11% |###                            | Time: 0:00:00   4.58 MB/sgsl-2.2.1-blas  11% |###                            | Time: 0:00:00   4.66 MB/sgsl-2.2.1-blas  11% |###                            | Time: 0:00:00   4.74 MB/sgsl-2.2.1-blas  12% |###                            | Time: 0:00:00   4.82 MB/sgsl-2.2.1-blas  12% |###                            | Time: 0:00:00   4.89 MB/sgsl-2.2.1-blas  12% |###                            | Time: 0:00:00   4.75 MB/sgsl-2.2.1-blas  12% |###                            | Time: 0:00:00   4.78 MB/sgsl-2.2.1-blas  13% |####                           | Time: 0:00:00   4.84 MB/sgsl-2.2.1-blas  13% |####                           | Time: 0:00:00   4.91 MB/sgsl-2.2.1-blas  13% |####                           | Time: 0:00:00   4.98 MB/sgsl-2.2.1-blas  13% |####                           | Time: 0:00:00   5.05 MB/sgsl-2.2.1-blas  13% |####                           | Time: 0:00:00   5.12 MB/sgsl-2.2.1-blas  14% |####                           | Time: 0:00:00   5.20 MB/sgsl-2.2.1-blas  14% |####                           | Time: 0:00:00   5.27 MB/sgsl-2.2.1-blas  14% |####                           | Time: 0:00:00   5.34 MB/sgsl-2.2.1-blas  14% |####                           | Time: 0:00:00   5.20 MB/sgsl-2.2.1-blas  14% |####                           | Time: 0:00:00   5.26 MB/sgsl-2.2.1-blas  15% |####                           | Time: 0:00:00   5.31 MB/sgsl-2.2.1-blas  15% |####                           | Time: 0:00:00   5.37 MB/sgsl-2.2.1-blas  15% |####                           | Time: 0:00:00   5.44 MB/sgsl-2.2.1-blas  15% |####                           | Time: 0:00:00   5.50 MB/sgsl-2.2.1-blas  16% |####                           | Time: 0:00:00   5.57 MB/sgsl-2.2.1-blas  16% |#####                          | Time: 0:00:00   5.64 MB/sgsl-2.2.1-blas  16% |#####                          | Time: 0:00:00   5.70 MB/sgsl-2.2.1-blas  16% |#####                          | Time: 0:00:00   5.77 MB/sgsl-2.2.1-blas  16% |#####                          | Time: 0:00:00   5.84 MB/sgsl-2.2.1-blas  17% |#####                          | Time: 0:00:00   5.69 MB/sgsl-2.2.1-blas  17% |#####                          | Time: 0:00:00   5.74 MB/sgsl-2.2.1-blas  17% |#####                          | Time: 0:00:00   5.78 MB/sgsl-2.2.1-blas  17% |#####                          | Time: 0:00:00   5.83 MB/sgsl-2.2.1-blas  18% |#####                          | Time: 0:00:00   5.89 MB/sgsl-2.2.1-blas  18% |#####                          | Time: 0:00:00   5.96 MB/sgsl-2.2.1-blas  18% |#####                          | Time: 0:00:00   6.02 MB/sgsl-2.2.1-blas  18% |#####                          | Time: 0:00:00   6.08 MB/sgsl-2.2.1-blas  18% |#####                          | Time: 0:00:00   6.15 MB/sgsl-2.2.1-blas  19% |#####                          | Time: 0:00:00   6.20 MB/sgsl-2.2.1-blas  19% |#####                          | Time: 0:00:00   6.26 MB/sgsl-2.2.1-blas  19% |######                         | Time: 0:00:00   6.32 MB/sgsl-2.2.1-blas  19% |######                         | Time: 0:00:00   6.38 MB/sgsl-2.2.1-blas  19% |######                         | Time: 0:00:00   6.44 MB/sgsl-2.2.1-blas  20% |######                         | Time: 0:00:00   6.33 MB/sgsl-2.2.1-blas  20% |######                         | Time: 0:00:00   6.36 MB/sgsl-2.2.1-blas  20% |######                         | Time: 0:00:00   6.40 MB/sgsl-2.2.1-blas  20% |######                         | Time: 0:00:00   6.46 MB/sgsl-2.2.1-blas  21% |######                         | Time: 0:00:00   6.51 MB/sgsl-2.2.1-blas  21% |######                         | Time: 0:00:00   6.57 MB/sgsl-2.2.1-blas  21% |######                         | Time: 0:00:00   6.63 MB/sgsl-2.2.1-blas  21% |######                         | Time: 0:00:00   6.69 MB/sgsl-2.2.1-blas  21% |######                         | Time: 0:00:00   6.74 MB/sgsl-2.2.1-blas  22% |######                         | Time: 0:00:00   6.80 MB/sgsl-2.2.1-blas  22% |######                         | Time: 0:00:00   6.86 MB/sgsl-2.2.1-blas  22% |#######                        | Time: 0:00:00   6.92 MB/sgsl-2.2.1-blas  22% |#######                        | Time: 0:00:00   6.98 MB/sgsl-2.2.1-blas  23% |#######                        | Time: 0:00:00   7.04 MB/sgsl-2.2.1-blas  23% |#######                        | Time: 0:00:00   6.88 MB/sgsl-2.2.1-blas  23% |#######                        | Time: 0:00:00   6.91 MB/sgsl-2.2.1-blas  23% |#######                        | Time: 0:00:00   6.95 MB/sgsl-2.2.1-blas  23% |#######                        | Time: 0:00:00   7.00 MB/sgsl-2.2.1-blas  24% |#######                        | Time: 0:00:00   7.06 MB/sgsl-2.2.1-blas  24% |#######                        | Time: 0:00:00   7.11 MB/sgsl-2.2.1-blas  24% |#######                        | Time: 0:00:00   7.17 MB/sgsl-2.2.1-blas  24% |#######                        | Time: 0:00:00   7.22 MB/sgsl-2.2.1-blas  24% |#######                        | Time: 0:00:00   7.28 MB/sgsl-2.2.1-blas  25% |#######                        | Time: 0:00:00   7.33 MB/sgsl-2.2.1-blas  25% |#######                        | Time: 0:00:00   7.39 MB/sgsl-2.2.1-blas  25% |#######                        | Time: 0:00:00   7.44 MB/sgsl-2.2.1-blas  25% |########                       | Time: 0:00:00   7.49 MB/sgsl-2.2.1-blas  26% |########                       | Time: 0:00:00   7.55 MB/sgsl-2.2.1-blas  26% |########                       | Time: 0:00:00   7.60 MB/sgsl-2.2.1-blas  26% |########                       | Time: 0:00:00   7.65 MB/sgsl-2.2.1-blas  26% |########                       | Time: 0:00:00   7.71 MB/sgsl-2.2.1-blas  26% |########                       | Time: 0:00:00   7.60 MB/sgsl-2.2.1-blas  27% |########                       | Time: 0:00:00   7.63 MB/sgsl-2.2.1-blas  27% |########                       | Time: 0:00:00   7.66 MB/sgsl-2.2.1-blas  27% |########                       | Time: 0:00:00   7.71 MB/sgsl-2.2.1-blas  27% |########                       | Time: 0:00:00   7.76 MB/sgsl-2.2.1-blas  28% |########                       | Time: 0:00:00   7.81 MB/sgsl-2.2.1-blas  28% |########                       | Time: 0:00:00   7.87 MB/sgsl-2.2.1-blas  28% |########                       | Time: 0:00:00   7.92 MB/sgsl-2.2.1-blas  28% |########                       | Time: 0:00:00   7.97 MB/sgsl-2.2.1-blas  28% |########                       | Time: 0:00:00   8.03 MB/sgsl-2.2.1-blas  29% |#########                      | Time: 0:00:00   8.08 MB/sgsl-2.2.1-blas  29% |#########                      | Time: 0:00:00   8.13 MB/sgsl-2.2.1-blas  29% |#########                      | Time: 0:00:00   8.18 MB/sgsl-2.2.1-blas  29% |#########                      | Time: 0:00:00   8.24 MB/sgsl-2.2.1-blas  29% |#########                      | Time: 0:00:00   8.29 MB/sgsl-2.2.1-blas  30% |#########                      | Time: 0:00:00   8.33 MB/sgsl-2.2.1-blas  30% |#########                      | Time: 0:00:00   8.38 MB/sgsl-2.2.1-blas  30% |#########                      | Time: 0:00:00   8.43 MB/sgsl-2.2.1-blas  30% |#########                      | Time: 0:00:00   8.25 MB/sgsl-2.2.1-blas  31% |#########                      | Time: 0:00:00   8.27 MB/sgsl-2.2.1-blas  31% |#########                      | Time: 0:00:00   8.32 MB/sgsl-2.2.1-blas  31% |#########                      | Time: 0:00:00   8.37 MB/sgsl-2.2.1-blas  31% |#########                      | Time: 0:00:00   8.41 MB/sgsl-2.2.1-blas  31% |#########                      | Time: 0:00:00   8.46 MB/sgsl-2.2.1-blas  32% |#########                      | Time: 0:00:00   8.51 MB/sgsl-2.2.1-blas  32% |##########                     | Time: 0:00:00   8.56 MB/sgsl-2.2.1-blas  32% |##########                     | Time: 0:00:00   8.60 MB/sgsl-2.2.1-blas  32% |##########                     | Time: 0:00:00   8.65 MB/sgsl-2.2.1-blas  33% |##########                     | Time: 0:00:00   8.70 MB/sgsl-2.2.1-blas  33% |##########                     | Time: 0:00:00   8.76 MB/sgsl-2.2.1-blas  33% |##########                     | Time: 0:00:00   8.81 MB/sgsl-2.2.1-blas  33% |##########                     | Time: 0:00:00   8.86 MB/sgsl-2.2.1-blas  33% |##########                     | Time: 0:00:00   8.90 MB/sgsl-2.2.1-blas  34% |##########                     | Time: 0:00:00   8.95 MB/sgsl-2.2.1-blas  34% |##########                     | Time: 0:00:00   9.00 MB/sgsl-2.2.1-blas  34% |##########                     | Time: 0:00:00   9.05 MB/sgsl-2.2.1-blas  34% |##########                     | Time: 0:00:00   9.10 MB/sgsl-2.2.1-blas  34% |##########                     | Time: 0:00:00   9.15 MB/sgsl-2.2.1-blas  35% |##########                     | Time: 0:00:00   9.04 MB/sgsl-2.2.1-blas  35% |##########                     | Time: 0:00:00   9.04 MB/sgsl-2.2.1-blas  35% |###########                    | Time: 0:00:00   9.07 MB/sgsl-2.2.1-blas  35% |###########                    | Time: 0:00:00   9.08 MB/sgsl-2.2.1-blas  36% |###########                    | Time: 0:00:00   9.12 MB/sgsl-2.2.1-blas  36% |###########                    | Time: 0:00:00   9.16 MB/sgsl-2.2.1-blas  36% |###########                    | Time: 0:00:00   9.21 MB/sgsl-2.2.1-blas  36% |###########                    | Time: 0:00:00   9.26 MB/sgsl-2.2.1-blas  36% |###########                    | Time: 0:00:00   9.30 MB/sgsl-2.2.1-blas  37% |###########                    | Time: 0:00:00   9.35 MB/sgsl-2.2.1-blas  37% |###########                    | Time: 0:00:00   9.40 MB/sgsl-2.2.1-blas  37% |###########                    | Time: 0:00:00   9.45 MB/sgsl-2.2.1-blas  37% |###########                    | Time: 0:00:00   9.49 MB/sgsl-2.2.1-blas  38% |###########                    | Time: 0:00:00   9.54 MB/sgsl-2.2.1-blas  38% |###########                    | Time: 0:00:00   9.59 MB/sgsl-2.2.1-blas  38% |###########                    | Time: 0:00:00   9.63 MB/sgsl-2.2.1-blas  38% |###########                    | Time: 0:00:00   9.68 MB/sgsl-2.2.1-blas  38% |############                   | Time: 0:00:00   9.72 MB/sgsl-2.2.1-blas  39% |############                   | Time: 0:00:00   9.77 MB/sgsl-2.2.1-blas  39% |############                   | Time: 0:00:00   9.82 MB/sgsl-2.2.1-blas  39% |############                   | Time: 0:00:00   9.86 MB/sgsl-2.2.1-blas  39% |############                   | Time: 0:00:00   9.91 MB/sgsl-2.2.1-blas  39% |############                   | Time: 0:00:00   9.80 MB/sgsl-2.2.1-blas  40% |############                   | Time: 0:00:00   9.82 MB/sgsl-2.2.1-blas  40% |############                   | Time: 0:00:00   9.83 MB/sgsl-2.2.1-blas  40% |############                   | Time: 0:00:00   9.84 MB/sgsl-2.2.1-blas  40% |############                   | Time: 0:00:00   9.88 MB/sgsl-2.2.1-blas  41% |############                   | Time: 0:00:00   9.93 MB/sgsl-2.2.1-blas  41% |############                   | Time: 0:00:00   9.97 MB/sgsl-2.2.1-blas  41% |############                   | Time: 0:00:00  10.01 MB/sgsl-2.2.1-blas  41% |############                   | Time: 0:00:00  10.05 MB/sgsl-2.2.1-blas  41% |############                   | Time: 0:00:00  10.09 MB/sgsl-2.2.1-blas  42% |#############                  | Time: 0:00:00  10.13 MB/sgsl-2.2.1-blas  42% |#############                  | Time: 0:00:00  10.18 MB/sgsl-2.2.1-blas  42% |#############                  | Time: 0:00:00  10.22 MB/sgsl-2.2.1-blas  42% |#############                  | Time: 0:00:00  10.26 MB/sgsl-2.2.1-blas  43% |#############                  | Time: 0:00:00  10.31 MB/sgsl-2.2.1-blas  43% |#############                  | Time: 0:00:00  10.35 MB/sgsl-2.2.1-blas  43% |#############                  | Time: 0:00:00  10.39 MB/sgsl-2.2.1-blas  43% |#############                  | Time: 0:00:00  10.44 MB/sgsl-2.2.1-blas  43% |#############                  | Time: 0:00:00  10.48 MB/sgsl-2.2.1-blas  44% |#############                  | Time: 0:00:00  10.53 MB/sgsl-2.2.1-blas  44% |#############                  | Time: 0:00:00  10.57 MB/sgsl-2.2.1-blas  44% |#############                  | Time: 0:00:00  10.61 MB/sgsl-2.2.1-blas  44% |#############                  | Time: 0:00:00  10.66 MB/sgsl-2.2.1-blas  44% |#############                  | Time: 0:00:00  10.68 MB/sgsl-2.2.1-blas  45% |##############                 | Time: 0:00:00  10.72 MB/sgsl-2.2.1-blas  45% |##############                 | Time: 0:00:00  10.68 MB/sgsl-2.2.1-blas  45% |##############                 | Time: 0:00:00  10.69 MB/sgsl-2.2.1-blas  45% |##############                 | Time: 0:00:00  10.71 MB/sgsl-2.2.1-blas  46% |##############                 | Time: 0:00:00  10.71 MB/sgsl-2.2.1-blas  46% |##############                 | Time: 0:00:00  10.75 MB/sgsl-2.2.1-blas  46% |##############                 | Time: 0:00:00  10.79 MB/sgsl-2.2.1-blas  46% |##############                 | Time: 0:00:00  10.83 MB/sgsl-2.2.1-blas  46% |##############                 | Time: 0:00:00  10.87 MB/sgsl-2.2.1-blas  47% |##############                 | Time: 0:00:00  10.91 MB/sgsl-2.2.1-blas  47% |##############                 | Time: 0:00:00  10.95 MB/sgsl-2.2.1-blas  47% |##############                 | Time: 0:00:00  11.00 MB/sgsl-2.2.1-blas  47% |##############                 | Time: 0:00:00  11.04 MB/sgsl-2.2.1-blas  47% |##############                 | Time: 0:00:00  11.08 MB/sgsl-2.2.1-blas  48% |##############                 | Time: 0:00:00  11.12 MB/sgsl-2.2.1-blas  48% |###############                | Time: 0:00:00  11.16 MB/sgsl-2.2.1-blas  48% |###############                | Time: 0:00:00  11.21 MB/sgsl-2.2.1-blas  48% |###############                | Time: 0:00:00  11.25 MB/sgsl-2.2.1-blas  49% |###############                | Time: 0:00:00  11.29 MB/sgsl-2.2.1-blas  49% |###############                | Time: 0:00:01   2.04 MB/sgsl-2.2.1-blas  49% |###############                | Time: 0:00:01   2.04 MB/sgsl-2.2.1-blas  49% |###############                | Time: 0:00:01   2.05 MB/sgsl-2.2.1-blas  49% |###############                | Time: 0:00:01   2.06 MB/sgsl-2.2.1-blas  50% |###############                | Time: 0:00:01   1.94 MB/sgsl-2.2.1-blas  50% |###############                | Time: 0:00:01   1.95 MB/sgsl-2.2.1-blas  50% |###############                | Time: 0:00:03   1.11 MB/sgsl-2.2.1-blas  50% |###############                | Time: 0:00:03   1.11 MB/sgsl-2.2.1-blas  51% |###############                | Time: 0:00:03 973.42 kB/sgsl-2.2.1-blas  51% |###############                | Time: 0:00:03 977.30 kB/sgsl-2.2.1-blas  51% |###############                | Time: 0:00:05 711.32 kB/sgsl-2.2.1-blas  51% |################               | Time: 0:00:05 714.16 kB/sgsl-2.2.1-blas  51% |################               | Time: 0:00:05 717.12 kB/sgsl-2.2.1-blas  52% |################               | Time: 0:00:05 719.97 kB/sgsl-2.2.1-blas  52% |################               | Time: 0:00:05 722.87 kB/sgsl-2.2.1-blas  52% |################               | Time: 0:00:05 719.57 kB/sgsl-2.2.1-blas  52% |################               | Time: 0:00:05 711.20 kB/sgsl-2.2.1-blas  52% |################               | Time: 0:00:05 714.02 kB/sgsl-2.2.1-blas  53% |################               | Time: 0:00:05 707.81 kB/sgsl-2.2.1-blas  53% |################               | Time: 0:00:05 678.53 kB/sgsl-2.2.1-blas  53% |################               | Time: 0:00:05 681.17 kB/sgsl-2.2.1-blas  53% |################               | Time: 0:00:05 683.88 kB/sgsl-2.2.1-blas  54% |################               | Time: 0:00:05 684.57 kB/sgsl-2.2.1-blas  54% |################               | Time: 0:00:05 687.26 kB/sgsl-2.2.1-blas  54% |################               | Time: 0:00:05 689.96 kB/sgsl-2.2.1-blas  54% |################               | Time: 0:00:05 692.66 kB/sgsl-2.2.1-blas  54% |#################              | Time: 0:00:05 695.33 kB/sgsl-2.2.1-blas  55% |#################              | Time: 0:00:05 698.02 kB/sgsl-2.2.1-blas  55% |#################              | Time: 0:00:05 700.71 kB/sgsl-2.2.1-blas  55% |#################              | Time: 0:00:05 703.41 kB/sgsl-2.2.1-blas  55% |#################              | Time: 0:00:05 706.10 kB/sgsl-2.2.1-blas  56% |#################              | Time: 0:00:05 708.79 kB/sgsl-2.2.1-blas  56% |#################              | Time: 0:00:05 711.46 kB/sgsl-2.2.1-blas  56% |#################              | Time: 0:00:05 714.13 kB/sgsl-2.2.1-blas  56% |#################              | Time: 0:00:05 716.81 kB/sgsl-2.2.1-blas  56% |#################              | Time: 0:00:05 719.50 kB/sgsl-2.2.1-blas  57% |#################              | Time: 0:00:05 722.18 kB/sgsl-2.2.1-blas  57% |#################              | Time: 0:00:05 724.87 kB/sgsl-2.2.1-blas  57% |#################              | Time: 0:00:05 727.55 kB/sgsl-2.2.1-blas  57% |#################              | Time: 0:00:05 730.23 kB/sgsl-2.2.1-blas  57% |#################              | Time: 0:00:05 732.92 kB/sgsl-2.2.1-blas  58% |##################             | Time: 0:00:05 735.61 kB/sgsl-2.2.1-blas  58% |##################             | Time: 0:00:05 738.28 kB/sgsl-2.2.1-blas  58% |##################             | Time: 0:00:05 740.96 kB/sgsl-2.2.1-blas  58% |##################             | Time: 0:00:05 743.69 kB/sgsl-2.2.1-blas  59% |##################             | Time: 0:00:05 746.37 kB/sgsl-2.2.1-blas  59% |##################             | Time: 0:00:05 749.07 kB/sgsl-2.2.1-blas  59% |##################             | Time: 0:00:05 751.75 kB/sgsl-2.2.1-blas  59% |##################             | Time: 0:00:05 754.43 kB/sgsl-2.2.1-blas  59% |##################             | Time: 0:00:05 757.08 kB/sgsl-2.2.1-blas  60% |##################             | Time: 0:00:05 759.76 kB/sgsl-2.2.1-blas  60% |##################             | Time: 0:00:05 762.43 kB/sgsl-2.2.1-blas  60% |##################             | Time: 0:00:05 765.13 kB/sgsl-2.2.1-blas  60% |##################             | Time: 0:00:05 767.82 kB/sgsl-2.2.1-blas  61% |##################             | Time: 0:00:05 770.50 kB/sgsl-2.2.1-blas  61% |##################             | Time: 0:00:05 773.18 kB/sgsl-2.2.1-blas  61% |###################            | Time: 0:00:05 775.86 kB/sgsl-2.2.1-blas  61% |###################            | Time: 0:00:05 778.54 kB/sgsl-2.2.1-blas  61% |###################            | Time: 0:00:05 781.23 kB/sgsl-2.2.1-blas  62% |###################            | Time: 0:00:05 783.91 kB/sgsl-2.2.1-blas  62% |###################            | Time: 0:00:05 786.60 kB/sgsl-2.2.1-blas  62% |###################            | Time: 0:00:05 789.18 kB/sgsl-2.2.1-blas  62% |###################            | Time: 0:00:05 791.86 kB/sgsl-2.2.1-blas  62% |###################            | Time: 0:00:05 794.55 kB/sgsl-2.2.1-blas  63% |###################            | Time: 0:00:05 797.23 kB/sgsl-2.2.1-blas  63% |###################            | Time: 0:00:05 799.91 kB/sgsl-2.2.1-blas  63% |###################            | Time: 0:00:05 802.57 kB/sgsl-2.2.1-blas  63% |###################            | Time: 0:00:05 805.25 kB/sgsl-2.2.1-blas  64% |###################            | Time: 0:00:05 807.93 kB/sgsl-2.2.1-blas  64% |###################            | Time: 0:00:05 810.60 kB/sgsl-2.2.1-blas  64% |###################            | Time: 0:00:05 813.28 kB/sgsl-2.2.1-blas  64% |####################           | Time: 0:00:05 815.96 kB/sgsl-2.2.1-blas  64% |####################           | Time: 0:00:05 818.63 kB/sgsl-2.2.1-blas  65% |####################           | Time: 0:00:05 821.31 kB/sgsl-2.2.1-blas  65% |####################           | Time: 0:00:05 823.95 kB/sgsl-2.2.1-blas  65% |####################           | Time: 0:00:05 826.63 kB/sgsl-2.2.1-blas  65% |####################           | Time: 0:00:05 829.30 kB/sgsl-2.2.1-blas  66% |####################           | Time: 0:00:05 831.98 kB/sgsl-2.2.1-blas  66% |####################           | Time: 0:00:05 834.66 kB/sgsl-2.2.1-blas  66% |####################           | Time: 0:00:05 837.34 kB/sgsl-2.2.1-blas  66% |####################           | Time: 0:00:05 840.02 kB/sgsl-2.2.1-blas  66% |####################           | Time: 0:00:05 842.70 kB/sgsl-2.2.1-blas  67% |####################           | Time: 0:00:05 845.37 kB/sgsl-2.2.1-blas  67% |####################           | Time: 0:00:05 848.04 kB/sgsl-2.2.1-blas  67% |####################           | Time: 0:00:05 850.72 kB/sgsl-2.2.1-blas  67% |#####################          | Time: 0:00:05 853.39 kB/sgsl-2.2.1-blas  67% |#####################          | Time: 0:00:05 856.06 kB/sgsl-2.2.1-blas  68% |#####################          | Time: 0:00:05 858.74 kB/sgsl-2.2.1-blas  68% |#####################          | Time: 0:00:05 861.41 kB/sgsl-2.2.1-blas  68% |#####################          | Time: 0:00:05 864.07 kB/sgsl-2.2.1-blas  68% |#####################          | Time: 0:00:05 866.73 kB/sgsl-2.2.1-blas  69% |#####################          | Time: 0:00:05 869.40 kB/sgsl-2.2.1-blas  69% |#####################          | Time: 0:00:05 872.07 kB/sgsl-2.2.1-blas  69% |#####################          | Time: 0:00:05 874.72 kB/sgsl-2.2.1-blas  69% |#####################          | Time: 0:00:05 877.39 kB/sgsl-2.2.1-blas  69% |#####################          | Time: 0:00:05 880.02 kB/sgsl-2.2.1-blas  70% |#####################          | Time: 0:00:05 882.69 kB/sgsl-2.2.1-blas  70% |#####################          | Time: 0:00:05 885.38 kB/sgsl-2.2.1-blas  70% |#####################          | Time: 0:00:05 888.05 kB/sgsl-2.2.1-blas  70% |#####################          | Time: 0:00:05 890.71 kB/sgsl-2.2.1-blas  71% |######################         | Time: 0:00:05 893.34 kB/sgsl-2.2.1-blas  71% |######################         | Time: 0:00:05 896.01 kB/sgsl-2.2.1-blas  71% |######################         | Time: 0:00:05 898.65 kB/sgsl-2.2.1-blas  71% |######################         | Time: 0:00:05 901.32 kB/sgsl-2.2.1-blas  71% |######################         | Time: 0:00:05 903.97 kB/sgsl-2.2.1-blas  72% |######################         | Time: 0:00:05 906.63 kB/sgsl-2.2.1-blas  72% |######################         | Time: 0:00:06 909.30 kB/sgsl-2.2.1-blas  72% |######################         | Time: 0:00:06 911.94 kB/sgsl-2.2.1-blas  72% |######################         | Time: 0:00:06 914.60 kB/sgsl-2.2.1-blas  72% |######################         | Time: 0:00:06 917.26 kB/sgsl-2.2.1-blas  73% |######################         | Time: 0:00:06 919.88 kB/sgsl-2.2.1-blas  73% |######################         | Time: 0:00:06 922.52 kB/sgsl-2.2.1-blas  73% |######################         | Time: 0:00:06 925.15 kB/sgsl-2.2.1-blas  73% |######################         | Time: 0:00:06 927.78 kB/sgsl-2.2.1-blas  74% |######################         | Time: 0:00:06 930.45 kB/sgsl-2.2.1-blas  74% |#######################        | Time: 0:00:06 933.11 kB/sgsl-2.2.1-blas  74% |#######################        | Time: 0:00:06 935.76 kB/sgsl-2.2.1-blas  74% |#######################        | Time: 0:00:06 938.40 kB/sgsl-2.2.1-blas  74% |#######################        | Time: 0:00:06 940.96 kB/sgsl-2.2.1-blas  75% |#######################        | Time: 0:00:06 943.55 kB/sgsl-2.2.1-blas  75% |#######################        | Time: 0:00:06 946.19 kB/sgsl-2.2.1-blas  75% |#######################        | Time: 0:00:06 948.77 kB/sgsl-2.2.1-blas  75% |#######################        | Time: 0:00:06 951.42 kB/sgsl-2.2.1-blas  76% |#######################        | Time: 0:00:06 954.06 kB/sgsl-2.2.1-blas  76% |#######################        | Time: 0:00:06 956.70 kB/sgsl-2.2.1-blas  76% |#######################        | Time: 0:00:06 959.35 kB/sgsl-2.2.1-blas  76% |#######################        | Time: 0:00:06 961.99 kB/sgsl-2.2.1-blas  76% |#######################        | Time: 0:00:06 964.63 kB/sgsl-2.2.1-blas  77% |#######################        | Time: 0:00:06 967.24 kB/sgsl-2.2.1-blas  77% |#######################        | Time: 0:00:06 969.88 kB/sgsl-2.2.1-blas  77% |########################       | Time: 0:00:06 972.51 kB/sgsl-2.2.1-blas  77% |########################       | Time: 0:00:06 975.16 kB/sgsl-2.2.1-blas  77% |########################       | Time: 0:00:06 977.81 kB/sgsl-2.2.1-blas  78% |########################       | Time: 0:00:06 980.46 kB/sgsl-2.2.1-blas  78% |########################       | Time: 0:00:06 983.10 kB/sgsl-2.2.1-blas  78% |########################       | Time: 0:00:06 985.74 kB/sgsl-2.2.1-blas  78% |########################       | Time: 0:00:06 988.38 kB/sgsl-2.2.1-blas  79% |########################       | Time: 0:00:06 991.01 kB/sgsl-2.2.1-blas  79% |########################       | Time: 0:00:06 993.64 kB/sgsl-2.2.1-blas  79% |########################       | Time: 0:00:06 996.27 kB/sgsl-2.2.1-blas  79% |########################       | Time: 0:00:06 998.91 kB/sgsl-2.2.1-blas  79% |########################       | Time: 0:00:06   1.00 MB/sgsl-2.2.1-blas  80% |########################       | Time: 0:00:06   1.00 MB/sgsl-2.2.1-blas  80% |########################       | Time: 0:00:06   1.01 MB/sgsl-2.2.1-blas  80% |########################       | Time: 0:00:06   1.01 MB/sgsl-2.2.1-blas  80% |#########################      | Time: 0:00:06   1.01 MB/sgsl-2.2.1-blas  81% |#########################      | Time: 0:00:06   1.01 MB/sgsl-2.2.1-blas  81% |#########################      | Time: 0:00:06   1.02 MB/sgsl-2.2.1-blas  81% |#########################      | Time: 0:00:06   1.02 MB/sgsl-2.2.1-blas  81% |#########################      | Time: 0:00:06   1.02 MB/sgsl-2.2.1-blas  81% |#########################      | Time: 0:00:06   1.03 MB/sgsl-2.2.1-blas  82% |#########################      | Time: 0:00:06   1.03 MB/sgsl-2.2.1-blas  82% |#########################      | Time: 0:00:06   1.03 MB/sgsl-2.2.1-blas  82% |#########################      | Time: 0:00:06   1.03 MB/sgsl-2.2.1-blas  82% |#########################      | Time: 0:00:06   1.04 MB/sgsl-2.2.1-blas  82% |#########################      | Time: 0:00:06   1.04 MB/sgsl-2.2.1-blas  83% |#########################      | Time: 0:00:06   1.04 MB/sgsl-2.2.1-blas  83% |#########################      | Time: 0:00:06   1.04 MB/sgsl-2.2.1-blas  83% |#########################      | Time: 0:00:06   1.05 MB/sgsl-2.2.1-blas  83% |#########################      | Time: 0:00:06   1.05 MB/sgsl-2.2.1-blas  84% |##########################     | Time: 0:00:06   1.05 MB/sgsl-2.2.1-blas  84% |##########################     | Time: 0:00:06   1.05 MB/sgsl-2.2.1-blas  84% |##########################     | Time: 0:00:06   1.06 MB/sgsl-2.2.1-blas  84% |##########################     | Time: 0:00:06   1.06 MB/sgsl-2.2.1-blas  84% |##########################     | Time: 0:00:06   1.06 MB/sgsl-2.2.1-blas  85% |##########################     | Time: 0:00:06   1.06 MB/sgsl-2.2.1-blas  85% |##########################     | Time: 0:00:06   1.07 MB/sgsl-2.2.1-blas  85% |##########################     | Time: 0:00:06   1.07 MB/sgsl-2.2.1-blas  85% |##########################     | Time: 0:00:06   1.07 MB/sgsl-2.2.1-blas  86% |##########################     | Time: 0:00:06   1.08 MB/sgsl-2.2.1-blas  86% |##########################     | Time: 0:00:06   1.08 MB/sgsl-2.2.1-blas  86% |##########################     | Time: 0:00:06   1.08 MB/sgsl-2.2.1-blas  86% |##########################     | Time: 0:00:06   1.08 MB/sgsl-2.2.1-blas  86% |##########################     | Time: 0:00:06   1.09 MB/sgsl-2.2.1-blas  87% |##########################     | Time: 0:00:06   1.09 MB/sgsl-2.2.1-blas  87% |###########################    | Time: 0:00:06   1.09 MB/sgsl-2.2.1-blas  87% |###########################    | Time: 0:00:06   1.09 MB/sgsl-2.2.1-blas  87% |###########################    | Time: 0:00:06   1.10 MB/sgsl-2.2.1-blas  87% |###########################    | Time: 0:00:06   1.10 MB/sgsl-2.2.1-blas  88% |###########################    | Time: 0:00:06   1.10 MB/sgsl-2.2.1-blas  88% |###########################    | Time: 0:00:06   1.10 MB/sgsl-2.2.1-blas  88% |###########################    | Time: 0:00:06   1.11 MB/sgsl-2.2.1-blas  88% |###########################    | Time: 0:00:06   1.11 MB/sgsl-2.2.1-blas  89% |###########################    | Time: 0:00:06   1.11 MB/sgsl-2.2.1-blas  89% |###########################    | Time: 0:00:06   1.11 MB/sgsl-2.2.1-blas  89% |###########################    | Time: 0:00:06   1.12 MB/sgsl-2.2.1-blas  89% |###########################    | Time: 0:00:06   1.12 MB/sgsl-2.2.1-blas  89% |###########################    | Time: 0:00:06   1.12 MB/sgsl-2.2.1-blas  90% |###########################    | Time: 0:00:06   1.12 MB/sgsl-2.2.1-blas  90% |############################   | Time: 0:00:06   1.13 MB/sgsl-2.2.1-blas  90% |############################   | Time: 0:00:06   1.13 MB/sgsl-2.2.1-blas  90% |############################   | Time: 0:00:06   1.13 MB/sgsl-2.2.1-blas  91% |############################   | Time: 0:00:06   1.14 MB/sgsl-2.2.1-blas  91% |############################   | Time: 0:00:06   1.14 MB/sgsl-2.2.1-blas  91% |############################   | Time: 0:00:06   1.14 MB/sgsl-2.2.1-blas  91% |############################   | Time: 0:00:06   1.14 MB/sgsl-2.2.1-blas  91% |############################   | Time: 0:00:06   1.15 MB/sgsl-2.2.1-blas  92% |############################   | Time: 0:00:06   1.15 MB/sgsl-2.2.1-blas  92% |############################   | Time: 0:00:06   1.15 MB/sgsl-2.2.1-blas  92% |############################   | Time: 0:00:06   1.15 MB/sgsl-2.2.1-blas  92% |############################   | Time: 0:00:06   1.16 MB/sgsl-2.2.1-blas  92% |############################   | Time: 0:00:06   1.16 MB/sgsl-2.2.1-blas  93% |############################   | Time: 0:00:06   1.16 MB/sgsl-2.2.1-blas  93% |############################   | Time: 0:00:06   1.16 MB/sgsl-2.2.1-blas  93% |#############################  | Time: 0:00:06   1.17 MB/sgsl-2.2.1-blas  93% |#############################  | Time: 0:00:06   1.17 MB/sgsl-2.2.1-blas  94% |#############################  | Time: 0:00:06   1.17 MB/sgsl-2.2.1-blas  94% |#############################  | Time: 0:00:06   1.17 MB/sgsl-2.2.1-blas  94% |#############################  | Time: 0:00:06   1.18 MB/sgsl-2.2.1-blas  94% |#############################  | Time: 0:00:06   1.18 MB/sgsl-2.2.1-blas  94% |#############################  | Time: 0:00:06   1.18 MB/sgsl-2.2.1-blas  95% |#############################  | Time: 0:00:06   1.19 MB/sgsl-2.2.1-blas  95% |#############################  | Time: 0:00:06   1.19 MB/sgsl-2.2.1-blas  95% |#############################  | Time: 0:00:06   1.19 MB/sgsl-2.2.1-blas  95% |#############################  | Time: 0:00:06   1.19 MB/sgsl-2.2.1-blas  95% |#############################  | Time: 0:00:06   1.20 MB/sgsl-2.2.1-blas  96% |#############################  | Time: 0:00:06   1.20 MB/sgsl-2.2.1-blas  96% |#############################  | Time: 0:00:06   1.20 MB/sgsl-2.2.1-blas  96% |#############################  | Time: 0:00:06   1.20 MB/sgsl-2.2.1-blas  96% |############################## | Time: 0:00:06   1.21 MB/sgsl-2.2.1-blas  97% |############################## | Time: 0:00:06   1.21 MB/sgsl-2.2.1-blas  97% |############################## | Time: 0:00:06   1.21 MB/sgsl-2.2.1-blas  97% |############################## | Time: 0:00:06   1.21 MB/sgsl-2.2.1-blas  97% |############################## | Time: 0:00:06   1.22 MB/sgsl-2.2.1-blas  97% |############################## | Time: 0:00:06   1.22 MB/sgsl-2.2.1-blas  98% |############################## | Time: 0:00:06   1.22 MB/sgsl-2.2.1-blas  98% |############################## | Time: 0:00:06   1.22 MB/sgsl-2.2.1-blas  98% |############################## | Time: 0:00:06   1.23 MB/sgsl-2.2.1-blas  98% |############################## | Time: 0:00:06   1.23 MB/sgsl-2.2.1-blas  99% |############################## | Time: 0:00:06   1.23 MB/sgsl-2.2.1-blas  99% |############################## | Time: 0:00:06   1.23 MB/sgsl-2.2.1-blas  99% |############################## | Time: 0:00:06   1.24 MB/sgsl-2.2.1-blas  99% |############################## | Time: 0:00:06   1.24 MB/sgsl-2.2.1-blas  99% |############################## | Time: 0:00:06   1.24 MB/sgsl-2.2.1-blas 100% |###############################| Time: 0:00:06   1.24 MB/sgsl-2.2.1-blas 100% |###############################| Time: 0:00:06   1.24 MB/s
suitesparse-4.   0% |                              | ETA:  --:--:--   0.00  B/ssuitesparse-4.   0% |                               | Time: 0:00:00   1.25 MB/ssuitesparse-4.   1% |                               | Time: 0:00:00   1.24 MB/ssuitesparse-4.   2% |                               | Time: 0:00:00   1.82 MB/ssuitesparse-4.   2% |                               | Time: 0:00:00   1.63 MB/ssuitesparse-4.   3% |#                              | Time: 0:00:00   1.53 MB/ssuitesparse-4.   4% |#                              | Time: 0:00:00   1.82 MB/ssuitesparse-4.   5% |#                              | Time: 0:00:00   1.71 MB/ssuitesparse-4.   5% |#                              | Time: 0:00:00   1.93 MB/ssuitesparse-4.   6% |##                             | Time: 0:00:00   2.16 MB/ssuitesparse-4.   7% |##                             | Time: 0:00:00   2.03 MB/ssuitesparse-4.   8% |##                             | Time: 0:00:00   2.22 MB/ssuitesparse-4.   8% |##                             | Time: 0:00:00   2.42 MB/ssuitesparse-4.   9% |##                             | Time: 0:00:00   2.27 MB/ssuitesparse-4.  10% |###                            | Time: 0:00:00   2.43 MB/ssuitesparse-4.  11% |###                            | Time: 0:00:00   2.59 MB/ssuitesparse-4.  11% |###                            | Time: 0:00:00   2.75 MB/ssuitesparse-4.  12% |###                            | Time: 0:00:00   2.92 MB/ssuitesparse-4.  13% |####                           | Time: 0:00:00   3.08 MB/ssuitesparse-4.  13% |####                           | Time: 0:00:00   2.90 MB/ssuitesparse-4.  14% |####                           | Time: 0:00:00   3.03 MB/ssuitesparse-4.  15% |####                           | Time: 0:00:00   3.17 MB/ssuitesparse-4.  16% |#####                          | Time: 0:00:00   3.31 MB/ssuitesparse-4.  16% |#####                          | Time: 0:00:00   3.13 MB/ssuitesparse-4.  17% |#####                          | Time: 0:00:00   3.23 MB/ssuitesparse-4.  18% |#####                          | Time: 0:00:00   3.35 MB/ssuitesparse-4.  19% |#####                          | Time: 0:00:00   3.48 MB/ssuitesparse-4.  19% |######                         | Time: 0:00:00   3.60 MB/ssuitesparse-4.  20% |######                         | Time: 0:00:00   3.73 MB/ssuitesparse-4.  21% |######                         | Time: 0:00:00   3.55 MB/ssuitesparse-4.  22% |######                         | Time: 0:00:00   3.65 MB/ssuitesparse-4.  22% |#######                        | Time: 0:00:00   3.75 MB/ssuitesparse-4.  23% |#######                        | Time: 0:00:00   3.87 MB/ssuitesparse-4.  24% |#######                        | Time: 0:00:00   3.98 MB/ssuitesparse-4.  24% |#######                        | Time: 0:00:00   4.09 MB/ssuitesparse-4.  25% |#######                        | Time: 0:00:00   4.20 MB/ssuitesparse-4.  26% |########                       | Time: 0:00:00   3.99 MB/ssuitesparse-4.  27% |########                       | Time: 0:00:00   4.07 MB/ssuitesparse-4.  27% |########                       | Time: 0:00:00   4.17 MB/ssuitesparse-4.  28% |########                       | Time: 0:00:00   4.27 MB/ssuitesparse-4.  29% |#########                      | Time: 0:00:00   4.37 MB/ssuitesparse-4.  30% |#########                      | Time: 0:00:00   4.47 MB/ssuitesparse-4.  30% |#########                      | Time: 0:00:00   4.57 MB/ssuitesparse-4.  31% |#########                      | Time: 0:00:00   4.67 MB/ssuitesparse-4.  32% |##########                     | Time: 0:00:00   4.45 MB/ssuitesparse-4.  33% |##########                     | Time: 0:00:00   4.52 MB/ssuitesparse-4.  33% |##########                     | Time: 0:00:00   4.61 MB/ssuitesparse-4.  34% |##########                     | Time: 0:00:00   4.69 MB/ssuitesparse-4.  35% |##########                     | Time: 0:00:00   4.78 MB/ssuitesparse-4.  36% |###########                    | Time: 0:00:00   4.87 MB/ssuitesparse-4.  36% |###########                    | Time: 0:00:00   4.96 MB/ssuitesparse-4.  37% |###########                    | Time: 0:00:00   5.05 MB/ssuitesparse-4.  38% |###########                    | Time: 0:00:00   5.14 MB/ssuitesparse-4.  38% |############                   | Time: 0:00:00   4.96 MB/ssuitesparse-4.  39% |############                   | Time: 0:00:00   5.01 MB/ssuitesparse-4.  40% |############                   | Time: 0:00:00   5.09 MB/ssuitesparse-4.  41% |############                   | Time: 0:00:00   5.17 MB/ssuitesparse-4.  41% |############                   | Time: 0:00:00   5.25 MB/ssuitesparse-4.  42% |#############                  | Time: 0:00:00   5.33 MB/ssuitesparse-4.  43% |#############                  | Time: 0:00:00   5.41 MB/ssuitesparse-4.  44% |#############                  | Time: 0:00:00   5.49 MB/ssuitesparse-4.  44% |#############                  | Time: 0:00:00   5.58 MB/ssuitesparse-4.  45% |##############                 | Time: 0:00:00   5.38 MB/ssuitesparse-4.  46% |##############                 | Time: 0:00:00   5.43 MB/ssuitesparse-4.  47% |##############                 | Time: 0:00:00   5.51 MB/ssuitesparse-4.  47% |##############                 | Time: 0:00:00   5.59 MB/ssuitesparse-4.  48% |###############                | Time: 0:00:00   5.67 MB/ssuitesparse-4.  49% |###############                | Time: 0:00:00   5.74 MB/ssuitesparse-4.  49% |###############                | Time: 0:00:00   5.82 MB/ssuitesparse-4.  50% |###############                | Time: 0:00:00   5.90 MB/ssuitesparse-4.  51% |###############                | Time: 0:00:00   5.98 MB/ssuitesparse-4.  52% |################               | Time: 0:00:00   6.05 MB/ssuitesparse-4.  52% |################               | Time: 0:00:00   6.13 MB/ssuitesparse-4.  53% |################               | Time: 0:00:00   5.87 MB/ssuitesparse-4.  54% |################               | Time: 0:00:00   5.91 MB/ssuitesparse-4.  55% |#################              | Time: 0:00:00   5.97 MB/ssuitesparse-4.  55% |#################              | Time: 0:00:00   6.04 MB/ssuitesparse-4.  56% |#################              | Time: 0:00:00   6.11 MB/ssuitesparse-4.  57% |#################              | Time: 0:00:00   6.17 MB/ssuitesparse-4.  58% |##################             | Time: 0:00:00   6.24 MB/ssuitesparse-4.  58% |##################             | Time: 0:00:00   6.31 MB/ssuitesparse-4.  59% |##################             | Time: 0:00:00   6.38 MB/ssuitesparse-4.  60% |##################             | Time: 0:00:00   6.45 MB/ssuitesparse-4.  61% |##################             | Time: 0:00:00   6.52 MB/ssuitesparse-4.  61% |###################            | Time: 0:00:00   6.41 MB/ssuitesparse-4.  62% |###################            | Time: 0:00:00   6.47 MB/ssuitesparse-4.  63% |###################            | Time: 0:00:00   6.53 MB/ssuitesparse-4.  63% |###################            | Time: 0:00:00   6.60 MB/ssuitesparse-4.  64% |####################           | Time: 0:00:00   6.67 MB/ssuitesparse-4.  65% |####################           | Time: 0:00:00   6.68 MB/ssuitesparse-4.  66% |####################           | Time: 0:00:00   6.70 MB/ssuitesparse-4.  66% |####################           | Time: 0:00:00   6.75 MB/ssuitesparse-4.  67% |####################           | Time: 0:00:00   6.81 MB/ssuitesparse-4.  68% |#####################          | Time: 0:00:00   6.87 MB/ssuitesparse-4.  69% |#####################          | Time: 0:00:00   6.93 MB/ssuitesparse-4.  69% |#####################          | Time: 0:00:00   6.99 MB/ssuitesparse-4.  70% |#####################          | Time: 0:00:00   7.05 MB/ssuitesparse-4.  71% |######################         | Time: 0:00:00   6.95 MB/ssuitesparse-4.  72% |######################         | Time: 0:00:00   6.99 MB/ssuitesparse-4.  72% |######################         | Time: 0:00:00   7.06 MB/ssuitesparse-4.  73% |######################         | Time: 0:00:00   7.12 MB/ssuitesparse-4.  74% |#######################        | Time: 0:00:00   7.17 MB/ssuitesparse-4.  74% |#######################        | Time: 0:00:00   7.22 MB/ssuitesparse-4.  75% |#######################        | Time: 0:00:00   7.27 MB/ssuitesparse-4.  76% |#######################        | Time: 0:00:00   7.33 MB/ssuitesparse-4.  77% |#######################        | Time: 0:00:00   7.39 MB/ssuitesparse-4.  77% |########################       | Time: 0:00:00   7.44 MB/ssuitesparse-4.  78% |########################       | Time: 0:00:00   7.50 MB/ssuitesparse-4.  79% |########################       | Time: 0:00:00   7.56 MB/ssuitesparse-4.  80% |########################       | Time: 0:00:00   7.61 MB/ssuitesparse-4.  80% |#########################      | Time: 0:00:00   7.67 MB/ssuitesparse-4.  81% |#########################      | Time: 0:00:00   7.73 MB/ssuitesparse-4.  82% |#########################      | Time: 0:00:00   7.54 MB/ssuitesparse-4.  83% |#########################      | Time: 0:00:00   7.53 MB/ssuitesparse-4.  83% |#########################      | Time: 0:00:00   7.56 MB/ssuitesparse-4.  84% |##########################     | Time: 0:00:00   7.61 MB/ssuitesparse-4.  85% |##########################     | Time: 0:00:00   7.66 MB/ssuitesparse-4.  86% |##########################     | Time: 0:00:00   7.71 MB/ssuitesparse-4.  86% |##########################     | Time: 0:00:00   7.76 MB/ssuitesparse-4.  87% |###########################    | Time: 0:00:00   7.81 MB/ssuitesparse-4.  88% |###########################    | Time: 0:00:00   7.86 MB/ssuitesparse-4.  88% |###########################    | Time: 0:00:00   7.91 MB/ssuitesparse-4.  89% |###########################    | Time: 0:00:00   7.96 MB/ssuitesparse-4.  90% |############################   | Time: 0:00:00   8.01 MB/ssuitesparse-4.  91% |############################   | Time: 0:00:00   8.07 MB/ssuitesparse-4.  91% |############################   | Time: 0:00:00   8.12 MB/ssuitesparse-4.  92% |############################   | Time: 0:00:00   8.17 MB/ssuitesparse-4.  93% |############################   | Time: 0:00:00   8.22 MB/ssuitesparse-4.  94% |#############################  | Time: 0:00:00   8.20 MB/ssuitesparse-4.  94% |#############################  | Time: 0:00:00   8.22 MB/ssuitesparse-4.  95% |#############################  | Time: 0:00:00   8.25 MB/ssuitesparse-4.  96% |#############################  | Time: 0:00:00   8.30 MB/ssuitesparse-4.  97% |############################## | Time: 0:00:00   8.35 MB/ssuitesparse-4.  97% |############################## | Time: 0:00:00   8.40 MB/ssuitesparse-4.  98% |############################## | Time: 0:00:00   8.45 MB/ssuitesparse-4.  99% |############################## | Time: 0:00:00   8.50 MB/ssuitesparse-4.  99% |############################## | Time: 0:00:00   8.56 MB/ssuitesparse-4. 100% |###############################| Time: 0:00:00   8.55 MB/ssuitesparse-4. 100% |###############################| Time: 0:00:00   8.54 MB/s
cvxopt-1.1.9-p   0% |                              | ETA:  --:--:--   0.00  B/scvxopt-1.1.9-p   2% |                               | Time: 0:00:00   1.23 MB/scvxopt-1.1.9-p   4% |#                              | Time: 0:00:00   1.21 MB/scvxopt-1.1.9-p   6% |##                             | Time: 0:00:00   1.21 MB/scvxopt-1.1.9-p   9% |##                             | Time: 0:00:00   1.59 MB/scvxopt-1.1.9-p  11% |###                            | Time: 0:00:00   1.49 MB/scvxopt-1.1.9-p  13% |####                           | Time: 0:00:00   1.44 MB/scvxopt-1.1.9-p  16% |#####                          | Time: 0:00:00   1.65 MB/scvxopt-1.1.9-p  18% |#####                          | Time: 0:00:00   1.62 MB/scvxopt-1.1.9-p  20% |######                         | Time: 0:00:00   1.81 MB/scvxopt-1.1.9-p  23% |#######                        | Time: 0:00:00   1.97 MB/scvxopt-1.1.9-p  25% |#######                        | Time: 0:00:00   1.91 MB/scvxopt-1.1.9-p  27% |########                       | Time: 0:00:00   2.06 MB/scvxopt-1.1.9-p  30% |#########                      | Time: 0:00:00   2.20 MB/scvxopt-1.1.9-p  32% |##########                     | Time: 0:00:00   2.36 MB/scvxopt-1.1.9-p  34% |##########                     | Time: 0:00:00   2.27 MB/scvxopt-1.1.9-p  37% |###########                    | Time: 0:00:00   2.41 MB/scvxopt-1.1.9-p  39% |############                   | Time: 0:00:00   2.52 MB/scvxopt-1.1.9-p  41% |#############                  | Time: 0:00:00   2.66 MB/scvxopt-1.1.9-p  44% |#############                  | Time: 0:00:00   2.80 MB/scvxopt-1.1.9-p  46% |##############                 | Time: 0:00:00   2.69 MB/scvxopt-1.1.9-p  48% |###############                | Time: 0:00:00   2.81 MB/scvxopt-1.1.9-p  51% |###############                | Time: 0:00:00   2.91 MB/scvxopt-1.1.9-p  53% |################               | Time: 0:00:00   3.03 MB/scvxopt-1.1.9-p  55% |#################              | Time: 0:00:00   3.15 MB/scvxopt-1.1.9-p  58% |##################             | Time: 0:00:00   3.04 MB/scvxopt-1.1.9-p  60% |##################             | Time: 0:00:00   3.13 MB/scvxopt-1.1.9-p  62% |###################            | Time: 0:00:00   3.22 MB/scvxopt-1.1.9-p  65% |####################           | Time: 0:00:00   3.33 MB/scvxopt-1.1.9-p  67% |####################           | Time: 0:00:00   3.44 MB/scvxopt-1.1.9-p  69% |#####################          | Time: 0:00:00   3.54 MB/scvxopt-1.1.9-p  72% |######################         | Time: 0:00:00   3.65 MB/scvxopt-1.1.9-p  74% |#######################        | Time: 0:00:00   3.52 MB/scvxopt-1.1.9-p  76% |#######################        | Time: 0:00:00   3.61 MB/scvxopt-1.1.9-p  79% |########################       | Time: 0:00:00   3.68 MB/scvxopt-1.1.9-p  81% |#########################      | Time: 0:00:00   3.78 MB/scvxopt-1.1.9-p  83% |##########################     | Time: 0:00:00   3.87 MB/scvxopt-1.1.9-p  86% |##########################     | Time: 0:00:00   3.97 MB/scvxopt-1.1.9-p  88% |###########################    | Time: 0:00:00   4.07 MB/scvxopt-1.1.9-p  90% |############################   | Time: 0:00:00   4.16 MB/scvxopt-1.1.9-p  93% |############################   | Time: 0:00:00   4.02 MB/scvxopt-1.1.9-p  95% |#############################  | Time: 0:00:00   4.10 MB/scvxopt-1.1.9-p  97% |############################## | Time: 0:00:00   4.19 MB/scvxopt-1.1.9-p 100% |###############################| Time: 0:00:00   4.27 MB/scvxopt-1.1.9-p 100% |###############################| Time: 0:00:00   4.26 MB/s
Extracting packages ...
[                    ]|                                                  |   0%[fftw                ]|                                                  |   0%[metis               ]|#######                                           |  14%[tbb                 ]|##############                                    |  28%[glpk                ]|#####################                             |  42%[gsl                 ]|############################                      |  57%[suitesparse         ]|###################################               |  71%[cvxopt              ]|##########################################        |  85%[      COMPLETE      ]|##################################################| 100%
Linking packages ...
[      COMPLETE      ]|                                                  |   0%[fftw                ]|                                                  |   0%[fftw                ]|                                                  |   0%[gmp                 ]|######                                            |  12%[metis               ]|############                                      |  25%[tbb                 ]|##################                                |  37%[glpk                ]|#########################                         |  50%[gsl                 ]|###############################                   |  62%[suitesparse         ]|#####################################             |  75%[cvxopt              ]|###########################################       |  87%[      COMPLETE      ]|##################################################| 100%
WARNING: pyeval is deprecated.  Use py"{'l':l,'q':list(q),'s':list(s)}" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:25
 [5] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:552
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:32
 [6] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:32
 [6] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:33
 [6] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:33
 [6] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:34
 [6] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:34
 [6] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:35
 [6] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #conelp#1(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:35
 [6] conelp(::Array{Float64,2}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:18
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test1.jl, in expression starting on line 13
WARNING: pyeval is deprecated.  Use py"{'l':l,'q':list(q),'s':list(s)}" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:54
 [5] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:552
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:61
 [6] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:61
 [6] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:62
 [6] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:62
 [6] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:63
 [6] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:63
 [6] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:64
 [6] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #coneqp#2(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:64
 [6] coneqp(::Array{Float64,2}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:46
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test2.jl, in expression starting on line 15
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #lp#3(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:88
 [6] lp(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:75
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test3.jl, in expression starting on line 5
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #lp#3(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:88
 [6] lp(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:75
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test3.jl, in expression starting on line 5
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #lp#3(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:89
 [6] lp(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:75
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test3.jl, in expression starting on line 5
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #lp#3(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:89
 [6] lp(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:75
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test3.jl, in expression starting on line 5
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #lp#3(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:90
 [6] lp(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:75
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test3.jl, in expression starting on line 5
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #lp#3(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:90
 [6] lp(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:75
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test3.jl, in expression starting on line 5
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #lp#3(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:91
 [6] lp(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:75
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test3.jl, in expression starting on line 5
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #lp#3(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:91
 [6] lp(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:75
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test3.jl, in expression starting on line 5
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:152
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:152
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:153
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:153
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:154
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:154
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:155
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:155
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:157
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:157
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:158
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:158
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:157
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:157
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:158
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #socp#5(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:158
 [6] socp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:130
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test4.jl, in expression starting on line 7
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:193
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:193
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:194
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:194
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:195
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:195
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:196
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:196
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:198
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:198
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:199
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:199
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:198
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:198
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"x.size" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:227
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:199
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
WARNING: pyeval is deprecated.  Use py"list(x[:])" instead.  Use $ interpolation to substitute Julia variables and expressions into Python.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.6/PyCall/src/pyeval.jl:58
 [3] (::PyCall.#kw##pyeval)(::Array{Any,1}, ::PyCall.#pyeval, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at ./<missing>:0
 [4] cvxopt_to_julia(::PyCall.PyObject) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:228
 [5] #sdp#6(::Array{Any,1}, ::Array{Any,1}, ::Dict{Any,Any}, ::Function, ::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:199
 [6] sdp(::Array{Float64,1}, ::Array{Any,1}, ::Array{Any,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/vagrant/.julia/v0.6/CVXOPT/src/CVXOPT.jl:171
 [7] include_from_node1(::String) at ./loading.jl:552
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CVXOPT/test/test5.jl, in expression starting on line 11
     pcost       dcost       gap    pres   dres   k/t
 0:  1.1431e+00 -2.3216e+02  5e+02  7e-01  8e+00  1e+00
 1:  3.2291e+00 -7.6284e+01  1e+02  2e-01  3e+00  2e+00
 2: -5.4057e+00 -7.5497e+01  1e+02  2e-01  2e+00  6e+00
 3: -8.2526e+00 -5.0576e+01  7e+01  1e-01  1e+00  4e+00
 4:  3.6383e+00 -4.2856e+01  9e+01  1e-01  2e+00  6e+00
 5: -5.8339e+00 -2.2605e+01  4e+01  6e-02  7e-01  4e+00
 6: -3.0169e+00 -1.5737e+01  2e+01  4e-02  5e-01  2e+00
 7: -9.4177e+00 -1.6446e+01  1e+01  2e-02  3e-01  1e+00
 8: -1.0564e+01 -1.1543e+01  2e+00  3e-03  4e-02  2e-01
 9: -1.0930e+01 -1.1021e+01  2e-01  3e-04  4e-03  2e-02
10: -1.0948e+01 -1.0952e+01  8e-03  1e-05  2e-04  8e-04
11: -1.0949e+01 -1.0949e+01  1e-04  2e-07  3e-06  1e-05
12: -1.0949e+01 -1.0949e+01  1e-06  3e-09  3e-08  2e-07
Optimal solution found.
     pcost       dcost       gap    pres   dres
 0: -1.0721e+00 -4.3040e+00  3e+00  0e+00  2e+00
 1: -1.2240e+00 -1.5212e+00  3e-01  2e-15  2e-01
 2: -1.4283e+00 -1.5409e+00  1e-01  3e-16  5e-02
 3: -1.4300e+00 -1.4312e+00  1e-03  3e-15  5e-04
 4: -1.4300e+00 -1.4300e+00  1e-05  6e-15  5e-06
 5: -1.4300e+00 -1.4300e+00  1e-07  1e-13  5e-08
Optimal solution found.
     pcost       dcost       gap    pres   dres   k/t
 0: -8.1000e+00 -1.8300e+01  4e+00  0e+00  8e-01  1e+00
 1: -8.8055e+00 -9.4357e+00  2e-01  4e-16  4e-02  3e-02
 2: -8.9981e+00 -9.0049e+00  2e-03  2e-16  5e-04  4e-04
 3: -9.0000e+00 -9.0000e+00  2e-05  6e-16  5e-06  4e-06
 4: -9.0000e+00 -9.0000e+00  2e-07  1e-16  5e-08  4e-08
Optimal solution found.
     pcost       dcost       gap    pres   dres   k/t
 0:  4.9969e+00 -1.7285e+01  6e+01  3e-01  4e+00  1e+00
 1: -1.6732e+00 -7.0431e+00  1e+01  7e-02  1e+00  6e-01
 2: -1.6221e+01 -3.5417e+01  2e+02  3e-01  5e+00  7e+00
 3: -2.1832e+01 -2.2849e+01  3e+01  4e-02  6e-01  2e+00
 4: -3.5265e+01 -3.5594e+01  1e+01  1e-02  2e-01  9e-01
 5: -3.8303e+01 -3.8314e+01  3e-01  4e-04  6e-03  2e-02
 6: -3.8342e+01 -3.8342e+01  1e-02  1e-05  2e-04  7e-04
 7: -3.8346e+01 -3.8346e+01  9e-04  1e-06  2e-05  7e-05
 8: -3.8346e+01 -3.8346e+01  4e-05  6e-08  9e-07  4e-06
 9: -3.8346e+01 -3.8346e+01  2e-06  3e-09  4e-08  2e-07
Optimal solution found.
     pcost       dcost       gap    pres   dres   k/t
 0: -1.2037e+00 -1.8539e+02  2e+02  2e-16  8e+00  1e+00
 1: -1.2937e+00 -6.8551e+00  5e+00  5e-16  3e-01  3e-02
 2: -2.8964e+00 -3.7331e+00  7e-01  9e-16  4e-02  5e-02
 3: -3.0150e+00 -3.2556e+00  2e-01  7e-16  1e-02  2e-02
 4: -3.1389e+00 -3.1932e+00  5e-02  4e-16  3e-03  5e-03
 5: -3.1533e+00 -3.1547e+00  1e-03  2e-15  7e-05  1e-04
 6: -3.1535e+00 -3.1536e+00  5e-05  8e-16  3e-06  6e-06
 7: -3.1535e+00 -3.1535e+00  1e-06  6e-16  7e-08  2e-07
Optimal solution found.
INFO: CVXOPT tests passed

>>> End of log
