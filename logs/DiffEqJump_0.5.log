>>> 'Pkg.add("DiffEqJump")' log
INFO: Installing DiffEqBase v1.9.0
INFO: Installing DiffEqJump v0.4.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.2.7
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.2.7
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.8.0
INFO: Installing SimpleTraits v0.5.0
INFO: Installing StaticArrays v0.3.1
INFO: Package database updated

>>> 'Pkg.test("DiffEqJump")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1699.65234375 MB free)
Uptime: 29473.0 sec
Load Avg:  0.9189453125  1.00048828125  1.03564453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1874633 s       6277 s     175620 s     509109 s         35 s
#2  3500 MHz     663433 s        196 s      86263 s    2109028 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqJump                    0.4.0
 - JSON                          0.13.0
11 additional packages:
 - Compat                        0.28.0
 - DiffEqBase                    1.9.0
 - Hiccup                        0.1.1
 - Juno                          0.2.7
 - MacroTools                    0.3.7
 - Media                         0.2.7
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.8.0
 - SimpleTraits                  0.5.0
 - StaticArrays                  0.3.1
INFO: Computing test dependencies for DiffEqJump...
INFO: Installing BinDeps v0.7.0
INFO: Installing Blosc v0.3.0
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing Conda v0.5.3
INFO: Installing DataStructures v0.6.0
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqNoiseProcess v0.2.0
INFO: Installing DiffEqPDEBase v0.3.3
INFO: Installing DiffEqProblemLibrary v0.8.0
INFO: Installing Distances v0.4.1
INFO: Installing Distributions v0.13.0
INFO: Installing EllipsisNotation v0.2.2
INFO: Installing FileIO v0.5.1
INFO: Installing ForwardDiff v0.4.2
INFO: Installing GenericSVD v0.1.0
INFO: Installing HDF5 v0.8.2
INFO: Installing Iterators v0.3.1
INFO: Installing JLD v0.6.11
INFO: Installing LegacyStrings v0.2.2
INFO: Installing LineSearches v0.1.5
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.6
INFO: Installing Optim v0.7.8
INFO: Installing OrdinaryDiffEq v2.4.0
INFO: Installing PDMats v0.7.0
INFO: Installing ParameterizedFunctions v2.1.2
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Rmath v0.1.7
INFO: Installing Roots v0.4.0
INFO: Installing SHA v0.3.3
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SymEngine v0.2.0
INFO: Installing URIParser v0.1.8
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Blosc
INFO: Building Conda
INFO: Building Rmath
INFO: Building SymEngine
INFO: Building HDF5
INFO: Testing DiffEqJump
  1.320274 seconds (3.80 M allocations: 189.136 MB, 3.43% gc time)
  0.747545 seconds (1.80 M allocations: 81.691 MB, 3.35% gc time)
Test Summary:       | Pass  Total
  Constant Rate Tests |    2      2
 16.659267 seconds (20.99 M allocations: 893.879 MB, 3.53% gc time)
Test Summary:       | Pass  Total
  Variable Rate Tests |    4      4
 19.239669 seconds (11.45 M allocations: 461.797 MB, 1.34% gc time)
  4.515725 seconds (2.77 M allocations: 93.919 MB, 1.13% gc time)
  4.017333 seconds (2.19 M allocations: 73.254 MB, 0.90% gc time)
Split Coupled Tests: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: Something went wrong. Integrator stepped past tstops but the algorithm was dtchangeable. Please report this error.
   in handle_tstop! at /home/vagrant/.julia/v0.5/StochasticDiffEq/src/integrators/integrator_utils.jl:346 [inlined]
   in solve!(::StochasticDiffEq.SDEIntegrator{StochasticDiffEq.SRIW1,DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,Float64,Float64,Float64,DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Array{Float64,1},Array{Array{Float64,1},1},DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_DIST,DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_BRIDGE,true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Array{Float64,1}}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Array{Float64,1}}},DiffEqNoiseProcess.RSWM{:RSwM3,Float64}},DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},DiffEqBase.RODESolution{Float64,2,Array{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},1},Void,Void,Array{Float64,1},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Array{Float64,1},Array{Array{Float64,1},1},DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_DIST,DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_BRIDGE,true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Array{Float64,1}}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Array{Float64,1}}},DiffEqNoiseProcess.RSWM{:RSwM3,Float64}},DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##49#51{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##37#38,##39#40,Void,UniformScaling{Int64},Void},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##37#38,Void,UniformScaling{Int64}},Int64},DiffEqJump.##50#52{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##37#38,##39#40,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void},StochasticDiffEq.SRIW1,StochasticDiffEq.LinearInterpolationData{Array{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},1},Array{Float64,1}}},StochasticDiffEq.SRIW1Cache{Array{Float64,1},DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Array{Float64,1}},Void,DiffEqJump.##49#51{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##37#38,##39#40,Void,UniformScaling{Int64},Void},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##37#38,Void,UniformScaling{Int64}},Int64},DiffEqJump.##50#52{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##37#38,##39#40,Void,UniformScaling{Int64},Void},Int64},StochasticDiffEq.SDEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}}}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void},Void}) at /home/vagrant/.julia/v0.5/StochasticDiffEq/src/solve.jl:360
   in #solve#39(::Array{Any,1}, ::Function, ::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##49#51{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##37#38,##39#40,Void,UniformScaling{Int64},Void},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##37#38,Void,UniformScaling{Int64}},Int64},DiffEqJump.##50#52{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##37#38,##39#40,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}}}}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}},Tuple{}}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.5/DiffEqJump/src/solve.jl:7
   in solve(::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##49#51{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##37#38,##39#40,Void,UniformScaling{Int64},Void},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##37#38,Void,UniformScaling{Int64}},Int64},DiffEqJump.##50#52{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##37#38,##39#40,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}}}}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##62#71,DiffEqJump.##63#72,DiffEqJump.##65#74},Tuple{DiffEqJump.##61#70,##33#34,DiffEqJump.##64#73}},Tuple{}}, ::StochasticDiffEq.SRIW1) at /home/vagrant/.julia/v0.5/DiffEqJump/src/solve.jl:6
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/DiffEqJump/test/runtests.jl:6 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at ./util.jl:188 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
  while loading /home/vagrant/.julia/v0.5/DiffEqJump/test/splitcoupled.jl, in expression starting on line 66
Test Summary:       | Pass  Error  Total
  Split Coupled Tests |    3      1      4
ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./util.jl:188 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DiffEqJump/test/runtests.jl, in expression starting on line 6
=============================[ ERROR: DiffEqJump ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DiffEqJump/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.7.0
INFO: Removing Blosc v0.3.0
INFO: Removing Calculus v0.2.2
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing Conda v0.5.3
INFO: Removing DataStructures v0.6.0
INFO: Removing DiffBase v0.1.0
INFO: Removing DiffEqNoiseProcess v0.2.0
INFO: Removing DiffEqPDEBase v0.3.3
INFO: Removing DiffEqProblemLibrary v0.8.0
INFO: Removing Distances v0.4.1
INFO: Removing Distributions v0.13.0
INFO: Removing EllipsisNotation v0.2.2
INFO: Removing FileIO v0.5.1
INFO: Removing ForwardDiff v0.4.2
INFO: Removing GenericSVD v0.1.0
INFO: Removing HDF5 v0.8.2
INFO: Removing Iterators v0.3.1
INFO: Removing JLD v0.6.11
INFO: Removing LegacyStrings v0.2.2
INFO: Removing LineSearches v0.1.5
INFO: Removing NLsolve v0.9.1
INFO: Removing NaNMath v0.2.6
INFO: Removing Optim v0.7.8
INFO: Removing OrdinaryDiffEq v2.4.0
INFO: Removing PDMats v0.7.0
INFO: Removing ParameterizedFunctions v2.1.2
INFO: Removing Parameters v0.7.2
INFO: Removing PositiveFactorizations v0.0.4
INFO: Removing QuadGK v0.1.2
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Rmath v0.1.7
INFO: Removing Roots v0.4.0
INFO: Removing SHA v0.3.3
INFO: Removing SpecialFunctions v0.2.0
INFO: Removing StatsBase v0.17.0
INFO: Removing StatsFuns v0.5.0
INFO: Removing StochasticDiffEq v2.2.1
INFO: Removing SymEngine v0.2.0
INFO: Removing URIParser v0.1.8
INFO: Removing VectorizedRoutines v0.0.2
ERROR: DiffEqJump had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
