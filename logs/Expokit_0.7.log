>>> 'Pkg.add("Expokit")' log
┌ Info: Cloning cache of Expokit from https://github.com/acroy/Expokit.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing Expokit v0.0.1                  @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Expokit
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Expokit")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4246342 s       6846 s     209849 s    1265390 s         37 s
       #2  3500 MHz    1033061 s         96 s      84453 s    5457564 s          2 s
       
  Memory: 2.93927001953125 GB (829.4453125 MB free)
  Uptime: 66871.0 sec
  Load Avg:  1.01513671875  1.001953125  0.9814453125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Expokit                       0.0.1
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.45.0
 - Nullables                     0.0.3
[ Info: Testing Expokit                            @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `1.+` at /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl:38.
│ Use `1 .+` instead.
└                                                       @ nothing runtests.jl:38
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:48.
│ Use `2 .*` instead.
└                                                          @ nothing expmv.jl:48
┌ Warning: Deprecated syntax `1./` at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:49.
│ Use `1 ./` instead.
└                                                          @ nothing expmv.jl:49
┌ Warning: Deprecated syntax `4.*` at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:49.
│ Use `4 .*` instead.
└                                                          @ nothing expmv.jl:49
┌ Warning: Deprecated syntax `parametric method syntax expmv{T}(t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:17.
│ Use `expmv(t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└                                                          @ nothing expmv.jl:17
┌ Warning: Deprecated syntax `parametric method syntax expmv!{T}(t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:26.
│ Use `expmv!(t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└                                                          @ nothing expmv.jl:26
┌ Warning: Deprecated syntax `parametric method syntax expmv!{T}(w::Vector{T}, t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:31.
│ Use `expmv!(w::Vector{T}, t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└                                                          @ nothing expmv.jl:31
┌ Warning: Deprecated syntax `parametric method syntax chbv{T}(A, vec::Vector{T})` around /home/vagrant/.julia/v0.7/Expokit/src/chbv.jl:72.
│ Use `chbv(A, vec::Vector{T}) where T` instead.
└                                                           @ nothing chbv.jl:72
┌ Warning: Deprecated syntax `parametric method syntax chbv!{T}(A, vec::Vector{T})` around /home/vagrant/.julia/v0.7/Expokit/src/chbv.jl:76.
│ Use `chbv!(A, vec::Vector{T}) where T` instead.
└                                                           @ nothing chbv.jl:76
┌ Warning: Deprecated syntax `parametric method syntax chbv!{T <: Real}(w::Vector{T}, A, vec::Vector{T})` around /home/vagrant/.julia/v0.7/Expokit/src/chbv.jl:79.
│ Use `chbv!(w::Vector{T}, A, vec::Vector{T}) where T <: Real` instead.
└                                                           @ nothing chbv.jl:79
┌ Warning: Deprecated syntax `parametric method syntax chbv!{T <: Complex}(w::Vector{T}, A, vec::Vector{T})` around /home/vagrant/.julia/v0.7/Expokit/src/chbv.jl:88.
│ Use `chbv!(w::Vector{T}, A, vec::Vector{T}) where T <: Complex` instead.
└                                                           @ nothing chbv.jl:88
┌ Warning: Deprecated syntax `1./` at /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:71.
│ Use `1 ./` instead.
└                                                          @ nothing phimv.jl:71
┌ Warning: Deprecated syntax `4.*` at /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:71.
│ Use `4 .*` instead.
└                                                          @ nothing phimv.jl:71
┌ Warning: Deprecated syntax `parametric method syntax phimv{T}(t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:39.
│ Use `phimv(t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└                                                          @ nothing phimv.jl:39
┌ Warning: Deprecated syntax `parametric method syntax phimv!{T}(t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:48.
│ Use `phimv!(t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└                                                          @ nothing phimv.jl:48
┌ Warning: Deprecated syntax `parametric method syntax phimv!{T}(w::Vector{T}, t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:53.
│ Use `phimv!(w::Vector{T}, t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└                                                          @ nothing phimv.jl:53
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl:2
testing real n=100 (first expmv, then expm)
┌ Warning: `eye(m::Integer, n::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, n)` or `Matrix{Float64}(I, m, n)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, n)` (with default `eltype(I)` `Bool`).
│   caller = test_expmv(::Int64) at runtests.jl:7
└                                                           @ Main runtests.jl:7
┌ Warning: `tic()` is deprecated, use `@time`, `@elapsed`, or calls to `time_ns()` instead.
│   caller = test_expmv(::Int64) at runtests.jl:9
└                                                           @ Main runtests.jl:9
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #expmv!#3(::Float64, ::Int64, ::typeof(norm), ::Function, ::Array{Float64,1}, ::Float64, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at expmv.jl:53
└                                                          @ Expokit expmv.jl:53
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = #expmv!#3(::Float64, ::Int64, ::typeof(norm), ::Function, ::Array{Float64,1}, ::Float64, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at expmv.jl:63
└                                                          @ Expokit expmv.jl:63
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = #expmv!#3(::Float64, ::Int64, ::typeof(norm), ::Function, ::Array{Float64,1}, ::Float64, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at expmv.jl:71
└                                                          @ Expokit expmv.jl:71
┌ Warning: `A_mul_B!(C::StridedVecOrMat, A::SparseMatrixCSC, B::StridedVecOrMat)` is deprecated, use `mul!(C, A, B)` instead.
│   caller = #expmv!#3(::Float64, ::Int64, ::typeof(norm), ::Function, ::Array{Float64,1}, ::Float64, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at expmv.jl:75
└                                                          @ Expokit expmv.jl:75
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = #expmv!#3(::Float64, ::Int64, ::typeof(norm), ::Function, ::Array{Float64,1}, ::Float64, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at expmv.jl:102
└                                                         @ Expokit expmv.jl:102
┌ Warning: `A_mul_B!(C::StridedVecOrMat, A::SparseMatrixCSC, B::StridedVecOrMat)` is deprecated, use `mul!(C, A, B)` instead.
│   caller = #expmv!#3(::Float64, ::Int64, ::typeof(norm), ::Function, ::Array{Float64,1}, ::Float64, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at expmv.jl:105
└                                                         @ Expokit expmv.jl:105
┌ Warning: `expm!` is deprecated, use `exp!` instead.
│   caller = #expmv!#3(::Float64, ::Int64, ::typeof(norm), ::Function, ::Array{Float64,1}, ::Float64, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at expmv.jl:113
└                                                         @ Expokit expmv.jl:113
ERROR: LoadError: UndefVarError: exp! not defined
Stacktrace:
 [1] expm!(::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N) at ./deprecated.jl:32
 [2] #expmv!#3(::Float64, ::Int64, ::typeof(norm), ::Function, ::Array{Float64,1}, ::Float64, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:113
 [3] #expmv! at ./<missing>:0 [inlined]
 [4] #expmv!#2 at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:26 [inlined]
 [5] #expmv! at ./<missing>:0 [inlined]
 [6] #expmv#1 at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:18 [inlined]
 [7] expmv at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:17 [inlined]
 [8] test_expmv(::Int64) at /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl:10
 [9] top-level scope
 [10] include at ./boot.jl:293 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:324
 [14] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl:44
┌ Error: ------------------------------------------------------------
│ # Testing failed for Expokit
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: Expokit had test errors

>>> End of log
