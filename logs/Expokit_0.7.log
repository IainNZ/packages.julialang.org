>>> 'Pkg.add("Expokit")' log
[ Info: Cloning cache of Expokit from https://github.com/acroy/Expokit.jl.git
[ Info: Installing Expokit v0.0.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Expokit
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Expokit")' log
Julia Version 0.7.0-DEV.3563
Commit cf6303abe0 (2018-01-24 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4355202 s       7871 s     218641 s    1345833 s         46 s
       #2  3500 MHz     990304 s         48 s      92561 s    5714592 s          1 s
       
  Memory: 2.93927001953125 GB (838.96875 MB free)
  Uptime: 69107.0 sec
  Load Avg:  0.99853515625  0.98681640625  1.02978515625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Expokit                       0.0.1
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Testing Expokit
┌ Warning: Deprecated syntax `1.+` at /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl:38.
│ Use `1 .+` instead.
└ @ nothing runtests.jl:38
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/Expokit/src/Expokit.jl:17
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/Expokit/src/Expokit.jl:18
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:48.
│ Use `2 .*` instead.
└ @ nothing expmv.jl:48
┌ Warning: Deprecated syntax `1./` at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:49.
│ Use `1 ./` instead.
└ @ nothing expmv.jl:49
┌ Warning: Deprecated syntax `4.*` at /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:49.
│ Use `4 .*` instead.
└ @ nothing expmv.jl:49
┌ Warning: Deprecated syntax `parametric method syntax expmv{T}(t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:17.
│ Use `expmv(t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└ @ nothing expmv.jl:17
┌ Warning: Deprecated syntax `parametric method syntax expmv!{T}(t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:26.
│ Use `expmv!(t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└ @ nothing expmv.jl:26
┌ Warning: Deprecated syntax `parametric method syntax expmv!{T}(w::Vector{T}, t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/expmv.jl:31.
│ Use `expmv!(w::Vector{T}, t::Number, A, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└ @ nothing expmv.jl:31
┌ Warning: Deprecated syntax `parametric method syntax chbv{T}(A, vec::Vector{T})` around /home/vagrant/.julia/v0.7/Expokit/src/chbv.jl:72.
│ Use `chbv(A, vec::Vector{T}) where T` instead.
└ @ nothing chbv.jl:72
┌ Warning: Deprecated syntax `parametric method syntax chbv!{T}(A, vec::Vector{T})` around /home/vagrant/.julia/v0.7/Expokit/src/chbv.jl:76.
│ Use `chbv!(A, vec::Vector{T}) where T` instead.
└ @ nothing chbv.jl:76
┌ Warning: Deprecated syntax `parametric method syntax chbv!{T <: Real}(w::Vector{T}, A, vec::Vector{T})` around /home/vagrant/.julia/v0.7/Expokit/src/chbv.jl:79.
│ Use `chbv!(w::Vector{T}, A, vec::Vector{T}) where T <: Real` instead.
└ @ nothing chbv.jl:79
┌ Warning: Deprecated syntax `parametric method syntax chbv!{T <: Complex}(w::Vector{T}, A, vec::Vector{T})` around /home/vagrant/.julia/v0.7/Expokit/src/chbv.jl:88.
│ Use `chbv!(w::Vector{T}, A, vec::Vector{T}) where T <: Complex` instead.
└ @ nothing chbv.jl:88
┌ Warning: Deprecated syntax `1./` at /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:71.
│ Use `1 ./` instead.
└ @ nothing phimv.jl:71
┌ Warning: Deprecated syntax `4.*` at /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:71.
│ Use `4 .*` instead.
└ @ nothing phimv.jl:71
┌ Warning: Deprecated syntax `parametric method syntax phimv{T}(t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:39.
│ Use `phimv(t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└ @ nothing phimv.jl:39
┌ Warning: Deprecated syntax `parametric method syntax phimv!{T}(t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:48.
│ Use `phimv!(t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└ @ nothing phimv.jl:48
┌ Warning: Deprecated syntax `parametric method syntax phimv!{T}(w::Vector{T}, t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm)` around /home/vagrant/.julia/v0.7/Expokit/src/phimv.jl:53.
│ Use `phimv!(w::Vector{T}, t::Number, A, u::Vector{T}, vec::Vector{T}; tol::Real = 1e-07, m::Int = min(30, size(A, 1)), norm = Base.norm) where T` instead.
└ @ nothing phimv.jl:53
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl:2
testing real n=100 (first expmv, then expm)
ERROR: LoadError: Base.sprand has been moved to the standard library package SparseArrays.
Restart Julia and then run `using SparseArrays` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
 [2] #sprand#988 at ./deprecated.jl:138 [inlined]
 [3] sprand at ./deprecated.jl:138 [inlined]
 [4] test_expmv(::Int64) at /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl:6
 [5] top-level scope
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1012
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:334
 [10] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl:44
┌ Error: ------------------------------------------------------------
│ # Testing failed for Expokit
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Expokit/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: Expokit had test errors

>>> End of log
