>>> 'Pkg.add("VariationalInequality")' log
INFO: Cloning cache of VariationalInequality from https://github.com/chkwon/VariationalInequality.jl.git
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.6
INFO: Installing ForwardDiff v0.7.5
INFO: Installing Ipopt v0.4.0
INFO: Installing JuMP v0.18.2
INFO: Installing MathOptInterface v0.4.1
INFO: Installing MathProgBase v0.7.1
INFO: Installing NaNMath v0.3.1
INFO: Installing ReverseDiffSparse v0.8.1
INFO: Installing VariationalInequality v0.1.0
INFO: Building SpecialFunctions
INFO: Building Ipopt
WARNING: imported binding for srcdir overwritten in module __anon__
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of VariationalInequality
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("VariationalInequality")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (716.68359375 MB free)
Uptime: 79786.0 sec
Load Avg:  1.076171875  1.01806640625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    5048068 s       7352 s     363258 s    1286733 s         15 s
#2  3500 MHz     863862 s       1348 s     111582 s    6850892 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
7 required packages:
 - Conda                         0.8.1
 - JSON                          0.17.2
 - POMDPModels                   0.2.2
 - PyCall                        1.17.1
 - PyPlot                        2.6.0
 - RDatasets                     0.4.0
 - VariationalInequality         0.1.0
81 additional packages:
 - AMG                           0.1.2              master
 - AbstractTrees                 0.1.0
 - AssetRegistry                 0.0.2
 - AutoHashEquals                0.2.0
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blink                         0.6.2
 - CPUTime                       0.1.0
 - CSV                           0.2.5
 - Calculus                      0.4.0
 - CategoricalArrays             0.3.10
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - CommonSubexpressions          0.1.0
 - Compat                        0.70.0
 - D3Trees                       0.2.0
 - DataFrames                    0.11.7
 - DataStreams                   0.3.6
 - DataStructures                0.8.4
 - DiffResults                   0.0.3
 - DiffRules                     0.0.6
 - DiscreteValueIteration        0.0.0-             master (unregistered)
 - Distributions                 0.15.0
 - Emoji_Entities                0.2.4              81d15593 (dirty)
 - FileIO                        0.9.1
 - FixedPointNumbers             0.4.6
 - ForwardDiff                   0.7.5
 - HTML_Entities                 0.2.4              1a5cf18a (dirty)
 - Hiccup                        0.1.1
 - HttpCommon                    0.4.0
 - HttpParser                    0.4.0
 - HttpServer                    0.3.1
 - IncompleteSelectedInversion   0.0.0-             master (unregistered)
 - InternedStrings               0.6.2
 - Ipopt                         0.4.0
 - IterativeSolvers              0.6.0
 - Iterators                     0.3.1
 - JuMP                          0.18.2
 - LaTeXStrings                  1.0.0
 - LaTeX_Entities                0.2.4              96871748 (dirty)
 - Lazy                          0.12.1
 - LightXML                      0.6.1
 - MCTS                          0.0.0-             master (unregistered)
 - MacroTools                    0.4.2
 - MathOptInterface              0.4.1
 - MathProgBase                  0.7.1
 - MbedTLS                       0.5.12
 - Missings                      0.2.10
 - Mocking                       0.5.5
 - Mustache                      0.3.3
 - Mux                           0.3.1
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.2
 - Nullables                     0.0.6
 - PDMats                        0.8.0
 - POMDPToolbox                  0.2.7
 - POMDPs                        0.6.7
 - Pidfile                       1.0.0
 - ProgressMeter                 0.5.6
 - QuadGK                        0.3.0
 - RData                         0.4.0
 - RecipesBase                   0.3.1
 - Reexport                      0.1.0
 - Requires                      0.4.4
 - ReverseDiffSparse             0.8.1
 - Rmath                         0.4.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.6.0
 - StaticArrays                  0.7.2
 - StatsBase                     0.23.1
 - StatsFuns                     0.6.1
 - StrTables                     0.2.4
 - TikzPictures                  1.2.0
 - TimeZones                     0.7.2
 - TranscodingStreams            0.5.3
 - URIParser                     0.3.1
 - VersionParsing                1.1.1
 - WeakRefStrings                0.4.7
 - WebSockets                    0.5.0
INFO: Testing VariationalInequality
INFO: Nagurney Model
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{JuMP.NonlinearExpression}, ::Int64) at ./deprecated.jl:57
 [3] VIPModel(::Ipopt.IpoptSolver) at /home/vagrant/.julia/v0.6/VariationalInequality/src/model.jl:10
 [4] VIPModel() at /home/vagrant/.julia/v0.6/VariationalInequality/src/model.jl:9
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/VariationalInequality/example/nagurney.jl, in expression starting on line 12

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

iteration    1: rel_err= 5.308620607849
iteration    2: rel_err= 4.234543167027
iteration    3: rel_err= 3.473730352377
iteration    4: rel_err= 2.829668728401
iteration    5: rel_err= 2.274529189541
iteration    6: rel_err= 1.806340676328
iteration    7: rel_err= 1.421857899456
iteration    8: rel_err= 1.113104042594
iteration    9: rel_err= 0.869204448693
iteration   10: rel_err= 0.678589519567
iteration   11: rel_err= 0.530473239471
iteration   12: rel_err= 0.415584543518
iteration   13: rel_err= 0.326370776944
iteration   14: rel_err= 0.256895066220
iteration   15: rel_err= 0.202593470824
iteration   16: rel_err= 0.159997516826
iteration   17: rel_err= 0.126478888750
iteration   18: rel_err= 0.100039313056
iteration   19: rel_err= 0.079148783844
iteration   20: rel_err= 0.062625824566
iteration   21: rel_err= 0.049550570638
iteration   22: rel_err= 0.039201913903
iteration   23: rel_err= 0.031011681560
iteration   24: rel_err= 0.024530710510
iteration   25: rel_err= 0.019403257871
iteration   26: rel_err= 0.015347351524
iteration   27: rel_err= 0.012139478636
iteration   28: rel_err= 0.009602528023
iteration   29: rel_err= 0.007596232403
iteration   30: rel_err= 0.006009566938
iteration   31: rel_err= 0.004754697317
iteration   32: rel_err= 0.003762163351
iteration   33: rel_err= 0.002977050248
iteration   34: rel_err= 0.002355949403
iteration   35: rel_err= 0.001864549304
iteration   36: rel_err= 0.001475728296
iteration   37: rel_err= 0.001168046114
iteration   38: rel_err= 0.000924551645
iteration   39: rel_err= 0.000731841042
iteration   40: rel_err= 0.000579313783
iteration   41: rel_err= 0.000458585102
iteration   42: rel_err= 0.000363021905
iteration   43: rel_err= 0.000287376137
iteration   44: rel_err= 0.000227495103
iteration   45: rel_err= 0.000180092516
iteration   46: rel_err= 0.000142567518
iteration   47: rel_err= 0.000112861569
iteration   48: rel_err= 0.000089345277
iteration   49: rel_err= 0.000070728876
iteration   50: rel_err= 0.000055991393
iteration   51: rel_err= 0.000044324618
iteration   52: rel_err= 0.000035088746
iteration   53: rel_err= 0.000027777285
iteration   54: rel_err= 0.000021989272
iteration   55: rel_err= 0.000017407287
iteration   56: rel_err= 0.000013780043
iteration   57: rel_err= 0.000010908609
iteration   58: rel_err= 0.000008635502
iteration   59: rel_err= 0.000006836051
iteration   60: rel_err= 0.000005411561
iteration   61: rel_err= 0.000004283902
iteration   62: rel_err= 0.000003391222
iteration   63: rel_err= 0.000002684557
iteration   64: rel_err= 0.000002125147
iteration   65: rel_err= 0.000001682307
iteration   66: rel_err= 0.000001331746
iteration   67: rel_err= 0.000001054235
iteration   68: rel_err= 0.000000834552
iteration   69: rel_err= 0.000000660647
iteration   70: rel_err= 0.000000522981
iteration   71: rel_err= 0.000000414001
iteration   72: rel_err= 0.000000327731
iteration   73: rel_err= 0.000000259438
iteration   74: rel_err= 0.000000205376
iteration   75: rel_err= 0.000000162580
iteration   76: rel_err= 0.000000128701
iteration   77: rel_err= 0.000000101882
iteration   78: rel_err= 0.000000080652
iteration   79: rel_err= 0.000000063846
iteration   80: rel_err= 0.000000050541
iteration   81: rel_err= 0.000000040010
iteration   82: rel_err= 0.000000031672
iteration   83: rel_err= 0.000000025072
iteration   84: rel_err= 0.000000019848
iteration   85: rel_err= 0.000000015712
iteration   86: rel_err= 0.000000012438
iteration   87: rel_err= 0.000000009846
iteration   88: rel_err= 0.000000007794
iteration   89: rel_err= 0.000000006170
iteration   90: rel_err= 0.000000004884
iteration   91: rel_err= 0.000000003867
iteration   92: rel_err= 0.000000003061
iteration   93: rel_err= 0.000000002423
iteration   94: rel_err= 0.000000001918
iteration   95: rel_err= 0.000000001518
iteration   96: rel_err= 0.000000001202
iteration   97: rel_err= 0.000000000952
iteration   98: rel_err= 0.000000000753
iteration   99: rel_err= 0.000000000596
iteration  100: rel_err= 0.000000000472
iteration  101: rel_err= 0.000000000374
iteration  102: rel_err= 0.000000000296
iteration  103: rel_err= 0.000000000234
iteration  104: rel_err= 0.000000000185
iteration  105: rel_err= 0.000000000147
iteration  106: rel_err= 0.000000000116
iteration  107: rel_err= 0.000000000092
sol1 = Dict(q[1]=>10.0752,s[1]=>7.06013,Q[1,1]=>7.06013,Q[2,1]=>9.78746,q[2]=>3.2861,d[1]=>16.8476,s[2]=>9.78746)
gap1 = 5.4176556799048054e-8
sol1[Q[1, 1]] = 7.060129528139479
sol1[Q[2, 1]] = 9.787459255106612
sol1[q[1]] = 10.075161910477892
sol1[q[2]] = 3.286102057100837
INFO: Traffic Equilibrium
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{JuMP.NonlinearExpression}, ::Int64) at ./deprecated.jl:57
 [3] VIPModel(::Ipopt.IpoptSolver) at /home/vagrant/.julia/v0.6/VariationalInequality/src/model.jl:10
 [4] VIPModel() at /home/vagrant/.julia/v0.6/VariationalInequality/src/model.jl:9
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/VariationalInequality/example/traffic.jl, in expression starting on line 5
iteration    1: rel_err= 0.015367792827
iteration    2: rel_err= 0.015257707352
iteration    3: rel_err= 0.015145030211
iteration    4: rel_err= 0.015029910718
iteration    5: rel_err= 0.014912499862
iteration    6: rel_err= 0.014792949651
iteration    7: rel_err= 0.014671412485
iteration    8: rel_err= 0.014548040557
iteration    9: rel_err= 0.014422985275
iteration   10: rel_err= 0.014296396729
iteration   11: rel_err= 0.014168423187
iteration   12: rel_err= 0.014039210629
iteration   13: rel_err= 0.013908902323
iteration   14: rel_err= 0.013777638441
iteration   15: rel_err= 0.013645555711
iteration   16: rel_err= 0.013512787113
iteration   17: rel_err= 0.013379461615
iteration   18: rel_err= 0.013245703943
iteration   19: rel_err= 0.013111634396
iteration   20: rel_err= 0.012977368687
iteration   21: rel_err= 0.012843017829
iteration   22: rel_err= 0.012708688042
iteration   23: rel_err= 0.012574480701
iteration   24: rel_err= 0.012440492305
iteration   25: rel_err= 0.012306814470
iteration   26: rel_err= 0.012173533955
iteration   27: rel_err= 0.012040732699
iteration   28: rel_err= 0.011908487884
iteration   29: rel_err= 0.011776872012
iteration   30: rel_err= 0.011645952997
iteration   31: rel_err= 0.011515794271
iteration   32: rel_err= 0.011386454900
iteration   33: rel_err= 0.011257989714
iteration   34: rel_err= 0.011130449434
iteration   35: rel_err= 0.011003880817
iteration   36: rel_err= 0.010878326799
iteration   37: rel_err= 0.010753826643
iteration   38: rel_err= 0.010630416089
iteration   39: rel_err= 0.010508127509
iteration   40: rel_err= 0.010386990052
iteration   41: rel_err= 0.010267029803
iteration   42: rel_err= 0.010148269926
iteration   43: rel_err= 0.010030730817
iteration   44: rel_err= 0.009914430247
iteration   45: rel_err= 0.009799383504
iteration   46: rel_err= 0.009685603532
iteration   47: rel_err= 0.009573101067
iteration   48: rel_err= 0.009461884768
iteration   49: rel_err= 0.009351961340
iteration   50: rel_err= 0.009243335663
iteration   51: rel_err= 0.009136010902
iteration   52: rel_err= 0.009029988626
iteration   53: rel_err= 0.008925268910
iteration   54: rel_err= 0.008821850442
iteration   55: rel_err= 0.008719730481
iteration   56: rel_err= 0.001412746675
iteration   57: rel_err= 0.000000000003
sol = Dict(h[1]=>50.0,h[2]=>0.0,h[3]=>50.0)
gap = 1.5782370610395446e-6
INFO: Fukushima1
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{JuMP.NonlinearExpression}, ::Int64) at ./deprecated.jl:57
 [3] VIPModel(::Ipopt.IpoptSolver) at /home/vagrant/.julia/v0.6/VariationalInequality/src/model.jl:10
 [4] VIPModel() at /home/vagrant/.julia/v0.6/VariationalInequality/src/model.jl:9
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/VariationalInequality/example/fukushima1.jl, in expression starting on line 7
iteration    1: rel_err= 0.406201919032
iteration    2: rel_err= 0.317277565643
iteration    3: rel_err= 0.245177645135
iteration    4: rel_err= 0.042702450855
iteration    5: rel_err= 0.018835867721
iteration    6: rel_err= 0.014362405346
iteration    7: rel_err= 0.011075222380
iteration    8: rel_err= 0.008645705265
iteration    9: rel_err= 0.006834057079
iteration   10: rel_err= 0.005467172279
iteration   11: rel_err= 0.004421391598
iteration   12: rel_err= 0.003609151264
iteration   13: rel_err= 0.002968778282
iteration   14: rel_err= 0.002456850528
iteration   15: rel_err= 0.002042624860
iteration   16: rel_err= 0.001704082606
iteration   17: rel_err= 0.001425190296
iteration   18: rel_err= 0.001194037425
iteration   19: rel_err= 0.001001585311
iteration   20: rel_err= 0.000840830170
iteration   21: rel_err= 0.000706241492
iteration   22: rel_err= 0.000593381243
iteration   23: rel_err= 0.000498641282
iteration   24: rel_err= 0.000419058277
iteration   25: rel_err= 0.000352179864
iteration   26: rel_err= 0.000295965247
iteration   27: rel_err= 0.000248709431
iteration   28: rel_err= 0.000208984096
iteration   29: rel_err= 0.000175590521
iteration   30: rel_err= 0.000147521506
iteration   31: rel_err= 0.000123930164
iteration   32: rel_err= 0.000104104129
iteration   33: rel_err= 0.000087444083
iteration   34: rel_err= 0.000073445796
iteration   35: rel_err= 0.000061685067
iteration   36: rel_err= 0.000051805063
iteration   37: rel_err= 0.000043505661
iteration   38: rel_err= 0.000036534479
iteration   39: rel_err= 0.000030679312
iteration   40: rel_err= 0.000025761768
iteration   41: rel_err= 0.000021631899
iteration   42: rel_err= 0.000018163687
iteration   43: rel_err= 0.000015251234
iteration   44: rel_err= 0.000012805563
iteration   45: rel_err= 0.000010751921
iteration   46: rel_err= 0.000009027510
iteration   47: rel_err= 0.000007579581
iteration   48: rel_err= 0.000006363827
iteration   49: rel_err= 0.000005343034
iteration   50: rel_err= 0.000004485951
iteration   51: rel_err= 0.000003766331
iteration   52: rel_err= 0.000003162133
iteration   53: rel_err= 0.000002654849
iteration   54: rel_err= 0.000002228938
iteration   55: rel_err= 0.000001871348
iteration   56: rel_err= 0.000001571122
iteration   57: rel_err= 0.000001319059
iteration   58: rel_err= 0.000001107433
iteration   59: rel_err= 0.000000929759
iteration    1: rel_err=            Inf
iteration    2: rel_err= 0.823939144571
iteration    3: rel_err= 0.368648330434
iteration    4: rel_err= 0.224704121041
iteration    5: rel_err= 0.033804032983
iteration    6: rel_err= 0.005338348222
iteration    7: rel_err= 0.004384480933
iteration    8: rel_err= 0.003620592611
iteration    9: rel_err= 0.003005060703
iteration   10: rel_err= 0.002505872703
iteration   11: rel_err= 0.002098411042
iteration   12: rel_err= 0.001763720711
iteration   13: rel_err= 0.001487165701
iteration   14: rel_err= 0.001257395700
iteration   15: rel_err= 0.001065557625
iteration   16: rel_err= 0.000904698077
iteration   17: rel_err= 0.000769312853
iteration   18: rel_err= 0.000655008483
iteration   19: rel_err= 0.000558248244
iteration   20: rel_err= 0.000476161375
iteration   21: rel_err= 0.000406399321
iteration   22: rel_err= 0.000347026835
iteration   23: rel_err= 0.000296438918
iteration   24: rel_err= 0.000253296916
iteration   25: rel_err= 0.000216478883
iteration   26: rel_err= 0.000185040636
iteration   27: rel_err= 0.000158184873
iteration   28: rel_err= 0.000135236429
iteration   29: rel_err= 0.000115622265
iteration   30: rel_err= 0.000098855126
iteration   31: rel_err= 0.000084520097
iteration   32: rel_err= 0.000072263460
iteration   33: rel_err= 0.000061783394
iteration   34: rel_err= 0.000052822188
iteration   35: rel_err= 0.000045159680
iteration   36: rel_err= 0.000038607708
iteration   37: rel_err= 0.000033005421
iteration   38: rel_err= 0.000028215280
iteration   39: rel_err= 0.000024119669
iteration   40: rel_err= 0.000020617995
iteration   41: rel_err= 0.000017624225
iteration   42: rel_err= 0.000015064775
iteration   43: rel_err= 0.000012876708
iteration   44: rel_err= 0.000011006196
iteration   45: rel_err= 0.000009407201
iteration   46: rel_err= 0.000008040351
iteration   47: rel_err= 0.000006871976
iteration   48: rel_err= 0.000005873282
iteration   49: rel_err= 0.000005019648
iteration   50: rel_err= 0.000004290021
iteration   51: rel_err= 0.000003666399
iteration   52: rel_err= 0.000003133393
iteration   53: rel_err= 0.000002677843
iteration   54: rel_err= 0.000002288500
iteration   55: rel_err= 0.000001955747
iteration   56: rel_err= 0.000001671363
iteration   57: rel_err= 0.000001428319
iteration   58: rel_err= 0.000001220610
iteration   59: rel_err= 0.000001043100
iteration   60: rel_err= 0.000000891399
sol1 = Dict(x3=>-7.36967e-7,x1=>1.0,x2=>-4.81005e-6)
sol2 = Dict(x3=>-7.37317e-7,x1=>1.0,x2=>-5.18589e-6)
gap1 = 1.3250497588046528e-8
gap2 = 1.325812060137821e-8
x1 = 0.9999999962679547
x2 = -4.810045509873405e-6
x3 = -7.369672775179648e-7
INFO: VariationalInequality tests passed

>>> End of log
