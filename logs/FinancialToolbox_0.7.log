>>> 'Pkg.add("FinancialToolbox")' log
[ Info: Cloning cache of FinancialToolbox from https://github.com/rcalxrc08/FinancialToolbox.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FinancialToolbox v0.1.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions @ Main none:10
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of FinancialToolbox
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("FinancialToolbox")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    4428490 s        126 s     219684 s    1113692 s         64 s
       #2  3499 MHz     928390 s         52 s      90300 s    5635162 s          0 s
       
  Memory: 2.93927001953125 GB (731.26171875 MB free)
  Uptime: 67602.0 sec
  Load Avg:  0.9970703125  0.9853515625  0.98779296875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - FinancialToolbox              0.1.2
 - JSON                          0.16.3
6 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.42.0
 - Nullables                     0.0.2
 - SHA                           0.5.2
 - SpecialFunctions              0.3.6
 - URIParser                     0.3.0
[ Info: Computing test dependencies for FinancialToolbox... @ Base.Pkg.Entry entry.jl:713
[ Info: Cloning cache of HyperDualNumbers from https://github.com/JuliaDiff/HyperDualNumbers.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing Calculus v0.2.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DualNumbers v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing HyperDualNumbers v2.0.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NaNMath v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions @ Main none:10
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
[ Info: Testing FinancialToolbox @ Base.Pkg.Entry entry.jl:723
Running tests:

┌ Warning: Deprecated syntax `implicit assignment to global variable `i``.
│ Use `global i` instead.
└ @ nothing none:0
------------------------------------------------------------
  * testRealNumbers.jl *
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/FinancialToolbox/test/testRealNumbers.jl:1
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Deprecated syntax `parametric method syntax normcdf{number <: Number}(x::number)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:2.
│ Use `normcdf(x::number) where number <: Number` instead.
└ @ nothing financial.jl:2
┌ Warning: Deprecated syntax `parametric method syntax normpdf{number <: Number}(x::number)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:6.
│ Use `normpdf(x::number) where number <: Number` instead.
└ @ nothing financial.jl:6
┌ Warning: Deprecated syntax `parametric method syntax blsprice{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:33.
│ Use `blsprice(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:33
┌ Warning: Deprecated syntax `parametric method syntax blkprice{num1, num2, num3, num4, num5 <: Number}(F0::num1, K::num2, r::num3, T::num4, σ::num5, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:68.
│ Use `blkprice(F0::num1, K::num2, r::num3, T::num4, σ::num5, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5 <: Number}` instead.
└ @ nothing financial.jl:68
┌ Warning: Deprecated syntax `parametric method syntax blsdelta{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:97.
│ Use `blsdelta(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:97
┌ Warning: Deprecated syntax `parametric method syntax blsgamma{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:133.
│ Use `blsgamma(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:133
┌ Warning: Deprecated syntax `parametric method syntax blsvega{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:164.
│ Use `blsvega(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:164
┌ Warning: Deprecated syntax `parametric method syntax blsrho{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:194.
│ Use `blsrho(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:194
┌ Warning: Deprecated syntax `parametric method syntax blstheta{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:229.
│ Use `blstheta(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:229
┌ Warning: Deprecated syntax `parametric method syntax blslambda{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:271.
│ Use `blslambda(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:271
┌ Warning: Deprecated syntax `parametric method syntax blscheck{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:281.
│ Use `blscheck(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:281
┌ Warning: Deprecated syntax `parametric method syntax blsimpv{num1, num2, num3, num4, num5, num6 <: Real}(S0::num1, K::num2, r::num3, T::num4, Price::num5, d::num6 = 0, FlagIsCall::Bool = true, xtol::Real = 1e-14, ytol::Real = 1e-15)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:408.
│ Use `blsimpv(S0::num1, K::num2, r::num3, T::num4, Price::num5, d::num6 = 0, FlagIsCall::Bool = true, xtol::Real = 1e-14, ytol::Real = 1e-15) where {num1, num2, num3, num4, num5, num6 <: Real}` instead.
└ @ nothing financial.jl:408
┌ Warning: Deprecated syntax `parametric method syntax blkimpv{num1, num2, num3, num4, num5 <: Real}(S0::num1, K::num2, r::num3, T::num4, Price::num5, FlagIsCall::Bool = true, xtol::Real = 1e-14, ytol::Real = 1e-15)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:446.
│ Use `blkimpv(S0::num1, K::num2, r::num3, T::num4, Price::num5, FlagIsCall::Bool = true, xtol::Real = 1e-14, ytol::Real = 1e-15) where {num1, num2, num3, num4, num5 <: Real}` instead.
└ @ nothing financial.jl:446
┌ Warning: Deprecated syntax `parametric method syntax blspsi{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:475.
│ Use `blspsi(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:475
┌ Warning: Deprecated syntax `parametric method syntax blsvanna{num1, num2, num3, num4, num5, num6 <: Number}(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true)` around /home/vagrant/.julia/v0.7/FinancialToolbox/src/financial.jl:510.
│ Use `blsvanna(S0::num1, K::num2, r::num3, T::num4, σ::num5, d::num6 = 0, FlagIsCall::Bool = true) where {num1, num2, num3, num4, num5, num6 <: Number}` instead.
└ @ nothing financial.jl:510
Starting Standard Test
---  European Call: Price and Sensitivities
-----Testing Price
-----Testing Black Price
-----Testing Delta
-----Testing Theta
-----Testing Rho
-----Testing Lambda
-----Testing Implied Volatility
-----Testing Implied Volatility Black
-----Testing Implied Volatility Low X tol, High Y tol
-----Testing Implied Volatility Low Y tol, High X tol
---  European Put: Price and Sensitivities
-----Testing Price
-----Testing Price Black
-----Testing Delta
-----Testing Theta
-----Testing Rho
-----Testing Lambda
-----Testing Implied Volatility
-----Testing Implied Volatility Black
-----Testing Gamma
-----Testing Vega
Standard Test Passed

Starting Input Validation Test Real
----Testing Negative Spot Price
----Testing Negative Strike Price
----Testing Negative Time to Maturity
----Testing Negative Volatility
----Testing Negative Option Price
----Testing Negative Tollerance
Real Input Validation Test Passed
------------------------------------------------------------

------------------------------------------------------------
  * testComplexNumbers.jl *
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/FinancialToolbox/test/testComplexNumbers.jl:1
Starting Complex Number Test
--- European Call Sensitivities: Complex Step Approximation
-----Testing Delta
-----Testing Rho
-----Testing Theta
-----Testing Lambda
--- European Put Sensitivities: Complex Step Approximation
-----Testing Delta
-----Testing Rho
-----Testing Theta
-----Testing Lambda
-----Testing Vega
Complex Number Test Passed

Starting Input Validation Test Complex
----Testing Negative  Spot Price 
----Testing Negative  Strike Price 
----Testing Negative  Time to Maturity 
----Testing Negative  Volatility 
Complex Input Validation Test Passed
------------------------------------------------------------

------------------------------------------------------------
  * testDualNumbers.jl *
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/FinancialToolbox/test/testDualNumbers.jl:1
------------------------------------------------------------

------------------------------------------------------------
  * testHyperDualNumbers.jl *
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/FinancialToolbox/test/testHyperDualNumbers.jl:1
Starting Hyper Dual Numbers Test
--- European Call Sensitivities: HyperDualNumbers
-----Testing Delta
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
-----Testing Gamma
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
-----Testing Gamma  2
-----Testing Rho
-----Testing Theta
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
-----Testing Lambda
-----Testing Vanna
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
-----Testing Vanna  2
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Int64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
--- European Put Sensitivities: HyperDualNumbers
-----Testing Delta
-----Testing Rho
-----Testing Theta
-----Testing Lambda
-----Testing Vanna
-----Testing Vanna  2
-----Testing Vega
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
Hyper Dual Numbers Test Passed

Starting Input Validation Test Hyper Dual Numbers
----Testing Negative  Spot Price 
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:297 [inlined]
└ @ Core financial.jl:297
----Testing Negative  Strike Price 
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:299 [inlined]
└ @ Core financial.jl:299
----Testing Negative  Time to Maturity 
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:301 [inlined]
└ @ Core financial.jl:301
----Testing Negative  Volatility 
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Hyper{Float64}(::Int64)` should be defined instead.
│   caller = blscheck at financial.jl:303 [inlined]
└ @ Core financial.jl:303
Hyper Dual Input Validation Test Passed
------------------------------------------------------------
[ Info: FinancialToolbox tests passed @ Base.Pkg.Entry entry.jl:737
[ Info: Removing Calculus v0.2.2 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DualNumbers v0.3.0 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing HyperDualNumbers v2.0.0 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing NaNMath v0.3.0 @ Base.Pkg.Entry entry.jl:546

>>> End of log
