>>> 'Pkg.add("YT")' log
[ Info: Cloning cache of YT from https://github.com/jzuhone/YT.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BaseTestNext v0.2.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ColorTypes v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Colors v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Conda v0.7.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FixedPointNumbers v0.4.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LaTeXStrings v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MacroTools v0.4.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PyCall v1.15.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PyPlot v2.3.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecipesBase v0.2.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Reexport v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SymPy v0.5.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing YT v0.4.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building Conda @ Main none:10
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building PyCall @ Main none:10
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:11.
│ Use `struct` instead.
└ @ nothing build.jl:11
[ Warning: Replacing module `URIParser` @ Base loading.jl:350
[ Warning: Replacing module `SHA` @ Base loading.jl:350
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:50. @ nothing build.jl:50
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:145. @ nothing build.jl:145
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:187. @ nothing build.jl:187
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:187. @ nothing build.jl:187
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:188. @ nothing build.jl:188
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:207. @ nothing build.jl:207
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PyCall/deps/depsutils.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PyCall/deps/depsutils.jl:20
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:169
└ @ Core build.jl:169
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata ...................
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.7/Conda/deps/usr:
#
numpy                     1.12.1          py27_blas_openblas_201  [blas_openblas]  conda-forge
┌ Warning: `readstring(cmd::AbstractCmd)` is deprecated, use `read(cmd, String)` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#pyvar#2")))(::String, ::String, ::String) at build.jl:39
└ @ Main.__anon__ build.jl:39
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:58
└ @ Main.__anon__ build.jl:58
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:60
└ @ Main.__anon__ build.jl:60
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:60
└ @ Main.__anon__ build.jl:60
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:209
└ @ Core build.jl:209
INFO: PyCall is using /home/vagrant/.julia/v0.7/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.7/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.7/Conda/deps/usr/lib/libpython2.7
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#writeifchanged#7")))(::String, ::String) at build.jl:224
└ @ Main.__anon__ build.jl:224
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#writeifchanged#7")))(::String, ::String) at build.jl:228
└ @ Main.__anon__ build.jl:228
INFO: /home/vagrant/.julia/v0.7/PyCall/deps/deps.jl has not changed
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#writeifchanged#7")))(::String, ::SubString{String}) at build.jl:224
└ @ Main.__anon__ build.jl:224
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#writeifchanged#7")))(::String, ::SubString{String}) at build.jl:228
└ @ Main.__anon__ build.jl:228
INFO: /home/vagrant/.julia/v0.7/PyCall/deps/PYTHON has not changed
[ Info: Building YT @ Main none:10
[ Warning: Deprecated syntax ``?` used as an identifier` at /home/vagrant/.julia/v0.7/YT/deps/build.jl:10. @ nothing build.jl:10
[ Warning: Replacing module `URIParser` @ Base loading.jl:350
[ Warning: Replacing module `SHA` @ Base loading.jl:350
[ Warning: Replacing module `Compat` @ Base loading.jl:350
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/YT/deps/build.jl:1
in pytype_query at /home/vagrant/.julia/v0.7/PyCall/src/conversions.jl
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/YT/deps/build.jl:1
in pysequence_query at /home/vagrant/.julia/v0.7/PyCall/src/conversions.jl
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/YT/deps/build.jl:1
in pytype_query at /home/vagrant/.julia/v0.7/PyCall/src/conversions.jl

signal (11): Segmentation fault
in expression starting at /home/vagrant/.julia/v0.7/YT/deps/build.jl:1
_ZN4llvm5Value16DoPHITranslationEPKNS_10BasicBlockES3_ at /home/vagrant/julia/bin/../lib/julia/libLLVM-3.9.so (unknown line)
Allocations: 4390863 (Pool: 4390173; Big: 690); GC: 9
ERROR: Build process failed.
error at ./error.jl:33 [inlined]
build!(::Array{String,1}, ::Set{Any}, ::String) at ./pkg/entry.jl:631
build!(::Array{String,1}, ::Dict{Any,Any}, ::Set{Any}) at ./pkg/entry.jl:639
build! at ./pkg/entry.jl:636 [inlined]
build(::Array{String,1}) at ./pkg/entry.jl:654
resolve(::Dict{String,Base.Pkg.Types.VersionSet}, ::Dict{String,Dict{VersionNumber,Base.Pkg.Types.Available}}, ::Dict{String,Tuple{VersionNumber,Bool}}, ::Dict{String,Base.Pkg.Types.Fixed}, ::Dict{String,VersionNumber}, ::Set{String}) at ./pkg/entry.jl:579
resolve at ./pkg/entry.jl:486 [inlined] (repeats 4 times)
edit(::Function, ::String, ::Base.Pkg.Types.VersionSet, ::Vararg{Base.Pkg.Types.VersionSet,N} where N) at ./pkg/entry.jl:30
(::getfield(Base.Pkg.Entry, Symbol("##4#6")){String,Base.Pkg.Types.VersionSet})() at ./task.jl:348
Stacktrace:
 [1] sync_end() at ./task.jl:300
 [2] macro expansion at ./task.jl:316 [inlined]
 [3] add(::String, ::Base.Pkg.Types.VersionSet) at ./pkg/entry.jl:51
 [4] add at ./pkg/entry.jl:80 [inlined]
 [5] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(Base.Pkg.Entry.add),Tuple{String}})() at ./pkg/dir.jl:36
 [6] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(Base.Pkg.Entry.add),Tuple{String}}, ::String) at ./file.jl:70
 [7] #cd#1(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/dir.jl:36
 [8] cd at ./pkg/dir.jl:25 [inlined]
 [9] add(::String) at ./pkg/pkg.jl:115
 [10] top-level scope

>>> 'Pkg.test("YT")' log
Package was unable to be tested.

>>> End of log
