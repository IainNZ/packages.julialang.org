>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.5.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v1.6.0
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.0.3
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.7.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.3.1
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1693.5625 MB free)
Uptime: 26484.0 sec
Load Avg:  1.0009765625  0.998046875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1656392 s       5670 s     136650 s     528315 s         26 s
#2  3499 MHz     720854 s       2206 s      73630 s    1780292 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.11.0
34 additional packages:
 - BinDeps                       0.5.0
 - Calculus                      0.2.2
 - Compat                        0.25.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - DiffEqBase                    1.6.0
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.0.3
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.7.1
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.3.1
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.5.0
INFO: Installing DiffEqNoiseProcess v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing InplaceOps v0.1.0
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.2.1
INFO: Installing ParameterizedFunctions v2.0.0
INFO: Installing PolynomialFactors v0.0.4
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.1.0
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
Installing dependency libnlopt0 via `sudo apt-get install libnlopt0`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libnlopt0
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 161 kB of archives.
After this operation, 468 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libnlopt0 amd64 2.4.1+dfsg-1ubuntu1 [161 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 161 kB in 0s (450 kB/s)
Selecting previously unselected package libnlopt0:amd64.
(Reading database ... 83943 files and directories currently installed.)
Preparing to unpack .../libnlopt0_2.4.1+dfsg-1ubuntu1_amd64.deb ...
Unpacking libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Setting up libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.11) ...
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.814004e+03              NaN
 * lambda: 10000.0

     1     2.814000e+03     8.739540e+02
 * g(x): 873.9540149177337
 * lambda: 1000.0
 * dx: [1.76995e-6]

     2     2.813970e+03     8.731803e+02
 * g(x): 873.1802975284156
 * lambda: 100.0
 * dx: [1.76837e-5]

     3     2.813663e+03     8.655184e+02
 * g(x): 865.5184024614477
 * lambda: 10.0
 * dx: [0.000175268]

     4     2.809819e+03     8.069854e+02
 * g(x): 806.9854296800056
 * lambda: 1.0
 * dx: [0.00160981]

     5     2.786951e+03     5.298573e+02
 * g(x): 529.8573040043374
 * lambda: 0.1
 * dx: [0.0101495]

     6     2.732495e+03     1.039066e+02
 * g(x): 103.90660179472503
 * lambda: 0.010000000000000002
 * dx: [0.0212814]

     7     2.646139e+03     6.418347e+01
 * g(x): 64.183465396127
 * lambda: 0.0010000000000000002
 * dx: [0.028393]

     8     2.532948e+03     7.447433e+01
 * g(x): 74.47432943628601
 * lambda: 0.00010000000000000003
 * dx: [0.0341263]

     9     2.399332e+03     9.511844e+01
 * g(x): 95.11844037116283
 * lambda: 1.0000000000000004e-5
 * dx: [0.0378153]

    10     2.251479e+03     1.943231e+02
 * g(x): 194.32310137395277
 * lambda: 1.0000000000000004e-6
 * dx: [0.0401637]

    11     1.990459e+03     1.150499e+02
 * g(x): 115.04992826900607
 * lambda: 1.0000000000000005e-7
 * dx: [0.0485388]

    12     1.485214e+03     2.617023e+02
 * g(x): 261.7022501935423
 * lambda: 1.0000000000000005e-8
 * dx: [0.0638492]

    13     7.639364e+02     8.208503e+02
 * g(x): 820.8502799959958
 * lambda: 1.0000000000000005e-9
 * dx: [0.0759968]

    14     1.200983e+02     8.198398e+02
 * g(x): 819.8397509022718
 * lambda: 1.0000000000000006e-10
 * dx: [0.0869043]

    15     9.937129e-01     1.849548e+02
 * g(x): 184.9548317705743
 * lambda: 1.0000000000000006e-11
 * dx: [0.0463459]

    16     4.026488e-02     3.122501e-01
 * g(x): 0.3122501275786227
 * lambda: 1.0000000000000006e-12
 * dx: [0.00460008]

    17     4.026181e-02     6.470425e-07
 * g(x): 6.470425066851249e-7
 * lambda: 1.0000000000000007e-13
 * dx: [8.28079e-6]

    18     4.026181e-02     4.136322e-08
 * g(x): 4.136322351300237e-8
 * lambda: 1.0000000000000008e-14
 * dx: [2.23475e-9]

Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use Two Stage Method to fit the parameter
Multivariate
Use LM to fit the parameter
     0     1.456816e+03              NaN
 * lambda: 10000.0

     1     1.456753e+03     2.844218e+03
 * g(x): 2844.2181245976944
 * lambda: 1000.0
 * dx: [1.06449e-5,9.3656e-6]

     2     1.456125e+03     2.841431e+03
 * g(x): 2841.4313455824895
 * lambda: 100.0
 * dx: [0.000106339,9.32429e-5]

     3     1.449900e+03     2.813973e+03
 * g(x): 2813.972953180929
 * lambda: 10.0
 * dx: [0.00105255,0.00089181]

     4     1.392462e+03     2.574925e+03
 * g(x): 2574.9245631754766
 * lambda: 1.0
 * dx: [0.00959033,0.0055198]

     5     1.072032e+03     1.712614e+03
 * g(x): 1712.6143447769496
 * lambda: 0.1
 * dx: [0.0570602,-0.04495]

     6     5.073596e+02     1.212527e+03
 * g(x): 1212.5267178621025
 * lambda: 0.010000000000000002
 * dx: [0.136221,-0.163702]

     7     4.112151e+01     2.140223e+02
 * g(x): 214.02231463706366
 * lambda: 0.0010000000000000002
 * dx: [0.0456132,0.324751]

     8     3.174618e+00     2.963811e+02
 * g(x): 296.3811258213227
 * lambda: 0.00010000000000000003
 * dx: [-0.0581901,0.278779]

     9     4.112160e-02     2.590521e+00
 * g(x): 2.5905206936949607
 * lambda: 1.0000000000000004e-5
 * dx: [0.0087629,-0.00265283]

    10     4.025570e-02     2.346683e-02
 * g(x): 0.023466831969845003
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000232213,0.00114542]

    11     4.025566e-02     9.416916e-07
 * g(x): 9.416916282312116e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-1.71503e-6,7.66079e-6]

    12     4.025566e-02     3.683760e-08
 * g(x): 3.683760274597603e-8
 * lambda: 1.0000000000000005e-8
 * dx: [-6.38367e-9,4.05623e-8]

    13     4.025566e-02     1.477175e-07
 * g(x): 1.4771754752729294e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-1.31005e-11,1.092e-10]

Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     8.956462e+02              NaN
 * lambda: 10000.0

     1     8.955193e+02     2.413628e+03
 * g(x): 2413.6278635251965
 * lambda: 1000.0
 * dx: [1.18792e-5,-9.1391e-7,4.36574e-5,1.71516e-5]

     2     8.942528e+02     2.408976e+03
 * g(x): 2408.9758685715674
 * lambda: 100.0
 * dx: [0.00011856,-8.80559e-6,0.000435821,0.000171142]

     3     8.817994e+02     2.363428e+03
 * g(x): 2363.4279336804375
 * lambda: 10.0
 * dx: [0.00116294,-5.58834e-5,0.00428492,0.0016748]

     4     7.758301e+02     1.998851e+03
 * g(x): 1998.8505631158575
 * lambda: 1.0
 * dx: [0.00978878,0.00187209,0.0369393,0.0137202]

     5     3.461645e+02     1.020664e+03
 * g(x): 1020.6635190413866
 * lambda: 0.1
 * dx: [0.0387308,0.0567826,0.202128,0.0331418]

     6     1.740535e+01     1.638746e+02
 * g(x): 163.87459581476924
 * lambda: 0.010000000000000002
 * dx: [0.0431127,0.0887289,0.44473,-0.0904066]

     7     2.509662e+00     1.360113e+02
 * g(x): 136.01134804550009
 * lambda: 0.0010000000000000002
 * dx: [0.042689,0.013267,-0.0966793,-0.0896694]

     8     1.858811e-01     4.994091e+01
 * g(x): 49.94091255716668
 * lambda: 0.00010000000000000003
 * dx: [0.0525292,0.0360263,-0.16216,-0.0561825]

     9     4.364579e-02     7.242099e+00
 * g(x): 7.242098813596384
 * lambda: 1.0000000000000004e-5
 * dx: [0.00978216,0.00270234,-0.0229894,-0.0100973]

    10     4.015447e-02     3.885624e-02
 * g(x): 0.03885624121564546
 * lambda: 1.0000000000000004e-6
 * dx: [0.00177031,0.000712918,-0.00594633,-0.00203473]

    11     4.015428e-02     1.667781e-06
 * g(x): 1.6677806216058855e-6
 * lambda: 1.0000000000000005e-7
 * dx: [1.6676e-5,5.00181e-6,-4.75782e-5,-1.72281e-5]

    12     4.015428e-02     3.381504e-08
 * g(x): 3.381504054544848e-8
 * lambda: 1.0000000000000005e-7
 * dx: [1.12562e-7,7.5244e-8,-3.57044e-7,-1.10397e-7]

    13     4.015428e-02     5.163502e-08
 * g(x): 5.16350242563135e-8
 * lambda: 1.0000000000000005e-8
 * dx: [-6.42647e-10,-6.58327e-10,1.56539e-9,7.32166e-10]

Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary: | 
  Tests on ODEs | No tests
 51.700741 seconds (42.52 M allocations: 2.525 GB, 1.90% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | 
  ParameterizedFunction Type | No tests
  8.784633 seconds (4.14 M allocations: 164.829 MB, 0.77% gc time)
Test on Monte: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: MethodError: no method matching DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}(::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.##148#150{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}},Void,UniformScaling{Int64}}, ::DiffEqBase.##126#132, ::DiffEqBase.##125#131)
  Closest candidates are:
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}{T,T2,T3,T4,T5}(::T, ::T2, ::T3, !Matched::T4, !Matched::T5) at /home/vagrant/.julia/v0.5/DiffEqBase/src/problems/monte_problems.jl:2
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}(::DiffEqBase.DEProblem; output_func, prob_func, reduction, u_init) at /home/vagrant/.julia/v0.5/DiffEqBase/src/problems/monte_problems.jl:9
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}{T}(::Any) at sysimg.jl:53
   in problem_new_parameters(::DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##126#132,DiffEqBase.##125#131,DiffEqBase.##127#133,Array{Any,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DiffEqBase/src/parameters_interface.jl:86
   in (::DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##126#132,DiffEqBase.##125#131,DiffEqBase.##127#133,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}})(::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/build_loss_objective.jl:25
   in finite_difference!(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##126#132,DiffEqBase.##125#131,DiffEqBase.##127#133,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Calculus/src/finite_difference.jl:126
   in g! at /home/vagrant/.julia/v0.5/Optim/src/types.jl:192 [inlined]
   in (::Optim.#fg!#3{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##126#132,DiffEqBase.##125#131,DiffEqBase.##127#133,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13},Optim.#g!#2{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##126#132,DiffEqBase.##125#131,DiffEqBase.##127#133,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/types.jl:196
   in initial_state(::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}, ::Optim.OnceDifferentiable, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/bfgs.jl:38
   in optimize(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:172
   in optimize(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##126#132,DiffEqBase.##125#131,DiffEqBase.##127#133,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:116
   in optimize(::Function, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:165
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl:5 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at ./util.jl:188 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
  while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 24
Test Summary: | Error  Total
  Test on Monte |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./util.jl:188 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 5
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.5.0
INFO: Removing DiffEqNoiseProcess v0.1.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing InplaceOps v0.1.0
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.2.1
INFO: Removing ParameterizedFunctions v2.0.0
INFO: Removing PolynomialFactors v0.0.4
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.1.0
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
