>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v1.9.0
INFO: Installing DiffEqParamEstim v0.4.0
INFO: Installing Distributions v0.13.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.0.3
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.2.7
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.5
INFO: Installing Optim v0.7.8
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.7.0
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.8.0
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.7
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.3.1
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1721.06640625 MB free)
Uptime: 27445.0 sec
Load Avg:  0.9912109375  0.994140625  1.0380859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1695707 s       5928 s     140824 s     545736 s         12 s
#2  3498 MHz     641594 s         54 s      68794 s    1954105 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.4.0
 - JSON                          0.12.0
35 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - DiffEqBase                    1.9.0
 - Distributions                 0.13.0
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.0.3
 - LsqFit                        0.3.0
 - MacroTools                    0.3.7
 - Media                         0.2.7
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.5
 - Optim                         0.7.8
 - OptimBase                     0.1.0
 - PDMats                        0.7.0
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.8.0
 - Reexport                      0.0.3
 - Rmath                         0.1.7
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.3.1
 - StatsBase                     0.17.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.6.0
INFO: Installing DiffEqNoiseProcess v0.2.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.1.0
INFO: Installing Iterators v0.3.1
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.4.0
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing Parameters v0.7.2
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.4.0
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
Installing dependency libnlopt0 via `sudo apt-get install libnlopt0`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libnlopt0
0 upgraded, 1 newly installed, 0 to remove and 4 not upgraded.
Need to get 161 kB of archives.
After this operation, 468 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libnlopt0 amd64 2.4.1+dfsg-1ubuntu1 [161 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 161 kB in 2s (70.6 kB/s)
Selecting previously unselected package libnlopt0:amd64.
(Reading database ... 84405 files and directories currently installed.)
Preparing to unpack .../libnlopt0_2.4.1+dfsg-1ubuntu1_amd64.deb ...
Unpacking libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Setting up libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.13) ...
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights instead.
  likely near /home/vagrant/.julia/v0.5/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights instead.
  likely near /home/vagrant/.julia/v0.5/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights instead.
  likely near /home/vagrant/.julia/v0.5/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights instead.
  likely near /home/vagrant/.julia/v0.5/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights instead.
  likely near /home/vagrant/.julia/v0.5/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights instead.
  likely near /home/vagrant/.julia/v0.5/LossFunctions/src/averagemode.jl:30
Use LM to fit the parameter
     0     2.815670e+03              NaN
 * lambda: 10000.0

     1     2.815667e+03     8.772129e+02
 * g(x): 877.2128678542352
 * lambda: 1000.0
 * dx: [1.77655e-6]

     2     2.815636e+03     8.764351e+02
 * g(x): 876.4350858215968
 * lambda: 100.0
 * dx: [1.77496e-5]

     3     2.815327e+03     8.687451e+02
 * g(x): 868.7451084861507
 * lambda: 10.0
 * dx: [0.000175921]

     4     2.811454e+03     8.099465e+02
 * g(x): 809.946470298158
 * lambda: 1.0
 * dx: [0.00161581]

     5     2.788425e+03     5.317184e+02
 * g(x): 531.7183532773937
 * lambda: 0.1
 * dx: [0.0101831]

     6     2.733490e+03     1.042061e+02
 * g(x): 104.20610746168504
 * lambda: 0.010000000000000002
 * dx: [0.0213605]

     7     2.646229e+03     6.475040e+01
 * g(x): 64.75040070647964
 * lambda: 0.0010000000000000002
 * dx: [0.0285467]

     8     2.531916e+03     7.476424e+01
 * g(x): 74.76423628590058
 * lambda: 0.00010000000000000003
 * dx: [0.0342935]

     9     2.396407e+03     1.367102e+02
 * g(x): 136.7101652729605
 * lambda: 1.0000000000000004e-5
 * dx: [0.0382511]

    10     2.243351e+03     6.543254e+01
 * g(x): 65.43253818285278
 * lambda: 1.0000000000000004e-6
 * dx: [0.0412693]

    11     1.972694e+03     1.118879e+02
 * g(x): 111.8878923993774
 * lambda: 1.0000000000000005e-7
 * dx: [0.0492574]

    12     1.464385e+03     2.433376e+02
 * g(x): 243.33757745319357
 * lambda: 1.0000000000000005e-8
 * dx: [0.0634695]

    13     7.375197e+02     8.380385e+02
 * g(x): 838.0385148260223
 * lambda: 1.0000000000000005e-9
 * dx: [0.0765647]

    14     1.144570e+02     8.967397e+02
 * g(x): 896.7397165294124
 * lambda: 1.0000000000000006e-10
 * dx: [0.0852043]

    15     8.736428e-01     1.740264e+02
 * g(x): 174.02643643916923
 * lambda: 1.0000000000000006e-11
 * dx: [0.0454345]

    16     4.103043e-02     2.667458e-01
 * g(x): 0.26674575845257986
 * lambda: 1.0000000000000006e-12
 * dx: [0.0042994]

    17     4.102804e-02     4.483127e-07
 * g(x): 4.483126609944321e-7
 * lambda: 1.0000000000000007e-13
 * dx: [7.30304e-6]

    18     4.102804e-02     1.032545e-04
 * g(x): 0.00010325449830239641
 * lambda: 1.0000000000000006e-12
 * dx: [2.30313e-9]

Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Tests on ODEs: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: AssertionError: isfinite(phic) && isfinite(dphic)
   in hagerzhang!(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::LineSearches.LineSearchResults{Float64}, ::Float64, ::Bool, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Float64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/LineSearches/src/hagerzhang.jl:252
   in hagerzhang!(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::LineSearches.LineSearchResults{Float64}, ::Float64, ::Bool, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Float64, ::Int64) at /home/vagrant/.julia/v0.5/LineSearches/src/hagerzhang.jl:75 (repeats 4 times)
   in perform_linesearch!(::Optim.BFGSState{Float64,1,Array{Float64,1}}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.OnceDifferentiable) at /home/vagrant/.julia/v0.5/Optim/src/utilities/perform_linesearch.jl:74
   in update_state!(::Optim.OnceDifferentiable, ::Optim.BFGSState{Float64,1,Array{Float64,1}}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.5/Optim/src/bfgs.jl:70
   in optimize(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:196
   in optimize(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,LotkaVolterraTest,Void,UniformScaling{Int64}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:116
   in optimize(::Function, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:165
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl:3 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at ./util.jl:188 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
  while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 61
Test Summary: | Error  Total
  Tests on ODEs |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./util.jl:188 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 3
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.6.0
INFO: Removing DiffEqNoiseProcess v0.2.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.1.0
INFO: Removing Iterators v0.3.1
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.4.0
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing Parameters v0.7.2
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.4.0
INFO: Removing StochasticDiffEq v2.2.1
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
