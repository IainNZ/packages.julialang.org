>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.5.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v1.5.1
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.0.3
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.7.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.3.1
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1727.80078125 MB free)
Uptime: 26786.0 sec
Load Avg:  1.0048828125  1.029296875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1629124 s         89 s     121178 s     582444 s         28 s
#2  3500 MHz     720870 s       7003 s      76166 s    1786485 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.11.0
34 additional packages:
 - BinDeps                       0.5.0
 - Calculus                      0.2.2
 - Compat                        0.25.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - DiffEqBase                    1.5.1
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.0.3
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.7.1
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.3.1
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.4.0
INFO: Installing DiffEqNoiseProcess v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing InplaceOps v0.1.0
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.2.0
INFO: Installing ParameterizedFunctions v2.0.0
INFO: Installing PolynomialFactors v0.0.4
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.0.4
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
Installing dependency libnlopt0 via `sudo apt-get install libnlopt0`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libnlopt0
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 161 kB of archives.
After this operation, 468 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libnlopt0 amd64 2.4.1+dfsg-1ubuntu1 [161 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 161 kB in 0s (394 kB/s)
Selecting previously unselected package libnlopt0:amd64.
(Reading database ... 83943 files and directories currently installed.)
Preparing to unpack .../libnlopt0_2.4.1+dfsg-1ubuntu1_amd64.deb ...
Unpacking libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Setting up libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.11) ...
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.814107e+03              NaN
 * lambda: 10000.0

     1     2.814104e+03     8.780396e+02
 * g(x): 878.0396355696732
 * lambda: 1000.0
 * dx: [1.77823e-6]

     2     2.814073e+03     8.772629e+02
 * g(x): 877.2629230777966
 * lambda: 100.0
 * dx: [1.77663e-5]

     3     2.813763e+03     8.695609e+02
 * g(x): 869.5609256738467
 * lambda: 10.0
 * dx: [0.000176087]

     4     2.809887e+03     8.106886e+02
 * g(x): 810.6886405714608
 * lambda: 1.0
 * dx: [0.00161732]

     5     2.786840e+03     5.320032e+02
 * g(x): 532.0031960168201
 * lambda: 0.1
 * dx: [0.0101883]

     6     2.731952e+03     1.041553e+02
 * g(x): 104.15525927071147
 * lambda: 0.010000000000000002
 * dx: [0.0213576]

     7     2.644972e+03     6.456739e+01
 * g(x): 64.56738901181483
 * lambda: 0.0010000000000000002
 * dx: [0.0285097]

     8     2.531266e+03     7.453618e+01
 * g(x): 74.53618491529626
 * lambda: 0.00010000000000000003
 * dx: [0.0342113]

     9     2.396630e+03     1.246778e+02
 * g(x): 124.67776950196918
 * lambda: 1.0000000000000004e-5
 * dx: [0.0380853]

    10     2.244709e+03     1.104270e+02
 * g(x): 110.42696751994494
 * lambda: 1.0000000000000004e-6
 * dx: [0.0410994]

    11     1.976653e+03     1.122596e+02
 * g(x): 112.25956665852236
 * lambda: 1.0000000000000005e-7
 * dx: [0.0490461]

    12     1.469178e+03     2.518130e+02
 * g(x): 251.8129880531308
 * lambda: 1.0000000000000005e-8
 * dx: [0.0635651]

    13     7.438815e+02     8.339543e+02
 * g(x): 833.9543403356458
 * lambda: 1.0000000000000005e-9
 * dx: [0.0764312]

    14     1.158361e+02     8.759358e+02
 * g(x): 875.9357719742336
 * lambda: 1.0000000000000006e-10
 * dx: [0.085632]

    15     9.086447e-01     1.765830e+02
 * g(x): 176.58302263757253
 * lambda: 1.0000000000000006e-11
 * dx: [0.0456537]

    16     4.194494e-02     2.793238e-01
 * g(x): 0.2793238218767087
 * lambda: 1.0000000000000006e-12
 * dx: [0.00438587]

    17     4.194166e-02     6.087594e-07
 * g(x): 6.08759352482835e-7
 * lambda: 1.0000000000000007e-13
 * dx: [8.55712e-6]

    18     4.194166e-02     1.949638e-04
 * g(x): 0.00019496376806316107
 * lambda: 1.0000000000000006e-12
 * dx: [4.34885e-9]

Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use Two Stage Method to fit the parameter
Multivariate
Use LM to fit the parameter
     0     1.456783e+03              NaN
 * lambda: 10000.0

     1     1.456720e+03     2.844560e+03
 * g(x): 2844.5604231011603
 * lambda: 1000.0
 * dx: [1.06462e-5,9.38179e-6]

     2     1.456092e+03     2.841775e+03
 * g(x): 2841.774605024964
 * lambda: 100.0
 * dx: [0.000106352,9.34045e-5]

     3     1.449865e+03     2.814307e+03
 * g(x): 2814.307355656554
 * lambda: 10.0
 * dx: [0.00105267,0.00089341]

     4     1.392406e+03     2.575196e+03
 * g(x): 2575.195749214728
 * lambda: 1.0
 * dx: [0.00959131,0.00553369]

     5     1.071839e+03     1.712652e+03
 * g(x): 1712.652096924623
 * lambda: 0.1
 * dx: [0.0570609,-0.0448656]

     6     5.069399e+02     1.212891e+03
 * g(x): 1212.8906460449707
 * lambda: 0.010000000000000002
 * dx: [0.136212,-0.163572]

     7     4.061743e+01     2.133822e+02
 * g(x): 213.38223446233752
 * lambda: 0.0010000000000000002
 * dx: [0.0451868,0.326199]

     8     2.969193e+00     2.866841e+02
 * g(x): 286.6841278283682
 * lambda: 0.00010000000000000003
 * dx: [-0.0574237,0.27683]

     9     4.289865e-02     2.464958e+00
 * g(x): 2.4649580785321508
 * lambda: 1.0000000000000004e-5
 * dx: [0.00846814,-0.00258683]

    10     4.191742e-02     2.926228e-02
 * g(x): 0.029262278560857835
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000245127,0.00125171]

    11     4.191741e-02     1.433732e-08
 * g(x): 1.4337315112911142e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-6.36484e-7,-1.21995e-7]

    12     4.191741e-02     2.926613e-08
 * g(x): 2.9266126411187088e-8
 * lambda: 1.0000000000000005e-8
 * dx: [-1.35072e-10,-7.67754e-10]

Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     8.955719e+02              NaN
 * lambda: 10000.0

     1     8.954449e+02     2.414748e+03
 * g(x): 2414.747760894085
 * lambda: 1000.0
 * dx: [1.18847e-5,-9.22243e-7,4.36832e-5,1.71557e-5]

     2     8.941771e+02     2.410093e+03
 * g(x): 2410.093327779118
 * lambda: 100.0
 * dx: [0.000118615,-8.89167e-6,0.000436081,0.000171183]

     3     8.817123e+02     2.364518e+03
 * g(x): 2364.5183006312336
 * lambda: 10.0
 * dx: [0.00116348,-5.67104e-5,0.00428742,0.00167519]

     4     7.756595e+02     1.999723e+03
 * g(x): 1999.7226354779787
 * lambda: 1.0
 * dx: [0.00979301,0.0018659,0.0369602,0.0137226]

     5     3.459746e+02     1.020857e+03
 * g(x): 1020.8568535795649
 * lambda: 0.1
 * dx: [0.0387369,0.056738,0.202208,0.033122]

     6     1.726446e+01     1.619597e+02
 * g(x): 161.95965794912652
 * lambda: 0.010000000000000002
 * dx: [0.0431282,0.0884084,0.443963,-0.0907587]

     7     2.521143e+00     1.360836e+02
 * g(x): 136.08361422733287
 * lambda: 0.0010000000000000002
 * dx: [0.0430025,0.0138183,-0.097146,-0.0896875]

     8     1.902510e-01     5.345038e+01
 * g(x): 53.45037746863625
 * lambda: 0.00010000000000000003
 * dx: [0.0528027,0.0361454,-0.162983,-0.0565035]

     9     4.511129e-02     7.489606e+00
 * g(x): 7.489605508408032
 * lambda: 1.0000000000000004e-5
 * dx: [0.00997497,0.00290426,-0.023431,-0.0101991]

    10     4.183677e-02     1.354480e-02
 * g(x): 0.013544803984327114
 * lambda: 1.0000000000000004e-6
 * dx: [0.00158821,0.000562014,-0.00536895,-0.0018714]

    11     4.183668e-02     5.779634e-07
 * g(x): 5.77963392922598e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-3.31298e-7,-6.72407e-6,4.15216e-6,-9.54721e-7]

    12     4.183668e-02     3.432029e-08
 * g(x): 3.4320294606260404e-8
 * lambda: 1.0000000000000005e-8
 * dx: [1.84791e-8,1.14189e-8,-5.91062e-8,-1.81025e-8]

    13     4.183668e-02     3.844480e-07
 * g(x): 3.8444803096560065e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-1.29979e-9,-1.09363e-9,3.76995e-9,1.32809e-9]

Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary: | 
  Tests on ODEs | No tests
 52.341534 seconds (43.30 M allocations: 2.559 GB, 1.98% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | 
  ParameterizedFunction Type | No tests
  7.443656 seconds (4.13 M allocations: 164.260 MB, 0.83% gc time)
Test on Monte: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: type MonteCarloSolution has no field solution_data
   in (::DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#128,DiffEqBase.##123#127},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}})(::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/build_loss_objective.jl:39
   in finite_difference!(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#128,DiffEqBase.##123#127},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Calculus/src/finite_difference.jl:126
   in g! at /home/vagrant/.julia/v0.5/Optim/src/types.jl:192 [inlined]
   in (::Optim.#fg!#3{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#128,DiffEqBase.##123#127},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13},Optim.#g!#2{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#128,DiffEqBase.##123#127},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/types.jl:196
   in initial_state(::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}, ::Optim.OnceDifferentiable, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/bfgs.jl:38
   in optimize(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:172
   in optimize(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#128,DiffEqBase.##123#127},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:116
   in optimize(::Function, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:165
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl:5 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at ./util.jl:188 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
  while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 24
Test Summary: | Error  Total
  Test on Monte |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./util.jl:188 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 5
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.4.0
INFO: Removing DiffEqNoiseProcess v0.1.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing InplaceOps v0.1.0
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.2.0
INFO: Removing ParameterizedFunctions v2.0.0
INFO: Removing PolynomialFactors v0.0.4
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.0.4
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
