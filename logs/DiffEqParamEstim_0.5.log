>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v1.3.1
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.0.3
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.6.0
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2344.16796875 MB free)
Uptime: 27498.0 sec
Load Avg:  1.0029296875  1.0146484375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1700539 s       5882 s     121868 s     593217 s         33 s
#2  3500 MHz     720962 s         76 s      77262 s    1880812 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.11.0
33 additional packages:
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - DiffEqBase                    1.3.1
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.0.3
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.6.0
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.4.0
INFO: Installing DiffEqNoiseProcess v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing InplaceOps v0.1.0
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.0.3
INFO: Installing ParameterizedFunctions v1.3.0
INFO: Installing PolynomialFactors v0.0.4
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.0
INFO: Installing StochasticDiffEq v2.0.3
INFO: Installing SymEngine v0.1.5
INFO: Building Conda
INFO: Building NLopt
Installing dependency libnlopt0 via `sudo apt-get install libnlopt0`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libnlopt0
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 161 kB of archives.
After this operation, 468 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libnlopt0 amd64 2.4.1+dfsg-1ubuntu1 [161 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 161 kB in 0s (375 kB/s)
Selecting previously unselected package libnlopt0:amd64.
(Reading database ... 83943 files and directories currently installed.)
Preparing to unpack .../libnlopt0_2.4.1+dfsg-1ubuntu1_amd64.deb ...
Unpacking libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Setting up libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.11) ...
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.813783e+03              NaN
 * lambda: 10000.0

     1     2.813780e+03     8.706622e+02
 * g(x): 870.6621509799843
 * lambda: 1000.0
 * dx: [1.76328e-6]

     2     2.813749e+03     8.698864e+02
 * g(x): 869.8863830093132
 * lambda: 100.0
 * dx: [1.7617e-5]

     3     2.813445e+03     8.622544e+02
 * g(x): 862.2544369757243
 * lambda: 10.0
 * dx: [0.000174607]

     4     2.809623e+03     8.040089e+02
 * g(x): 804.0088984728311
 * lambda: 1.0
 * dx: [0.00160377]

     5     2.786886e+03     5.281720e+02
 * g(x): 528.1720394951228
 * lambda: 0.1
 * dx: [0.010119]

     6     2.732634e+03     1.038570e+02
 * g(x): 103.85703893657026
 * lambda: 0.010000000000000002
 * dx: [0.0212432]

     7     2.646453e+03     6.409708e+01
 * g(x): 64.09707964614019
 * lambda: 0.0010000000000000002
 * dx: [0.028353]

     8     2.533339e+03     7.451132e+01
 * g(x): 74.51131872298535
 * lambda: 0.00010000000000000003
 * dx: [0.0341152]

     9     2.400369e+03     8.481695e+01
 * g(x): 84.81694774314009
 * lambda: 1.0000000000000004e-5
 * dx: [0.0376874]

    10     2.254078e+03     2.015337e+02
 * g(x): 201.53374065604064
 * lambda: 1.0000000000000004e-6
 * dx: [0.0398644]

    11     1.996469e+03     1.154966e+02
 * g(x): 115.49662017458549
 * lambda: 1.0000000000000005e-7
 * dx: [0.0482725]

    12     1.492973e+03     2.599929e+02
 * g(x): 259.9929081400608
 * lambda: 1.0000000000000005e-8
 * dx: [0.0638572]

    13     7.729873e+02     8.155360e+02
 * g(x): 815.5360042697101
 * lambda: 1.0000000000000005e-9
 * dx: [0.0758211]

    14     1.230202e+02     8.006891e+02
 * g(x): 800.6891412883936
 * lambda: 1.0000000000000006e-10
 * dx: [0.0873146]

    15     1.080983e+00     1.904962e+02
 * g(x): 190.49620053591786
 * lambda: 1.0000000000000006e-11
 * dx: [0.046792]

    16     4.579905e-02     3.430787e-01
 * g(x): 0.34307869144813885
 * lambda: 1.0000000000000006e-12
 * dx: [0.00478968]

    17     4.578851e-02     2.006366e-06
 * g(x): 2.006365940276922e-6
 * lambda: 1.0000000000000007e-13
 * dx: [1.53199e-5]

    18     4.578851e-02     7.293484e-08
 * g(x): 7.293483994530447e-8
 * lambda: 1.0000000000000007e-13
 * dx: [2.50467e-8]

    19     4.578851e-02     4.991588e-08
 * g(x): 4.991587920777363e-8
 * lambda: 1.0000000000000008e-14
 * dx: [4.17666e-11]

Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use Two Stage Method to fit the parameter
Multivariate
Use LM to fit the parameter
     0     1.457110e+03              NaN
 * lambda: 10000.0

     1     1.457047e+03     2.844350e+03
 * g(x): 2844.3501044914506
 * lambda: 1000.0
 * dx: [1.06454e-5,9.34149e-6]

     2     1.456419e+03     2.841564e+03
 * g(x): 2841.5643749219334
 * lambda: 100.0
 * dx: [0.000106344,9.3002e-5]

     3     1.450195e+03     2.814116e+03
 * g(x): 2814.115692300398
 * lambda: 10.0
 * dx: [0.0010526,0.000889446]

     4     1.392754e+03     2.575157e+03
 * g(x): 2575.1571010971
 * lambda: 1.0
 * dx: [0.00959124,0.00549897]

     5     1.072194e+03     1.713213e+03
 * g(x): 1713.2130312487047
 * lambda: 0.1
 * dx: [0.0570792,-0.045066]

     6     5.072119e+02     1.213301e+03
 * g(x): 1213.3012915179493
 * lambda: 0.010000000000000002
 * dx: [0.13632,-0.163902]

     7     4.189813e+01     2.147011e+02
 * g(x): 214.7010750152798
 * lambda: 0.0010000000000000002
 * dx: [0.0463595,0.321956]

     8     3.554792e+00     3.124726e+02
 * g(x): 312.47260552206234
 * lambda: 0.00010000000000000003
 * dx: [-0.0594591,0.281768]

     9     4.651396e-02     2.580665e+00
 * g(x): 2.5806651759525585
 * lambda: 1.0000000000000004e-5
 * dx: [0.00931201,-0.00310242]

    10     4.558772e-02     3.111862e-02
 * g(x): 0.031118620162430277
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000234859,0.00122778]

    11     4.558765e-02     1.567901e-06
 * g(x): 1.5679008549263074e-6
 * lambda: 1.0000000000000005e-7
 * dx: [-2.14002e-6,9.01913e-6]

    12     4.558765e-02     5.461177e-05
 * g(x): 5.4611768758094925e-5
 * lambda: 1.0000000000000006e-6
 * dx: [-8.97186e-9,5.17766e-8]

    13     4.558765e-02     1.450191e-08
 * g(x): 1.4501905676311821e-8
 * lambda: 1.0000000000000006e-7
 * dx: [-8.97182e-9,5.17764e-8]

    14     4.558765e-02     3.748035e-08
 * g(x): 3.748035148909423e-8
 * lambda: 1.0000000000000007e-8
 * dx: [-1.81657e-11,1.27425e-10]

Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     8.955422e+02              NaN
 * lambda: 10000.0

     1     8.954152e+02     2.414804e+03
 * g(x): 2414.8040144977217
 * lambda: 1000.0
 * dx: [1.1885e-5,-9.23467e-7,4.36543e-5,1.71702e-5]

     2     8.941476e+02     2.410150e+03
 * g(x): 2410.149549581533
 * lambda: 100.0
 * dx: [0.000118618,-8.8994e-6,0.000435793,0.000171328]

     3     8.816840e+02     2.364575e+03
 * g(x): 2364.575335223849
 * lambda: 10.0
 * dx: [0.00116351,-5.68215e-5,0.00428456,0.00167663]

     4     7.756376e+02     1.999812e+03
 * g(x): 1999.8124608159023
 * lambda: 1.0
 * dx: [0.00979351,0.00186438,0.0369347,0.013736]

     5     3.459948e+02     1.021239e+03
 * g(x): 1021.2394098762101
 * lambda: 0.1
 * dx: [0.0387488,0.0567338,0.202026,0.033212]

     6     1.771247e+01     1.671567e+02
 * g(x): 167.15670271595923
 * lambda: 0.010000000000000002
 * dx: [0.0430951,0.0889222,0.445298,-0.0899346]

     7     2.554004e+00     1.381401e+02
 * g(x): 138.14006985015487
 * lambda: 0.0010000000000000002
 * dx: [0.0428404,0.0133022,-0.0977261,-0.0903166]

     8     1.955130e-01     5.429748e+01
 * g(x): 54.29748449112013
 * lambda: 0.00010000000000000003
 * dx: [0.0529524,0.0361839,-0.16351,-0.0566508]

     9     4.913444e-02     6.824426e+00
 * g(x): 6.82442592939131
 * lambda: 1.0000000000000004e-5
 * dx: [0.0096956,0.00262731,-0.0225136,-0.00995877]

    10     4.545786e-02     1.657531e-02
 * g(x): 0.016575310098154716
 * lambda: 1.0000000000000004e-6
 * dx: [0.00198108,0.000882441,-0.0065779,-0.00222098]

    11     4.545738e-02     8.397479e-06
 * g(x): 8.397479265176422e-6
 * lambda: 1.0000000000000005e-7
 * dx: [2.67115e-5,7.49332e-6,-8.09344e-5,-2.8691e-5]

    12     4.545738e-02     1.475456e-07
 * g(x): 1.4754564503505208e-7
 * lambda: 1.0000000000000005e-8
 * dx: [3.23802e-7,2.06948e-7,-1.02614e-6,-3.18002e-7]

    13     4.545738e-02     9.331998e-08
 * g(x): 9.331997929962199e-8
 * lambda: 1.0000000000000005e-9
 * dx: [5.12351e-9,3.12456e-9,-1.62511e-8,-5.0296e-9]

Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary: | 
  Tests on ODEs | No tests
 47.151941 seconds (35.80 M allocations: 2.233 GB, 1.41% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | 
  ParameterizedFunction Type | No tests
  7.238473 seconds (3.93 M allocations: 157.384 MB, 0.74% gc time)
Test on Monte: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: type MonteCarloSolution has no field solution_data
   in (::DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##130#134,DiffEqBase.##129#133},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}})(::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/build_loss_objective.jl:39
   in finite_difference!(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##130#134,DiffEqBase.##129#133},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Calculus/src/finite_difference.jl:126
   in g! at /home/vagrant/.julia/v0.5/Optim/src/types.jl:192 [inlined]
   in (::Optim.#fg!#3{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##130#134,DiffEqBase.##129#133},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13},Optim.#g!#2{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##130#134,DiffEqBase.##129#133},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/types.jl:196
   in initial_state(::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}, ::Optim.OnceDifferentiable, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/bfgs.jl:38
   in optimize(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:172
   in optimize(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##130#134,DiffEqBase.##129#133},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:116
   in optimize(::Function, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:165
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl:5 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at ./util.jl:188 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
  while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 24
Test Summary: | Error  Total
  Test on Monte |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./util.jl:188 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 5
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.4.0
INFO: Removing DiffEqNoiseProcess v0.1.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing InplaceOps v0.1.0
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.0.3
INFO: Removing ParameterizedFunctions v1.3.0
INFO: Removing PolynomialFactors v0.0.4
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.0
INFO: Removing StochasticDiffEq v2.0.3
INFO: Removing SymEngine v0.1.5
ERROR: DiffEqParamEstim had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
