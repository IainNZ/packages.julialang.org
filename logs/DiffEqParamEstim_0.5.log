>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.5.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v1.6.1
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.0.3
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.7.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.3.1
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1733.04296875 MB free)
Uptime: 26957.0 sec
Load Avg:  1.0009765625  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1663716 s         67 s     137766 s     576323 s         30 s
#2  3500 MHz     745956 s       6584 s      78856 s    1784154 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.12.0
34 additional packages:
 - BinDeps                       0.5.0
 - Calculus                      0.2.2
 - Compat                        0.25.1
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - DiffEqBase                    1.6.1
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.0.3
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.7.1
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.3.1
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.5.0
INFO: Installing DiffEqNoiseProcess v0.1.1
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.3.2
INFO: Installing ParameterizedFunctions v2.0.0
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
Installing dependency libnlopt0 via `sudo apt-get install libnlopt0`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libnlopt0
0 upgraded, 1 newly installed, 0 to remove and 4 not upgraded.
Need to get 161 kB of archives.
After this operation, 468 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libnlopt0 amd64 2.4.1+dfsg-1ubuntu1 [161 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 161 kB in 1s (86.0 kB/s)
Selecting previously unselected package libnlopt0:amd64.
(Reading database ... 83943 files and directories currently installed.)
Preparing to unpack .../libnlopt0_2.4.1+dfsg-1ubuntu1_amd64.deb ...
Unpacking libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Setting up libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.11) ...
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.817018e+03              NaN
 * lambda: 10000.0

     1     2.817015e+03     8.744397e+02
 * g(x): 874.4397233426118
 * lambda: 1000.0
 * dx: [1.77093e-6]

     2     2.816984e+03     8.736644e+02
 * g(x): 873.6644125717273
 * lambda: 100.0
 * dx: [1.76935e-5]

     3     2.816677e+03     8.659949e+02
 * g(x): 865.9948564643657
 * lambda: 10.0
 * dx: [0.000175365]

     4     2.812832e+03     8.074312e+02
 * g(x): 807.431187469028
 * lambda: 1.0
 * dx: [0.00161071]

     5     2.789951e+03     5.300008e+02
 * g(x): 530.0007837502162
 * lambda: 0.1
 * dx: [0.0101521]

     6     2.735463e+03     1.039288e+02
 * g(x): 103.92877507923144
 * lambda: 0.010000000000000002
 * dx: [0.0212879]

     7     2.649078e+03     6.420147e+01
 * g(x): 64.20146928103469
 * lambda: 0.0010000000000000002
 * dx: [0.0283997]

     8     2.535940e+03     7.445241e+01
 * g(x): 74.45240829534174
 * lambda: 0.00010000000000000003
 * dx: [0.0341241]

     9     2.402545e+03     9.622185e+01
 * g(x): 96.22185308278708
 * lambda: 1.0000000000000004e-5
 * dx: [0.0377985]

    10     2.255142e+03     1.940268e+02
 * g(x): 194.02676657762078
 * lambda: 1.0000000000000004e-6
 * dx: [0.0401037]

    11     1.994735e+03     1.148494e+02
 * g(x): 114.84937764713315
 * lambda: 1.0000000000000005e-7
 * dx: [0.0484728]

    12     1.488742e+03     2.622632e+02
 * g(x): 262.2632028675913
 * lambda: 1.0000000000000005e-8
 * dx: [0.0638966]

    13     7.655365e+02     8.234546e+02
 * g(x): 823.4545622611597
 * lambda: 1.0000000000000005e-9
 * dx: [0.076092]

    14     1.198812e+02     8.236336e+02
 * g(x): 823.6336031347901
 * lambda: 1.0000000000000006e-10
 * dx: [0.0870338]

    15     9.517080e-01     1.848629e+02
 * g(x): 184.8629315531403
 * lambda: 1.0000000000000006e-11
 * dx: [0.0463632]

    16     3.739249e-02     2.976716e-01
 * g(x): 0.2976715737890617
 * lambda: 1.0000000000000006e-12
 * dx: [0.00450814]

    17     3.739234e-02     9.555805e-08
 * g(x): 9.555804882099839e-8
 * lambda: 1.0000000000000007e-13
 * dx: [1.85264e-6]

    18     3.739234e-02     1.349999e-08
 * g(x): 1.3499994136467741e-8
 * lambda: 1.0000000000000008e-14
 * dx: [-1.92664e-9]

Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use Two Stage Method to fit the parameter
Multivariate
Use LM to fit the parameter
     0     1.459647e+03              NaN
 * lambda: 10000.0

     1     1.459584e+03     2.847168e+03
 * g(x): 2847.167546477419
 * lambda: 1000.0
 * dx: [1.0656e-5,9.36123e-6]

     2     1.458955e+03     2.844382e+03
 * g(x): 2844.38156866782
 * lambda: 100.0
 * dx: [0.000106449,9.31986e-5]

     3     1.452718e+03     2.816902e+03
 * g(x): 2816.9015363254402
 * lambda: 10.0
 * dx: [0.00105364,0.000891361]

     4     1.395156e+03     2.577697e+03
 * g(x): 2577.6974952021037
 * lambda: 1.0
 * dx: [0.00960064,0.00551384]

     5     1.073887e+03     1.715005e+03
 * g(x): 1715.0046053883584
 * lambda: 0.1
 * dx: [0.0571317,-0.0450328]

     6     5.074563e+02     1.214797e+03
 * g(x): 1214.7969722726712
 * lambda: 0.010000000000000002
 * dx: [0.136404,-0.163613]

     7     4.130622e+01     2.146907e+02
 * g(x): 214.6906943467622
 * lambda: 0.0010000000000000002
 * dx: [0.0457154,0.324772]

     8     3.285889e+00     3.019572e+02
 * g(x): 301.9572279629081
 * lambda: 0.00010000000000000003
 * dx: [-0.0587192,0.279393]

     9     3.834974e-02     4.596279e+00
 * g(x): 4.596279356681973
 * lambda: 1.0000000000000004e-5
 * dx: [0.00892249,-0.00250225]

    10     3.726654e-02     1.365043e-02
 * g(x): 0.013650432215320668
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000259864,0.00096707]

    11     3.726653e-02     1.925876e-07
 * g(x): 1.925876214614597e-7
 * lambda: 1.0000000000000005e-7
 * dx: [3.0635e-7,-3.65257e-6]

    12     3.726653e-02     9.261824e-10
 * g(x): 9.261824363004934e-10
 * lambda: 1.0000000000000005e-7
 * dx: [-2.25215e-9,1.68888e-8]

Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     8.974930e+02              NaN
 * lambda: 10000.0

     1     8.973657e+02     2.417952e+03
 * g(x): 2417.9519461085097
 * lambda: 1000.0
 * dx: [1.19005e-5,-9.33279e-7,4.37115e-5,1.71925e-5]

     2     8.960947e+02     2.413289e+03
 * g(x): 2413.28938317385
 * lambda: 100.0
 * dx: [0.000118773,-8.99999e-6,0.000436362,0.000171551]

     3     8.835984e+02     2.367664e+03
 * g(x): 2367.6637389305297
 * lambda: 10.0
 * dx: [0.00116503,-5.77351e-5,0.00429015,0.00167881]

     4     7.772645e+02     2.002434e+03
 * g(x): 2002.4337074236275
 * lambda: 1.0
 * dx: [0.00980628,0.00185865,0.0369838,0.0137538]

     5     3.464316e+02     1.023112e+03
 * g(x): 1023.1121339884347
 * lambda: 0.1
 * dx: [0.0387971,0.0567521,0.202347,0.033242]

     6     1.743934e+01     1.638968e+02
 * g(x): 163.8967962566283
 * lambda: 0.010000000000000002
 * dx: [0.0431225,0.0884506,0.445154,-0.0906998]

     7     2.507190e+00     1.370580e+02
 * g(x): 137.05803093365097
 * lambda: 0.0010000000000000002
 * dx: [0.0427962,0.0133102,-0.0977138,-0.0898216]

     8     1.839487e-01     4.894884e+01
 * g(x): 48.948837731870356
 * lambda: 0.00010000000000000003
 * dx: [0.0525699,0.0360871,-0.162093,-0.0561626]

     9     4.056835e-02     7.357537e+00
 * g(x): 7.357537498485122
 * lambda: 1.0000000000000004e-5
 * dx: [0.00982939,0.00270971,-0.0231589,-0.0101648]

    10     3.719805e-02     3.951754e-02
 * g(x): 0.03951754447209015
 * lambda: 1.0000000000000004e-6
 * dx: [0.00166254,0.000623687,-0.00561575,-0.0019353]

    11     3.719790e-02     2.551695e-06
 * g(x): 2.5516945117882994e-6
 * lambda: 1.0000000000000005e-7
 * dx: [-3.89898e-6,-7.77791e-6,1.85761e-5,3.27268e-6]

    12     3.719790e-02     5.260500e-08
 * g(x): 5.260499912757011e-8
 * lambda: 1.0000000000000005e-8
 * dx: [8.17873e-8,5.13295e-8,-2.63563e-7,-8.06031e-8]

    13     3.719790e-02     6.723167e-09
 * g(x): 6.723167352701287e-9
 * lambda: 1.0000000000000005e-9
 * dx: [9.11557e-10,2.92987e-10,-2.56582e-9,-1.02237e-9]

Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary: | 
  Tests on ODEs | No tests
 51.394674 seconds (42.86 M allocations: 2.510 GB, 1.71% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | 
  ParameterizedFunction Type | No tests
  7.620697 seconds (4.14 M allocations: 164.895 MB, 2.12% gc time)
Test on Monte: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: MethodError: no method matching DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}(::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.##146#148{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}},Void,UniformScaling{Int64}}, ::DiffEqBase.##124#130, ::DiffEqBase.##123#129)
  Closest candidates are:
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}{T,T2,T3,T4,T5}(::T, ::T2, ::T3, !Matched::T4, !Matched::T5) at /home/vagrant/.julia/v0.5/DiffEqBase/src/problems/monte_problems.jl:2
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}(::DiffEqBase.DEProblem; output_func, prob_func, reduction, u_init) at /home/vagrant/.julia/v0.5/DiffEqBase/src/problems/monte_problems.jl:9
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}{T}(::Any) at sysimg.jl:53
   in problem_new_parameters(::DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DiffEqBase/src/parameters_interface.jl:86
   in (::DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}})(::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/build_loss_objective.jl:25
   in finite_difference!(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Calculus/src/finite_difference.jl:126
   in g! at /home/vagrant/.julia/v0.5/Optim/src/types.jl:192 [inlined]
   in (::Optim.#fg!#3{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13},Optim.#g!#2{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/types.jl:196
   in initial_state(::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}, ::Optim.OnceDifferentiable, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/bfgs.jl:38
   in optimize(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:172
   in optimize(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:116
   in optimize(::Function, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:165
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl:5 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at ./util.jl:188 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
  while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 24
Test Summary: | Error  Total
  Test on Monte |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./util.jl:188 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 5
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.5.0
INFO: Removing DiffEqNoiseProcess v0.1.1
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.3.2
INFO: Removing ParameterizedFunctions v2.0.0
INFO: Removing PolynomialFactors v0.0.5
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.2.1
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
