>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.5.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v1.6.1
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.0.3
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.7.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.3.1
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1717.07421875 MB free)
Uptime: 27324.0 sec
Load Avg:  1.025390625  1.041015625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1614560 s       7804 s     123968 s     688377 s         36 s
#2  3500 MHz     799090 s         72 s      76050 s    1766858 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.12.0
34 additional packages:
 - BinDeps                       0.5.0
 - Calculus                      0.2.2
 - Compat                        0.25.1
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - DiffEqBase                    1.6.1
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.0.3
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.7.1
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.3.1
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.5.0
INFO: Installing DiffEqNoiseProcess v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing InplaceOps v0.1.0
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.3.1
INFO: Installing ParameterizedFunctions v2.0.0
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
Installing dependency libnlopt0 via `sudo apt-get install libnlopt0`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libnlopt0
0 upgraded, 1 newly installed, 0 to remove and 4 not upgraded.
Need to get 161 kB of archives.
After this operation, 468 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libnlopt0 amd64 2.4.1+dfsg-1ubuntu1 [161 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 161 kB in 0s (429 kB/s)
Selecting previously unselected package libnlopt0:amd64.
(Reading database ... 83943 files and directories currently installed.)
Preparing to unpack .../libnlopt0_2.4.1+dfsg-1ubuntu1_amd64.deb ...
Unpacking libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Setting up libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.11) ...
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.815255e+03              NaN
 * lambda: 10000.0

     1     2.815252e+03     8.816312e+02
 * g(x): 881.6311943361428
 * lambda: 1000.0
 * dx: [1.7855e-6]

     2     2.815221e+03     8.808477e+02
 * g(x): 880.8477139608343
 * lambda: 100.0
 * dx: [1.7839e-5]

     3     2.814909e+03     8.731197e+02
 * g(x): 873.1196905198021
 * lambda: 10.0
 * dx: [0.000176807]

     4     2.811011e+03     8.139618e+02
 * g(x): 813.9618044697802
 * lambda: 1.0
 * dx: [0.00162396]

     5     2.787810e+03     5.338568e+02
 * g(x): 533.8568171533543
 * lambda: 0.1
 * dx: [0.0102219]

     6     2.732594e+03     1.043309e+02
 * g(x): 104.33087591805278
 * lambda: 0.010000000000000002
 * dx: [0.0214156]

     7     2.645174e+03     6.482881e+01
 * g(x): 64.82881057982857
 * lambda: 0.0010000000000000002
 * dx: [0.0285939]

     8     2.531124e+03     7.444297e+01
 * g(x): 74.44297402393529
 * lambda: 0.00010000000000000003
 * dx: [0.0342663]

     9     2.396183e+03     1.478352e+02
 * g(x): 147.83522446371853
 * lambda: 1.0000000000000004e-5
 * dx: [0.0382222]

    10     2.244395e+03     5.393007e+01
 * g(x): 53.93007220223831
 * lambda: 1.0000000000000004e-6
 * dx: [0.0410666]

    11     1.975552e+03     1.111639e+02
 * g(x): 111.16393990039555
 * lambda: 1.0000000000000005e-7
 * dx: [0.0490871]

    12     1.467905e+03     2.466900e+02
 * g(x): 246.69002069141595
 * lambda: 1.0000000000000005e-8
 * dx: [0.0634646]

    13     7.406108e+02     8.375136e+02
 * g(x): 837.5135793794702
 * lambda: 1.0000000000000005e-9
 * dx: [0.0765522]

    14     1.145403e+02     8.907086e+02
 * g(x): 890.7086485777934
 * lambda: 1.0000000000000006e-10
 * dx: [0.085477]

    15     8.711695e-01     1.742801e+02
 * g(x): 174.28007145790815
 * lambda: 1.0000000000000006e-11
 * dx: [0.0454569]

    16     4.238053e-02     2.653832e-01
 * g(x): 0.2653832002331614
 * lambda: 1.0000000000000006e-12
 * dx: [0.00428973]

    17     4.237841e-02     4.094894e-07
 * g(x): 4.094894174300201e-7
 * lambda: 1.0000000000000007e-13
 * dx: [6.87246e-6]

    18     4.237841e-02     7.505968e-05
 * g(x): 7.505967679760639e-5
 * lambda: 1.0000000000000006e-12
 * dx: [1.67422e-9]

Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use Two Stage Method to fit the parameter
Multivariate
Use LM to fit the parameter
     0     1.458165e+03              NaN
 * lambda: 10000.0

     1     1.458103e+03     2.844910e+03
 * g(x): 2844.9098540289524
 * lambda: 1000.0
 * dx: [1.06475e-5,9.37938e-6]

     2     1.457474e+03     2.842124e+03
 * g(x): 2842.123515165732
 * lambda: 100.0
 * dx: [0.000106365,9.33801e-5]

     3     1.451246e+03     2.814660e+03
 * g(x): 2814.6601563361705
 * lambda: 10.0
 * dx: [0.0010528,0.00089318]

     4     1.393767e+03     2.575575e+03
 * g(x): 2575.575357955753
 * lambda: 1.0
 * dx: [0.00959272,0.00553178]

     5     1.072943e+03     1.713210e+03
 * g(x): 1713.2095290663162
 * lambda: 0.1
 * dx: [0.0570779,-0.0448817]

     6     5.070010e+02     1.213777e+03
 * g(x): 1213.7773753269707
 * lambda: 0.010000000000000002
 * dx: [0.136272,-0.163392]

     7     4.027029e+01     2.138402e+02
 * g(x): 213.84021005006997
 * lambda: 0.0010000000000000002
 * dx: [0.0448339,0.327938]

     8     2.680594e+00     2.733121e+02
 * g(x): 273.312082301668
 * lambda: 0.00010000000000000003
 * dx: [-0.056992,0.276387]

     9     4.305494e-02     4.893098e+00
 * g(x): 4.893098254005677
 * lambda: 1.0000000000000004e-5
 * dx: [0.0081337,-0.00282971]

    10     4.228994e-02     5.795146e-03
 * g(x): 0.005795145732646667
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000208156,0.000658838]

    11     4.228994e-02     3.632118e-08
 * g(x): 3.6321181062781704e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-3.52045e-7,1.12107e-6]

    12     4.228994e-02     2.355217e-08
 * g(x): 2.355217465499493e-8
 * lambda: 1.0000000000000005e-8
 * dx: [-2.39961e-10,9.16552e-10]

Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     8.966561e+02              NaN
 * lambda: 10000.0

     1     8.965289e+02     2.416815e+03
 * g(x): 2416.814616655508
 * lambda: 1000.0
 * dx: [1.18949e-5,-9.4576e-7,4.3727e-5,1.71624e-5]

     2     8.952590e+02     2.412154e+03
 * g(x): 2412.154065933751
 * lambda: 100.0
 * dx: [0.000118717,-9.12471e-6,0.000436518,0.00017125]

     3     8.827736e+02     2.366545e+03
 * g(x): 2366.5454660389123
 * lambda: 10.0
 * dx: [0.00116448,-5.89721e-5,0.00429173,0.00167584]

     4     7.765302e+02     2.001461e+03
 * g(x): 2001.4608161726526
 * lambda: 1.0
 * dx: [0.00980148,0.00184742,0.0369979,0.0137272]

     5     3.459814e+02     1.022046e+03
 * g(x): 1022.0457768549786
 * lambda: 0.1
 * dx: [0.0387695,0.0566884,0.202501,0.0330951]

     6     1.680959e+01     1.570784e+02
 * g(x): 157.07835285098133
 * lambda: 0.010000000000000002
 * dx: [0.0431446,0.0877548,0.443157,-0.0917942]

     7     2.501744e+00     1.333092e+02
 * g(x): 133.3091824203002
 * lambda: 0.0010000000000000002
 * dx: [0.0429068,0.0140952,-0.0962541,-0.088724]

     8     1.887058e-01     4.840933e+01
 * g(x): 48.40932623151635
 * lambda: 0.00010000000000000003
 * dx: [0.0524111,0.0360312,-0.161793,-0.0560548]

     9     4.607602e-02     7.402090e+00
 * g(x): 7.402089674568918
 * lambda: 1.0000000000000004e-5
 * dx: [0.00983644,0.00271872,-0.0231933,-0.0101704]

    10     4.215407e-02     4.494000e-02
 * g(x): 0.044939996258112735
 * lambda: 1.0000000000000004e-6
 * dx: [0.00194523,0.00081254,-0.00649903,-0.00221181]

    11     4.215380e-02     1.872008e-06
 * g(x): 1.872007830694411e-6
 * lambda: 1.0000000000000005e-7
 * dx: [1.85028e-5,3.58841e-6,-5.24617e-5,-1.92529e-5]

    12     4.215380e-02     9.081217e-10
 * g(x): 9.081216889583743e-10
 * lambda: 1.0000000000000005e-8
 * dx: [1.56446e-7,9.76584e-8,-4.87552e-7,-1.53701e-7]

    13     4.215380e-02     2.301731e-08
 * g(x): 2.301731444331878e-8
 * lambda: 1.0000000000000005e-9
 * dx: [3.10956e-10,1.8507e-10,-1.21572e-9,-2.30454e-10]

Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary: | 
  Tests on ODEs | No tests
 51.378099 seconds (42.33 M allocations: 2.523 GB, 1.90% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | 
  ParameterizedFunction Type | No tests
  8.032335 seconds (4.15 M allocations: 165.066 MB, 0.66% gc time)
Test on Monte: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: MethodError: no method matching DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}(::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.##146#148{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}},Void,UniformScaling{Int64}}, ::DiffEqBase.##124#130, ::DiffEqBase.##123#129)
  Closest candidates are:
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}{T,T2,T3,T4,T5}(::T, ::T2, ::T3, !Matched::T4, !Matched::T5) at /home/vagrant/.julia/v0.5/DiffEqBase/src/problems/monte_problems.jl:2
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}(::DiffEqBase.DEProblem; output_func, prob_func, reduction, u_init) at /home/vagrant/.julia/v0.5/DiffEqBase/src/problems/monte_problems.jl:9
    DiffEqBase.MonteCarloProblem{T,T2,T3,T4,T5}{T}(::Any) at sysimg.jl:53
   in problem_new_parameters(::DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DiffEqBase/src/parameters_interface.jl:86
   in (::DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}})(::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/build_loss_objective.jl:25
   in finite_difference!(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Calculus/src/finite_difference.jl:126
   in g! at /home/vagrant/.julia/v0.5/Optim/src/types.jl:192 [inlined]
   in (::Optim.#fg!#3{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13},Optim.#g!#2{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/types.jl:196
   in initial_state(::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}, ::Optim.OnceDifferentiable, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Optim/src/bfgs.jl:38
   in optimize(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:172
   in optimize(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##124#130,DiffEqBase.##123#129,DiffEqBase.##125#131,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:116
   in optimize(::Function, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.5/Optim/src/optimize.jl:165
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl:5 [inlined]
   in macro expansion; at ./test.jl:674 [inlined]
   in macro expansion; at ./util.jl:188 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
  while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 24
Test Summary: | Error  Total
  Test on Monte |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./util.jl:188 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 5
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.5.0
INFO: Removing DiffEqNoiseProcess v0.1.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing InplaceOps v0.1.0
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.3.1
INFO: Removing ParameterizedFunctions v2.0.0
INFO: Removing PolynomialFactors v0.0.5
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.2.1
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
