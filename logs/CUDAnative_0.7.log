>>> 'Pkg.add("CUDAnative")' log
[ Info: Installing CUDAapi v0.3.1
[ Info: Installing CUDAdrv v0.7.6
[ Info: Installing CUDAnative v0.5.5
[ Info: Installing LLVM v0.9.5
[ Info: Building CUDAdrv
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#912(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2530
└ @ Base deprecated.jl:2530
WARNING: Could not find CUDA driver
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAdrv
│   exception =
│    LoadError: MethodError: no method matching dlopen(::Nothing)
│    Closest candidates are:
│      dlopen(!Matched::Symbol) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Libdl/src/Libdl.jl:96
│      dlopen(!Matched::Symbol, !Matched::Integer) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Libdl/src/Libdl.jl:96
│      dlopen(!Matched::AbstractString) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Libdl/src/Libdl.jl:99
│      ...
│    Stacktrace:
│     [1] init(::Nothing, ::Int64) at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:14
│     [2] init at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:29 [inlined]
│     [3] main() at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:61
│     [4] top-level scope
│     [5] include at ./boot.jl:292 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:521
│     [7] include at ./sysimg.jl:26 [inlined]
│     [8] include(::String) at ./loading.jl:555
│     [9] top-level scope
│     [10] eval at ./boot.jl:295 [inlined]
│     [11] eval at ./sysimg.jl:71 [inlined]
│     [12] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [13] #2 at ./none:12 [inlined]
│     [14] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [15] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [16] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [17] top-level scope
│     [18] eval at ./boot.jl:295 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [20] process_options(::Base.JLOptions) at ./client.jl:301
│     [21] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:105
└ @ Main none:15
[ Info: Building LLVM
[ Info: Building CUDAnative
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#912(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2530
└ @ Base deprecated.jl:2530
WARNING: CUDAdrv.jl has not been successfully built, and will not work properly.
WARNING: Please run Pkg.build("CUDAdrv") and restart Julia.
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: Could not find CUDA toolkit; specify using any of the CUDA_PATH, CUDA_HOME or CUDA_ROOT environment variables
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAnative
│   exception =
│    LoadError: CUDA toolkit at nothing doesn't contain nvcc
│    Stacktrace:
│     [1] error at ./error.jl:33 [inlined]
│     [2] find_toolkit_version(::Nothing) at /home/vagrant/.julia/v0.7/CUDAapi/src/discovery.jl:258
│     [3] main() at /home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl:136
│     [4] top-level scope
│     [5] include at ./boot.jl:292 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:521
│     [7] include at ./sysimg.jl:26 [inlined]
│     [8] include(::String) at ./loading.jl:555
│     [9] top-level scope
│     [10] eval at ./boot.jl:295 [inlined]
│     [11] eval at ./sysimg.jl:71 [inlined]
│     [12] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [13] #2 at ./none:12 [inlined]
│     [14] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [15] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [16] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [17] top-level scope
│     [18] eval at ./boot.jl:295 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [20] process_options(::Base.JLOptions) at ./client.jl:301
│     [21] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl:203
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ CUDAnative and CUDAdrv had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("CUDAnative", "CUDAdrv")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:650
[ Info: Package database updated

>>> 'Pkg.test("CUDAnative")' log
Package was unable to be tested.

>>> End of log
