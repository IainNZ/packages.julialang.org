>>> 'Pkg.add("CUDAnative")' log
[ Info: Installing CUDAapi v0.2.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CUDAdrv v0.6.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CUDAnative v0.5.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LLVM v0.9.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Building CUDAdrv @ Main none:10
WARNING: both CUDAapi and Base export "@debug"; uses of it in module __anon__ must be qualified
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAdrv
│   exception = LoadError("/home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl", 46, LoadError("/home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl", 86, UndefVarError(Symbol("@debug"))))
└ @ Main none:15
[ Info: Building LLVM @ Main none:10
[ Info: Building CUDAnative @ Main none:10
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: both CUDAapi and Base export "@debug"; uses of it in module CUDAdrv must be qualified
ERROR: LoadError: LoadError: LoadError: UndefVarError: @debug not defined
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:295 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:521
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/CUDAdrv/src/CUDAdrv.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:295 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:521
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] top-level scope
 [11] eval at ./boot.jl:298 [inlined]
 [12] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/src/init.jl:21
in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/src/init.jl:13
in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/src/CUDAdrv.jl:25
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAnative
│   exception = LoadError("/home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl", 2, ErrorException("Failed to precompile CUDAdrv to /home/vagrant/.julia/lib/v0.7/CUDAdrv.ji."))
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ CUDAnative and CUDAdrv had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("CUDAnative", "CUDAdrv")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:656
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of CUDAnative
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("CUDAnative")' log
Package was unable to be tested.

>>> End of log
