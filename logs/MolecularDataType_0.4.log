>>> 'Pkg.add("MolecularDataType")' log
INFO: Cloning cache of MolecularDataType from git://github.com/UMOL/MolecularDataType.jl.git
INFO: Installing MolecularDataType v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of MolecularDataType
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MolecularDataType")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (818.96875 MB free)
Uptime: 12582.0 sec
Load Avg:  1.021484375  0.9921875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3493 MHz     555357 s       4700 s      48369 s     536534 s         15 s
#2  3493 MHz     433845 s       1768 s      41286 s     741738 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - MolecularDataType             0.0.2
1 additional packages:
 - Compat                        0.26.0
INFO: Testing MolecularDataType
----------------------------------------
Test constructor_2 for type MolecularSystem


VERIFIED! constructor_2 for type MolecularSystem
----------------------------------------


-----------------------------------------
Test clone(obj; :fn_residue_id=...) for AbstractMolecularContainer

test single clone

VERIFIED! clone(obj; :fn_residue_id=...) for AbstractMolecularContainer

-----------------------------------------
-----------------------------------------
Test clone(obj; :fn_residue_id=...) for AbstractMolecularContainer

test batch clone

VERIFIED! clone(obj; :fn_residue_id=...) for AbstractMolecularContainer

-----------------------------------------
---------------------------------
Test fuse() for MolecularSystem

merge 2 molecular systems

VERIFIED! fuse() for MolecularSystem

---------------------------------
--------------------------------------------------
Test mutate!(obj::MolecularDataType.MolecularSystem, :coordinate, ...)

VERIFIED! mutate!(obj::MolecularDataType.MolecularSystem, :coordinate, ...)

--------------------------------------------------
INFO: MolecularDataType tests passed

>>> End of log
