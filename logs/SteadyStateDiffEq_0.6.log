>>> 'Pkg.add("SteadyStateDiffEq")' log
INFO: Cloning cache of SteadyStateDiffEq from https://github.com/JuliaDiffEq/SteadyStateDiffEq.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.9.0
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.2.7
INFO: Installing LineSearches v0.1.5
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.8.0
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing SteadyStateDiffEq v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SteadyStateDiffEq
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SteadyStateDiffEq")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (788.66015625 MB free)
Uptime: 62977.0 sec
Load Avg:  1.0048828125  1.02880859375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3488 MHz    4143501 s       3977 s     171731 s     902100 s         41 s
#2  3488 MHz     736951 s       2846 s      81782 s    5374755 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.12.0
 - SteadyStateDiffEq             0.1.0
21 additional packages:
 - Calculus                      0.2.2
 - Compat                        0.25.2
 - DiffBase                      0.2.0
 - DiffEqBase                    1.9.0
 - Distances                     0.4.1
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Juno                          0.2.7
 - LineSearches                  0.1.5
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NLsolve                       0.9.1
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PositiveFactorizations        0.0.4
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.8.0
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
INFO: Computing test dependencies for SteadyStateDiffEq...
INFO: Installing BinDeps v0.6.0
INFO: Installing SHA v0.3.3
INFO: Installing Sundials v0.12.0
INFO: Installing URIParser v0.1.8
INFO: Building Sundials
INFO: Testing SteadyStateDiffEq

WARNING: deprecated syntax "abstract AbstractDifferentiableMultivariateFunction" at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:2.
Use "abstract type AbstractDifferentiableMultivariateFunction end" instead.
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] #2 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/algorithms.jl:6 [inlined]
 [8] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [9] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 11
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] #2 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/algorithms.jl:6 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 11
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] #2 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/algorithms.jl:6 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 11
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.6/NLsolve/src/newton.jl:42
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:21
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #1 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl:19 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.6/NLsolve/src/newton.jl:43
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:21
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #1 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl:19 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.6/NLsolve/src/newton.jl:45
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:21
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #1 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl:19 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.6/NLsolve/src/newton.jl:46
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:21
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #1 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl:19 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.6/NLsolve/src/newton.jl:47
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:21
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #1 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl:19 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.6/NLsolve/src/newton.jl:56
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:21
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] #1 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl:19 [inlined]
 [10] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [11] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.6/NLsolve/src/newton.jl:67
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:21
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] #1 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl:19 [inlined]
 [10] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [11] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
WARNING: DifferentiableFunction(args...) is deprecated, use OnceDifferentiable(args...) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] DifferentiableFunction(::Function, ::Vararg{Function,N} where N) at ./deprecated.jl:51
 [3] newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.6/NLsolve/src/newton.jl:103
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:21
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #1 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl:19 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:3
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
INFO: SteadyStateDiffEq tests passed
INFO: Removing BinDeps v0.6.0
INFO: Removing SHA v0.3.3
INFO: Removing Sundials v0.12.0
INFO: Removing URIParser v0.1.8

>>> End of log
