>>> 'Pkg.add("SimilarReferences")' log
┌ Info: Cloning cache of SimilarReferences from https://github.com/sadit/SimilarReferences.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing SimilarReferences v0.1.0        @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SimilaritySearch v0.1.7         @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("SimilarReferences")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2641103 s       5922 s     135738 s     737120 s         26 s
       #2  3500 MHz     541791 s        698 s      49064 s    3478521 s          0 s
       
  Memory: 2.93927001953125 GB (656.0625 MB free)
  Uptime: 41291.0 sec
  Load Avg:  1.01025390625  0.9873046875  0.9599609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - SimilarReferences             0.1.0
4 additional packages:
 - Compat                        0.45.0
 - Nullables                     0.0.3
 - SimilaritySearch              0.1.7
 - tmpFvnkhC                     0.0.0-             non-repo (unregistered)
[ Info: Testing SimilarReferences                  @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `parametric method syntax DenseCosine{T}(vec::Vector{T})` around /home/vagrant/.julia/v0.7/SimilaritySearch/src/distances/cos.jl:14.
│ Use `DenseCosine(vec::Vector{T}) where T` instead.
└                                                            @ nothing cos.jl:14
WARNING: importing deprecated binding Base.clear! into SimilaritySearch.
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/runtests.jl:3
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testkvp.jl:3
(recall_lower_bound, dist) = (1.0, L2Distance(0))
Kvp = Kvp
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Float32,1},1}, ::L2Distance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=L2Distance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Float32,1}, ::Array{Array{Float32,1},1}, ::Int64, ::L2Distance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L2Distance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L2Distance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L2Distance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L2Distance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
(dist, p) = (L2Distance(144164), PerformanceResult(1.0, 0.001520974636077881, 120.32))
(recall_lower_bound, dist) = (1.0, L1Distance(0))
Kvp = Kvp
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Float32,1},1}, ::L1Distance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=L1Distance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Float32,1}, ::Array{Array{Float32,1},1}, ::Int64, ::L1Distance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L1Distance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L1Distance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L1Distance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L1Distance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
(dist, p) = (L1Distance(143093), PerformanceResult(1.0, 0.0004908227920532226, 109.61))
(recall_lower_bound, dist) = (1.0, LInfDistance(0))
Kvp = Kvp
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Float32,1},1}, ::LInfDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=LInfDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Float32,1}, ::Array{Array{Float32,1},1}, ::Int64, ::LInfDistance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LInfDistance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LInfDistance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LInfDistance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LInfDistance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
(dist, p) = (LInfDistance(143105), PerformanceResult(1.0, 0.0009685683250427246, 109.73))
(recall_lower_bound, dist) = (1.0, LpDistance(0, 3.0f0))
Kvp = Kvp
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Float32,1},1}, ::LpDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=LpDistance(0, 3.0f0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Float32,1}, ::Array{Array{Float32,1},1}, ::Int64, ::LpDistance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LpDistance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LpDistance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LpDistance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LpDistance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
(dist, p) = (LpDistance(144027, 3.0f0), PerformanceResult(1.0, 0.0008829665184020996, 118.95))
(recall_lower_bound, dist) = (0.1, LpDistance(0, 0.5f0))
Kvp = Kvp
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=LpDistance(0, 0.5f0)
(dist, p) = (LpDistance(140555, 0.5f0), PerformanceResult(0.7959999999999998, 0.00023125410079956056, 84.23))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└                                                           @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::JaccardDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=JaccardDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::JaccardDistance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},JaccardDistance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},JaccardDistance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},JaccardDistance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},JaccardDistance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└                                                           @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::DiceDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=DiceDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::DiceDistance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},DiceDistance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},DiceDistance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},DiceDistance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},DiceDistance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└                                                           @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=IntersectionDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::IntersectionDistance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},IntersectionDistance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},IntersectionDistance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},IntersectionDistance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},IntersectionDistance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└                                                           @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=CommonPrefixDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::CommonPrefixDistance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},CommonPrefixDistance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},CommonPrefixDistance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},CommonPrefixDistance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},CommonPrefixDistance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└                                                           @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=GenericLevenshtein(0, 1, 1, 1)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::GenericLevenshtein) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},GenericLevenshtein}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},GenericLevenshtein}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},GenericLevenshtein}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},GenericLevenshtein}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
INFO: inserting items into the index
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=GenericLevenshtein(0, 1, 1, 2)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└                                                           @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::HammingDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└                                                  @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=HammingDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::HammingDistance) at kvp.jl:63
└                                                  @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└                                           @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},HammingDistance}) at performance.jl:85
└                                           @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},HammingDistance}) at performance.jl:86
└                                           @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},HammingDistance}) at performance.jl:87
└                                           @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},HammingDistance}) at performance.jl:89
└                                           @ SimilaritySearch performance.jl:89
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:3
WARNING: Method definition test_vectors(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.7/SimilarReferences/test/testkvp.jl:7 overwritten at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:7.
WARNING: Method definition test_sequences(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.7/SimilarReferences/test/testkvp.jl:27 overwritten at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35.
WARNING: importing deprecated binding Base.now into SimilarReferences.
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=L2Distance(24003)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #1 at <missing>:0 [inlined]
└                                                             @ Core <missing>:0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #1 at <missing>:0 [inlined]
└                                                             @ Core <missing>:0
indexing vectors with KNR and L2Distance(0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:7
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L2Distance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Float32,1},1}, ::L2Distance) at ./<missing>:0
   [7] (::getfield(, Symbol("##23#24")))(::Array{Array{Float32,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:15 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_vectors(::getfield(, Symbol("##23#24")), ::L2Distance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:8
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:74
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=L1Distance(24003)
indexing vectors with KNR and L1Distance(0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:7
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L1Distance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Float32,1},1}, ::L1Distance) at ./<missing>:0
   [7] (::getfield(, Symbol("##23#24")))(::Array{Array{Float32,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:15 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_vectors(::getfield(, Symbol("##23#24")), ::L1Distance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:8
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:74
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=LInfDistance(24003)
indexing vectors with KNR and LInfDistance(0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:7
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LInfDistance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Float32,1},1}, ::LInfDistance) at ./<missing>:0
   [7] (::getfield(, Symbol("##23#24")))(::Array{Array{Float32,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:15 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_vectors(::getfield(, Symbol("##23#24")), ::LInfDistance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:8
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:74
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=LpDistance(24003, 3.0f0)
indexing vectors with KNR and LpDistance(0, 3.0f0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:7
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LpDistance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Float32,1},1}, ::LpDistance) at ./<missing>:0
   [7] (::getfield(, Symbol("##23#24")))(::Array{Array{Float32,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:15 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_vectors(::getfield(, Symbol("##23#24")), ::LpDistance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:8
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:74
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=LpDistance(24003, 0.5f0)
indexing vectors with KNR and LpDistance(0, 0.5f0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:7
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LpDistance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Float32,1},1}, ::LpDistance) at ./<missing>:0
   [7] (::getfield(, Symbol("##23#24")))(::Array{Array{Float32,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:15 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_vectors(::getfield(, Symbol("##23#24")), ::LpDistance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:8
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:86 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:74
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└                                                           @ Core testknr.jl:53
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=126, dist=JaccardDistance(24003)
indexing sequences with KNR and JaccardDistance(0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Int64,1},1}, ::JaccardDistance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Int64,1},1}, ::JaccardDistance) at ./<missing>:0
   [7] (::getfield(, Symbol("##25#26")))(::Array{Array{Int64,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:54 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_sequences(::getfield(, Symbol("##25#26")), ::JaccardDistance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:36
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:92
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└                                                           @ Core testknr.jl:53
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=126, dist=DiceDistance(24003)
indexing sequences with KNR and DiceDistance(0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Int64,1},1}, ::DiceDistance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Int64,1},1}, ::DiceDistance) at ./<missing>:0
   [7] (::getfield(, Symbol("##25#26")))(::Array{Array{Int64,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:54 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_sequences(::getfield(, Symbol("##25#26")), ::DiceDistance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:36
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:92
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└                                                           @ Core testknr.jl:53
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=78, dist=IntersectionDistance(17796)
indexing sequences with KNR and IntersectionDistance(0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Int64,1},1}, ::IntersectionDistance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Int64,1},1}, ::IntersectionDistance) at ./<missing>:0
   [7] (::getfield(, Symbol("##25#26")))(::Array{Array{Int64,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:54 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_sequences(::getfield(, Symbol("##25#26")), ::IntersectionDistance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:36
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:92
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└                                                           @ Core testknr.jl:53
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=31, dist=CommonPrefixDistance(6177)
indexing sequences with KNR and CommonPrefixDistance(0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Int64,1},1}, ::CommonPrefixDistance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Int64,1},1}, ::CommonPrefixDistance) at ./<missing>:0
   [7] (::getfield(, Symbol("##25#26")))(::Array{Array{Int64,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:54 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_sequences(::getfield(, Symbol("##25#26")), ::CommonPrefixDistance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:36
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:92
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└                                                           @ Core testknr.jl:53
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=127, dist=GenericLevenshtein(0, 1, 1, 1)
indexing sequences with KNR and GenericLevenshtein(0, 1, 1, 1): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Int64,1},1}, ::GenericLevenshtein) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Int64,1},1}, ::GenericLevenshtein) at ./<missing>:0
   [7] (::getfield(, Symbol("##25#26")))(::Array{Array{Int64,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:54 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_sequences(::getfield(, Symbol("##25#26")), ::GenericLevenshtein, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:36
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:92
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
INFO: inserting items into the index
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=127, dist=GenericLevenshtein(0, 1, 1, 2)
indexing sequences with KNR and GenericLevenshtein(0, 1, 1, 2): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Int64,1},1}, ::GenericLevenshtein) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Int64,1},1}, ::GenericLevenshtein) at ./<missing>:0
   [7] (::getfield(, Symbol("##25#26")))(::Array{Array{Int64,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:54 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_sequences(::getfield(, Symbol("##25#26")), ::GenericLevenshtein, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:36
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:92
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└                                                           @ Core testknr.jl:53
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└                                                  @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=127, dist=HammingDistance(24003)
indexing sequences with KNR and HammingDistance(0): Error During Test at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35
  Got an exception of type ErrorException outside of a @test
  Base.now has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #now#854 at ./deprecated.jl:138 [inlined]
   [3] now at ./deprecated.jl:138 [inlined]
   [4] Knr(::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:43
   [5] #Knr#3(::Int64, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Array{Int64,1},1}, ::HammingDistance) at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl:58
   [6] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:numrefs, :k),Tuple{Int64,Int64}}, ::Type{Knr}, ::Array{Array{Int64,1},1}, ::HammingDistance) at ./<missing>:0
   [7] (::getfield(, Symbol("##25#26")))(::Array{Array{Int64,1},1}) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106
   [8] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:54 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] test_sequences(::getfield(, Symbol("##25#26")), ::HammingDistance, ::Int64, ::String) at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:36
   [11] macro expansion at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:106 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:92
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
[ Info: SimilarReferences tests passed             @ Base.Pkg.Entry entry.jl:737

>>> End of log
