>>> 'Pkg.add("SimilarReferences")' log
[ Info: Cloning cache of SimilarReferences from https://github.com/sadit/SimilarReferences.jl.git
[ Info: Installing SimilarReferences v0.1.0
[ Info: Installing SimilaritySearch v0.1.7
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of SimilarReferences
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SimilarReferences")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2702511 s         92 s     137404 s     687493 s         26 s
       #2  3499 MHz     566055 s       7450 s      52583 s    3463685 s          0 s
       
  Memory: 2.93927001953125 GB (676.421875 MB free)
  Uptime: 41524.0 sec
  Load Avg:  0.9970703125  0.98046875  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - SimilarReferences             0.1.0
4 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
 - SimilaritySearch              0.1.7
 - tmpJpLd7f                     0.0.0-             non-repo (unregistered)
[ Info: Testing SimilarReferences
┌ Warning: Deprecated syntax `parametric method syntax DenseCosine{T}(vec::Vector{T})` around /home/vagrant/.julia/v0.7/SimilaritySearch/src/distances/cos.jl:14.
│ Use `DenseCosine(vec::Vector{T}) where T` instead.
└ @ nothing cos.jl:14
WARNING: importing deprecated binding Base.clear! into SimilaritySearch.
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/src/res/knn.jl:133
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/src/res/knn.jl:133
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/runtests.jl:3
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testkvp.jl:3
(recall_lower_bound, dist) = (1.0, L2Distance(0))
Kvp = Kvp
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Float32,1},1}, ::L2Distance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=L2Distance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Float32,1}, ::Array{Array{Float32,1},1}, ::Int64, ::L2Distance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L2Distance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L2Distance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L2Distance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L2Distance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (L2Distance(143745), PerformanceResult(1.0, 0.000978841781616211, 116.13))
(recall_lower_bound, dist) = (1.0, L1Distance(0))
Kvp = Kvp
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Float32,1},1}, ::L1Distance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=L1Distance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Float32,1}, ::Array{Array{Float32,1},1}, ::Int64, ::L1Distance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L1Distance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L1Distance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L1Distance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},L1Distance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (L1Distance(142157), PerformanceResult(1.0, 0.0009746718406677246, 100.25))
(recall_lower_bound, dist) = (1.0, LInfDistance(0))
Kvp = Kvp
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Float32,1},1}, ::LInfDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=LInfDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Float32,1}, ::Array{Array{Float32,1},1}, ::Int64, ::LInfDistance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LInfDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LInfDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LInfDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LInfDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (LInfDistance(143359), PerformanceResult(1.0, 0.0005212497711181641, 112.27))
(recall_lower_bound, dist) = (1.0, LpDistance(0, 3.0f0))
Kvp = Kvp
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Float32,1},1}, ::LpDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=LpDistance(0, 3.0f0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Float32,1}, ::Array{Array{Float32,1},1}, ::Int64, ::LpDistance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LpDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LpDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LpDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Kvp{Array{Float32,1},LpDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (LpDistance(144015, 3.0f0), PerformanceResult(1.0, 0.0006236982345581055, 118.83))
(recall_lower_bound, dist) = (0.1, LpDistance(0, 0.5f0))
Kvp = Kvp
INFO: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=LpDistance(0, 0.5f0)
(dist, p) = (LpDistance(139948, 0.5f0), PerformanceResult(0.7659999999999999, 0.0003560352325439453, 78.16))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└ @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::JaccardDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=JaccardDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::JaccardDistance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},JaccardDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},JaccardDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},JaccardDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},JaccardDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└ @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::DiceDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=DiceDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::DiceDistance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},DiceDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},DiceDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},DiceDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},DiceDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└ @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=IntersectionDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::IntersectionDistance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},IntersectionDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},IntersectionDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},IntersectionDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},IntersectionDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└ @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=CommonPrefixDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::CommonPrefixDistance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},CommonPrefixDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},CommonPrefixDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},CommonPrefixDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},CommonPrefixDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└ @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=GenericLevenshtein(0, 1, 1, 1)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::GenericLevenshtein) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},GenericLevenshtein}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},GenericLevenshtein}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},GenericLevenshtein}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},GenericLevenshtein}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
INFO: inserting items into the index
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=GenericLevenshtein(0, 1, 1, 2)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testkvp.jl:45 [inlined]
└ @ Core testkvp.jl:45
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Kvp(::Array{Array{Int64,1},1}, ::HammingDistance, ::Int64, ::Array{Int64,1}) at kvp.jl:34
└ @ SimilarReferences kvp.jl:34
INFO: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=HammingDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = near_and_far(::Array{Int64,1}, ::Array{Array{Int64,1},1}, ::Int64, ::HammingDistance) at kvp.jl:63
└ @ SimilarReferences kvp.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},HammingDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},HammingDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},HammingDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Kvp{Array{Int64,1},HammingDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:3
WARNING: Method definition test_vectors(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.7/SimilarReferences/test/testkvp.jl:7 overwritten at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:7.
WARNING: Method definition test_sequences(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.7/SimilarReferences/test/testkvp.jl:27 overwritten at /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:35.
WARNING: importing deprecated binding Base.shuffle! into SimilaritySearch.
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: importing deprecated binding Base.now into SimilarReferences.
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=L2Distance(24003)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #1 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #1 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:21.059
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:21.157
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:21.162
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:21.167
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:21.172
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:21.176
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:21.181
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:21.186
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:21.191
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:21.196
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:21.201
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:21.206
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:21.21
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:21.215
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:21.22
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:21.225
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:21.23
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:21.234
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:21.239
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:21.244
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},L2Distance}) at knr.jl:98
└ @ SimilarReferences knr.jl:98
INFO: Knr> optimizing index for recall=0.9
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},L2Distance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},L2Distance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},L2Distance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},L2Distance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},L2Distance}) at knr.jl:106
└ @ SimilarReferences knr.jl:106
INFO: Knr> opt step ksearch=2, performance PerformanceResult(0.8625000000000003, 0.00031958892941474915, 152.390625)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},L2Distance}) at knr.jl:110
└ @ SimilarReferences knr.jl:110
INFO: Knr> reached performance PerformanceResult(0.9593750000000006, 1.1831521987915039e-5, 169.765625)
(dist, p) = (L2Distance(436990), PerformanceResult(0.9330000000000003, 1.4193058013916016e-5, 167.51))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:22 [inlined]
└ @ Core testknr.jl:22
INFO: adding more items
(dist, p) = (L2Distance(577010), PerformanceResult(1.0, 1.2722015380859375e-5, 173.2))
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=L1Distance(24003)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:22.567
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:22.573
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:22.577
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:22.582
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:22.587
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:22.592
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:22.596
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:22.6
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:22.604
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:22.607
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:22.61
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:22.614
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:22.619
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:22.624
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:22.629
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:22.634
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:22.638
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:22.643
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:22.648
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:22.653
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},L1Distance}) at knr.jl:98
└ @ SimilarReferences knr.jl:98
INFO: Knr> optimizing index for recall=0.9
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},L1Distance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},L1Distance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},L1Distance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},L1Distance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},L1Distance}) at knr.jl:106
└ @ SimilarReferences knr.jl:106
INFO: Knr> opt step ksearch=2, performance PerformanceResult(0.8195312500000003, 0.0002746935933828354, 151.5546875)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},L1Distance}) at knr.jl:110
└ @ SimilarReferences knr.jl:110
INFO: Knr> reached performance PerformanceResult(0.9398437500000001, 1.284666359424591e-5, 167.84375)
(dist, p) = (L1Distance(436642), PerformanceResult(0.8849999999999999, 1.1575222015380859e-5, 167.56))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:22 [inlined]
└ @ Core testknr.jl:22
INFO: adding more items
(dist, p) = (L1Distance(576635), PerformanceResult(1.0, 1.125335693359375e-5, 172.93))
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=LInfDistance(24003)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:23.892
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:23.898
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:23.903
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:23.908
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:23.913
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:23.918
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:23.923
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:23.927
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:23.932
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:23.937
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:23.942
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:23.946
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:23.951
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:23.956
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:23.961
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:23.966
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:23.97
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:23.975
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:23.98
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:23.985
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},LInfDistance}) at knr.jl:98
└ @ SimilarReferences knr.jl:98
INFO: Knr> optimizing index for recall=0.9
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},LInfDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},LInfDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},LInfDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},LInfDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},LInfDistance}) at knr.jl:106
└ @ SimilarReferences knr.jl:106
INFO: Knr> opt step ksearch=2, performance PerformanceResult(0.8156249999999997, 0.0002934318035840988, 152.9609375)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},LInfDistance}) at knr.jl:110
└ @ SimilarReferences knr.jl:110
INFO: Knr> reached performance PerformanceResult(0.9351562500000005, 1.366250216960907e-5, 170.1484375)
(dist, p) = (LInfDistance(437374), PerformanceResult(0.8990000000000004, 1.1334419250488281e-5, 170.13))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:22 [inlined]
└ @ Core testknr.jl:22
INFO: adding more items
(dist, p) = (LInfDistance(577686), PerformanceResult(1.0, 1.0573863983154297e-5, 176.12))
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:72
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=LpDistance(24003, 3.0f0)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:25.308
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:25.313
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:25.319
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:25.325
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:25.33
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:25.336
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:25.341
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:25.347
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:25.353
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:25.359
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:25.365
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:25.37
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:25.376
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:25.383
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:25.388
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:25.394
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:25.399
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:25.405
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:25.41
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:25.416
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},LpDistance}) at knr.jl:98
└ @ SimilarReferences knr.jl:98
INFO: Knr> optimizing index for recall=0.9
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},LpDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},LpDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},LpDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Knr{Array{Float32,1},LpDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},LpDistance}) at knr.jl:106
└ @ SimilarReferences knr.jl:106
INFO: Knr> opt step ksearch=2, performance PerformanceResult(0.875, 0.00023226439952850342, 152.1171875)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #optimize!#6(::Float64, ::Int64, ::Int64, ::Bool, ::Function, ::Knr{Array{Float32,1},LpDistance}) at knr.jl:110
└ @ SimilarReferences knr.jl:110
INFO: Knr> reached performance PerformanceResult(0.9578125000000004, 2.5561079382896423e-5, 168.203125)
(dist, p) = (LpDistance(436829, 3.0f0), PerformanceResult(0.9399999999999998, 2.4628639221191406e-5, 168.25))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:22 [inlined]
└ @ Core testknr.jl:22
INFO: adding more items
(dist, p) = (LpDistance(576912, 3.0f0), PerformanceResult(1.0, 2.582550048828125e-5, 173.83))
INFO: Knr> refs=Array{Array{Float32,1},1}, k=3, numrefs=127, dist=LpDistance(24003, 0.5f0)
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:26.207
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:26.21
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:26.214
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:26.218
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:26.222
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:26.226
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:26.231
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:26.235
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:26.239
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:26.244
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:26.248
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:26.252
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:26.256
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:26.26
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:26.264
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:26.269
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:26.273
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:26.277
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:26.282
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:26.286
INFO: Knr> optimizing index for recall=0.9
INFO: Knr> opt step ksearch=2, performance PerformanceResult(0.73359375, 1.054815948009491e-5, 151.9296875)
INFO: Knr> opt step ksearch=3, performance PerformanceResult(0.8656250000000003, 1.134723424911499e-5, 170.75)
INFO: Knr> reached performance PerformanceResult(0.9187500000000001, 1.2770295143127441e-5, 187.453125)
(dist, p) = (LpDistance(462937, 0.5f0), PerformanceResult(0.846, 1.5349388122558593e-5, 186.37))
INFO: adding more items
(dist, p) = (LpDistance(604982, 0.5f0), PerformanceResult(1.0, 1.587867736816406e-5, 193.45))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└ @ Core testknr.jl:53
INFO: inserting items into the index
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=127, dist=JaccardDistance(24003)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:27.586
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:27.592
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:27.597
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:27.602
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:27.607
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:27.613
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:27.618
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:27.623
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:27.63
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:27.635
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:27.641
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:27.645
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:27.652
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:27.658
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:27.663
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:27.668
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:27.673
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:27.678
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:27.683
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:27.688
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},JaccardDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},JaccardDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},JaccardDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},JaccardDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (JaccardDistance(271542), PerformanceResult(0.8919999999999999, 0.0005069136619567871, 205.39))
(dist, p) = (JaccardDistance(415591), PerformanceResult(1.0, 2.47955322265625e-5, 213.49))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└ @ Core testknr.jl:53
INFO: inserting items into the index
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=127, dist=DiceDistance(24003)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:28.947
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:28.95
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:28.954
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:28.959
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:28.962
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:28.967
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:28.972
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:28.977
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:28.982
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:28.987
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:28.992
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:28.997
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:29.002
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:29.007
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:29.011
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:29.016
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:29.021
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:29.026
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:29.031
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:29.036
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},DiceDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},DiceDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},DiceDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},DiceDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (DiceDistance(271542), PerformanceResult(0.8919999999999999, 0.00028075695037841795, 205.39))
(dist, p) = (DiceDistance(415591), PerformanceResult(1.0, 1.7015933990478517e-5, 213.49))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└ @ Core testknr.jl:53
INFO: inserting items into the index
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=83, dist=IntersectionDistance(18630)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:29.939
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:29.945
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:29.953
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:29.957
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:29.96
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:29.963
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:29.967
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:29.97
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:29.974
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:29.977
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:29.98
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:29.983
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:29.986
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:29.989
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:29.992
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:29.996
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:30.001
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:30.005
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:30.01
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:30.014
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},IntersectionDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},IntersectionDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},IntersectionDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},IntersectionDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (IntersectionDistance(229925), PerformanceResult(0.995, 0.00041035890579223635, 282.95))
(dist, p) = (IntersectionDistance(378540), PerformanceResult(1.0, 2.750396728515625e-5, 303.15))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└ @ Core testknr.jl:53
INFO: inserting items into the index
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=26, dist=CommonPrefixDistance(6495)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:30.861
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:30.865
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:30.87
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:30.874
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:30.879
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:30.883
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:30.888
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:30.893
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:30.898
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:30.902
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:30.907
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:30.912
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:30.917
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:30.922
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:30.928
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:30.933
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:30.939
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:30.944
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:30.95
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:30.955
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},CommonPrefixDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},CommonPrefixDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},CommonPrefixDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},CommonPrefixDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (CommonPrefixDistance(235095), PerformanceResult(1.0, 0.000506584644317627, 1026.0))
(dist, p) = (CommonPrefixDistance(460295), PerformanceResult(1.0, 2.0842552185058594e-5, 1126.0))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└ @ Core testknr.jl:53
INFO: inserting items into the index
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=127, dist=GenericLevenshtein(0, 1, 1, 1)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:31.992
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:31.996
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:32.001
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:32.006
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:32.01
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:32.015
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:32.019
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:32.025
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:32.031
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:32.037
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:32.041
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:32.047
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:32.053
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:32.058
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:32.063
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:32.068
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:32.073
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:32.078
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:32.082
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:32.088
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},GenericLevenshtein}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},GenericLevenshtein}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},GenericLevenshtein}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},GenericLevenshtein}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (GenericLevenshtein(0, 1, 1, 1), PerformanceResult(0.7409999999999998, 0.0002772855758666992, 0.0))
(dist, p) = (GenericLevenshtein(0, 1, 1, 1), PerformanceResult(1.0, 3.488302230834961e-5, 0.0))
INFO: inserting items into the index
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=127, dist=GenericLevenshtein(0, 1, 1, 2)
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:32.735
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:32.738
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:32.744
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:32.749
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:32.754
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:32.759
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:32.764
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:32.768
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:32.773
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:32.777
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:32.782
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:32.788
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:32.794
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:32.801
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:32.807
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:32.821
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:32.828
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:32.834
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:32.841
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:32.847
(dist, p) = (GenericLevenshtein(0, 1, 1, 2), PerformanceResult(0.9650000000000004, 5.965948104858398e-5, 0.0))
(dist, p) = (GenericLevenshtein(0, 1, 1, 2), PerformanceResult(1.0, 3.664016723632813e-5, 0.0))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testknr.jl:53 [inlined]
└ @ Core testknr.jl:53
INFO: inserting items into the index
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
WARNING: Base.now is deprecated: it has been moved to the standard library package `Dates`.
Add a `using Dates` to your imports..
  likely near /home/vagrant/.julia/v0.7/SimilarReferences/test/testknr.jl:90
in Type at /home/vagrant/.julia/v0.7/SimilarReferences/src/knr.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:36
└ @ SimilarReferences knr.jl:36
INFO: Knr> refs=Array{Array{Int64,1},1}, k=3, numrefs=127, dist=HammingDistance(24003)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Knr(::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}, ::Int64, ::Int64) at knr.jl:43
└ @ SimilarReferences knr.jl:43
INFO: Knr> advance 0.05, now: 2018-01-27T12:36:33.504
INFO: Knr> advance 0.1, now: 2018-01-27T12:36:33.507
INFO: Knr> advance 0.15, now: 2018-01-27T12:36:33.511
INFO: Knr> advance 0.2, now: 2018-01-27T12:36:33.514
INFO: Knr> advance 0.25, now: 2018-01-27T12:36:33.519
INFO: Knr> advance 0.3, now: 2018-01-27T12:36:33.523
INFO: Knr> advance 0.35, now: 2018-01-27T12:36:33.527
INFO: Knr> advance 0.4, now: 2018-01-27T12:36:33.532
INFO: Knr> advance 0.45, now: 2018-01-27T12:36:33.536
INFO: Knr> advance 0.5, now: 2018-01-27T12:36:33.54
INFO: Knr> advance 0.55, now: 2018-01-27T12:36:33.544
INFO: Knr> advance 0.6, now: 2018-01-27T12:36:33.548
INFO: Knr> advance 0.65, now: 2018-01-27T12:36:33.552
INFO: Knr> advance 0.7, now: 2018-01-27T12:36:33.557
INFO: Knr> advance 0.75, now: 2018-01-27T12:36:33.561
INFO: Knr> advance 0.8, now: 2018-01-27T12:36:33.565
INFO: Knr> advance 0.85, now: 2018-01-27T12:36:33.569
INFO: Knr> advance 0.9, now: 2018-01-27T12:36:33.573
INFO: Knr> advance 0.95, now: 2018-01-27T12:36:33.578
INFO: Knr> advance 1.0, now: 2018-01-27T12:36:33.582
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},HammingDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},HammingDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},HammingDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Knr{Array{Int64,1},HammingDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (HammingDistance(274188), PerformanceResult(0.7809999999999999, 0.00043634176254272463, 231.85))
(dist, p) = (HammingDistance(421171), PerformanceResult(1.0, 1.9366741180419923e-5, 242.83))
[ Info: SimilarReferences tests passed

>>> End of log
