>>> 'Pkg.add("MySQL")' log
[ Info: Cloning cache of DecFP from https://github.com/stevengj/DecFP.jl.git
[ Info: Cloning cache of MySQL from https://github.com/JuliaDatabases/MySQL.jl.git
[ Info: Installing BinDeps v0.8.5
[ Info: Installing DataStreams v0.3.4
[ Info: Installing DecFP v0.4.1
[ Info: Installing Missings v0.2.4
[ Info: Installing MySQL v0.4.0
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing SHA v0.5.3
[ Info: Installing URIParser v0.3.0
[ Info: Installing WeakRefStrings v0.4.1
[ Info: Building DecFP
┌ Error: ------------------------------------------------------------
│ # Build failed for DecFP
│   exception =
│    LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/DecFP/deps/build.jl:1
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ DecFP had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("DecFP")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:648
[ Info: Package database updated

>>> 'Pkg.test("MySQL")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    3905979 s       8700 s     195746 s     730137 s         30 s
       #2  3500 MHz     619211 s        256 s      62426 s    5000179 s          0 s
       
  Memory: 2.93927001953125 GB (1081.0625 MB free)
  Uptime: 57723.0 sec
  Load Avg:  1.03857421875  1.0146484375  0.96533203125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - MySQL                         0.4.0
10 additional packages:
 - BinDeps                       0.8.5
 - Compat                        0.48.0
 - DataStreams                   0.3.4
 - DecFP                         0.4.1
 - Missings                      0.2.4
 - NamedTuples                   4.0.0
 - Nullables                     0.0.3
 - SHA                           0.5.3
 - URIParser                     0.3.0
 - WeakRefStrings                0.4.1
[ Info: Testing MySQL
┌ Warning: `global const` declarations may no longer appear inside functions.
│ Instead, use a non-constant global, or a global `const var = Ref{T}()`.
└ @ nothing DecFP.jl:24
┌ Warning: `global const` declarations may no longer appear inside functions.
│ Instead, use a non-constant global, or a global `const var = Ref{T}()`.
└ @ nothing DecFP.jl:25
┌ Warning: `global const` declarations may no longer appear inside functions.
│ Instead, use a non-constant global, or a global `const var = Ref{T}()`.
└ @ nothing DecFP.jl:29
┌ Warning: `global const` declarations may no longer appear inside functions.
│ Instead, use a non-constant global, or a global `const var = Ref{T}()`.
└ @ nothing DecFP.jl:30
ERROR: LoadError: error compiling _parse: could not load library "/home/vagrant/.julia/v0.7/DecFP/src/../deps/libbid64"
/home/vagrant/.julia/v0.7/DecFP/src/../deps/libbid64.so: cannot open shared object file: No such file or directory
Stacktrace:
 [1] top-level scope at /home/vagrant/.julia/v0.7/DecFP/src/DecFP.jl:100
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1011
 [4] include(::Module, ::String) at ./sysimg.jl:26
 [5] top-level scope
 [6] eval at ./boot.jl:295 [inlined]
 [7] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/DecFP/src/DecFP.jl:100
ERROR: LoadError: LoadError: Failed to precompile DecFP to /home/vagrant/.julia/lib/v0.7/DecFP.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:919
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include at ./sysimg.jl:26 [inlined]
 [8] include(::String) at /home/vagrant/.julia/v0.7/MySQL/src/MySQL.jl:2
 [9] top-level scope
 [10] include at ./boot.jl:292 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:1011
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] top-level scope
 [14] eval at ./boot.jl:295 [inlined]
 [15] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/MySQL/src/api.jl:3
in expression starting at /home/vagrant/.julia/v0.7/MySQL/src/MySQL.jl:23
ERROR: LoadError: Failed to precompile MySQL to /home/vagrant/.julia/lib/v0.7/MySQL.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:324
 [9] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/MySQL/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for MySQL
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/MySQL/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: MySQL had test errors

>>> End of log
