>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of Blosc from https://github.com/stevengj/Blosc.jl.git
INFO: Cloning cache of CMakeWrapper from https://github.com/rdeits/CMakeWrapper.jl.git
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Cloning cache of HDF5 from https://github.com/JuliaIO/HDF5.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Blosc v0.5.0
INFO: Installing CMakeWrapper v0.1.0
INFO: Installing DataStructures v0.8.4
INFO: Installing FileIO v0.9.1
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.9.3
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing Parameters v0.9.1
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building CMakeWrapper
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/downloads
Info: Downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 13 29.2M   13 4176k    0     0  6261k      0  0:00:04 --:--:--  0:00:04 6260k 42 29.2M   42 12.3M    0     0  6570k      0  0:00:04  0:00:01  0:00:03 6569k 87 29.2M   87 25.7M    0     0  9866k      0  0:00:03  0:00:02  0:00:01 9865k100 29.2M  100 29.2M    0     0   9.9M      0  0:00:02  0:00:02 --:--:--  9.9M
Info: Done downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps
Info: Directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/usr/bin
cmake version 3.7.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
INFO: Building Blosc
Info: Downloading https://github.com/stevengj/BloscBuilder/releases/download/v1.14.3+3/Blosc.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Blosc/deps/usr/downloads/Blosc.x86_64-linux-gnu.tar.gz...
[00:29:44] [00:29:44] ######################################################################## 100.0%[00:29:44] ######################################################################## 100.0%[00:29:44] ############################                                              39.1%[00:29:44] ######################################################################## 100.0%
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (890.05078125 MB free)
Uptime: 1736.0 sec
Load Avg:  1.08447265625  1.01953125  0.7412109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz      67228 s        125 s       6001 s      77458 s          3 s
#2  3501 MHz      22627 s         52 s       3731 s     143106 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.17.2
14 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blosc                         0.5.0
 - CMakeWrapper                  0.1.0
 - Compat                        1.0.0
 - DataStructures                0.8.4
 - FileIO                        0.9.1
 - HDF5                          0.9.3
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Nullables                     0.0.6
 - Parameters                    0.9.1
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [0.223123] obj. value: -0.21721907115301572
curgen: 20 value: [0.223123] obj. value: -0.21721907115301572
curgen: 30 value: [0.222145] obj. value: -0.21722641564543507
curgen: 40 value: [0.222607] obj. value: -0.2172334725510113
curgen: 50 value: [0.222607] obj. value: -0.2172334725510113
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222607], -0.2172334725510113) 0.22260745991442493 -0.2172334725510113
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.223809, 0.222362, -0.222309, -0.222978, 0.220692, 0.222465, -0.222578, 0.22252, -0.222656, 0.222029, -0.22188, 0.222062, -0.221682, -0.222337, 0.224768] obj. value: -3.257974279039091
curgen: 100 value: [0.223809, 0.222362, -0.222309, -0.222978, 0.222524, 0.222465, -0.222578, 0.22252, -0.222656, 0.222029, -0.22188, 0.22235, -0.221682, -0.222337, 0.224768] obj. value: -3.2581372313477255
curgen: 150 value: [0.223685, 0.222362, -0.222309, -0.222978, 0.222524, 0.222465, -0.222578, 0.22252, -0.222656, 0.222814, -0.222115, 0.22235, -0.221682, -0.222337, 0.224768] obj. value: -3.2581706417386336
curgen: 200 value: [0.221608, 0.222362, -0.222309, -0.222378, 0.222524, 0.222465, -0.222578, 0.22252, -0.222656, 0.222814, -0.222115, 0.22235, -0.221682, -0.222337, 0.222803] obj. value: -3.2584073511747493
curgen: 250 value: [0.221608, 0.222362, -0.222309, -0.222378, 0.222524, 0.222465, -0.222578, 0.22252, -0.222656, 0.222814, -0.222115, 0.22235, -0.221682, -0.222337, 0.222803] obj. value: -3.2584073511747493
curgen: 300 value: [0.221608, 0.222362, -0.222309, -0.222378, 0.222524, 0.222465, -0.222578, 0.22252, -0.222463, 0.222814, -0.222115, 0.22235, -0.221682, -0.222337, 0.222803] obj. value: -3.2584075384264497
curgen: 350 value: [0.221608, 0.222362, -0.222309, -0.222378, 0.222524, 0.222465, -0.222578, 0.22252, -0.222463, 0.222814, -0.222115, 0.22235, -0.222641, -0.222378, 0.222803] obj. value: -3.258441240807679
curgen: 400 value: [0.222203, 0.222362, -0.222309, -0.222378, 0.222524, 0.222465, -0.222578, 0.222575, -0.222463, 0.222814, -0.222115, 0.22235, -0.222641, -0.222378, 0.22267] obj. value: -3.258477534467512
curgen: 450 value: [0.222878, 0.222362, -0.222309, -0.222675, 0.222524, 0.222465, -0.222578, 0.222575, -0.222463, 0.222692, -0.222115, 0.22235, -0.222641, -0.222378, 0.22267] obj. value: -3.2584807901009043
curgen: 500 value: [0.222486, 0.222362, -0.222309, -0.222675, -0.222541, 0.222465, -0.222578, 0.222575, -0.222463, 0.222692, -0.222115, 0.22235, -0.222641, -0.222378, 0.22267] obj. value: -3.2584854529836114
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222486, 0.222362, -0.222309, -0.222675, -0.222541, 0.222465, -0.222578, 0.222575, -0.222463, 0.222692, -0.222115, 0.22235, -0.222641, -0.222378, 0.22267], -3.2584854529836114) [0.222486, 0.222362, -0.222309, -0.222675, -0.222541, 0.222465, -0.222578, 0.222575, -0.222463, 0.222692, -0.222115, 0.22235, -0.222641, -0.222378, 0.22267] -3.2584854529836114
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.000471442, -0.00162927, 0.00039581, -0.000754515, -0.000589354, -0.00271796, 0.000250527, 0.000665876, 0.00121509, 0.000758861, 0.00069501, -0.000401436, 0.000368616, -0.000501713, 0.00118886] obj. value: 0.003241885492286656
curgen: 100 value: [0.000471442, -0.00162927, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, -0.000562378, 0.00121509, -0.000286437, 0.00069501, -0.000401436, 0.000368616, -0.000501713, 0.00118886] obj. value: 0.002887538872073492
curgen: 150 value: [0.000471442, -0.00162927, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, -0.000562378, 0.000660331, -0.000286437, 0.00069501, 0.000180575, 0.000368616, -0.000501713, 0.00118886] obj. value: 0.0026556307256555556
curgen: 200 value: [0.000471442, -0.00162927, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, -0.000562378, 0.000660331, -0.000286437, 0.00069501, 0.000180575, 0.000368616, -0.000501713, -0.00052094] obj. value: 0.0024290646831843787
curgen: 250 value: [0.000471442, -0.00162927, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, -0.000562378, 0.000660331, -0.000286437, 0.00069501, 0.000180575, 0.000368616, -0.000501713, -0.00052094] obj. value: 0.0024290646831843787
curgen: 300 value: [0.000471442, -0.00102258, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, -0.000562378, -0.000641036, -0.000286437, 0.00069501, 0.000180575, 0.000368616, -0.000501713, -0.00052094] obj. value: 0.002104905084308939
curgen: 350 value: [0.000331259, 0.000343498, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, -0.000562378, 0.000378687, -0.000286437, 0.00069501, 0.000180575, 0.000368616, -0.000501713, -0.00052094] obj. value: 0.0018454639967160347
curgen: 400 value: [0.000331259, 0.000343498, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, -0.000562378, 0.000378687, -0.00016484, 0.00069501, 0.000180575, 0.000368616, -0.000501713, -0.00052094] obj. value: 0.0018345774768420142
curgen: 450 value: [0.000331259, 0.000343498, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, -0.000562378, 0.000378687, -0.00016484, -5.95407e-5, 0.000180575, 0.000368616, -0.000501713, -0.00052094] obj. value: 0.001739449862895981
curgen: 500 value: [0.000331259, 0.000343498, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, 0.000353828, 0.000378687, -0.00016484, -5.95407e-5, 0.000180575, 0.000368616, -0.000501713, -0.00052094] obj. value: 0.001701542261287159
GAFramework.CoordinateCreature{Array{Float64,1}}([0.000331259, 0.000343498, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, 0.000353828, 0.000378687, -0.00016484, -5.95407e-5, 0.000180575, 0.000368616, -0.000501713, -0.00052094], 0.001701542261287159) [0.000331259, 0.000343498, 0.00039581, -0.000754515, -0.000589354, -0.00249442, 0.000250527, 0.000353828, 0.000378687, -0.00016484, -5.95407e-5, 0.000180575, 0.000368616, -0.000501713, -0.00052094] 0.001701542261287159
INFO: GAFramework tests passed

>>> End of log
