>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of Blosc from https://github.com/stevengj/Blosc.jl.git
INFO: Cloning cache of CMakeWrapper from https://github.com/rdeits/CMakeWrapper.jl.git
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Cloning cache of HDF5 from https://github.com/JuliaIO/HDF5.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Blosc v0.5.0
INFO: Installing CMakeWrapper v0.1.0
INFO: Installing DataStructures v0.8.4
INFO: Installing FileIO v0.9.1
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.9.3
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing Parameters v0.9.1
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building CMakeWrapper
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/downloads
Info: Downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 26 29.2M   26 8064k    0     0  8714k      0  0:00:03 --:--:--  0:00:03 8708k 73 29.2M   73 21.6M    0     0  11.2M      0  0:00:02  0:00:01  0:00:01 11.2M100 29.2M  100 29.2M    0     0  11.8M      0  0:00:02  0:00:02 --:--:-- 11.8M
Info: Done downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps
Info: Directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/usr/bin
cmake version 3.7.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
INFO: Building Blosc
Info: Downloading https://github.com/stevengj/BloscBuilder/releases/download/v1.14.3+3/Blosc.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Blosc/deps/usr/downloads/Blosc.x86_64-linux-gnu.tar.gz...
[00:20:21] [00:20:21] ######################################################################## 100.0%[00:20:21] ######################################################################## 100.0%[00:20:21] ##########################                                                37.1%[00:20:21] ######################################################################## 100.0%
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (943.97265625 MB free)
Uptime: 1174.0 sec
Load Avg:  0.94677734375  0.92919921875  0.5908203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz      42148 s         31 s       5380 s      54946 s          3 s
#2  3499 MHz      17957 s        147 s       3468 s      92717 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.17.2
14 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blosc                         0.5.0
 - CMakeWrapper                  0.1.0
 - Compat                        1.0.0
 - DataStructures                0.8.4
 - FileIO                        0.9.1
 - HDF5                          0.9.3
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Nullables                     0.0.6
 - Parameters                    0.9.1
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [0.220155] obj. value: -0.21697638526202867
curgen: 20 value: [0.223656] obj. value: -0.21717964825627759
curgen: 30 value: [0.222863] obj. value: -0.2172292397683332
curgen: 40 value: [0.222417] obj. value: -0.21723286404623993
curgen: 50 value: [0.222417] obj. value: -0.21723286404623993
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222417], -0.21723286404623993) 0.22241684104620893 -0.21723286404623993
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [-0.222273, 0.222655, -0.219085, 0.222815, -0.222987, 0.220297, 0.222846, 0.22087, -0.222535, -0.222961, -0.221247, 0.223954, 0.222718, 0.222035, 0.222967] obj. value: -3.257398909065229
curgen: 100 value: [-0.222298, 0.222655, -0.219085, 0.222815, -0.222987, 0.221399, 0.222846, 0.222502, -0.222535, -0.222961, -0.221247, 0.223654, 0.222718, 0.222035, 0.222967] obj. value: -3.2577268521806335
curgen: 150 value: [-0.222298, 0.222655, -0.225558, 0.222815, -0.222987, 0.222716, 0.222846, 0.222502, -0.222535, -0.222961, -0.221247, 0.222236, 0.222718, 0.2221, 0.222967] obj. value: -3.257985119622441
curgen: 200 value: [-0.222298, 0.222655, -0.221286, 0.222815, -0.222987, 0.222716, 0.222846, 0.222502, -0.222535, -0.222961, -0.221247, 0.222236, 0.222718, 0.222971, 0.222967] obj. value: -3.2583087715358774
curgen: 250 value: [-0.222298, 0.222655, -0.221286, 0.222815, -0.222687, 0.222716, 0.222846, 0.222502, -0.222535, -0.222961, -0.222746, 0.222236, 0.222718, 0.222971, 0.222967] obj. value: -3.2583902413226373
curgen: 300 value: [-0.222298, 0.222655, -0.221897, 0.222815, -0.222687, 0.222421, 0.222846, 0.222502, -0.222535, -0.222961, -0.222746, -0.222694, 0.222718, 0.222273, 0.222967] obj. value: -3.25845097874038
curgen: 350 value: [-0.222298, 0.222655, -0.221897, 0.222815, -0.222687, 0.222421, 0.222846, 0.222502, -0.222535, -0.222961, -0.222746, -0.222694, 0.222718, 0.222273, 0.222967] obj. value: -3.25845097874038
curgen: 400 value: [-0.222298, 0.222655, -0.222159, 0.222815, -0.222687, 0.222421, 0.222846, 0.222502, -0.222535, -0.222961, -0.222746, -0.222694, 0.222718, 0.222273, 0.222967] obj. value: -3.258463083416738
curgen: 450 value: [-0.222298, 0.222655, -0.222282, 0.222815, -0.222607, 0.222421, 0.222846, 0.222502, -0.222535, -0.222961, -0.222746, -0.222694, 0.222718, 0.222273, 0.222967] obj. value: -3.258467368552115
curgen: 500 value: [-0.222298, 0.222655, -0.222282, 0.222815, -0.222607, 0.222421, 0.222846, 0.222502, -0.222535, -0.222961, -0.222746, -0.222694, 0.222718, 0.222273, 0.222828] obj. value: -3.2584716431742486
GAFramework.CoordinateCreature{Array{Float64,1}}([-0.222298, 0.222655, -0.222282, 0.222815, -0.222607, 0.222421, 0.222846, 0.222502, -0.222535, -0.222961, -0.222746, -0.222694, 0.222718, 0.222273, 0.222828], -3.2584716431742486) [-0.222298, 0.222655, -0.222282, 0.222815, -0.222607, 0.222421, 0.222846, 0.222502, -0.222535, -0.222961, -0.222746, -0.222694, 0.222718, 0.222273, 0.222828] -3.2584716431742486
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.00027327, -0.00206352, 0.00106804, 0.000975038, -0.000772273, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.0021215, 0.00122479, -0.000967494, -0.000363029, 0.00288235, -0.0034192] obj. value: 0.0069762956761394435
curgen: 100 value: [0.00027327, -0.00206352, 0.00106804, 0.000975038, -0.000772273, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, -0.00101929, -0.000967494, -0.000363029, 0.00288235, -0.0034192] obj. value: 0.006024547250945034
curgen: 150 value: [0.00027327, -0.00206352, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, -0.00101929, -0.000967494, -0.000363029, 0.00288235, -0.0034192] obj. value: 0.005913116813701436
curgen: 200 value: [0.00027327, -0.00206352, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, -0.00101929, -0.00025683, -0.000363029, 0.00288235, 0.0024564] obj. value: 0.004618254692076107
curgen: 250 value: [0.00027327, -0.00113236, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, -0.00101929, -7.7263e-6, -0.000363029, 8.78149e-5, -0.0020804] obj. value: 0.002029738125173708
curgen: 300 value: [0.00027327, 3.48789e-5, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, -0.00101929, -7.7263e-6, -0.000363029, 8.78149e-5, -0.0020804] obj. value: 0.0017755966529193756
curgen: 350 value: [0.00027327, 3.48789e-5, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, -0.00101929, -7.7263e-6, -0.000363029, 8.78149e-5, -0.0020804] obj. value: 0.0017755966529193756
curgen: 400 value: [0.00027327, 3.48789e-5, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, -0.00101929, -7.7263e-6, -0.000363029, 8.78149e-5, 0.00161769] obj. value: 0.00143612524422565
curgen: 450 value: [0.00027327, 3.48789e-5, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, 0.000592897, -7.7263e-6, -0.000363029, 8.78149e-5, 0.00161769] obj. value: 0.001299746575938343
curgen: 500 value: [0.00027327, 3.48789e-5, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, 0.000592897, -7.7263e-6, -0.000363029, 8.78149e-5, -4.1884e-5] obj. value: 0.0007809225027983757
GAFramework.CoordinateCreature{Array{Float64,1}}([0.00027327, 3.48789e-5, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, 0.000592897, -7.7263e-6, -0.000363029, 8.78149e-5, -4.1884e-5], 0.0007809225027983757) [0.00027327, 3.48789e-5, 0.00106804, 0.000975038, 0.000186378, -7.96541e-5, 2.35314e-5, 0.000416902, 0.000946649, -0.000405637, 0.000592897, -7.7263e-6, -0.000363029, 8.78149e-5, -4.1884e-5] 0.0007809225027983757
INFO: GAFramework tests passed

>>> End of log
