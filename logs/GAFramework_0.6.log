>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of Blosc from https://github.com/stevengj/Blosc.jl.git
INFO: Cloning cache of CMakeWrapper from https://github.com/rdeits/CMakeWrapper.jl.git
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Cloning cache of HDF5 from https://github.com/JuliaIO/HDF5.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Blosc v0.5.0
INFO: Installing CMakeWrapper v0.1.0
INFO: Installing DataStructures v0.8.4
INFO: Installing FileIO v0.9.1
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.9.3
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing Parameters v0.9.1
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building CMakeWrapper
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/downloads
Info: Downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 30 29.2M   30 9184k    0     0  10.3M      0  0:00:02 --:--:--  0:00:02 10.3M 77 29.2M   77 22.8M    0     0  12.2M      0  0:00:02  0:00:01  0:00:01 12.2M100 29.2M  100 29.2M    0     0  12.5M      0  0:00:02  0:00:02 --:--:-- 12.5M
Info: Done downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps
Info: Directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/usr/bin
cmake version 3.7.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
INFO: Building Blosc
Info: Downloading https://github.com/stevengj/BloscBuilder/releases/download/v1.14.3+3/Blosc.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Blosc/deps/usr/downloads/Blosc.x86_64-linux-gnu.tar.gz...
[00:28:48] [00:28:48] ######################################################################## 100.0%[00:28:48] ######################################################################## 100.0%[00:28:48] ##########################                                                37.1%[00:28:48] ######################################################################## 100.0%
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (928.7890625 MB free)
Uptime: 1672.0 sec
Load Avg:  0.9384765625  0.96142578125  0.69287109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz      73513 s         23 s       5836 s      68014 s          2 s
#2  3502 MHz      14436 s        153 s       3236 s     146896 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.17.2
14 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blosc                         0.5.0
 - CMakeWrapper                  0.1.0
 - Compat                        1.0.0
 - DataStructures                0.8.4
 - FileIO                        0.9.1
 - HDF5                          0.9.3
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Nullables                     0.0.6
 - Parameters                    0.9.1
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [-0.22323] obj. value: -0.21721312542771334
curgen: 20 value: [-0.222427] obj. value: -0.21723298217334816
curgen: 30 value: [-0.222427] obj. value: -0.21723298217334816
curgen: 40 value: [-0.222427] obj. value: -0.21723298217334816
curgen: 50 value: [-0.222427] obj. value: -0.21723298217334816
GAFramework.CoordinateCreature{Array{Float64,1}}([-0.222427], -0.21723298217334816) -0.2224274128105947 -0.21723298217334816
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [-0.222239, 0.223009, -0.221419, 0.221176, -0.221984, -0.222248, -0.22332, 0.222525, -0.221466, 0.222259, -0.222183, 0.223346, 0.223566, -0.22234, 0.222246] obj. value: -3.2581640668334466
curgen: 100 value: [-0.222239, 0.223009, -0.221935, 0.221176, -0.222725, -0.222248, -0.22332, 0.222525, 0.22235, 0.222259, -0.222183, 0.223346, 0.223566, -0.22234, 0.222246] obj. value: -3.2582674436190535
curgen: 150 value: [-0.222239, 0.223009, -0.221935, 0.223453, -0.222725, -0.222248, -0.223076, 0.222525, 0.22235, 0.222259, -0.222183, 0.223346, 0.222796, -0.22234, 0.222246] obj. value: -3.2583722687139614
curgen: 200 value: [-0.222239, 0.222937, -0.221935, 0.223185, -0.222725, -0.222248, -0.223076, 0.222525, 0.22235, 0.222259, -0.222183, 0.223346, 0.222796, -0.22234, 0.222246] obj. value: -3.2583930972307775
curgen: 250 value: [-0.222239, 0.222937, -0.221935, -0.222596, -0.222725, -0.222248, -0.223076, 0.222525, 0.22235, 0.222259, -0.222183, 0.223346, 0.222796, -0.222704, 0.222246] obj. value: -3.258411755812011
curgen: 300 value: [-0.222239, 0.222937, -0.221935, -0.222596, -0.222725, -0.222248, -0.223076, 0.222525, 0.222407, 0.222259, -0.222183, 0.222607, 0.222796, -0.222535, 0.222246] obj. value: -3.2584415651329084
curgen: 350 value: [-0.222239, 0.222937, -0.221935, -0.222596, -0.222725, -0.222248, -0.223076, 0.222525, 0.222407, 0.222259, -0.222183, 0.222607, 0.222796, -0.222535, 0.222246] obj. value: -3.2584415651329084
curgen: 400 value: [-0.222239, 0.222937, -0.221935, -0.222596, -0.222725, -0.222248, -0.223076, 0.222525, 0.222407, 0.222259, -0.222782, 0.222607, 0.222796, -0.222535, 0.222246] obj. value: -3.258445073176192
curgen: 450 value: [-0.222239, 0.222236, -0.222217, -0.222596, -0.222725, -0.222248, -0.223076, 0.222525, 0.222407, 0.222608, 0.22236, 0.222607, 0.222796, -0.222535, 0.222246] obj. value: -3.2584636468169044
curgen: 500 value: [-0.222239, 0.222236, -0.222217, -0.222596, -0.222725, -0.222829, -0.222931, 0.222525, 0.222407, 0.222608, 0.22236, 0.222607, 0.222796, -0.222535, 0.222246] obj. value: -3.2584699881896255
GAFramework.CoordinateCreature{Array{Float64,1}}([-0.222239, 0.222236, -0.222217, -0.222596, -0.222725, -0.222829, -0.222931, 0.222525, 0.222407, 0.222608, 0.22236, 0.222607, 0.222796, -0.222535, 0.222246], -3.2584699881896255) [-0.222239, 0.222236, -0.222217, -0.222596, -0.222725, -0.222829, -0.222931, 0.222525, 0.222407, 0.222608, 0.22236, 0.222607, 0.222796, -0.222535, 0.222246] -3.2584699881896255
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.000127888, 0.000433441, 0.000805881, 0.00111063, -0.000709526, -0.000596905, -0.000731844, -0.00135913, 0.000404296, -0.000703268, 0.0019034, -0.00112699, 0.000597917, 0.000434847, 0.000273427] obj. value: 0.0022819258370532225
curgen: 100 value: [0.000127888, 0.000433441, 0.000350894, 0.00111063, -0.000709523, -0.000596905, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, 0.000597917, 0.000434847, 0.000273427] obj. value: 0.0021239106399661978
curgen: 150 value: [0.000127888, 0.000433441, 0.000350894, 0.00111063, -0.000709523, -0.000596905, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, 0.000597917, 0.000434847, 0.000273427] obj. value: 0.0021239106399661978
curgen: 200 value: [0.000127888, 0.000433441, 0.000350894, -5.00483e-5, -0.000709523, -0.000596905, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, 0.000597917, 0.000212313, 0.000273427] obj. value: 0.00185112095812201
curgen: 250 value: [0.000127888, 0.000433441, -0.000134499, -5.00483e-5, -0.000709523, 0.000581162, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, 0.000597917, 0.000212313, 0.000273427] obj. value: 0.001826603257853776
curgen: 300 value: [0.000127888, 0.000433441, -0.000134499, -5.00483e-5, -0.000709523, 0.000581162, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, 0.000597917, 0.000212313, 0.000273427] obj. value: 0.001826603257853776
curgen: 350 value: [0.000127888, 0.000433441, -0.000134499, -5.00483e-5, -0.000709523, 0.000581162, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, 0.000597917, 0.000212313, 0.000273427] obj. value: 0.001826603257853776
curgen: 400 value: [0.000127888, 0.000433441, -0.000134499, -5.00483e-5, -0.000709523, 0.000581162, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, -0.000474441, 0.000212313, 0.000141206] obj. value: 0.0017894575476304908
curgen: 450 value: [0.000127888, 0.000433441, -0.000134499, -5.00483e-5, -0.000709523, 0.000581162, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, -0.000474441, 0.000212313, 0.000141206] obj. value: 0.0017894575476304908
curgen: 500 value: [0.000127888, 0.000433441, -0.000134499, -5.00483e-5, -0.000709523, 0.000581162, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, -0.000474441, 0.000212313, 0.000141206] obj. value: 0.0017894575476304908
GAFramework.CoordinateCreature{Array{Float64,1}}([0.000127888, 0.000433441, -0.000134499, -5.00483e-5, -0.000709523, 0.000581162, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, -0.000474441, 0.000212313, 0.000141206], 0.0017894575476304908) [0.000127888, 0.000433441, -0.000134499, -5.00483e-5, -0.000709523, 0.000581162, -0.000690319, -0.00135913, 0.000402268, -0.000703268, -0.00184756, -0.00112699, -0.000474441, 0.000212313, 0.000141206] 0.0017894575476304908
INFO: GAFramework tests passed

>>> End of log
