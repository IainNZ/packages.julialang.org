>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of Blosc from https://github.com/stevengj/Blosc.jl.git
INFO: Cloning cache of CMakeWrapper from https://github.com/rdeits/CMakeWrapper.jl.git
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Cloning cache of HDF5 from https://github.com/JuliaIO/HDF5.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Blosc v0.5.0
INFO: Installing CMakeWrapper v0.1.0
INFO: Installing DataStructures v0.8.3
INFO: Installing FileIO v0.9.1
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.9.3
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing Parameters v0.9.0
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building CMakeWrapper
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/downloads
Info: Downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 11 29.2M   11 3424k    0     0  7278k      0  0:00:04 --:--:--  0:00:04 7269k 49 29.2M   49 14.4M    0     0   9.8M      0  0:00:02  0:00:01  0:00:01  9.8M 89 29.2M   89 26.2M    0     0  10.6M      0  0:00:02  0:00:02 --:--:-- 10.6M100 29.2M  100 29.2M    0     0  10.8M      0  0:00:02  0:00:02 --:--:-- 10.8M
Info: Done downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps
Info: Directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/usr/bin
cmake version 3.7.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
INFO: Building Blosc
Info: Downloading https://github.com/stevengj/BloscBuilder/releases/download/v1.14.3+3/Blosc.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Blosc/deps/usr/downloads/Blosc.x86_64-linux-gnu.tar.gz...
[00:29:25] [00:29:25] ######################################################################## 100.0%[00:29:26] ######################################################################## 100.0%[00:29:26] #################                                                         24.7%[00:29:26] ######################################################################## 100.0%
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1114.04296875 MB free)
Uptime: 1711.0 sec
Load Avg:  0.796875  0.8916015625  0.69189453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz      79926 s         57 s       5460 s      66052 s          2 s
#2  3499 MHz      13052 s        112 s       3144 s     152019 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.17.2
14 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blosc                         0.5.0
 - CMakeWrapper                  0.1.0
 - Compat                        0.69.0
 - DataStructures                0.8.3
 - FileIO                        0.9.1
 - HDF5                          0.9.3
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Nullables                     0.0.5
 - Parameters                    0.9.0
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [0.223069] obj. value: -0.21722166863516745
curgen: 20 value: [0.223069] obj. value: -0.21722166863516745
curgen: 30 value: [0.222917] obj. value: -0.21722762349619232
curgen: 40 value: [0.222917] obj. value: -0.21722762349619232
curgen: 50 value: [0.222778] obj. value: -0.21723128829982258
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222778], -0.21723128829982258) 0.2227781959613508 -0.21723128829982258
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.222782, 0.222155, 0.222857, 0.220537, 0.226446, -0.2214, -0.222933, 0.222736, 0.222003, 0.223035, 0.222358, 0.221152, 0.222967, 0.22359, -0.223002] obj. value: -3.257409033015731
curgen: 100 value: [0.222782, 0.222155, 0.222379, 0.22306, -0.223774, -0.222703, -0.222933, 0.222736, 0.222003, 0.222266, 0.222358, 0.221449, 0.222967, -0.222195, -0.223002] obj. value: -3.2583126330484937
curgen: 150 value: [0.222782, 0.222155, 0.222379, 0.22306, -0.222385, -0.222703, -0.222933, 0.222736, 0.222003, 0.222266, 0.222358, 0.222954, 0.222967, -0.222195, -0.223002] obj. value: -3.2584240436210767
curgen: 200 value: [0.222782, 0.222155, 0.222379, 0.22306, -0.222385, -0.222703, 0.222256, 0.222736, 0.222003, 0.222618, 0.222358, 0.222954, 0.222967, -0.222195, -0.223002] obj. value: -3.258430103628395
curgen: 250 value: [0.222782, 0.222155, 0.222379, 0.222643, -0.222385, -0.222703, 0.222489, 0.222736, 0.222003, 0.222618, 0.222358, 0.222954, 0.222967, -0.222195, -0.223002] obj. value: -3.2584448787363764
curgen: 300 value: [0.222782, 0.222494, 0.222379, 0.222643, -0.222385, -0.222703, 0.222489, 0.222736, 0.222003, 0.222618, 0.222358, 0.222554, 0.222967, -0.222195, -0.223002] obj. value: -3.2584588724926085
curgen: 350 value: [0.222782, 0.222494, 0.222379, 0.222643, -0.222385, -0.222703, 0.222489, 0.222736, 0.223075, 0.222618, 0.222358, 0.222554, -0.222579, -0.222195, -0.223002] obj. value: -3.2584675177205287
curgen: 400 value: [0.222782, 0.222494, 0.222379, 0.222643, -0.222385, -0.222703, 0.222489, 0.222736, 0.223075, 0.222618, 0.222358, 0.222554, -0.222579, -0.222195, -0.223002] obj. value: -3.2584675177205287
curgen: 450 value: [0.222782, 0.222494, 0.222379, 0.222643, -0.222385, -0.222703, 0.222489, 0.222736, 0.223075, 0.222618, 0.222358, 0.222554, -0.222579, -0.222195, -0.223002] obj. value: -3.2584675177205287
curgen: 500 value: [0.222782, 0.222494, 0.222379, 0.222643, -0.222385, -0.222703, 0.222489, 0.222736, 0.223075, 0.222618, 0.222358, 0.222554, -0.222579, -0.222195, -0.2227] obj. value: -3.2584755735085125
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222782, 0.222494, 0.222379, 0.222643, -0.222385, -0.222703, 0.222489, 0.222736, 0.223075, 0.222618, 0.222358, 0.222554, -0.222579, -0.222195, -0.2227], -3.2584755735085125) [0.222782, 0.222494, 0.222379, 0.222643, -0.222385, -0.222703, 0.222489, 0.222736, 0.223075, 0.222618, 0.222358, 0.222554, -0.222579, -0.222195, -0.2227] -3.2584755735085125
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.000562393, 0.00129676, -0.00067297, -7.88943e-5, 5.75806e-5, 0.00066565, 0.000645462, -0.00217237, -0.000129405, -0.000448183, 0.00163559, 0.000323502, 0.000193834, -0.000971199, -0.000527805] obj. value: 0.0024394037637023303
curgen: 100 value: [0.000562393, 0.00129676, -0.00067297, -7.88943e-5, 5.75806e-5, 0.00066565, 0.000645462, 0.00115856, -0.000129405, -0.000448183, 0.00163559, 0.000323502, 0.000193834, -0.000971199, -0.000527805] obj. value: 0.0017694614446099877
curgen: 150 value: [0.000562393, 0.00112181, -0.00067297, -7.88943e-5, 5.75806e-5, 0.00066565, 0.000645462, 0.00115856, -0.000129405, -0.000448183, 0.00163559, 0.000323502, 0.000193834, -0.000971199, -0.000527805] obj. value: 0.001685520076392777
curgen: 200 value: [0.000562393, 0.00112181, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.00066565, 0.000645462, 0.00115856, -0.000129405, -0.000448183, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000448324] obj. value: 0.0015817187313871273
curgen: 250 value: [0.000562393, 0.00112181, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.00066565, 0.000645462, 0.00115856, -0.000129405, -0.000448183, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000448324] obj. value: 0.0015817187313871273
curgen: 300 value: [0.000562393, -0.000787734, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.00066565, 0.000645462, 0.00115856, -0.000129405, -0.000448183, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000362099] obj. value: 0.0014412939897852084
curgen: 350 value: [0.000562393, -0.000787734, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.000360738, -6.52794e-5, -0.000106773, -0.000129405, 0.000199697, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000362099] obj. value: 0.001001428803760973
curgen: 400 value: [0.000562393, -0.000564382, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.000360738, -6.52794e-5, -0.000106773, -0.000129405, 0.000199697, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000362099] obj. value: 0.0009415149297637981
curgen: 450 value: [0.000562393, -0.000564382, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.000360738, -6.52794e-5, -0.000106773, -0.000129405, 0.000199697, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000362099] obj. value: 0.0009415149297637981
curgen: 500 value: [0.000562393, -0.000564382, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.000360738, -6.52794e-5, -0.000106773, -0.000129405, 0.000199697, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000362099] obj. value: 0.0009415149297637981
GAFramework.CoordinateCreature{Array{Float64,1}}([0.000562393, -0.000564382, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.000360738, -6.52794e-5, -0.000106773, -0.000129405, 0.000199697, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000362099], 0.0009415149297637981) [0.000562393, -0.000564382, -8.51969e-5, -7.88943e-5, 5.75806e-5, 0.000360738, -6.52794e-5, -0.000106773, -0.000129405, 0.000199697, 0.00163559, 0.000323502, 0.000193834, -0.000971199, 0.000362099] 0.0009415149297637981
INFO: GAFramework tests passed

>>> End of log
