>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.3.0
INFO: Installing FileIO v0.6.0
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.8.8
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing SHA v0.5.2
INFO: Installing URIParser v0.2.0
INFO: Building Blosc
INFO: Building HDF5
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/HDF5/deps/build.jl:40
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GAFramework
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (882.07421875 MB free)
Uptime: 74234.0 sec
Load Avg:  0.99462890625  0.98486328125  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4882680 s       6681 s     219317 s    1146676 s         50 s
#2  3499 MHz    1195855 s         94 s     132977 s    5933522 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.16.1
9 additional packages:
 - BinDeps                       0.6.0
 - Blosc                         0.3.0
 - Compat                        0.37.0
 - FileIO                        0.6.0
 - HDF5                          0.8.8
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - SHA                           0.5.2
 - URIParser                     0.2.0
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [0.222775] obj. value: -0.21723136005171664
curgen: 20 value: [0.222775] obj. value: -0.21723136005171664
curgen: 30 value: [0.222775] obj. value: -0.21723136005171664
curgen: 40 value: [0.22264] obj. value: -0.21723325314652311
curgen: 50 value: [0.22264] obj. value: -0.21723325314652311
GAFramework.CoordinateCreature{Array{Float64,1}}([0.22264], -0.21723325314652311) 0.2226402187436765 -0.21723325314652311
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.222771, 0.221781, 0.221339, -0.225522, -0.223278, -0.222262, 0.22112, 0.222571, -0.221424, 0.223319, 0.222132, 0.222715, -0.22252, 0.222738, -0.221822] obj. value: -3.2577914616730412
curgen: 100 value: [0.222771, 0.221781, 0.221339, 0.222009, -0.223278, -0.222262, 0.221204, 0.222571, -0.221424, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.221822] obj. value: -3.258206173406014
curgen: 150 value: [0.222771, 0.221781, 0.221339, 0.222009, -0.223278, -0.222509, 0.222377, 0.222571, -0.221424, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.221822] obj. value: -3.2582891128046585
curgen: 200 value: [0.222771, 0.222537, 0.221339, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.221424, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.221847] obj. value: -3.258347025619933
curgen: 250 value: [0.222771, 0.222537, 0.221401, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.222447, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.222136] obj. value: -3.2584237829723177
curgen: 300 value: [0.222771, 0.222537, 0.221401, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.222447, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.222136] obj. value: -3.2584237829723177
curgen: 350 value: [0.222771, 0.222537, 0.221401, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.222447, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.222136] obj. value: -3.2584237829723177
curgen: 400 value: [0.222771, 0.222537, 0.221401, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.222447, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.222136] obj. value: -3.2584237829723177
curgen: 450 value: [0.222771, 0.222537, 0.221401, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.222447, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.222136] obj. value: -3.2584237829723177
curgen: 500 value: [0.222771, 0.222537, -0.223188, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.222447, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.222136] obj. value: -3.2584643686722035
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222771, 0.222537, -0.223188, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.222447, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.222136], -3.2584643686722035) [0.222771, 0.222537, -0.223188, 0.222762, -0.222239, -0.222509, 0.222377, 0.222571, -0.222447, 0.222513, 0.22232, 0.22261, -0.22252, 0.222738, -0.222136] -3.2584643686722035
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.000145919, 0.00110565, -0.000957459, -8.41389e-5, -0.00176659, 0.00132234, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.00119562, 0.00120046, 0.000464387, -0.000487977] obj. value: 0.0021460545341369652
curgen: 100 value: [0.000145919, 0.00110565, -0.000957459, -8.41389e-5, 0.000464583, 0.00132234, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.00119562, 0.00120046, 0.000464387, -0.000487977] obj. value: 0.001569731104495986
curgen: 150 value: [0.000145919, 0.00110565, -0.000957459, -8.41389e-5, 0.000464583, 0.00132234, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.00119562, 0.00120046, 0.000464387, -0.000487977] obj. value: 0.001569731104495986
curgen: 200 value: [0.000145919, 0.00110565, -0.000389712, -8.41389e-5, 0.000464583, 0.00132234, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.00119562, 0.00120046, 0.000464387, -0.000487977] obj. value: 0.001417990928814561
curgen: 250 value: [0.000145919, 0.00110565, -0.000389712, -8.41389e-5, 0.000464583, 9.23472e-5, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.00119562, 0.00120046, 0.000464387, -0.000487977] obj. value: 0.0010727799624419276
curgen: 300 value: [0.000145919, 0.00110565, -0.000389712, -8.41389e-5, 0.000464583, 9.23472e-5, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.000519177, 0.00120046, 0.000464387, -0.000487977] obj. value: 0.0008426528700056224
curgen: 350 value: [0.000145919, 0.00110565, -0.000389712, -8.41389e-5, 0.000464583, 9.23472e-5, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.000519177, 0.000194241, 0.000464387, -0.000487977] obj. value: 0.0005642345470846521
curgen: 400 value: [0.000145919, 0.00110565, -0.000389712, -8.41389e-5, 0.000464583, 9.23472e-5, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.000519177, 0.000194241, 0.000464387, -0.000487977] obj. value: 0.0005642345470846521
curgen: 450 value: [0.000145919, 0.000828993, -0.000389712, -8.41389e-5, 0.000464583, 9.23472e-5, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.000519177, 0.000194241, 0.000464387, -0.000487977] obj. value: 0.0004580486910867876
curgen: 500 value: [0.000145919, 0.000828993, -0.000389712, -8.41389e-5, 0.000464583, 9.23472e-5, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.000519177, 0.000194241, 0.000464387, -0.000487977] obj. value: 0.0004580486910867876
GAFramework.CoordinateCreature{Array{Float64,1}}([0.000145919, 0.000828993, -0.000389712, -8.41389e-5, 0.000464583, 9.23472e-5, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.000519177, 0.000194241, 0.000464387, -0.000487977], 0.0004580486910867876) [0.000145919, 0.000828993, -0.000389712, -8.41389e-5, 0.000464583, 9.23472e-5, 3.43631e-5, 0.000239583, -0.000426673, -9.42123e-5, 0.000454321, -0.000519177, 0.000194241, 0.000464387, -0.000487977] 0.0004580486910867876
INFO: GAFramework tests passed

>>> End of log
