>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of Blosc from https://github.com/stevengj/Blosc.jl.git
INFO: Cloning cache of CMakeWrapper from https://github.com/rdeits/CMakeWrapper.jl.git
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Cloning cache of HDF5 from https://github.com/JuliaIO/HDF5.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Blosc v0.5.0
INFO: Installing CMakeWrapper v0.1.0
INFO: Installing DataStructures v0.8.4
INFO: Installing FileIO v0.9.1
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.9.3
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing Parameters v0.9.0
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building CMakeWrapper
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/downloads
Info: Downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 18 29.2M   18 5648k    0     0  9089k      0  0:00:03 --:--:--  0:00:03 9080k 66 29.2M   66 19.3M    0     0  11.9M      0  0:00:02  0:00:01  0:00:01 11.9M100 29.2M  100 29.2M    0     0  12.4M      0  0:00:02  0:00:02 --:--:-- 12.4M
Info: Done downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps
Info: Directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/usr/bin
cmake version 3.7.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
INFO: Building Blosc
Info: Downloading https://github.com/stevengj/BloscBuilder/releases/download/v1.14.3+3/Blosc.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Blosc/deps/usr/downloads/Blosc.x86_64-linux-gnu.tar.gz...
[00:25:54] [00:25:54] ######################################################################## 100.0%[00:25:54] ######################################################################## 100.0%[00:25:54] ########                                                                  12.2%[00:25:54] ######################################################################## 100.0%
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (937.67578125 MB free)
Uptime: 1500.0 sec
Load Avg:  0.87548828125  0.9765625  0.74658203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      71756 s        106 s       5984 s      52541 s          2 s
#2  3500 MHz      17028 s         44 s       3544 s     126350 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.17.2
14 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blosc                         0.5.0
 - CMakeWrapper                  0.1.0
 - Compat                        0.70.0
 - DataStructures                0.8.4
 - FileIO                        0.9.1
 - HDF5                          0.9.3
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Nullables                     0.0.6
 - Parameters                    0.9.0
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [-0.224396] obj. value: -0.21708406021694415
curgen: 20 value: [-0.223936] obj. value: -0.2171490567187655
curgen: 30 value: [-0.221238] obj. value: -0.2171570222328281
curgen: 40 value: [-0.222821] obj. value: -0.21723033570285022
curgen: 50 value: [-0.222821] obj. value: -0.21723033570285022
GAFramework.CoordinateCreature{Array{Float64,1}}([-0.222821], -0.21723033570285022) -0.22282106770219148 -0.21723033570285022
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [-0.222668, 0.223573, -0.222253, 0.224283, -0.223904, 0.222816, -0.222099, 0.224708, -0.222176, 0.221295, -0.221487, -0.22372, 0.224282, 0.226589, 0.2223] obj. value: -3.256998322311042
curgen: 100 value: [-0.222668, 0.222754, -0.222253, 0.224283, -0.223904, 0.222816, -0.222099, 0.224708, -0.222176, 0.221295, -0.221487, -0.22372, -0.224052, 0.223985, 0.2223] obj. value: -3.2576900029967844
curgen: 150 value: [-0.222668, 0.222754, -0.222253, 0.224283, -0.223698, 0.222816, -0.222099, 0.224352, -0.222176, 0.221831, -0.221487, -0.22372, -0.221599, 0.223985, 0.2223] obj. value: -3.2578802549031165
curgen: 200 value: [-0.222668, 0.222754, -0.222603, 0.223859, -0.223698, 0.222816, -0.222099, 0.222291, -0.222176, 0.222837, -0.222097, -0.22372, -0.221599, 0.223985, 0.2223] obj. value: -3.258140394992516
curgen: 250 value: [-0.222668, 0.222754, -0.222603, 0.223859, -0.223698, 0.222816, -0.222099, 0.222291, -0.222176, 0.222837, -0.222296, -0.22245, -0.22239, 0.221492, 0.2223] obj. value: -3.2582865295919787
curgen: 300 value: [-0.222668, 0.222754, -0.222603, 0.223576, -0.222175, 0.222816, -0.222099, 0.222291, -0.222176, 0.222837, -0.222296, -0.22245, -0.22239, 0.221492, 0.2223] obj. value: -3.2583674406460115
curgen: 350 value: [-0.222668, 0.222754, -0.222603, 0.223576, -0.222329, 0.222816, -0.222099, 0.222291, -0.222914, 0.222837, -0.222296, -0.22245, -0.22239, 0.22222, 0.2223] obj. value: -3.258416613300717
curgen: 400 value: [-0.222668, 0.222754, -0.222603, 0.223576, -0.222479, 0.222816, -0.222099, 0.222291, -0.222914, 0.222837, -0.222296, -0.22245, -0.22239, 0.22222, 0.2223] obj. value: -3.2584185344858407
curgen: 450 value: [-0.222668, 0.222754, -0.222603, 0.223576, -0.222479, 0.222816, -0.222099, 0.222291, -0.222914, 0.222837, -0.222296, -0.22245, -0.22239, 0.22222, 0.222698] obj. value: -3.258420264635484
curgen: 500 value: [-0.222668, 0.222754, -0.222603, 0.223576, -0.222479, 0.222816, -0.222099, 0.222291, -0.222914, 0.222671, -0.222798, -0.22245, -0.22239, 0.22222, 0.222698] obj. value: -3.258423338184911
GAFramework.CoordinateCreature{Array{Float64,1}}([-0.222668, 0.222754, -0.222603, 0.223576, -0.222479, 0.222816, -0.222099, 0.222291, -0.222914, 0.222671, -0.222798, -0.22245, -0.22239, 0.22222, 0.222698], -3.258423338184911) [-0.222668, 0.222754, -0.222603, 0.223576, -0.222479, 0.222816, -0.222099, 0.222291, -0.222914, 0.222671, -0.222798, -0.22245, -0.22239, 0.22222, 0.222698] -3.258423338184911
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.00307128, -0.000195265, 0.000771818, -0.00301318, -0.00100696, 0.00466148, 0.00123584, -0.00080089, 0.00101929, 0.000664876, -0.00214366, 0.000353686, 0.000201236, -0.00139213, 0.00176584] obj. value: 0.010981755952400363
curgen: 100 value: [0.00307128, -0.000195265, 0.000771818, -0.00301318, -0.00100696, -0.00154995, 0.00123584, -0.000723357, 0.00101929, 0.000664876, 0.00156815, 0.000353686, 0.000201236, -0.000262067, 0.00176584] obj. value: 0.00632963711510115
curgen: 150 value: [0.00307128, -0.000195265, 0.000287573, -0.00152719, -0.00100696, 0.000224381, 0.00123584, 0.000414142, 0.00101929, 0.000664876, 0.00156815, 0.000353686, 0.000201236, -0.000262067, -0.0011918] obj. value: 0.0040161423931408535
curgen: 200 value: [0.00117, 0.000146048, 0.000128055, -0.00152719, -0.00100696, 0.000224381, 0.00123584, 0.000414142, 0.00101929, 0.000664876, 0.00156815, 0.000353686, 0.000201236, -0.000262067, -0.0011918] obj. value: 0.002399906484697567
curgen: 250 value: [0.00117, 0.000146048, 0.000128055, -0.00152719, -0.00100696, 0.000224381, 0.00123584, 0.000414142, 0.00101929, 0.000664876, 0.00156815, 0.000353686, 0.000201236, -0.000262067, -0.0011918] obj. value: 0.002399906484697567
curgen: 300 value: [0.00117, 0.000146048, 0.000128055, 0.000717057, -0.00100696, 0.000224381, 0.00123584, 0.000414142, -0.000836191, 0.000236586, 0.00156815, 0.000353686, 0.000201236, -0.000262067, -0.0011918] obj. value: 0.0018952092156894196
curgen: 350 value: [0.00117, 0.000146048, 0.000128055, 0.000717057, -0.00100696, 0.000224381, 0.00123584, 0.000414142, -0.000836191, 0.000236586, 0.00156815, 0.000353686, 0.000201236, -0.000262067, -0.0011918] obj. value: 0.0018952092156894196
curgen: 400 value: [0.00117, 0.000146048, 0.000128055, 0.000717057, -0.00100696, 0.000224381, 0.00123584, 0.000414142, -0.000836191, 0.000236586, 0.000524248, 0.000353686, 0.000201236, -0.000262067, -0.0011918] obj. value: 0.0014618711046523458
curgen: 450 value: [0.00117, 0.000146048, 0.000128055, 0.000717057, -0.00100696, 0.000224381, -0.000155713, 0.000414142, -0.000836191, 0.000236586, 0.000524248, 0.000353686, 0.000201236, -0.000262067, -0.0011918] obj. value: 0.0011636765243849823
curgen: 500 value: [0.00117, 0.000146048, 0.000128055, 0.000717057, -0.00100696, 0.000224381, 3.62916e-5, 0.000414142, -0.000836191, 0.000236586, 0.000524248, 0.000353686, 0.000201236, -0.000262067, -0.0011918] obj. value: 0.001159127507435187
GAFramework.CoordinateCreature{Array{Float64,1}}([0.00117, 0.000146048, 0.000128055, 0.000717057, -0.00100696, 0.000224381, 3.62916e-5, 0.000414142, -0.000836191, 0.000236586, 0.000524248, 0.000353686, 0.000201236, -0.000262067, -0.0011918], 0.001159127507435187) [0.00117, 0.000146048, 0.000128055, 0.000717057, -0.00100696, 0.000224381, 3.62916e-5, 0.000414142, -0.000836191, 0.000236586, 0.000524248, 0.000353686, 0.000201236, -0.000262067, -0.0011918] 0.001159127507435187
INFO: GAFramework tests passed

>>> End of log
