>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of Blosc from https://github.com/stevengj/Blosc.jl.git
INFO: Cloning cache of CMakeWrapper from https://github.com/rdeits/CMakeWrapper.jl.git
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Cloning cache of HDF5 from https://github.com/JuliaIO/HDF5.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.2
INFO: Installing Blosc v0.5.0
INFO: Installing CMakeWrapper v0.1.0
INFO: Installing DataStructures v0.8.3
INFO: Installing FileIO v0.9.1
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.9.2
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing Parameters v0.9.0
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building CMakeWrapper
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/downloads
Info: Downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 24 29.2M   24 7328k    0     0  9358k      0  0:00:03 --:--:--  0:00:03 9358k 69 29.2M   69 20.2M    0     0  11.3M      0  0:00:02  0:00:01  0:00:01 11.3M100 29.2M  100 29.2M    0     0  11.7M      0  0:00:02  0:00:02 --:--:-- 11.7M
Info: Done downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps
Info: Directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/usr/bin
cmake version 3.7.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
INFO: Building Blosc
Info: Downloading https://github.com/stevengj/BloscBuilder/releases/download/v1.14.3+3/Blosc.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Blosc/deps/usr/downloads/Blosc.x86_64-linux-gnu.tar.gz...
[00:30:59] [00:30:59] ######################################################################## 100.0%[00:31:00] ######################################################################## 100.0%[00:31:00] ############################                                              39.1%[00:31:00] ######################################################################## 100.0%
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1110.50390625 MB free)
Uptime: 1800.0 sec
Load Avg:  0.76171875  0.89794921875  0.7099609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3510 MHz      88737 s        110 s       6285 s      61794 s          4 s
#2  3510 MHz      12076 s         39 s       3196 s     162386 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.17.2
14 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.2
 - Blosc                         0.5.0
 - CMakeWrapper                  0.1.0
 - Compat                        0.69.0
 - DataStructures                0.8.3
 - FileIO                        0.9.1
 - HDF5                          0.9.2
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Nullables                     0.0.5
 - Parameters                    0.9.0
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [0.222935] obj. value: -0.21722702523239656
curgen: 20 value: [0.222935] obj. value: -0.21722702523239656
curgen: 30 value: [0.222935] obj. value: -0.21722702523239656
curgen: 40 value: [0.222935] obj. value: -0.21722702523239656
curgen: 50 value: [0.222935] obj. value: -0.21722702523239656
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222935], -0.21722702523239656) 0.2229347683644233 -0.21722702523239656
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [-0.222547, -0.22421, 0.223316, -0.223823, 0.222285, 0.22256, -0.222131, -0.222082, 0.223538, 0.221224, -0.222196, -0.22163, 0.22292, -0.222877, 0.222689] obj. value: -3.2580891464135036
curgen: 100 value: [-0.222547, -0.222703, 0.22277, -0.223121, 0.222285, 0.22256, -0.222131, 0.222244, 0.223538, -0.222703, 0.22252, -0.22163, 0.222376, -0.222877, 0.222689] obj. value: -3.2583830392231365
curgen: 150 value: [-0.222547, -0.222703, 0.22277, -0.222103, -0.222675, 0.22256, -0.222131, 0.222244, 0.223465, -0.222703, 0.22252, -0.22163, 0.222376, -0.222877, 0.222689] obj. value: -3.2583972173762006
curgen: 200 value: [-0.222547, -0.222703, 0.22277, -0.222103, -0.222675, 0.22256, -0.222131, 0.222498, 0.223465, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222689] obj. value: -3.2584368519947504
curgen: 250 value: [-0.222547, -0.222703, 0.22277, -0.222103, -0.222675, 0.22256, -0.222692, 0.222498, 0.223465, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222537] obj. value: -3.2584445560231776
curgen: 300 value: [-0.222547, -0.222703, 0.22277, -0.222103, -0.222675, 0.22256, -0.222692, 0.222498, 0.223465, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222537] obj. value: -3.2584445560231776
curgen: 350 value: [-0.222547, -0.222703, 0.22277, -0.222103, -0.222675, 0.22256, -0.222483, 0.222498, 0.222716, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222537] obj. value: -3.2584810130216835
curgen: 400 value: [-0.222547, -0.222703, 0.22277, -0.22284, -0.222675, 0.22256, -0.222483, 0.222498, 0.222716, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222537] obj. value: -3.2584860577754378
curgen: 450 value: [-0.222547, -0.222703, 0.22277, -0.22284, -0.222675, 0.22256, -0.222483, 0.222498, 0.222716, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222537] obj. value: -3.2584860577754378
curgen: 500 value: [-0.222547, -0.222703, 0.22277, -0.22284, -0.222675, 0.22256, -0.222483, 0.222498, 0.222716, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222537] obj. value: -3.2584860577754378
GAFramework.CoordinateCreature{Array{Float64,1}}([-0.222547, -0.222703, 0.22277, -0.22284, -0.222675, 0.22256, -0.222483, 0.222498, 0.222716, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222537], -3.2584860577754378) [-0.222547, -0.222703, 0.22277, -0.22284, -0.222675, 0.22256, -0.222483, 0.222498, 0.222716, -0.222703, 0.22252, -0.22234, 0.222376, -0.222877, 0.222537] -3.2584860577754378
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.000573446, 0.00112531, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 0.001781, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, 0.000898062, 0.000926655] obj. value: 0.0016302907425256308
curgen: 100 value: [0.000573446, 0.00078902, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, 0.000898062, 0.000926655] obj. value: 0.000873311508058805
curgen: 150 value: [0.000573446, 0.00078902, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, 0.000926655] obj. value: 0.0007609726717703325
curgen: 200 value: [0.000573446, -0.000696512, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, 0.000926655] obj. value: 0.0007337090145540515
curgen: 250 value: [0.000573446, 0.000494776, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, 0.000926655] obj. value: 0.0006860302888469505
curgen: 300 value: [0.000573446, 0.000494776, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, 0.000926655] obj. value: 0.0006860302888469505
curgen: 350 value: [0.000573446, 0.000494776, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, 0.000926655] obj. value: 0.0006860302888469505
curgen: 400 value: [0.000573446, 0.000494776, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, -0.000194051] obj. value: 0.0005231442944761966
curgen: 450 value: [0.000573446, 0.000494776, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, -0.000194051] obj. value: 0.0005231442944761966
curgen: 500 value: [0.000239385, 0.000494776, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, -0.000194051] obj. value: 0.0004692738602045665
GAFramework.CoordinateCreature{Array{Float64,1}}([0.000239385, 0.000494776, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, -0.000194051], 0.0004692738602045665) [0.000239385, 0.000494776, -0.000184908, 0.000533296, -0.000197601, 8.03908e-5, 1.03167e-5, -0.000410105, 0.000605123, -0.000597558, 0.000345081, 0.000558356, -0.000314435, -0.000490169, -0.000194051] 0.0004692738602045665
INFO: GAFramework tests passed

>>> End of log
