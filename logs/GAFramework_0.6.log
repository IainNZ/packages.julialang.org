>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of Blosc from https://github.com/stevengj/Blosc.jl.git
INFO: Cloning cache of CMakeWrapper from https://github.com/rdeits/CMakeWrapper.jl.git
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Cloning cache of HDF5 from https://github.com/JuliaIO/HDF5.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Blosc v0.5.0
INFO: Installing CMakeWrapper v0.1.0
INFO: Installing DataStructures v0.8.4
INFO: Installing FileIO v0.9.1
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.9.3
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing Parameters v0.9.1
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building CMakeWrapper
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/downloads
Info: Downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 11 29.2M   11 3440k    0     0  5669k      0  0:00:05 --:--:--  0:00:05 5667k 58 29.2M   58 17.1M    0     0  10.6M      0  0:00:02  0:00:01  0:00:01 10.6M100 29.2M  100 29.2M    0     0  11.7M      0  0:00:02  0:00:02 --:--:-- 11.7M
Info: Done downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps
Info: Directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/usr/bin
cmake version 3.7.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
INFO: Building Blosc
Info: Downloading https://github.com/stevengj/BloscBuilder/releases/download/v1.14.3+3/Blosc.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Blosc/deps/usr/downloads/Blosc.x86_64-linux-gnu.tar.gz...
[00:26:56] [00:26:56] ######################################################################## 100.0%[00:26:56] ######################################################################## 100.0%[00:26:56] #############################                                             41.2%[00:26:56] ######################################################################## 100.0%
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (904.19140625 MB free)
Uptime: 1562.0 sec
Load Avg:  0.91845703125  0.94384765625  0.724609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      82240 s         82 s       5943 s      46112 s          3 s
#2  3500 MHz      14134 s         78 s       3503 s     135781 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.17.2
14 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blosc                         0.5.0
 - CMakeWrapper                  0.1.0
 - Compat                        1.0.0
 - DataStructures                0.8.4
 - FileIO                        0.9.1
 - HDF5                          0.9.3
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Nullables                     0.0.6
 - Parameters                    0.9.1
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [-0.222523] obj. value: -0.2172336012465709
curgen: 20 value: [-0.222523] obj. value: -0.2172336012465709
curgen: 30 value: [-0.222523] obj. value: -0.2172336012465709
curgen: 40 value: [-0.222523] obj. value: -0.2172336012465709
curgen: 50 value: [-0.222523] obj. value: -0.2172336012465709
GAFramework.CoordinateCreature{Array{Float64,1}}([-0.222523], -0.2172336012465709) -0.2225234830128131 -0.2172336012465709
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [-0.222155, -0.222057, 0.223625, 0.222923, 0.221317, 0.22204, 0.222097, 0.222121, 0.222734, 0.224577, -0.222314, 0.224071, -0.22496, -0.222601, 0.222154] obj. value: -3.2577867015482633
curgen: 100 value: [-0.2228, -0.222057, 0.22298, 0.222923, 0.221546, 0.22204, -0.222511, 0.222121, 0.222734, 0.222815, -0.222314, 0.224071, -0.222736, -0.222601, 0.222812] obj. value: -3.258298482146251
curgen: 150 value: [-0.2228, -0.222057, 0.22298, 0.222923, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222815, -0.222314, 0.224071, -0.222736, -0.222601, 0.222812] obj. value: -3.258347907679272
curgen: 200 value: [-0.2228, -0.222057, 0.222551, 0.222923, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222227, -0.222736, -0.222601, 0.222812] obj. value: -3.2584547212754122
curgen: 250 value: [-0.2228, -0.222057, 0.222551, 0.222923, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222227, -0.222736, -0.222601, 0.222812] obj. value: -3.2584547212754122
curgen: 300 value: [-0.2228, -0.222292, 0.222551, 0.222281, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222227, -0.222736, -0.222601, 0.222812] obj. value: -3.258465572130535
curgen: 350 value: [-0.2228, -0.222292, 0.222551, 0.222281, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222227, -0.222736, -0.222601, 0.222812] obj. value: -3.258465572130535
curgen: 400 value: [-0.2228, -0.222292, 0.222551, 0.222281, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222227, -0.222736, -0.222601, 0.222812] obj. value: -3.258465572130535
curgen: 450 value: [-0.2228, -0.222292, 0.222551, 0.222281, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222227, -0.222736, -0.222601, 0.222812] obj. value: -3.258465572130535
curgen: 500 value: [-0.2228, -0.222292, 0.222551, 0.222281, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222485, -0.222736, -0.222601, 0.222812] obj. value: -3.25846998109395
GAFramework.CoordinateCreature{Array{Float64,1}}([-0.2228, -0.222292, 0.222551, 0.222281, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222485, -0.222736, -0.222601, 0.222812], -3.25846998109395) [-0.2228, -0.222292, 0.222551, 0.222281, 0.222813, 0.22204, -0.222511, 0.222345, 0.222548, 0.222349, -0.222314, 0.222485, -0.222736, -0.222601, 0.222812] -3.25846998109395
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.000123531, -0.000431784, 0.00106529, -0.000496168, 3.86664e-5, -0.0012819, -0.000755956, 1.54975e-5, -0.000176971, 0.000868112, 6.83009e-5, 0.0016299, -0.000677996, 0.0017452, -0.000381244] obj. value: 0.0021616900020831054
curgen: 100 value: [0.000123531, -0.000431784, 0.00106529, -0.000496168, 3.86664e-5, -0.0012819, -0.000755956, 1.54975e-5, -0.000176971, 0.000868112, 6.83009e-5, -0.000694736, -0.000677996, 0.0017452, 3.24487e-5] obj. value: 0.0017017825348091264
curgen: 150 value: [0.000123531, -0.000431784, 0.00106529, -0.000496168, 3.86664e-5, -0.0012819, -0.000755956, 1.54975e-5, -0.000176971, 0.000868112, 6.83009e-5, -0.000694736, -0.000677996, 0.0017452, 3.24487e-5] obj. value: 0.0017017825348091264
curgen: 200 value: [0.000123531, -0.000431784, 0.00106529, -0.000496168, 3.86664e-5, -0.0012819, -0.000755956, 1.54975e-5, -0.000176971, 0.000868112, 6.83009e-5, -0.000694736, -0.000677996, 0.0017452, 3.24487e-5] obj. value: 0.0017017825348091264
curgen: 250 value: [0.000123531, -0.000431784, 0.00106529, -0.000496168, 3.86664e-5, -0.0012819, -0.000755956, 1.54975e-5, -0.000176971, 0.000868112, 6.83009e-5, -0.000694736, -0.000677996, 0.0017452, 3.24487e-5] obj. value: 0.0017017825348091264
curgen: 300 value: [0.000123531, -0.000431784, 0.000709513, -0.000496168, 3.86664e-5, -0.0012819, 0.000704012, 1.54975e-5, -0.000176971, 0.00033271, 6.83009e-5, -0.000694736, -0.000677996, 0.0017452, 3.24487e-5] obj. value: 0.0014339160643146442
curgen: 350 value: [0.000123531, -0.000431784, 0.000709513, -0.000496168, 3.86664e-5, -0.0012819, 0.000419138, 1.54975e-5, -0.000176971, 0.00033271, 6.83009e-5, -0.000694736, -0.000677996, 0.0017452, 3.24487e-5] obj. value: 0.0013704394548881282
curgen: 400 value: [0.000123531, -0.000431784, 0.000709513, -0.000496168, 3.86664e-5, -0.0012819, 0.000419138, 1.54975e-5, -0.000176971, 0.00033271, 6.83009e-5, -0.000694736, -0.000677996, 0.00155602, 3.24487e-5] obj. value: 0.001246541955055136
curgen: 450 value: [0.000123531, -0.000431784, 0.000709513, -0.000496168, 3.86664e-5, -0.0012819, 0.000419138, 1.54975e-5, -0.000176971, 0.00033271, 6.83009e-5, -0.000694736, -0.000677996, 0.00155602, 3.24487e-5] obj. value: 0.001246541955055136
curgen: 500 value: [0.000123531, -0.000245444, 0.000709513, -0.000496168, 3.86664e-5, -0.0012819, 0.000419138, 1.54975e-5, -0.000176971, 0.00033271, 6.83009e-5, -0.000694736, 0.000306927, 0.00155602, 3.24487e-5] obj. value: 0.0011489987477659724
GAFramework.CoordinateCreature{Array{Float64,1}}([0.000123531, -0.000245444, 0.000709513, -0.000496168, 3.86664e-5, -0.0012819, 0.000419138, 1.54975e-5, -0.000176971, 0.00033271, 6.83009e-5, -0.000694736, 0.000306927, 0.00155602, 3.24487e-5], 0.0011489987477659724) [0.000123531, -0.000245444, 0.000709513, -0.000496168, 3.86664e-5, -0.0012819, 0.000419138, 1.54975e-5, -0.000176971, 0.00033271, 6.83009e-5, -0.000694736, 0.000306927, 0.00155602, 3.24487e-5] 0.0011489987477659724
INFO: GAFramework tests passed

>>> End of log
