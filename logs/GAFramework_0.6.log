>>> 'Pkg.add("GAFramework")' log
INFO: Cloning cache of Blosc from https://github.com/stevengj/Blosc.jl.git
INFO: Cloning cache of CMakeWrapper from https://github.com/rdeits/CMakeWrapper.jl.git
INFO: Cloning cache of GAFramework from https://github.com/vvjn/GAFramework.jl.git
INFO: Cloning cache of HDF5 from https://github.com/JuliaIO/HDF5.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Blosc v0.5.0
INFO: Installing CMakeWrapper v0.1.0
INFO: Installing DataStructures v0.8.3
INFO: Installing FileIO v0.9.1
INFO: Installing GAFramework v0.1.0
INFO: Installing HDF5 v0.9.3
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing Parameters v0.9.0
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building CMakeWrapper
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/downloads
Info: Downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 16 29.2M   16 5088k    0     0   9.8M      0  0:00:02 --:--:--  0:00:02  9.8M 64 29.2M   64 18.8M    0     0  12.5M      0  0:00:02  0:00:01  0:00:01 12.5M100 29.2M  100 29.2M    0     0  12.9M      0  0:00:02  0:00:02 --:--:-- 12.9M
Info: Done downloading file https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps
Info: Directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/CMakeWrapper/deps/usr/bin
cmake version 3.7.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
INFO: Building Blosc
Info: Downloading https://github.com/stevengj/BloscBuilder/releases/download/v1.14.3+3/Blosc.x86_64-linux-gnu.tar.gz to /home/vagrant/.julia/v0.6/Blosc/deps/usr/downloads/Blosc.x86_64-linux-gnu.tar.gz...
[00:27:52] [00:27:52] ######################################################################## 100.0%[00:27:52] ######################################################################## 100.0%[00:27:52] ####                                                                       6.1%[00:27:52] #####################################################                     74.2%[00:27:52] ######################################################################## 100.0%
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GAFramework")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (897.96875 MB free)
Uptime: 1627.0 sec
Load Avg:  0.935546875  0.95751953125  0.74755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz      88734 s        122 s       5873 s      45002 s          1 s
#2  3499 MHz      11496 s         42 s       3580 s     145450 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GAFramework                   0.1.0
 - JSON                          0.17.2
14 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blosc                         0.5.0
 - CMakeWrapper                  0.1.0
 - Compat                        0.69.0
 - DataStructures                0.8.3
 - FileIO                        0.9.1
 - HDF5                          0.9.3
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Nullables                     0.0.5
 - Parameters                    0.9.0
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing GAFramework
Running genetic algorithm with
            population size 300,
            generation number 50,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict(:rate=>0.1),
            printing fitness every 10 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 10 value: [0.222819] obj. value: -0.21723038254447288
curgen: 20 value: [0.222819] obj. value: -0.21723038254447288
curgen: 30 value: [0.222819] obj. value: -0.21723038254447288
curgen: 40 value: [0.222819] obj. value: -0.21723038254447288
curgen: 50 value: [0.222819] obj. value: -0.21723038254447288
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222819], -0.21723038254447288) 0.22281911785981023 -0.21723038254447288
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [0.223249, -0.222347, -0.222828, 0.222329, 0.222489, 0.222763, 0.222154, -0.222469, -0.223161, 0.223492, 0.224143, -0.222284, 0.22142, -0.22201, -0.222102] obj. value: -3.2582171634609125
curgen: 100 value: [0.223249, -0.222347, -0.222828, 0.222632, 0.222489, 0.222506, 0.222154, -0.222469, -0.223161, 0.223492, 0.22217, -0.222284, -0.22278, -0.22201, -0.222102] obj. value: -3.258380497019533
curgen: 150 value: [0.223249, -0.222347, -0.222828, 0.222632, 0.222489, 0.222506, 0.222154, -0.222469, -0.222478, 0.223187, 0.22217, -0.222284, -0.22278, -0.22201, -0.222739] obj. value: -3.258425313223611
curgen: 200 value: [0.223249, -0.222347, -0.222828, 0.222632, 0.222489, 0.222506, 0.222154, -0.222469, -0.222478, 0.222798, 0.22217, -0.222284, -0.22278, -0.22201, -0.222739] obj. value: -3.2584405356311077
curgen: 250 value: [0.223249, -0.222347, -0.222828, 0.222632, 0.222489, 0.222506, 0.222154, -0.222469, -0.222478, 0.222798, 0.222731, -0.222284, -0.22278, -0.22201, -0.222739] obj. value: -3.2584454108394874
curgen: 300 value: [0.223249, -0.222347, -0.222828, 0.222632, 0.222489, 0.222588, 0.222154, -0.222469, -0.222478, 0.222798, 0.222731, -0.222284, -0.22278, -0.222992, -0.222739] obj. value: -3.2584495781319225
curgen: 350 value: [0.223249, -0.222347, -0.222828, 0.222632, 0.222489, 0.222588, 0.222154, -0.222469, -0.222478, 0.222798, 0.222731, -0.222284, -0.22278, -0.22255, -0.222739] obj. value: -3.2584582880059423
curgen: 400 value: [0.222628, -0.222347, -0.222828, 0.222632, 0.222489, 0.222588, 0.222154, -0.222469, -0.222478, 0.222418, 0.222731, -0.222284, -0.22278, -0.22255, -0.222739] obj. value: -3.2584816454107792
curgen: 450 value: [0.222628, -0.222347, -0.222828, 0.222632, 0.222489, 0.222588, 0.222154, -0.222522, -0.222478, 0.222418, 0.222731, -0.222284, -0.22278, -0.22255, -0.222739] obj. value: -3.2584818931712243
curgen: 500 value: [0.222628, -0.222347, -0.222828, 0.222632, 0.222489, 0.222588, 0.222824, -0.222522, -0.222478, 0.222418, 0.222731, -0.222284, -0.22278, -0.22255, -0.222739] obj. value: -3.258485432659161
GAFramework.CoordinateCreature{Array{Float64,1}}([0.222628, -0.222347, -0.222828, 0.222632, 0.222489, 0.222588, 0.222824, -0.222522, -0.222478, 0.222418, 0.222731, -0.222284, -0.22278, -0.22255, -0.222739], -3.258485432659161) [0.222628, -0.222347, -0.222828, 0.222632, 0.222489, 0.222588, 0.222824, -0.222522, -0.222478, 0.222418, 0.222731, -0.222284, -0.22278, -0.22255, -0.222739] -3.258485432659161
Running genetic algorithm with
            population size 300,
            generation number 500,
            elite fraction 0.01,
            children created 297,
            crossover_params nothing,
            mutation_params Dict{Symbol,Any}(Pair{Symbol,Any}(:lambda, 0.001),Pair{Symbol,Any}(:maxiter, 1000),Pair{Symbol,Any}(:k, 1),Pair{Symbol,Any}(:sa_rate, 0.1),Pair{Symbol,Any}(:rate, 0.1)),
            printing fitness every 50 iteration(s),
            saving creature to file every 0 iteration(s),
            saving state every 0 iteration(s),
            with file name prefix gamodel.
curgen: 50 value: [8.9356e-5, 0.000283776, 0.00278447, -0.00086455, 0.00102847, 0.000159286, 0.00243454, -0.000506632, -0.000133165, 0.00480861, 0.00071936, 7.90437e-5, -0.000163517, -0.00143355, -0.00446258] obj. value: 0.012203733956937413
curgen: 100 value: [8.9356e-5, 0.000283776, 0.00278447, -0.000422863, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.00480861, 0.00071936, 7.90437e-5, -0.000163517, -0.00143355, -0.00446258] obj. value: 0.010925885132394342
curgen: 150 value: [8.9356e-5, 0.000283776, 0.00278447, -0.000422863, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.00480861, 8.68824e-5, 7.90437e-5, -0.000163517, -0.00143355, -0.00170855] obj. value: 0.007453211480367372
curgen: 200 value: [8.9356e-5, 0.000283776, 0.00278447, -0.000422863, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.00257569, 8.68824e-5, 7.90437e-5, -0.000163517, -0.00143355, -0.00170855] obj. value: 0.0041823313309237165
curgen: 250 value: [8.9356e-5, 0.000283776, 0.00278447, -0.000422863, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.00257569, 8.68824e-5, 7.90437e-5, -0.000163517, -0.00143355, -0.00170855] obj. value: 0.0041823313309237165
curgen: 300 value: [8.9356e-5, 0.000283776, -0.00015368, -0.000422863, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.00257569, 8.68824e-5, 7.90437e-5, -0.000163517, -0.00143355, -0.00170855] obj. value: 0.0026488639966828487
curgen: 350 value: [8.9356e-5, 0.000283776, -0.00015368, -0.000422863, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.00257569, 8.68824e-5, 7.90437e-5, -0.000163517, -0.00143355, -0.00170855] obj. value: 0.0026488639966828487
curgen: 400 value: [8.9356e-5, 0.000283776, -0.00015368, -0.000422863, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.00257569, 8.68824e-5, 7.90437e-5, -0.000163517, -0.00143355, -0.00170855] obj. value: 0.0026488639966828487
curgen: 450 value: [8.9356e-5, 0.000283776, -0.00015368, -0.000422863, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.000416392, 8.68824e-5, 7.90437e-5, -0.000163517, -0.00143355, -0.00170855] obj. value: 0.001367121394764581
curgen: 500 value: [8.9356e-5, 0.000283776, -0.00015368, 0.000395831, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.000416392, 8.68824e-5, 7.90437e-5, -0.000163517, -0.000680863, -0.000594253] obj. value: 0.0005379260200299996
GAFramework.CoordinateCreature{Array{Float64,1}}([8.9356e-5, 0.000283776, -0.00015368, 0.000395831, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.000416392, 8.68824e-5, 7.90437e-5, -0.000163517, -0.000680863, -0.000594253], 0.0005379260200299996) [8.9356e-5, 0.000283776, -0.00015368, 0.000395831, 0.00102847, 0.000159286, -0.000233384, -0.000506632, -0.000133165, 0.000416392, 8.68824e-5, 7.90437e-5, -0.000163517, -0.000680863, -0.000594253] 0.0005379260200299996
INFO: GAFramework tests passed

>>> End of log
