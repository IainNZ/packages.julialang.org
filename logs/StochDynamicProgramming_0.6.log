>>> 'Pkg.add("StochDynamicProgramming")' log
INFO: Cloning cache of StochDynamicProgramming from https://github.com/JuliaOpt/StochDynamicProgramming.jl.git
INFO: Installing AxisAlgorithms v0.1.6
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing Distributions v0.12.2
INFO: Installing DualNumbers v0.3.0
INFO: Installing ForwardDiff v0.4.1
INFO: Installing Interpolations v0.3.8
INFO: Installing Iterators v0.3.0
INFO: Installing JuMP v0.16.2
INFO: Installing Lazy v0.11.6
INFO: Installing MacroTools v0.3.6
INFO: Installing MathProgBase v0.6.4
INFO: Installing NaNMath v0.2.4
INFO: Installing PDMats v0.5.6
INFO: Installing ProgressMeter v0.3.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ratios v0.0.4
INFO: Installing ReverseDiffSparse v0.7.2
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.4.0
INFO: Installing StochDynamicProgramming v0.3.0
INFO: Installing URIParser v0.1.8
INFO: Installing WoodburyMatrices v0.2.2
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of StochDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("StochDynamicProgramming")' log
Julia Version 0.6.0-pre.beta.28
Commit cab83c5 (2017-04-05 01:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (677.46484375 MB free)
Uptime: 30764.0 sec
Load Avg:  0.87890625  0.95556640625  1.005859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1857486 s       6432 s     142606 s     688496 s        160 s
#2  3504 MHz     563614 s         94 s      76193 s    2331009 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - StochDynamicProgramming       0.3.0
28 additional packages:
 - AxisAlgorithms                0.1.6
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - Compat                        0.22.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - Distributions                 0.12.2
 - DualNumbers                   0.3.0
 - ForwardDiff                   0.4.1
 - Interpolations                0.3.8
 - Iterators                     0.3.0
 - JuMP                          0.16.2
 - Lazy                          0.11.6
 - MacroTools                    0.3.6
 - MathProgBase                  0.6.4
 - NaNMath                       0.2.4
 - PDMats                        0.5.6
 - ProgressMeter                 0.3.4
 - QuadGK                        0.1.2
 - Ratios                        0.0.4
 - ReverseDiffSparse             0.7.2
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
 - WoodburyMatrices              0.2.2
INFO: Computing test dependencies for StochDynamicProgramming...
INFO: Installing Cbc v0.3.1
INFO: Installing Clp v0.3.0
INFO: Installing FactCheck v0.4.3
INFO: Building Cbc
INFO: Testing StochDynamicProgramming

WARNING: deprecated syntax "abstract SPModel" at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/objects.jl:12.
Use "abstract type SPModel end" instead.

WARNING: deprecated syntax "typealias LevelOne Val{:LevelOne}" at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/objects.jl:145.
Use "const LevelOne = Val{:LevelOne}" instead.

WARNING: deprecated syntax "typealias ExactPruning Val{:Exact}" at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/objects.jl:146.
Use "const ExactPruning = Val{:Exact}" instead.

WARNING: deprecated syntax "typealias Territory Val{:Exact_Plus}" at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/objects.jl:147.
Use "const Territory = Val{:Exact_Plus}" instead.

WARNING: deprecated syntax "typealias NoPruning Val{:none}" at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/objects.jl:148.
Use "const NoPruning = Val{:none}" instead.

WARNING: deprecated syntax "typealias CoinBigIndex Int32" at /home/vagrant/.julia/v0.6/Clp/src/ClpCInterface.jl:208.
Use "const CoinBigIndex = Int32" instead.

WARNING: deprecated syntax "typealias CoinBigDouble Float64" at /home/vagrant/.julia/v0.6/Clp/src/ClpCInterface.jl:209.
Use "const CoinBigDouble = Float64" instead.

WARNING: deprecated syntax "typealias VecOrNothing Union{Vector,Void}" at /home/vagrant/.julia/v0.6/Clp/src/ClpCInterface.jl:310.
Use "const VecOrNothing = Union{Vector,Void}" instead.

WARNING: deprecated syntax "abstract Result" at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:46.
Use "abstract type Result end" instead.
Probability functions
8 facts verified.
Utils functions
INFO: extract_vector_from_3Dmatrix is now deprecated. Use collect instead.
3 facts verified.
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] is(::Void, ::Vararg{Void,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
SDDP algorithm: 1D case
  > Linear cost
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isfinite(::Array{Float64,1}) at ./deprecated.jl:51
 [3] estimate_upper_bound(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{Float64,3}, ::Array{JuMP.Model,1}) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/stoppingtest.jl:107
 [4] estimate_upper_bound(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Int64) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/stoppingtest.jl:98
 [5] (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl:79
 [6] context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [7] (::##49#122)() at /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl:64
 [8] facts(::##49#122, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
Initialize cuts
Pass n° 2	Lower-bound: -1.3440e+01	Time: 0.05s
Compute final upper-bound with 1000 scenarios...

############################################################
SDDP CONVERGENCE
- Exact lower bound:          -1.3440e+01 [Gap < -0.38%]
- Estimation of upper-bound:  -1.3459e+01
- Upper-bound's s.t.d:        1.1330e+00
- Confidence interval (95%):  [-1.3529e+01 , -1.3389e+01]
############################################################
  > Value functions calculation
  > Hotstart
  > Cuts pruning
  > Quadratic regularization
  > Final cost
  > Piecewise linear cost
  > SMIP
  > Stopping criterion
  > Dump
  > Compare parameters
32 facts verified.
SDDP algorithm: 2D case
  > Linear cost
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isfinite(::Array{Float64,1}) at ./deprecated.jl:51
 [3] estimate_upper_bound(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{Float64,3}, ::Array{JuMP.Model,1}) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/stoppingtest.jl:107
 [4] estimate_upper_bound(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Int64) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/stoppingtest.jl:98
 [5] (::##199#224{Int64,#dynamic#222,#cost#223,Array{StochDynamicProgramming.NoiseLaw,1}})() at /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl:311
 [6] context(::##199#224{Int64,#dynamic#222,#cost#223,Array{StochDynamicProgramming.NoiseLaw,1}}, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [7] (::##198#221)() at /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl:291
 [8] facts(::##198#221, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl, in expression starting on line 248
  > Dump
10 facts verified.
Indexation for SDP
6 facts verified.
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] is(::Void, ::Vararg{Void,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sdp.jl, in expression starting on line 31
SDP algorithm
  > Compare StochDynProgModel constructors
  > Solve and simulate using SDP
22 facts verified.
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] is(::Void, ::Vararg{Void,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/extensive_formulation.jl, in expression starting on line 6
SDDP algorithm: 1D case
  > Extensive solving
  > Unsolvable extensive formulation
WARNING: Not solved to optimality, status: Infeasible
2 facts verified.
INFO: StochDynamicProgramming tests passed
INFO: Removing Cbc v0.3.1
INFO: Removing Clp v0.3.0
INFO: Removing FactCheck v0.4.3

>>> End of log
