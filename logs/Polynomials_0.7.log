>>> 'Pkg.add("Polynomials")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing Polynomials v0.3.0
[ Info: Package database updated

>>> 'Pkg.test("Polynomials")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5025
Commit 74af87841b (2018-05-06 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1012269 s         75 s      81057 s     278746 s          7 s
       #2  3500 MHz     203239 s         85 s      28902 s    1352249 s          0 s
       
  Memory: 2.939197540283203 GB (2162.9453125 MB free)
  Uptime: 16100.0 sec
  Load Avg:  1.015625  0.99169921875  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - Polynomials                   0.3.0
2 additional packages:
 - Compat                        0.64.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing Polynomials
┌ Warning: `x ^ p::Integer` is deprecated, use `Base.power_by_squaring(x, p)` instead.
│   caller = @generated body at none:0 [inlined]
└ @ Core none:0
┌ Warning: `x ^ p::Integer` is deprecated, use `Base.power_by_squaring(x, p)` instead.
│   caller = @generated body at none:0 [inlined]
└ @ Core none:0
┌ Warning: `x ^ p::Integer` is deprecated, use `Base.power_by_squaring(x, p)` instead.
│   caller = @generated body at none:0 [inlined]
└ @ Core none:0
WARNING: importing deprecated binding Base.uninitialized into Polynomials.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:58
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:58
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:58
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:58
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:58
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:58
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:59
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:59
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:59
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:60
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:60
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:60
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:61
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:61
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:61
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:63
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:63
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:63
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:64
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:64
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:64
┌ Warning: `x ^ p::Integer` is deprecated, use `Base.power_by_squaring(x, p)` instead.
│   caller = @generated body at none:0 [inlined]
└ @ Core none:0
┌ Warning: `x ^ p::Integer` is deprecated, use `Base.power_by_squaring(x, p)` instead.
│   caller = @generated body at none:0 [inlined]
└ @ Core none:0
┌ Warning: `x ^ p::Integer` is deprecated, use `Base.power_by_squaring(x, p)` instead.
│   caller = @generated body at none:0 [inlined]
└ @ Core none:0
Test for the exponential function.
Test for the sine function.
Test for the cosine function.
Test for the summation of a factorially divergent series.
The approximate sum of the divergent series is:  0.596347366095526
The approximate sum of the convergent series is: 0.596347362323284
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = polyfit(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,1}, ::Int64, ::Symbol) at Polynomials.jl:713
└ @ Polynomials Polynomials.jl:713
Test for setindex!()
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = setindex!(::Poly{Int64}, ::Int64, ::Int64) at Polynomials.jl:272
└ @ Polynomials Polynomials.jl:272
Test for element-wise operations
┌ Warning: `conj(x)` is deprecated, use `x` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:320
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:320
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:320
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:326
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:326
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Polynomials/test/runtests.jl:326
┌ Warning: `size(x, d1::Integer, d2::Integer)` is deprecated, use `(size(x, d1), size(x, d2))` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Polynomials tests passed

>>> End of log
