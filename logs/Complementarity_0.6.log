>>> 'Pkg.add("Complementarity")' log
INFO: Cloning cache of Complementarity from https://github.com/chkwon/Complementarity.jl.git
INFO: Cloning cache of PATHSolver from https://github.com/chkwon/PATHSolver.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing Complementarity v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.4.2
INFO: Installing JuMP v0.16.2
INFO: Installing Lazy v0.11.6
INFO: Installing LineSearches v0.1.5
INFO: Installing MacroTools v0.3.6
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PATHSolver v0.2.0
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing ReverseDiffSparse v0.7.2
INFO: Installing SHA v0.3.2
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing URIParser v0.1.8
INFO: Building PATHSolver
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/PATHSolver/deps/downloads
INFO: Downloading file https://github.com/chkwon/PathJulia/archive/0.1.2.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   123    0   123    0     0   1076      0 --:--:-- --:--:-- --:--:--  1078
  0     0    0  493k    0     0  1194k      0 --:--:-- --:--:-- --:--:-- 1194k
INFO: Done downloading file https://github.com/chkwon/PathJulia/archive/0.1.2.tar.gz
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/PATHSolver/deps/src
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/PATHSolver/deps
INFO: Directory /home/vagrant/.julia/v0.6/PATHSolver/deps already created
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/PATHSolver/deps/usr/lib
INFO: Changing Directory to /home/vagrant/.julia/v0.6/PATHSolver/deps/src/PathJulia-0.1.2/src
2017-04-28 10:28:54 URL:https://codeload.github.com/ampl/pathlib/tar.gz/4.7.03 [3840157] -> "4.7.03.tar.gz" [1]
INFO: Changing Directory to /home/vagrant/.julia/v0.6/PATHSolver/deps/src/PathJulia-0.1.2/src
INFO: Package database updated

>>> 'Pkg.test("Complementarity")' log
Julia Version 0.6.0-pre.beta.388
Commit 4ddd9fa (2017-04-27 21:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (884.1328125 MB free)
Uptime: 21992.0 sec
Load Avg:  0.97509765625  0.97216796875  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1335967 s        106 s      71023 s     451958 s         22 s
#2  3499 MHz     261914 s       5990 s      40314 s    1851518 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Complementarity               0.2.1
 - JSON                          0.9.1
21 additional packages:
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - Distances                     0.4.1
 - ForwardDiff                   0.4.2
 - JuMP                          0.16.2
 - Lazy                          0.11.6
 - LineSearches                  0.1.5
 - MacroTools                    0.3.6
 - MathProgBase                  0.6.4
 - NLsolve                       0.9.1
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PATHSolver                    0.2.0
 - PositiveFactorizations        0.0.4
 - ReverseDiffSparse             0.7.2
 - SHA                           0.3.2
 - SpecialFunctions              0.1.1
 - URIParser                     0.1.8
INFO: Computing test dependencies for Complementarity...
INFO: Installing Ipopt v0.2.6
INFO: Building Ipopt
INFO: Testing Complementarity
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/../examples/mcp/transmcp.jl, in expression starting on line 40
getvalue(x) = x: 2 dimensions:
[  seattle,:]
  [  seattle,new-york] = 49.99999533220467
  [  seattle, chicago] = 300.0
  [  seattle,  topeka] = 0.0
[san-diego,:]
  [san-diego,new-york] = 275.00000466779534
  [san-diego, chicago] = 0.0
  [san-diego,  topeka] = 275.0
getvalue(w) = w: 1 dimensions:
[  seattle] = 0.0
[san-diego] = 0.0
getvalue(p) = p: 1 dimensions:
[new-york] = 0.22499999999999992
[ chicago] = 0.15299999999999955
[  topeka] = 0.126
status = :Solved
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/hhoeschle_mcp1.jl, in expression starting on line 8
Reading options file path.opt
 > convergence_tolerance 1.0e-8
 > output yes
 > time_limit 3600
Read of options file complete.

11 row/cols, 24 non-zeros, 19.83% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  0.0000e+00 var: (w[seattle])
Maximum of F. . . . . . . . . .  6.0000e+02 eqn: (supply[san-diego])
Maximum of Grad F . . . . . . .  1.0000e+00 eqn: (profit[seattle,new-york])
                                            var: (w[seattle])

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  3.0000e+00 eqn: (supply[seattle])
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (fxdemand[new-york])
Maximum Column Norm . . . . . .  3.0000e+00 var: (w[seattle])
Minimum Column Norm . . . . . .  2.0000e+00 var: (p[new-york])

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             1.0416e+03             0.0e+00 (fxdemand[new-york])
    1     1     9     3 1.0029e+03  1.0e+00    1.0e+01 (fxdemand[new-york])
    2     2     6     9 9.4289e+02  1.0e+00    9.0e+00 (fxdemand[new-york])
    3     3     0     9 8.8483e+02  1.0e+00    8.1e+00 (fxdemand[new-york])
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0     4     4 8.8483e+02           I 7.3e+00 4.9e+02 (fxdemand[new-yo)
    1     1     5     5 7.2119e+02  1.0e+00 SO 2.9e+00 2.6e+02 (profit[seattle,)
    2     2     6     6 3.6245e+02  1.0e+00 SO 1.2e+00 1.9e+02 (profit[san-dieg)
    3     2     7     7 5.9071e+01  1.0e+00 SO 4.7e-01 3.3e+01 (supply[san-dieg)
    4     1     8     8 1.6118e+01  1.0e+00 SO 1.9e-01 7.7e+00 (supply[seattle])
    5     6     9     9 4.3905e-01  1.0e+00 SO 7.5e-02 2.2e-01 (profit[san-dieg)
    6     4    10    10 2.0855e-01  1.0e+00 SO 3.0e-02 1.1e-01 (profit[seattle,)
    7     1    11    11 2.6297e-02  1.0e+00 SO 1.2e-02 1.8e-02 (profit[san-dieg)
    8     1    12    12 2.6239e-02  1.0e+00 SO 2.6e-03 1.8e-02 (profit[san-dieg)
    9     1    13    13 2.6238e-02  1.0e+00 SO 1.1e-03 1.8e-02 (profit[san-dieg)
   10     2    14    14 2.3838e-02  1.0e+00 SO 4.2e-04 1.4e-02 (profit[san-dieg)
   11     2    15    15 9.5865e-03  1.0e+00 SO 1.7e-04 6.0e-03 (profit[san-dieg)
   12     3    16    16 5.6196e-03  1.0e+00 SO 6.7e-05 3.9e-03 (profit[seattle,)
   13     2    17    17 3.5355e-03  1.0e+00 SO 2.7e-05 2.0e-03 (profit[san-dieg)
   14     2    18    18 6.9529e-08  1.0e+00 SO 1.1e-05 6.6e-08 (fxdemand[chicag)
   15     1    19    19 4.5944e-16  1.0e+00 SO 7.0e-09 4.4e-16 (profit[seattle,)

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.3323e-13 eqn: (profit[seattle,chicago])
Inf-Norm of Normal Map. . . . .  4.4409e-16 eqn: (profit[seattle,chicago])
Inf-Norm of Minimum Map . . . .  0.0000e+00 eqn: (supply[seattle])
Inf-Norm of Fischer Function. .  4.4409e-16 eqn: (profit[seattle,chicago])
Inf-Norm of Grad Fischer Fcn. .  5.2736e-16 eqn: (supply[seattle])
Two-Norm of Grad Fischer Fcn. .  7.1413e-16

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  3.0000e+02 var: (x[seattle,chicago])
Maximum of F. . . . . . . . . .  5.0000e+01 eqn: (supply[san-diego])
Maximum of Grad F . . . . . . .  1.0000e+00 eqn: (profit[seattle,new-york])
                                            var: (w[seattle])

 ** EXIT - solution found.

Major Iterations. . . . 15
Minor Iterations. . . . 31
Restarts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 19
Gradient Evaluations. . 19
Basis Time. . . . . . . 0.000195
Total Time. . . . . . . 0.032369
Residual. . . . . . . . 4.594365e-16
Reading options file path.opt
 > convergence_tolerance 1.0e-6
 > output yes
 > time_limit 43200
 > minor_iteration_limit 1000
 > cumulative_iteration_limit 1000000000
Read of options file complete.

7 row/cols, 20 non-zeros, 40.82% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .INFO: -------[Testing Complementarity/PATHSolver]------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp.jl, in expression starting on line 7
  0.0000e+00 var: (xname[s001])
Maximum of F. . . . . . . . . .  1.0000e+01 eqn: (KKT_xname[s001])
Maximum of Grad F . . . . . . .  1.0000e+00 eqn: (market_lambda1)
                                            var: (xname[s001])

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  5.0000e+00 eqn: (market_lambda1)
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (KKT_xname[s001])
Maximum Column Norm . . . . . .  5.0000e+00 var: (lambda1)
Minimum Column Norm . . . . . .  2.0000e+00 var: (xname[s001])

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             2.0000e+01             0.0e+00 (market_lambda1)
    1     7     4     1 1.7634e+01  6.9e-02    2.0e-01 (market_lambda1)
    2     8     4     4 1.8093e+00  1.0e+00    1.8e-01 (market_lambda2)
    3     9     1     4 1.3549e-02  1.0e+00    1.8e-02 (market_lambda2)
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0    10     4 1.3549e-02           I 1.4e-04 8.5e-03 (market_lambda2)
    1     1    11     5 3.6611e-07  1.0e+00 SO 5.4e-05 2.3e-07 (KKT_ynoname[s00)

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.1410e-06 eqn: (KKT_xname[s002])
Inf-Norm of Normal Map. . . . .  2.2820e-07 eqn: (KKT_xname[s002])
Inf-Norm of Minimum Map . . . .  2.2820e-07 eqn: (KKT_xname[s002])
Inf-Norm of Fischer Function. .  2.2820e-07 eqn: (KKT_ynoname[s001])
Inf-Norm of Grad Fischer Fcn. .  4.5641e-07 eqn: (market_lambda2)
Two-Norm of Grad Fischer Fcn. .  8.4586e-07

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  5.0000e+00 var: (xname[s002])
Maximum of F. . . . . . . . . .  8.0000e+00 eqn: (KKT_xname[s001])
Maximum of Grad F . . . . . . .  1.0000e+00 eqn: (market_lambda1)
                                            var: (xname[s001])

 ** EXIT - solution found.

Major Iterations. . . . 1
Minor Iterations. . . . 1
Restarts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 11
Gradient Evaluations. . 5
Basis Time. . . . . . . 0.000041
Total Time. . . . . . . 0.004444
Residual. . . . . . . . 3.661146e-07
Reading options file path.opt
 > convergence_tolerance 1.0e-8
 > output yes
 > time_limit 3600
Read of options file complete.

4 row/cols, 12 non-zeros, 75.00% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  0.0000e+00 var: (x3)
Maximum of F. . . . . . . . . .  6.0000e+00 eqn: (F4)
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (F4)
                                            var: (x4)

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  9.0000e+00 eqn: (F4)
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (F1)
Maximum Column Norm . . . . . .  9.0000e+00 var: (x4)
Minimum Column Norm . . . . . .  2.0000e+00 var: (x1)

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             1.2649e+01             0.0e+00 (F4)
    1     2     4     2 1.0535e+01  8.0e-01    0.0e+00 (F1)
    2     3     2     4 8.4815e-01  1.0e+00    0.0e+00 (F4)
    3     4     0     3 4.4409e-16  1.0e+00    0.0e+00 (F3)
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0     5     4 4.4409e-16           I 0.0e+00 4.4e-16 (F3)

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.5527e-16 eqn: (F3)
Inf-Norm of Normal Map. . . . .  4.4409e-16 eqn: (F3)
Inf-Norm of Minimum Map . . . .  4.4409e-16 eqn: (F3)
Inf-Norm of Fischer Function. .  4.4409e-16 eqn: (F3)
Inf-Norm of Grad Fischer Fcn. .  8.8818e-16 eqn: (F3)
Two-Norm of Grad Fischer Fcn. .  1.4043e-15

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  2.8000e+00 var: (x1)
Maximum of F. . . . . . . . . .  4.0000e-01 eqn: (F2)
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (F4)
                                            var: (x4)

 ** EXIT - solution found.

Major Iterations. . . . 0
Minor Iterations. . . . 0
Restarz = [2.8, 0.0, 0.8, 1.2]
Fz = [0.0, 0.4, 4.44089e-16, 0.0]
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp.jl, in expression starting on line 43
z = [2.8, 0.0, 0.8, 1.2]
Fz = [0.0, 0.4, 4.44089e-16, 0.0]
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp.jl, in expression starting on line 77
ts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 5
Gradient Evaluations. . 4
Basis Time. . . . . . . 0.000007
Total Time. . . . . . . 0.002641
Residual. . . . . . . . 4.440892e-16
Reading options file path.opt
 > convergence_tolerance 1.0e-8
 > output yes
 > time_limit 3600
Read of options file complete.

4 row/cols, 12 non-zeros, 75.00% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  0.0000e+00 var: (x3)
Maximum of F. . . . . . . . . .  6.0000e+00 eqn: (F4)
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (F4)
                                            var: (x4)

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  9.0000e+00 eqn: (F4)
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (F1)
Maximum Column Norm . . . . . .  9.0000e+00 var: (x4)
Minimum Column Norm . . . . . .  2.0000e+00 var: (x1)

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             1.2649e+01             0.0e+00 (F4)
    1     2     4     2 1.0535e+01  8.0e-01    0.0e+00 (F1)
    2     3     2     4 8.4815e-01  1.0e+00    0.0e+00 (F4)
    3     4     0     3 4.4409e-16  1.0e+00    0.0e+00 (F3)
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0     5     4 4.4409e-16           I 0.0e+00 4.4e-16 (F3)

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.5527e-16 eqn: (F3)
Inf-Norm of Normal Map. . . . .  4.4409e-16 eqn: (F3)
Inf-Norm of Minimum Map . . . .  4.4409e-16 eqn: (F3)
Inf-Norm of Fischer Function. .  4.4409e-16 eqn: (F3)
Inf-Norm of Grad Fischer Fcn. .  8.8818e-16 eqn: (F3)
Two-Norm of Grad Fischer Fcn. .  1.4043e-15

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  2.8000e+00 var: (x1)
Maximum of F. . . . . . . . . .  4.0000e-01 eqn: (F2)
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (F4)
                                            var: (x4)

 ** EXIT - solution found.

Major Iterations. . . . 0
Minor Iterations. . . . 0
Restarts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 5
Gradient Evaluations. . 4
Basis Time. . . . . . . 0.000005
Total Time. . . . . . . 0.002024
Residual. . . . . . . . 4.440892e-16
Reading options file path.opt
 > convergence_tolerance 1.0e-8
 > output yes
 > time_limit 3600
Read of options file complete.

4 row/cols, 12 non-zeros, 75.00% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  0.0000e+00 var: (myvariablename[1])
Maximum of F. . . . . . . . . .  6.0000e+00 eqn: (myconst[4])
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (myconst[4])
                                            var: (myvariablename[4])

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  9.0000e+00 eqn: (myconst[4])
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (myconst[1])
Maximum Column Norm . . . . . .  9.0000e+00 var: (myvariablename[4])
Minimum Column Norm . . . . . .  2.0000e+00 var: (myvariablename[1])

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             1.2649e+01             0.0e+00 (myconst[4])
    1     2     4     2 1.0535e+01  8.0e-01    0.0e+00 (myconst[1])
    2     3     2     4 8.4815e-01  1.0e+00    0.0e+00 (myconst[4])
    3     4     0     3 4.4409e-16  1.0e+00    0.0e+00 (myconst[3])
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0     5     4 4.4409e-16           I 0.0e+00 4.4e-16 (myconst[3])

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.5527e-16 eqn: (myconst[3])
Inf-Norm of Normal Map. . . . .  4.4409e-16 eqn: (myconst[3])
Inf-Norm of Minimum Map . . . .  4.4409e-16 eqn: (myconst[3])
Inf-Norm of Fischer Function. .  4.4409e-16 eqn: (myconst[3])
Inf-Norm of Grad Fischer Fcn. .  8.8818e-16 ez = [2.8, 0.0, 0.8, 1.2]
Fz = [0.0, 0.4, 4.44089e-16, 0.0]
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp.jl, in expression starting on line 114
z = x: 1 dimensions:
[1] = 2.8
[2] = 0.0
[3] = 0.8
[4] = 1.2
------------------------------------------------------------------
INFO: -------[Testing Complementarity/NLsolve]------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 10
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [7] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [9] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [10] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [11] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
status = Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [0.0, 0.0, 0.0, 0.0]
 * Zero: [2.8, -8.05208e-10, 0.8, 1.2]
 * Inf-norm of residuals: 0.000000
 * Iterations: 8
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 9
 * Jacobian Calls (df/dx): 9
z = x: 1 dimensions:
[1] = 2.800000000145381
[2] = -8.052081014655471e-10
[3] = 0.7999999997613256
[4] = 1.2000000002386757
Fz = __anon__: 1 dimensions:
[1] = -1.3322676295501878e-15
[2] = 0.39999999928397423
[3] = -4.11182199400173e-12
[4] = -3.298339379398385e-11
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 49
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [7] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [9] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [10] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [11] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
status = Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [0.0, 0.0, 0.0, 0.0]
 * Zero: [2.8, -8.05208e-10, 0.8, 1.2]
 * Inf-norm of residuals: 0.000000
 * Iterations: 8
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 9
 * Jacobian Calls (df/dx): 9
z = x: 1 dimensions:
[1] = 2.800000000145381
[2] = -8.052081014655471e-10
[3] = 0.7999999997613256
[4] = 1.2000000002386757
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 87
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [7] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [9] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [10] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [11] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
status = Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [0.0, 0.0, 0.0, 0.0]
 * Zero: [2.8, -8.05208e-10, 0.8, 1.2]
 * Inf-norm of residuals: 0.000000
 * Iterations: 8
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 9
 * Jacobian Calls (df/dx): 9
z = [2.8, -8.05208e-10, 0.8, 1.2]
Fz = [-1.33227e-15, 0.4, -4.11182e-12, -3.29834e-11]
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Complementarity.ComplementarityType}, ::Int64) at ./deprecated.jl:51
 [3] MCPModel() at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:13
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 123
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [7] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [9] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [10] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [11] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:539
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
status = Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [1.25, 0.0, 0.0, 0.5]
 * Zero: [1.22474, 0.0, -2.02379e-19, 0.5]
 * Inf-norm of residuals: 0.000000
 * Iterations: 3
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 4
 * Jacobian Calls (df/dx): 4
z = x: 1 dimensions:
[1] = 1.2247448711263813
[2] = 0.0
[3] = -2.0237901522246342e-19
[4] = 0.5000000002286319
Fz = [-1.26298e-9, 3.22474, 5.0, 3.62723e-11]
INFO: -------[Testing Complementarity/MPEC]------------------------------------------
qn: (myconst[3])
Two-Norm of Grad Fischer Fcn. .  1.4043e-15

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  2.8000e+00 var: (myvariablename[1])
Maximum of F. . . . . . . . . .  4.0000e-01 eqn: (myconst[2])
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (myconst[4])
                                            var: (myvariablename[4])

 ** EXIT - solution found.

Major Iterations. . . . 0
Minor Iterations. . . . 0
Restarts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 5
Gradient Evaluations. . 4
Basis Time. . . . . . . 0.000031
Total Time. . . . . . . 0.001366
Residual. . . . . . . . 4.440892e-16
Reading options file path.opt
 > convergence_tolerance 1.0e-8
Read of options file complete.

4 row/cols, 12 non-zeros, 75.00% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

 ** EXIT - solution found.

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

This is Ipopt version 3.12.1, running with linear solver mumps.
NOTE: Other linear solvers might be more efficient (see Ipopt documentation).

Number of nonzeros in equality constraint Jacobian...:       11
Number of nonzeros in inequality constraint Jacobian.:       12
Number of nonzeros in Lagrangian Hessian.............:       20

Total number of variables............................:        5
                     variables with only lower bounds:        2
                variables with lower and upper bounds:        0
                     variables with only upper bounds:        0
Total number of equality constraints.................:        3
Total number of inequality constraints...............:        7
        inequality constraints with only lower bounds:        6
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        1

iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
   0  2.5940500e+01 5.96e+00 7.34e-01  -1.0 0.00e+00    -  0.00e+00 0.00e+00   0
   1  2.5837968e+01 5.87e+00 9.19e-01  -1.0 2.45e+00    -  8.40e-03 1.52e-02h  1
   2  2.5336071e+01 4.72e+00 5.30e+00  -1.0 4.21e+00    -  6.93e-02 1.95e-01f  1
   3  2.5420537e+01 4.45e+00 2.26e+01  -1.0 2.76e+00    -  4.13e-01 5.83e-02h  1
   4  3.6840809e+01 9.03e-01 1.26e+01  -1.0 3.08e+00    -  5.25e-01 7.97e-01h  1
   5  3.8121849e+01 6.76e-01 8.85e+01  -1.0 6.05e-01    -  1.00e+00 2.52e-01h  1
   6  4.0801221e+01 2.51e-01 8.10e+01  -1.0 4.65e-01    -  1.00e+00 6.29e-01h  1
   7  4.1754176e+01 1.08e-01 1.87e+02  -1.0 1.72e-01    -  1.00e+00 5.71e-01h  1
   8  4.2179562e+01 4.57e-02 4.69e+02  -1.0 7.42e-02    -  1.00e+00 5.76e-01h  1
   9  4.2363069e+01 1.89e-02 1.07e+03  -1.0 3.13e-02    -  1.00e+00 5.87e-01h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  10  4.2439617e+01 7.85e-03 2.62e+03  -1.0 1.30e-02    -  1.00e+00 5.84e-01h  1
  11  4.2471298e+01 3.25e-03 6.27e+03  -1.0 5.37e-03    -  1.00e+00 5.86e-01h  1
  12  4.2484523e+01 1.35e-03 1.51e+04  -1.0 2.23e-03    -  1.00e+00 5.86e-01h  1
  13  4.2489930e+01 5.60e-04 3.62e+04  -1.0 9.16e-04    -  1.00e+00 5.88e-01h  1
  14  4.2491026e+01 3.97e-04 9.45e+04  -1.0 3.75e-04    -  6.92e-01 2.96e-01f  2
  15  4.2490946e+01 3.84e-04 3.27e+05  -1.0 3.25e-04   6.0 1.00e+00 3.26e-02h  1
  16  4.2491955e+01 2.21e-04 2.51e+05  -1.0 2.40e-04    -  7.19e-01 4.41e-01f  2
  17  4.2492516e+01 1.28e-04 3.68e+05  -1.0 1.37e-04    -  1.00e+00 4.56e-01f  2
  18  4.2492812e+01 2.85e-05 1.29e+05  -1.0 5.31e-05    -  8.09e-01 9.91e-01h  1
  19  4.2493276e+01 2.75e-05 2.07e+06  -1.0 2.33e-04    -  4.08e-01 1.66e-01f  2
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  20  4.2493660e+01 1.93e-05 3.96e+06  -1.0 8.20e-05   6.4 1.00e+00 5.00e-01f  2
  21  4.2493413e+01 1.47e-06 7.16e+01  -1.0 2.14e-05    -  1.00e+00 1.00e+00f  1
  22  4.2493376e+01 2.14e-08 4.92e+05  -3.8 2.65e-06   5.9 9.58e-01 1.00e+00h  1
  23  4.2493122e+01 1.55e-06 1.59e+01  -3.8 2.45e-05    -  1.00e+00 1.00e+00f  1
  24  4.2492940e+01 5.63e-07 4.48e+00  -3.8 1.51e-05   5.5 1.00e+00 1.00e+00h  1
  25  4.2492383e+01 4.68e-06 4.60e+00  -3.8 4.65e-05   5.0 1.00e+00 1.00e+00h  1
  26  4.2490483e+01 1.96e-05 4.63e+00  -3.8 1.41e-04   4.5 1.00e+00 1.00e+00h  1
  27  4.2489876e+01 9.75e-07 2.82e+01  -3.8 4.98e-05    -  1.00e+00 1.00e+00f  1
  28  4.2485952e+01 8.63e-06 2.33e+01  -3.8 1.69e-03   4.0 1.70e-01 1.67e-01f  1
  29  4.2478323e+01 4.01e-06 7.66e+00  -3.8 5.58e-04    -  1.00e+00 1.00e+00f  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  30  4.2473791e+01 3.42e-06 2.02e+03  -3.8 1.51e-03    -  5.49e-01 2.20e-01f  1
  31  4.2453833e+01 1.69e-06 6.86e+00  -3.8 1.46e-03    -  1.00e+00 1.00e+00f  1
  32  4.2442294e+01 1.34e-06 1.35e+04  -3.8 3.08e-03    -  6.44e-01 2.74e-01f  1
  33  4.2390571e+01 6.67e-07 6.45e+00  -3.8 3.79e-03    -  1.00e+00 1.00e+00f  1
  34  4.2360304e+01 5.22e-07 8.95e+04  -3.8 7.79e-03    -  6.52e-01 2.85e-01f  1
  35  4.2224684e+01 2.63e-07 6.30e+00  -3.8 9.95e-03    -  1.00e+00 1.00e+00f  1
  36  4.2144894e+01 2.05e-07 6.04e+05  -3.8 2.06e-02    -  6.45e-01 2.84e-01f  1
  37  4.1780837e+01 1.05e-07 6.30e+00  -3.8 2.69e-02    -  1.00e+00 1.00e+00f  1
  38  4.1587745e+01 8.48e-08 2.78e+06  -5.7 5.82e-02    -  4.76e-01 2.47e-01f  1
  39  4.0580290e+01 4.51e-08 3.08e+02  -5.7 7.58e-02    -  1.00e+00 1.00e+00f  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  40  3.9990156e+01 3.66e-08 2.86e+07  -5.7 1.83e-01    -  5.51e-01 2.46e-01f  1
  41  3.6756838e+01 2.12e-08 9.64e+00  -5.7 2.58e-01    -  1.00e+00 1.00e+00f  1
  42  3.4783208e+01 1.81e-08 2.02e+08  -5.7 8.44e-01    -  4.05e-01 1.99e-01f  1
  43  2.2558407e+01 1.25e-08 3.38e+01  -5.7 1.37e+00    -  1.00e+00 1.00e+00f  1
  44  1.7000000e+01 1.14e-08 2.90e+07  -8.6 9.84e+00    -  1.68e-01 1.54e-01f  1
  45  1.7001070e+01 5.50e-09 4.05e+05  -8.6 1.22e-03    -  9.86e-01 9.86e-01s 22
  46  1.7000045e+01 5.72e-09 2.01e-02  -8.6 1.15e-03    -  1.00e+00 1.00e+00s 22

Number of Iterations....: 46

                                   (scaled)                 (unscaled)
Objective...............:   1.7000044796922211e+01    1.7000044796922211e+01
Dual infeasibility......:   2.0068608320707337e-02    2.0068608320707337e-02
Constraint violation....:   5.7161733124644343e-09    5.7161733124644343e-09
Complementarity.........:   3.1965380960736126e-06    3.1965380960736126e-06
Overall NLP error.......:   6.2835406816353093e-09    2.0068608320707337e-02


Number of objective function evaluations             = 80
Number of objective gradient evaluations             = 47
Number of equality constraint evaluations            = 80
Number of inequality constraint evaluations          = 80
Number of equality constraint Jacobian evaluations   = 47
Number of inequality constraint Jacobian evaluations = 47
Number of Lagrangian Hessian evaluations             = 46
Total CPU secs in IPOPT (w/o function evaluations)   =      0.124
Total CPU secs in NLP function evaluations           =      0.065

EXIT: Optimal Solution Found.
getobjectivevalue(m) = 17.00004479692221
This is Ipopt version 3.12.1, running with linear solver mumps.
NOTE: Other linear solvers might be more efficient (see Ipopt documentation).

Number of nonzeros in equality constraint Jacobian...:        2
Number of nonzeros in inequality constraint Jacobian.:        6
Number of nonzeros in Lagrangian Hessian.............:       12

Total number of variables............................:        3
                     variables with only lower bounds:        1
                variables with lower and upper bounds:        0
                     variables with only upper bounds:        0
Total number of equality constraints.................:        1
Total number of inequality constraints...............:        3
        inequality constraints with only lower bounds:        1
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        2

iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
   0  2.8250000e+01 3.00e+00 3.99e+00  -1.0 0.00e+00    -  0.00e+00 0.00e+00   0
   1  2.8257503e+01 2.97e+00 3.94e+00  -1.0 2.94e+00    -  5.49e-02 1.36e-02H  1
   2  2.8445116e+01 2.94e+00 1.64e+03  -1.0 2.86e+00    -  1.00e+00 8.24e-03h  1
   3  3.4236089e+01 2.21e+00 1.28e+03  -1.0 2.85e+00    -  1.00e+00 2.50e-01h  3
   4  3.0332964e+01 1.49e+00 2.75e+03  -1.0 3.77e+00    -  1.00e+00 3.25e-01F  1
   5  5.6218827e+01 2.10e+00 4.41e+03  -1.0 3.58e+00    -  1.00e+00 1.00e+00h  1
   6  7.2846098e+01 4.12e-05 4.18e+02  -1.0 2.10e+00    -  1.00e+00 1.00e+00h  1
   7  6.6944310e+01 7.18e-03 3.61e+02  -1.0 2.65e+00    -  1.80e-01 1.88e-01f  1
   8  5.0181208e+01 9.37e-02 2.09e+04  -1.0 1.74e+00    -  1.03e-01 1.00e+00f  1
   9  4.9645577e+01 8.58e-02 2.08e+04  -1.0 1.67e+01    -  8.11e-04 3.83e-03f  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  10  4.9615747e+01 8.55e-02 5.71e+04  -1.0 7.29e+00    -  4.26e-01 5.00e-04h  1
  11  3.3658653e+01 5.44e-01 4.40e+04  -1.0 4.03e+00    -  6.68e-02 1.00e+00f  1
  12  3.4973827e+01 7.26e-01 1.25e+05  -1.0 7.06e+00    -  1.00e+00 8.47e-02h  1
  13  3.4986736e+01 7.26e-01 3.75e+04  -1.0 3.78e+00    -  1.00e+00 1.68e-03h  1
  14  3.5014293e+01 6.99e-01 3.48e+04  -1.0 1.72e+00    -  1.00e+00 3.78e-02h  1
  15  3.8650644e+01 6.58e-02 1.22e+04  -1.0 1.66e+00    -  1.00e+00 1.00e+00h  1
  16  3.8784124e+01 1.14e-06 6.64e+01  -1.0 6.54e-02    -  1.00e+00 1.00e+00h  1
  17  3.5052300e+01 4.72e-02 4.58e+03  -1.7 1.44e+00    -  7.34e-01 6.44e-01f  1
  18  3.5338852e+01 4.01e-04 3.00e+01  -1.7 1.24e-01    -  1.00e+00 1.00e+00h  1
  19  3.5304438e+01 5.48e-06 3.34e+02  -2.5 9.29e-03    -  1.00e+00 1.00e+00f  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  20  3.4498600e+01 3.96e-03 8.22e+02  -2.5 2.44e-01    -  1.00e+00 1.00e+00f  1
  21  3.4519884e+01 2.63e-06 2.60e+01  -2.5 1.07e-02    -  1.00e+00 1.00e+00h  1
  22  3.2390487e+01 7.60e-02 1.09e+03  -2.5 1.03e+00    -  1.00e+00 1.00e+00f  1
  23  3.2438536e+01 1.25e-03 1.21e+01  -2.5 1.89e-01    -  1.00e+00 1.00e+00h  1
  24  3.2431445e+01 8.27e-07 1.31e+01  -2.5 1.56e-03    -  1.00e+00 1.00e+00h  1
  25  3.1807868e+01 2.67e-02 1.94e+03  -2.5 5.43e-01    -  1.00e+00 9.29e-01f  1
  26  3.1789249e+01 1.76e-04 1.83e+01  -2.5 6.31e-02    -  1.00e+00 1.00e+00f  1
  27  3.1755096e+01 1.41e-04 1.47e+04  -2.5 3.04e-02    -  4.95e-01 1.00e+00f  1
  28  3.1720333e+01 1.66e-04 4.19e+02  -2.5 3.26e-02    -  1.00e+00 9.95e-01f  1
  29  3.1709360e+01 5.40e-05 1.09e+03  -2.5 1.31e-02   2.0 1.00e+00 7.79e-01f  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  30  3.1675834e+01 1.81e-04 1.39e+02  -2.5 3.34e-02   1.5 1.00e+00 1.00e+00f  1
  31  3.1633866e+01 3.27e-04 3.10e+04  -2.5 4.41e-02    -  3.18e-01 1.00e+00f  1
  32  3.1632821e+01 3.14e-04 3.32e+04  -2.5 2.75e-02    -  1.00e+00 3.92e-02h  1
  33  3.1610329e+01 1.04e-04 5.89e+02  -2.5 2.40e-02    -  1.00e+00 1.00e+00f  1
  34  3.1596296e+01 4.42e-05 3.70e+01  -2.5 1.56e-02   1.9 1.00e+00 1.00e+00h  1
  35  3.1572807e+01 1.38e-04 2.58e+02  -2.5 2.76e-02   1.5 1.00e+00 1.00e+00f  1
  36  3.1536228e+01 3.93e-04 5.40e+04  -2.5 4.58e-02    -  2.69e-01 1.00e+00f  1
  37  3.1535636e+01 3.82e-04 5.75e+04  -2.5 2.53e-02    -  1.00e+00 2.81e-02h  1
  38  3.1519032e+01 8.65e-05 8.97e+02  -2.5 2.06e-02    -  1.00e+00 1.00e+00f  1
  39  3.1485939e+01 4.36e-04 6.67e+01  -2.5 4.68e-02   1.9 1.00e+00 1.00e+00f  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  40  3.1465504e+01 1.83e-04 4.97e+03  -2.5 2.91e-02    -  5.20e-01 1.00e+00f  1
  41  3.1464206e+01 1.75e-04 6.76e+03  -2.5 3.77e-02    -  1.00e+00 5.09e-02h  1
  42  3.1441974e+01 2.80e-04 4.13e+02  -2.5 3.72e-02    -  1.00e+00 9.49e-01f  1
  43  3.1419423e+01 3.31e-04 1.77e+01  -2.5 3.81e-02   1.4 1.00e+00 1.00e+00f  1
  44  3.1374435e+01 2.14e-03 1.89e+03  -2.5 9.53e-02    -  5.60e-01 1.00e+00f  1
  45  3.1352238e+01 4.86e-04 1.02e+02  -2.5 4.08e-02    -  1.00e+00 1.00e+00h  1
  46  3.1346244e+01 3.41e-02 3.76e+02  -2.5 7.04e-01   0.9 3.46e-01 5.00e-01f  2
  47  3.1261320e+01 3.70e-03 3.99e+01  -2.5 6.06e-02    -  1.00e+00 1.00e+00h  1
  48  3.1256212e+01 1.62e-04 1.75e+00  -2.5 2.91e-03   1.4 1.00e+00 9.58e-01h  1
  49  3.1255165e+01 8.47e-04 9.46e+01  -2.5 7.25e-01    -  1.00e+00 5.21e-02f  4
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  50  3.1254634e+01 1.36e-03 3.58e+01  -2.5 1.03e+00    -  3.12e-01 3.12e-02h  6
  51  3.1255207e+01 2.33e-03 5.54e+01  -2.5 8.16e+00    -  2.11e-01 5.20e-03f  4
  52  3.1255236e+01 2.63e-03 2.86e+01  -2.5 4.37e-01    -  3.26e-01 6.25e-02h  5
  53  3.1251579e+01 6.38e-04 1.52e+01  -2.5 3.43e-03   0.9 1.00e+00 7.59e-01h  1
  54  3.1252388e+01 1.28e-03 9.21e+01  -2.5 2.72e-01    -  1.00e+00 1.25e-01f  4
  55  3.1253688e+01 2.11e-03 5.41e+01  -2.5 1.66e-01    -  1.00e+00 2.50e-01h  3
  56  3.1253772e+01 2.15e-03 5.53e+01  -2.5 2.53e-01    -  1.00e+00 6.25e-02h  5
  57  3.1253691e+01 2.14e-03 7.67e+00  -2.5 1.05e-01    -  1.00e+00 2.50e-01h  3
  58  3.1254374e+01 2.62e-03 1.21e+01  -2.5 1.44e-01    -  1.00e+00 2.50e-01h  3
  59  3.1254201e+01 2.61e-03 2.62e+01  -2.5 1.53e-01    -  1.00e+00 1.25e-01h  4
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  60  3.1254102e+01 2.65e-03 5.52e+01  -2.5 2.45e-01    -  1.00e+00 6.25e-02h  5
  61  3.1249782e+01 1.14e-04 1.10e+00  -2.5 5.86e-03   0.4 1.00e+00 9.68e-01h  1
  62  3.1249729e+01 1.07e-04 7.87e+02  -2.5 2.01e-02  -0.1 1.00e+00 9.57e-02f  2
  63  3.1249714e+01 1.07e-04 1.17e+03  -2.5 1.40e-01  -0.5 1.00e+00 7.81e-03h  8
  64  3.1249420e+01 3.18e-04 2.55e+02  -2.5 3.88e-02  -0.1 8.42e-01 1.00e+00H  1
  65  3.1249452e+01 2.88e-04 6.93e+02  -2.5 9.75e-04   1.2 1.00e+00 9.35e-02h  2
  66  3.1249902e+01 2.09e-05 2.44e+02  -2.5 8.16e-03   0.7 1.00e+00 7.98e-01h  1
  67  3.1249905e+01 1.58e-05 1.81e+03  -2.5 9.09e-04    -  1.00e+00 2.44e-01f  2
  68  3.1249931e+01 4.41e-06 2.68e+03  -2.5 5.70e-03    -  1.00e+00 4.19e-01h  2
  69  3.1249932e+01 6.44e-07 4.25e+02  -2.5 1.10e-03    -  1.00e+00 9.42e-01h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  70  3.1249929e+01 2.48e-06 4.88e+04  -2.5 1.05e-02   0.3 1.00e+00 1.45e-01f  2
  71  3.1249928e+01 2.48e-06 8.47e+04  -2.5 1.28e-02   0.7 1.00e+00 1.56e-02h  7
  72  3.1249924e+01 2.35e-06 8.50e+04  -2.5 3.06e-03   1.1 1.00e+00 2.50e-01h  3
  73  3.1249917e+01 7.84e-07 1.60e+02  -2.5 9.66e-04   1.5 1.00e+00 1.00e+00h  1
  74  3.1249916e+01 5.13e-09 4.28e+00  -2.5 7.77e-05   2.0 1.00e+00 1.00e+00h  1
  75  3.1249916e+01 2.94e-09 1.64e+01  -3.8 5.92e-05   1.5 1.00e+00 1.00e+00h  1
  76  3.1249912e+01 1.08e-06 1.74e-01  -3.8 1.14e-03    -  1.00e+00 1.00e+00h  1
  77  3.1249909e+01 3.09e-08 6.40e-03  -3.8 1.91e-04   1.0 1.00e+00 1.00e+00h  1
  78  3.1249907e+01 2.60e-07 8.60e+00  -5.7 5.56e-04   0.5 1.00e+00 1.00e+00h  1
  79  3.1249902e+01 4.54e-06 6.60e-02  -5.7 2.32e-03    -  1.00e+00 1.00e+00h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  80  3.1249888e+01 3.19e-06 2.68e-02  -5.7 1.94e-03   0.1 1.00e+00 1.00e+00h  1
  81  3.1249818e+01 1.93e-05 1.61e+02  -5.7 7.17e-03  -0.4 4.17e-01 1.00e+00H  1
  82  3.1249818e+01 1.58e-06 1.43e+02  -5.7 1.44e-02    -  1.00e+00 2.67e-01h  2
  83  3.1249814e+01 2.44e-05 1.74e+02  -5.7 5.07e-02    -  1.00e+00 1.08e-01h  4
  84  3.1249806e+01 6.00e-05 1.36e+02  -5.7 1.04e-01    -  9.15e-02 6.25e-02h  5
  85  3.1249779e+01 8.10e-05 1.69e+02  -5.7 9.92e-02    -  1.00e+00 5.25e-02h  4
  86  3.1249779e+01 1.77e-04 1.63e+02  -5.7 8.66e-02    -  9.32e-02 1.25e-01h  4
  87  3.1249724e+01 2.43e-04 1.65e+02  -5.7 1.47e-01    -  1.00e+00 6.25e-02h  5
  88  3.1249661e+01 3.56e-04 1.59e+02  -5.7 3.62e-01    -  3.16e-02 3.12e-02h  6
  89  3.1249501e+01 4.74e-04 1.36e+02  -5.7 1.03e-01  -0.9 1.00e+00 1.25e-01h  4
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  90  3.1249353e+01 1.06e-03 6.82e+01  -5.7 5.74e-02  -0.5 4.27e-01 5.00e-01h  2
  91  3.1248203e+01 2.04e-03 4.74e+00  -5.7 4.32e-02  -0.0 1.00e+00 1.00e+00h  1
  92  3.1244516e+01 1.62e-04 3.58e-02  -5.7 1.29e-02   0.4 1.00e+00 1.00e+00h  1
  93  3.1243057e+01 1.78e-03 3.66e-02  -5.7 4.13e-02  -0.1 1.00e+00 1.00e+00h  1
  94  3.1240048e+01 5.60e-03 1.58e+01  -5.7 5.09e-01  -0.6 4.79e-03 1.25e-01h  4
  95  3.1225109e+01 9.04e-03 2.04e+00  -5.7 1.00e-01  -0.1 1.00e+00 1.00e+00h  1
  96  3.1204906e+01 2.22e-03 1.05e-01  -5.7 5.47e-02   0.3 1.00e+00 1.00e+00h  1
  97  3.1176186e+01 3.90e-02 2.03e-01  -5.7 2.23e-01  -0.2 1.00e+00 1.00e+00h  1
  98  3.1175961e+01 3.86e-02 8.60e+01  -5.7 2.42e+00  -0.7 4.75e-01 2.05e-04F  1
  99  3.1139892e+01 7.80e-05 7.26e+01  -5.7 1.96e-02    -  5.42e-01 1.00e+00h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
 100  3.1135742e+01 1.00e-04 1.52e+02  -5.7 3.52e-01  -0.2 1.00e+00 3.60e-02f  1
 101  3.1112204e+01 7.68e-01 4.36e+03  -5.7 1.11e+00  -0.7 1.91e-02 1.00e+00f  1
 102  3.1095876e+01 7.57e-01 4.30e+03  -5.7 1.07e+00   2.4 1.73e-03 1.43e-02h  1
 103  2.1099710e+01 6.59e+01 1.08e+06  -5.7 1.85e+01   1.9 1.45e-01 1.00e+00f  1
 104  1.6843167e+01 6.53e+01 1.07e+06  -5.7 2.54e+01    -  1.00e+00 7.99e-03H  1
 105  7.4037825e+00 6.32e+01 1.03e+06  -5.7 1.99e+01   3.3 1.00e+00 2.55e-02H  1
 106  7.4037530e+00 6.32e+01 2.75e+06  -5.7 9.22e+00    -  1.00e+00 2.62e-07H  1
 107  1.8707674e+01 4.74e+01 8.59e+05  -5.7 6.44e+00    -  7.60e-01 2.50e-01h  3
 108  2.6148620e+01 3.56e+01 6.93e+05  -5.7 2.68e+00    -  1.38e-05 2.50e-01h  3
 109  2.8933773e+01 3.20e+01 6.66e+05  -5.7 3.89e+01   2.8 2.24e-08 6.25e-02h  5
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
 110  3.0878439e+01 2.33e+01 5.25e+05  -5.7 4.60e+00    -  9.11e-01 2.50e-01h  3
 111  3.1110041e+01 1.85e+01 4.18e+05  -5.7 7.30e+00    -  6.34e-01 2.17e-01h  2
 112  3.1293143e+01 1.40e+01 3.15e+05  -5.7 8.10e+00    -  3.00e-06 2.63e-01h  1
 113r 3.1293143e+01 1.40e+01 9.99e+02   1.1 0.00e+00   2.3 0.00e+00 2.43e-07R  2
 114r 3.1293096e+01 1.40e+01 1.00e+03   1.1 9.63e+06    -  3.51e-06 7.54e-12f  2
 115r 3.1789489e+01 3.83e-01 9.97e+02   1.1 1.09e+04    -  1.54e-02 1.28e-03f  1
 116  2.8939912e+01 4.91e-02 1.25e+01  -5.7 1.63e+00    -  9.18e-02 1.00e+00f  1
 117  2.8656512e+01 4.32e-01 8.11e+00  -5.7 7.72e+00    -  3.28e-01 7.68e-01h  1
 118  2.8696061e+01 3.91e-01 7.23e+00  -5.7 1.19e+01    -  1.00e+00 1.08e-01h  1
 119  2.8539536e+01 4.86e-01 6.41e+00  -5.7 1.59e+01    -  1.00e+00 5.61e-01f  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
 120  2.8452584e+01 6.15e-01 3.97e+00  -5.7 2.42e+01    -  1.00e+00 6.30e-01h  1
 121  2.8498677e+01 2.17e-03 4.45e+02  -5.7 1.69e-01    -  2.56e-02 1.00e+00h  1
 122  2.8496956e+01 2.00e-03 4.45e+02  -5.7 3.54e+01    -  1.00e+00 9.38e-03h  1
 123  2.8355673e+01 1.03e+00 3.88e+02  -5.7 2.78e+01    -  9.33e-02 1.00e+00f  1
 124  2.8375521e+01 7.63e-01 2.83e+02  -5.7 1.39e+01    -  1.00e+00 2.80e-01h  1
 125  2.8404165e+01 5.08e-02 8.04e+01  -5.7 6.50e+00    -  9.90e-04 1.00e+00h  1
 126  2.8325438e+01 7.92e-01 6.93e+01  -5.7 4.77e+01    -  1.00e+00 8.27e-01h  1
 127  2.8334683e+01 6.71e-02 5.52e+02  -5.7 2.61e+01    -  1.44e-04 1.00e+00h  1
 128  2.8316268e+01 1.19e-01 1.67e+02  -5.7 4.22e+01    -  1.00e+00 6.98e-01h  1
 129  2.8274077e+01 1.26e+00 8.96e+01  -5.7 1.18e+02    -  1.00e+00 1.00e+00h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
 130  2.8272658e+01 6.15e-02 1.31e+02  -5.7 2.24e+02    -  1.34e-01 1.00e+00h  1
 131  2.8264288e+01 4.49e-01 1.81e+00  -5.7 3.25e+02    -  1.00e+00 6.13e-01h  1
 132  2.8264171e+01 4.48e-01 1.81e+04  -5.7 1.74e+03    -  5.35e-01 3.61e-03h  1
 133  2.8266271e+01 1.01e-02 1.36e+04  -5.7 1.90e+01    -  5.73e-01 1.00e+00h  1
 134  2.8258411e+01 7.00e-01 9.95e+03  -5.7 3.55e+02    -  1.00e+00 1.00e+00h  1
 135  2.8258629e+01 6.80e-01 9.66e+03  -5.7 6.39e+02    -  1.00e+00 2.92e-02h  1
 136  2.8261215e+01 5.27e-03 2.75e+01  -5.7 8.12e+00    -  1.00e+00 1.00e+00h  1
 137  2.8258224e+01 2.15e-01 7.90e+04  -5.7 2.87e+02    -  7.01e-02 1.00e+00h  1
 138  2.8258631e+01 7.65e-02 2.82e+04  -5.7 7.93e-05   1.8 1.00e+00 6.44e-01h  1
 139  2.8256620e+01 1.77e-01 1.19e+04  -5.7 3.51e+02    -  1.00e+00 1.00e+00f  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
 140  2.8256747e+01 1.23e-01 8.29e+03  -5.7 5.19e-05   1.4 1.00e+00 3.05e-01h  1
 141  2.8257034e+01 2.64e-10 5.97e-01  -5.7 3.60e-05   0.9 1.00e+00 1.00e+00h  1
 142  2.8253234e+01 8.77e-01 5.35e+02  -5.7 9.22e+02    -  8.54e-01 1.00e+00f  1
 143  2.8251785e+01 8.19e-01 3.84e+02  -5.7 2.26e+03    -  1.00e+00 1.00e+00h  1
 144  2.8251645e+01 7.46e-01 3.91e+02  -5.7 5.22e+03    -  1.00e+00 1.14e-01h  1
 145  2.8250603e+01 1.38e+00 3.68e+02  -5.7 5.29e+03    -  1.00e+00 1.00e+00h  1
 146  2.8250481e+01 3.45e-01 2.62e+01  -5.7 1.13e+04    -  9.12e-01 1.00e+00h  1
 147  2.8249784e+01 6.09e+00 1.98e+01  -5.7 3.49e+04    -  1.00e+00 1.00e+00h  1
 148  2.8250210e+01 1.15e-13 1.98e-03  -5.7 5.34e-05   0.4 1.00e+00 1.00e+00h  1
 149  2.8250105e+01 7.47e-01 1.20e+02  -5.7 2.84e+04    -  1.00e+00 1.00e+00h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
 150  2.8250053e+01 9.23e-01 1.18e+01  -5.7 7.07e+04    -  1.00e+00 1.00e+00h  1
 151  2.8250030e+01 8.08e-01 3.36e+02  -5.7 1.38e+05    -  1.00e+00 1.00e+00h  1
 152  2.8250020e+01 5.06e-01 2.34e+02  -5.7 2.06e+05    -  1.00e+00 1.00e+00h  1
 153  2.8250019e+01 4.09e-02 1.04e+02  -5.7 1.32e+05    -  1.00e+00 1.00e+00h  1
 154  2.8250018e+01 1.17e-03 2.78e+00  -5.7 1.77e+04    -  1.00e+00 1.00e+00h  1
 155  2.8250018e+01 1.07e-07 4.69e-04  -5.7 9.52e+01    -  1.00e+00 1.00e+00h  1
 156  2.8250018e+01 6.48e-14 9.42e-11  -5.7 8.52e-02    -  1.00e+00 1.00e+00h  1
 157  2.8250010e+01 5.66e-01 2.30e+02  -8.6 2.82e+05    -  6.98e-01 1.00e+00f  1
 158  2.8250004e+01 1.24e+00 1.91e+02  -8.6 7.97e+05    -  3.56e-01 9.72e-01h  1
 159  2.8250002e+01 9.56e-01 1.90e+01  -8.6 1.99e+06    -  1.00e+00 1.00e+00h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
 160  2.8250001e+01 5.57e-01 3.23e+01  -8.6 2.98e+06    -  6.53e-01 1.00e+00h  1
 161  2.8250002e+01 4.44e-16 2.73e-06  -8.6 1.01e-06  -0.1 1.00e+00 1.00e+00h  1
 162  2.8250001e+01 4.99e-01 1.33e+00  -8.6 2.73e+06    -  1.00e+00 1.00e+00h  1
 163  2.8250001e+01 2.59e-01 6.90e-01  -8.6 4.11e+06    -  1.00e+00 1.00e+00h  1
 164  2.8250001e+01 4.44e-16 3.15e-08  -8.6 1.14e-07  -0.6 1.00e+00 1.00e+00h  1
 165  2.8250001e+01 0.00e+00 3.15e-08  -8.6 3.40e-07  -1.0 1.00e+00 1.00e+00h  1
 166  2.8250001e+01 0.00e+00 3.14e-08  -8.6 1.02e-06  -1.5 1.00e+00 1.00e+00h  1
 167  2.8250001e+01 0.00e+00 3.10e-08  -8.6 3.01e-06  -2.0 1.00e+00 1.00e+00h  1
 168  2.8250001e+01 0.00e+00 2.99e-08  -8.6 8.71e-06  -2.5 1.00e+00 1.00e+00h  1
 169  2.8250001e+01 0.00e+00 2.68e-08  -8.6 2.35e-05  -2.9 1.00e+00 1.00e+00h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
 170  2.8250001e+01 0.00e+00 2.01e-08  -8.6 5.29e-05  -3.4 1.00e+00 1.00e+00h  1
 171  2.8250001e+01 0.00e+00 1.63e-07  -9.0 1.29e-03  -3.9 1.00e+00 1.00e+00h  1
 172  2.8250001e+01 0.00e+00 6.59e-08  -9.0 1.56e-03  -4.4 1.00e+00 1.00e+00h  1
 173  2.8250001e+01 0.00e+00 1.25e-09  -9.0 8.87e-05  -4.9 1.00e+00 1.00e+00h  1

Number of Iterations....: 173

                                   (scaled)                 (unscaled)
Objective...............:   2.8250000889023742e+01    2.8250000889023742e+01
Dual infeasibility......:   1.2510632692108200e-09    1.2510632692108200e-09
Constraint violation....:   0.0000000000000000e+00    0.0000000000000000e+00
Complementarity.........:   9.1505274351891562e-10    9.1505274351891562e-10
Overall NLP error.......:   1.2510632692108200e-09    1.2510632692108200e-09


Number of objective function evaluations             = 331
Number of objective gradient evaluations             = 173
Number of equality constraint evaluations            = 331
Number of inequality constraint evaluations          = 331
Number of equality constraint Jacobian evaluations   = 175
Number of inequality constraint Jacobian evaluations = 175
Number of Lagrangian Hessian evaluations             = 173
Total CPU secs in IPOPT (w/o function evaluations)   =      0.092
Total CPU secs in NLP function evaluations           =      0.016

EXIT: Optimal Solution Found.
getobjectivevalue(m) = 28.25000088902374
ERROR: LoadError: LoadError: LoadError: UndefVarError: lowerbound not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/JuMP/src/macros.jl:198 [inlined]
 [2] macro expansion at /home/vagrant/.julia/v0.6/Complementarity/src/mpec.jl:273 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/Complementarity/test/../examples/mpec/gnash1m.jl:99 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/../examples/mpec/gnash1m.jl, in expression starting on line 98
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mpec.jl, in expression starting on line 7
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests.jl, in expression starting on line 6
===========================[ ERROR: Complementarity ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Complementarity/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Ipopt v0.2.6
ERROR: Complementarity had test errors

>>> End of log
