>>> 'Pkg.add("Complementarity")' log
INFO: Cloning cache of Complementarity from https://github.com/chkwon/Complementarity.jl.git
INFO: Cloning cache of PATHSolver from https://github.com/chkwon/PATHSolver.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing Complementarity v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.4.2
INFO: Installing JuMP v0.16.2
INFO: Installing Lazy v0.11.6
INFO: Installing LineSearches v0.1.5
INFO: Installing MacroTools v0.3.6
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PATHSolver v0.2.0
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing ReverseDiffSparse v0.7.2
INFO: Installing SHA v0.3.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing URIParser v0.1.8
INFO: Building PATHSolver
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/PATHSolver/deps/downloads
INFO: Downloading file https://github.com/chkwon/PathJulia/archive/0.1.2.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   123    0   123    0     0   1290      0 --:--:-- --:--:-- --:--:--  1294
  0     0    0  177k    0     0   422k      0 --:--:-- --:--:-- --:--:--  422k  0     0    0  493k    0     0  1112k      0 --:--:-- --:--:-- --:--:-- 13.9M
INFO: Done downloading file https://github.com/chkwon/PathJulia/archive/0.1.2.tar.gz
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/PATHSolver/deps/src
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/PATHSolver/deps
INFO: Directory /home/vagrant/.julia/v0.6/PATHSolver/deps already created
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/PATHSolver/deps/usr/lib
INFO: Changing Directory to /home/vagrant/.julia/v0.6/PATHSolver/deps/src/PathJulia-0.1.2/src
2017-05-26 11:10:16 URL:https://codeload.github.com/ampl/pathlib/tar.gz/4.7.03 [3840157] -> "4.7.03.tar.gz" [1]
INFO: Changing Directory to /home/vagrant/.julia/v0.6/PATHSolver/deps/src/PathJulia-0.1.2/src
INFO: Package database updated

>>> 'Pkg.test("Complementarity")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (876.87890625 MB free)
Uptime: 24471.0 sec
Load Avg:  1.0830078125  1.001953125  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3515 MHz    1435343 s       5792 s      66167 s     580491 s         18 s
#2  3515 MHz     257708 s         52 s      33069 s    2124331 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Complementarity               0.2.2
 - JSON                          0.12.0
21 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - Distances                     0.4.1
 - ForwardDiff                   0.4.2
 - JuMP                          0.16.2
 - Lazy                          0.11.6
 - LineSearches                  0.1.5
 - MacroTools                    0.3.6
 - MathProgBase                  0.6.4
 - NLsolve                       0.9.1
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PATHSolver                    0.2.0
 - PositiveFactorizations        0.0.4
 - ReverseDiffSparse             0.7.2
 - SHA                           0.3.3
 - SpecialFunctions              0.1.1
 - URIParser                     0.1.8
INFO: Computing test dependencies for Complementarity...
INFO: Installing Ipopt v0.2.6
INFO: Building Ipopt
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/Ipopt/deps/downloads
INFO: Directory /home/vagrant/.julia/v0.6/Ipopt/deps/downloads already created
INFO: Downloading file http://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.1.tgz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:19 --:--:--     0100   270  100   270    0     0     13      0  0:00:20  0:00:19  0:00:01    63
  0     0    0     0    0     0      0      0 --:--:--  0:00:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:03:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:04:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:05:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:06:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:07:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:08:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:09:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:10:20 --:--:--     0
curl: (28) Operation timed out after 0 milliseconds with 0 out of 0 bytes received
================================[ ERROR: Ipopt ]================================

LoadError: failed process: Process(`curl -f -o /home/vagrant/.julia/v0.6/Ipopt/deps/downloads/Ipopt-3.12.1.tgz -L http://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.1.tgz`, ProcessExited(28)) [28]
while loading /home/vagrant/.julia/v0.6/Ipopt/deps/build.jl, in expression starting on line 89

================================================================================

================================[ BUILD ERRORS ]================================

WARNING: Ipopt had build errors.

 - packages with build errors remain installed in /home/vagrant/.julia/v0.6
 - build the package(s) and all dependencies with `Pkg.build("Ipopt")`
 - build a single package by running its `deps/build.jl` script

================================================================================
INFO: Testing Complementarity

WARNING: deprecated syntax "abstract AbstractDifferentiableMultivariateFunction" at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:2.
Use "abstract type AbstractDifferentiableMultivariateFunction end" instead.
getvalue(x) = x: 2 dimensions:
[  seattle,:]
  [  seattle,new-york] = 49.99999533220467
  [  seattle, chicago] = 300.0
  [  seattle,  topeka] = 0.0
[san-diego,:]
  [san-diego,new-york] = 275.00000466779534
  [san-diego, chicago] = 0.0
  [san-diego,  topeka] = 275.0
getvalue(w) = w: 1 dimensions:
[  seattle] = 0.0
[san-diego] = 0.0
getvalue(p) = p: 1 dimensions:
[new-york] = 0.22499999999999992
[ chicago] = 0.15299999999999955
[  topeka] = 0.126
status = :Solved
Reading options file path.opt
 > convergence_tolerance 1.0e-8
 > output yes
 > time_limit 3600
Read of options file complete.

11 row/cols, 24 non-zeros, 19.83% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  0.0000e+00 var: (w[seattle])
Maximum of F. . . . . . . . . .  6.0000e+02 eqn: (supply[san-diego])
Maximum of Grad F . . . . . . .  1.0000e+00 eqn: (profit[seattle,new-york])
                                            var: (w[seattle])

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  3.0000e+00 eqn: (supply[seattle])
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (fxdemand[new-york])
Maximum Column Norm . . . . . .  3.0000e+00 var: (w[seattle])
Minimum Column Norm . . . . . .  2.0000e+00 var: (p[new-york])

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             1.0416e+03             0.0e+00 (fxdemand[new-york])
    1     1     9     3 1.0029e+03  1.0e+00    1.0e+01 (fxdemand[new-york])
    2     2     6     9 9.4289e+02  1.0e+00    9.0e+00 (fxdemand[new-york])
    3     3     0     9 8.8483e+02  1.0e+00    8.1e+00 (fxdemand[new-york])
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0     4     4 8.8483e+02           I 7.3e+00 4.9e+02 (fxdemand[new-yo)
    1     1     5     5 7.2119e+02  1.0e+00 SO 2.9e+00 2.6e+02 (profit[seattle,)
    2     2     6     6 3.6245e+02  1.0e+00 SO 1.2e+00 1.9e+02 (profit[san-dieg)
    3     2     7     7 5.9071e+01  1.0e+00 SO 4.7e-01 3.3e+01 (supply[san-dieg)
    4     1     8     8 1.6118e+01  1.0e+00 SO 1.9e-01 7.7e+00 (supply[seattle])
    5     6     9     9 4.3905e-01  1.0e+00 SO 7.5e-02 2.2e-01 (profit[san-dieg)
    6     4    10    10 2.0855e-01  1.0e+00 SO 3.0e-02 1.1e-01 (profit[seattle,)
    7     1    11    11 2.6297e-02  1.0e+00 SO 1.2e-02 1.8e-02 (profit[san-dieg)
    8     1    12    12 2.6239e-02  1.0e+00 SO 2.6e-03 1.8e-02 (profit[san-dieg)
    9     1    13    13 2.6238e-02  1.0e+00 SO 1.1e-03 1.8e-02 (profit[san-dieg)
   10     2    14    14 2.3838e-02  1.0e+00 SO 4.2e-04 1.4e-02 (profit[san-dieg)
   11     2    15    15 9.5865e-03  1.0e+00 SO 1.7e-04 6.0e-03 (profit[san-dieg)
   12     3    16    16 5.6196e-03  1.0e+00 SO 6.7e-05 3.9e-03 (profit[seattle,)
   13     2    17    17 3.5355e-03  1.0e+00 SO 2.7e-05 2.0e-03 (profit[san-dieg)
   14     2    18    18 6.9529e-08  1.0e+00 SO 1.1e-05 6.6e-08 (fxdemand[chicag)
   15     1    19    19 4.5944e-16  1.0e+00 SO 7.0e-09 4.4e-16 (profit[seattle,)

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.3323e-13 eqn: (profit[seattle,chicago])
Inf-Norm of Normal Map. . . . .  4.4409e-16 eqn: (profit[seattle,chicago])
Inf-Norm of Minimum Map . . . .  0.0000e+00 eqn: (supply[seattle])
Inf-Norm of Fischer Function. .  4.4409e-16 eqn: (profit[seattle,chicago])
Inf-Norm of Grad Fischer Fcn. .  5.2736e-16 eqn: (supply[seattle])
Two-Norm of Grad Fischer Fcn. .  7.1413e-16

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  3.0000e+02 var: (x[seattle,chicago])
Maximum of F. . . . . . . . . .  5.0000e+01 eqn: (supply[san-diego])
Maximum of Grad F . . . . . . .  1.0000e+00 eqn: (profit[seattle,new-york])
                                            var: (w[seattle])

 ** EXIT - solution found.

Major Iterations. . . . 15
Minor Iterations. . . . 31
Restarts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 19
Gradient Evaluations. . 19
Basis Time. . . . . . . 0.000470
Total Time. . . . . . . 0.023432
Residual. . . . . . . . 4.594365e-16
Reading options file path.opt
 > convergence_tolerance 1.0e-6
 > output yes
 > time_limit 43200
 > minor_iteration_limit 1000
 > cumulative_iteration_limit 1000000000
Read of options file complete.

7 row/cols, 20 non-zeros, 40.82% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .INFO: -------[Testing Complementarity/PATHSolver]------------------------------------------
  0.0000e+00 var: (xname[s001])
Maximum of F. . . . . . . . . .  1.0000e+01 eqn: (KKT_xname[s001])
Maximum of Grad F . . . . . . .  1.0000e+00 eqn: (market_lambda1)
                                            var: (xname[s001])

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  5.0000e+00 eqn: (market_lambda1)
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (KKT_xname[s001])
Maximum Column Norm . . . . . .  5.0000e+00 var: (lambda1)
Minimum Column Norm . . . . . .  2.0000e+00 var: (xname[s001])

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             2.0000e+01             0.0e+00 (market_lambda1)
    1     7     4     1 1.7634e+01  6.9e-02    2.0e-01 (market_lambda1)
    2     8     4     4 1.8093e+00  1.0e+00    1.8e-01 (market_lambda2)
    3     9     1     4 1.3549e-02  1.0e+00    1.8e-02 (market_lambda2)
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0    10     4 1.3549e-02           I 1.4e-04 8.5e-03 (market_lambda2)
    1     1    11     5 3.6611e-07  1.0e+00 SO 5.4e-05 2.3e-07 (KKT_ynoname[s00)

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.1410e-06 eqn: (KKT_xname[s002])
Inf-Norm of Normal Map. . . . .  2.2820e-07 eqn: (KKT_xname[s002])
Inf-Norm of Minimum Map . . . .  2.2820e-07 eqn: (KKT_xname[s002])
Inf-Norm of Fischer Function. .  2.2820e-07 eqn: (KKT_ynoname[s001])
Inf-Norm of Grad Fischer Fcn. .  4.5641e-07 eqn: (market_lambda2)
Two-Norm of Grad Fischer Fcn. .  8.4586e-07

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  5.0000e+00 var: (xname[s002])
Maximum of F. . . . . . . . . .  8.0000e+00 eqn: (KKT_xname[s001])
Maximum of Grad F . . . . . . .  1.0000e+00 eqn: (market_lambda1)
                                            var: (xname[s001])

 ** EXIT - solution found.

Major Iterations. . . . 1
Minor Iterations. . . . 1
Restarts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 11
Gradient Evaluations. . 5
Basis Time. . . . . . . 0.000047
Total Time. . . . . . . 0.014575
Residual. . . . . . . . 3.661146e-07
Reading options file path.opt
 > convergence_tolerance 1.0e-8
 > output yes
 > time_limit 3600
Read of options file complete.

4 row/cols, 12 non-zeros, 75.00% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  0.0000e+00 var: (x3)
Maximum of F. . . . . . . . . .  6.0000e+00 eqn: (F4)
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (F4)
                                            var: (x4)

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  9.0000e+00 eqn: (F4)
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (F1)
Maximum Column Norm . . . . . .  9.0000e+00 var: (x4)
Minimum Column Norm . . . . . .  2.0000e+00 var: (x1)

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             1.2649e+01             0.0e+00 (F4)
    1     2     4     2 1.0535e+01  8.0e-01    0.0e+00 (F1)
    2     3     2     4 8.4815e-01  1.0e+00    0.0e+00 (F4)
    3     4     0     3 4.4409e-16  1.0e+00    0.0e+00 (F3)
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0     5     4 4.4409e-16           I 0.0e+00 4.4e-16 (F3)

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.5527e-16 eqn: (F3)
Inf-Norm of Normal Map. . . . .  4.4409e-16 eqn: (F3)
Inf-Norm of Minimum Map . . . .  4.4409e-16 eqn: (F3)
Inf-Norm of Fischer Function. .  4.4409e-16 eqn: (F3)
Inf-Norm of Grad Fischer Fcn. .  8.8818e-16 eqn: (F3)
Two-Norm of Grad Fischer Fcn. .  1.4043e-15

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  2.8000e+00 var: (x1)
Maximum of F. . . . . . . . . .  4.0000e-01 eqn: (F2)
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (F4)
                                            var: (x4)

 ** EXIT - solution found.

Major Iterations. . . . 0
Minor Iterations. . . . 0
Restarz = [2.8, 0.0, 0.8, 1.2]
Fz = [0.0, 0.4, 4.44089e-16, 0.0]
------------------------------------------------------------------
z = [2.8, 0.0, 0.8, 1.2]
Fz = [0.0, 0.4, 4.44089e-16, 0.0]
------------------------------------------------------------------
ts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 5
Gradient Evaluations. . 4
Basis Time. . . . . . . 0.000033
Total Time. . . . . . . 0.001882
Residual. . . . . . . . 4.440892e-16
Reading options file path.opt
 > convergence_tolerance 1.0e-8
 > output yes
 > time_limit 3600
Read of options file complete.

4 row/cols, 12 non-zeros, 75.00% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  0.0000e+00 var: (x3)
Maximum of F. . . . . . . . . .  6.0000e+00 eqn: (F4)
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (F4)
                                            var: (x4)

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  9.0000e+00 eqn: (F4)
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (F1)
Maximum Column Norm . . . . . .  9.0000e+00 var: (x4)
Minimum Column Norm . . . . . .  2.0000e+00 var: (x1)

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             1.2649e+01             0.0e+00 (F4)
    1     2     4     2 1.0535e+01  8.0e-01    0.0e+00 (F1)
    2     3     2     4 8.4815e-01  1.0e+00    0.0e+00 (F4)
    3     4     0     3 4.4409e-16  1.0e+00    0.0e+00 (F3)
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0     5     4 4.4409e-16           I 0.0e+00 4.4e-16 (F3)

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.5527e-16 eqn: (F3)
Inf-Norm of Normal Map. . . . .  4.4409e-16 eqn: (F3)
Inf-Norm of Minimum Map . . . .  4.4409e-16 eqn: (F3)
Inf-Norm of Fischer Function. .  4.4409e-16 eqn: (F3)
Inf-Norm of Grad Fischer Fcn. .  8.8818e-16 eqn: (F3)
Two-Norm of Grad Fischer Fcn. .  1.4043e-15

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  2.8000e+00 var: (x1)
Maximum of F. . . . . . . . . .  4.0000e-01 eqn: (F2)
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (F4)
                                            var: (x4)

 ** EXIT - solution found.

Major Iterations. . . . 0
Minor Iterations. . . . 0
Restarts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 5
Gradient Evaluations. . 4
Basis Time. . . . . . . 0.000033
Total Time. . . . . . . 0.001809
Residual. . . . . . . . 4.440892e-16
Reading options file path.opt
 > convergence_tolerance 1.0e-8
 > output yes
 > time_limit 3600
Read of options file complete.

4 row/cols, 12 non-zeros, 75.00% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  0.0000e+00 var: (myvariablename[1])
Maximum of F. . . . . . . . . .  6.0000e+00 eqn: (myconst[4])
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (myconst[4])
                                            var: (myvariablename[4])

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  9.0000e+00 eqn: (myconst[4])
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (myconst[1])
Maximum Column Norm . . . . . .  9.0000e+00 var: (myvariablename[4])
Minimum Column Norm . . . . . .  2.0000e+00 var: (myvariablename[1])

Crash Log
major  func  diff  size  residual    step       prox   (label)
    0     0             1.2649e+01             0.0e+00 (myconst[4])
    1     2     4     2 1.0535e+01  8.0e-01    0.0e+00 (myconst[1])
    2     3     2     4 8.4815e-01  1.0e+00    0.0e+00 (myconst[4])
    3     4     0     3 4.4409e-16  1.0e+00    0.0e+00 (myconst[3])
pn_search terminated: no basis change.

Major Iteration Log
major minor  func  grad  residual    step  type prox    inorm  (label)
    0     0     5     4 4.4409e-16           I 0.0e+00 4.4e-16 (myconst[3])

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.5527e-16 eqn: (myconst[3])
Inf-Norm of Normal Map. . . . .  4.4409e-16 eqn: (myconst[3])
Inf-Norm of Minimum Map . . . .  4.4409e-16 eqn: (myconst[3])
Inf-Norm of Fischer Function. .  4.4409e-16 eqn: (myconst[3])
Inf-Norm of Grad Fischer Fcn. .  8.8818e-16 ez = [2.8, 0.0, 0.8, 1.2]
Fz = [0.0, 0.4, 4.44089e-16, 0.0]
------------------------------------------------------------------
z = x: 1 dimensions:
[1] = 2.8
[2] = 0.0
[3] = 0.8
[4] = 1.2
------------------------------------------------------------------
INFO: -------[Testing Complementarity/NLsolve]------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [7] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [9] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [10] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [11] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 29
status = Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [0.0, 0.0, 0.0, 0.0]
 * Zero: [2.8, -8.05208e-10, 0.8, 1.2]
 * Inf-norm of residuals: 0.000000
 * Iterations: 8
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 9
 * Jacobian Calls (df/dx): 9
z = x: 1 dimensions:
[1] = 2.800000000145381
[2] = -8.052081014655471e-10
[3] = 0.7999999997613256
[4] = 1.2000000002386757
Fz = __anon__: 1 dimensions:
[1] = -1.3322676295501878e-15
[2] = 0.39999999928397423
[3] = -4.11182199400173e-12
[4] = -3.298339379398385e-11
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [7] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [9] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [10] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [11] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 68
status = Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [0.0, 0.0, 0.0, 0.0]
 * Zero: [2.8, -8.05208e-10, 0.8, 1.2]
 * Inf-norm of residuals: 0.000000
 * Iterations: 8
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 9
 * Jacobian Calls (df/dx): 9
z = x: 1 dimensions:
[1] = 2.800000000145381
[2] = -8.052081014655471e-10
[3] = 0.7999999997613256
[4] = 1.2000000002386757
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [7] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [9] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [10] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [11] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 103
status = Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [0.0, 0.0, 0.0, 0.0]
 * Zero: [2.8, -8.05208e-10, 0.8, 1.2]
 * Inf-norm of residuals: 0.000000
 * Iterations: 8
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 9
 * Jacobian Calls (df/dx): 9
z = [2.8, -8.05208e-10, 0.8, 1.2]
Fz = [-1.33227e-15, 0.4, -4.11182e-12, -3.29834e-11]
------------------------------------------------------------------
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [7] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [8] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [9] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [10] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [11] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 [4] (::NLsolve.#fg!#1{NLsolve.#f!#38{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#39{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 [5] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 [6] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [8] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [9] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [10] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [11] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [12] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [13] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #mcpsolve#21(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::Complementarity.#myfunc!#5{JuMP.Model}, ::Complementarity.#myjac!#6{JuMP.Model}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:55
 [8] (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [9] #_solve_nlsolve#4(::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:255
 [10] (::Complementarity.#kw##_solve_nlsolve)(::Array{Any,1}, ::Complementarity.#_solve_nlsolve, ::JuMP.Model) at ./<missing>:0
 [11] #solveMCP#1(::Symbol, ::Symbol, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/Complementarity/src/mcp.jl:101
 [12] (::Complementarity.#kw##solveMCP)(::Array{Any,1}, ::Complementarity.#solveMCP, ::JuMP.Model) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mcp_nlsolve.jl, in expression starting on line 145
status = Results of Nonlinear Solver Algorithm
 * Algorithm: Trust-region with dogleg and autoscaling
 * Starting Point: [1.25, 0.0, 0.0, 0.5]
 * Zero: [1.22474, 0.0, -2.02379e-19, 0.5]
 * Inf-norm of residuals: 0.000000
 * Iterations: 3
 * Convergence: true
   * |x - x'| < 0.0e+00: false
   * |f(x)| < 1.0e-08: true
 * Function Calls (f): 4
 * Jacobian Calls (df/dx): 4
z = x: 1 dimensions:
[1] = 1.2247448711263813
[2] = 0.0
[3] = -2.0237901522246342e-19
[4] = 0.5000000002286319
Fz = [-1.26298e-9, 3.22474, 5.0, 3.62723e-11]
INFO: -------[Testing Complementarity/MPEC]------------------------------------------
ERROR: LoadError: Ipopt not properly installed. Please run Pkg.build("Ipopt")
Stacktrace:
 [1] error(::String) at ./error.jl:21
 [2] include_from_node1(::String) at ./loading.jl:569
 [3] include(::String) at ./sysimg.jl:14
 [4] anonymous at ./<missing>:2
while loading /home/vagrant/.julia/v0.6/Ipopt/src/Ipopt.jl, in expression starting on line 10
ERROR: LoadError: LoadError: LoadError: Failed to precompile Ipopt to /home/vagrant/.julia/lib/v0.6/Ipopt.ji.
Stacktrace:
 [1] compilecache(::String) at ./loading.jl:703
 [2] _require(::Symbol) at ./loading.jl:490
 [3] require(::Symbol) at ./loading.jl:398
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Complementarity/test/../examples/mpec/bard1.jl, in expression starting on line 28
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests_mpec.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.6/Complementarity/test/runtests.jl, in expression starting on line 6
qn: (myconst[3])
Two-Norm of Grad Fischer Fcn. .  1.4043e-15

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  2.8000e+00 var: (myvariablename[1])
Maximum of F. . . . . . . . . .  4.0000e-01 eqn: (myconst[2])
Maximum of Grad F . . . . . . .  4.0000e+00 eqn: (myconst[4])
                                            var: (myvariablename[4])

 ** EXIT - solution found.

Major Iterations. . . . 0
Minor Iterations. . . . 0
Restarts. . . . . . . . 0
Crash Iterations. . . . 3
Gradient Steps. . . . . 0
Function Evaluations. . 5
Gradient Evaluations. . 4
Basis Time. . . . . . . 0.000023
Total Time. . . . . . . 0.006000
Residual. . . . . . . . 4.440892e-16
Reading options file path.opt
 > convergence_tolerance 1.0e-8
Read of options file complete.

4 row/cols, 12 non-zeros, 75.00% dense.

Path 4.7.03 (Wed May 28 13:11:13 2014)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

 ** EXIT - solution found.
===========================[ ERROR: Complementarity ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Complementarity/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Ipopt v0.2.6
ERROR: Complementarity had test errors

>>> End of log
