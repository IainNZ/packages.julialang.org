>>> 'Pkg.add("CUDAnativelib")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of CUDAnativelib from https://github.com/JuliaGPU/CUDAnativelib.jl.git
[ Info: Cloning cache of Cxx from https://github.com/Keno/Cxx.jl.git
[ Info: Installing CUDAapi v0.2.1
[ Info: Installing CUDAdrv v0.6.1
[ Info: Installing CUDAnative v0.5.3
[ Info: Installing CUDAnativelib v0.0.1
[ Info: Installing Cxx v0.2.0
[ Info: Installing LLVM v0.9.6
[ Info: Installing Reexport v0.1.0
[ Info: Building CUDAdrv
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/CUDAapi/src/compatibility.jl:20
WARNING: both CUDAapi and Base export "@debug"; uses of it in module __anon__ must be qualified
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAdrv
│   exception =
│    LoadError: LoadError: UndefVarError: @debug not defined
│    Stacktrace:
│     [1] top-level scope
│     [2] include at ./boot.jl:295 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1076
│     [4] include at ./sysimg.jl:29 [inlined]
│     [5] include(::String) at ./loading.jl:1110
│     [6] top-level scope
│     [7] eval at ./boot.jl:298 [inlined]
│     [8] eval at ./sysimg.jl:74 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1105 (repeats 2 times)
│     [10] #6 at ./none:13 [inlined]
│     [11] cd(::getfield(, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [12] (::getfield(, Symbol("##5#7")))(::IOStream) at ./none:12
│     [13] #open#316(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [14] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [15] top-level scope
│     [16] eval at ./boot.jl:298 [inlined]
│     [17] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [18] exec_options(::Base.JLOptions) at ./client.jl:309
│     [19] _start() at ./client.jl:448
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:86
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/deps/build.jl:46
└ @ Main none:16
WARNING: importing deprecated binding Base.STDERR into CUDAapi.
WARNING: Base.STDERR is deprecated, use stderr instead.
 in module CUDAapi
in #6 at /home/vagrant/.julia/v0.7/CUDAapi/src/logging.jl
[ Info: Building LLVM
WARNING: importing deprecated binding Base.STDERR into __anon__.
WARNING: Base.STDERR is deprecated, use stderr instead.
  likely near /home/vagrant/.julia/v0.7/LLVM/deps/build.jl:105
in main at /home/vagrant/.julia/v0.7/LLVM/deps/build.jl
┌ Warning: The `remove_destination` keyword argument is deprecated; use `force` instead
│   caller = ip:0x0
└ @ Core :-1
[ Info: Building CUDAnative
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: both CUDAapi and Base export "@debug"; uses of it in module CUDAdrv must be qualified
ERROR: LoadError: LoadError: LoadError: UndefVarError: @debug not defined
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:295 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1076
 [4] include at ./sysimg.jl:29 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/CUDAdrv/src/CUDAdrv.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:295 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1076
 [9] include(::Module, ::String) at ./sysimg.jl:29
 [10] top-level scope
 [11] eval at ./boot.jl:298 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/src/init.jl:21
in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/src/init.jl:13
in expression starting at /home/vagrant/.julia/v0.7/CUDAdrv/src/CUDAdrv.jl:25
WARNING: importing deprecated binding Base.STDERR into CUDAapi.
WARNING: Base.STDERR is deprecated, use stderr instead.
 in module CUDAapi
in #6 at /home/vagrant/.julia/v0.7/CUDAapi/src/logging.jl
┌ Error: ------------------------------------------------------------
│ # Build failed for CUDAnative
│   exception =
│    LoadError: Failed to precompile CUDAdrv to /home/vagrant/.julia/compiled/v0.7/CUDAdrv.ji.
│    Stacktrace:
│     [1] error at ./error.jl:33 [inlined]
│     [2] compilecache(::Base.PkgId) at ./loading.jl:1210
│     [3] _require(::Base.PkgId) at ./loading.jl:983
│     [4] require(::Base.PkgId) at ./loading.jl:883
│     [5] require(::Module, ::Symbol) at ./loading.jl:878
│     [6] include at ./boot.jl:295 [inlined]
│     [7] include_relative(::Module, ::String) at ./loading.jl:1076
│     [8] include at ./sysimg.jl:29 [inlined]
│     [9] include(::String) at ./loading.jl:1110
│     [10] top-level scope
│     [11] eval at ./boot.jl:298 [inlined]
│     [12] eval at ./sysimg.jl:74 [inlined]
│     [13] evalfile(::String, ::Array{String,1}) at ./loading.jl:1105 (repeats 2 times)
│     [14] #6 at ./none:13 [inlined]
│     [15] cd(::getfield(, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [16] (::getfield(, Symbol("##5#7")))(::IOStream) at ./none:12
│     [17] #open#316(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [18] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [19] top-level scope
│     [20] eval at ./boot.jl:298 [inlined]
│     [21] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [22] exec_options(::Base.JLOptions) at ./client.jl:309
│     [23] _start() at ./client.jl:448
│    in expression starting at /home/vagrant/.julia/v0.7/CUDAnative/deps/build.jl:2
└ @ Main none:16
WARNING: importing deprecated binding Base.STDERR into CUDAapi.
WARNING: Base.STDERR is deprecated, use stderr instead.
 in module CUDAapi
in #6 at /home/vagrant/.julia/v0.7/CUDAapi/src/logging.jl
[ Info: Building Cxx
┌ Error: ------------------------------------------------------------
│ # Build failed for Cxx
│   exception =
│    LoadError: UndefVarError: JULIA_HOME not defined
│    Stacktrace:
│     [1] top-level scope
│     [2] include at ./boot.jl:295 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1076
│     [4] include at ./sysimg.jl:29 [inlined]
│     [5] include(::String) at ./loading.jl:1110
│     [6] top-level scope
│     [7] eval at ./boot.jl:298 [inlined]
│     [8] eval at ./sysimg.jl:74 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1105 (repeats 2 times)
│     [10] #6 at ./none:13 [inlined]
│     [11] cd(::getfield(, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [12] (::getfield(, Symbol("##5#7")))(::IOStream) at ./none:12
│     [13] #open#316(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [14] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [15] top-level scope
│     [16] eval at ./boot.jl:298 [inlined]
│     [17] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [18] exec_options(::Base.JLOptions) at ./client.jl:309
│     [19] _start() at ./client.jl:448
│    in expression starting at /home/vagrant/.julia/v0.7/Cxx/deps/build.jl:18
└ @ Main none:16
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ CUDAnative, CUDAdrv and Cxx had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("CUDAnative", "CUDAdrv", "Cxx")`
│  - build a single package by running its `deps/build.jl` script
└ @ Pkg.Entry entry.jl:649
[ Info: Package database updated

>>> 'Pkg.test("CUDAnativelib")' log
Package was unable to be tested.

>>> End of log
