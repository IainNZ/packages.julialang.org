>>> 'Pkg.add("RandomMatrices")' log
INFO: Cloning cache of RandomMatrices from https://github.com/JuliaMath/RandomMatrices.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing Calculus v0.2.2
INFO: Installing Combinatorics v0.5.0
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.7.4
INFO: Installing DiffBase v0.3.2
INFO: Installing DiffEqBase v3.6.2
INFO: Installing DiffEqDiffTools v0.4.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.3
INFO: Installing Distances v0.5.0
INFO: Installing Distributions v0.15.0
INFO: Installing ForwardDiff v0.7.3
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing GSL v0.3.6
INFO: Installing GenericSVD v0.1.0
INFO: Installing IterTools v0.2.1
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing Juno v0.4.0
INFO: Installing LineSearches v3.2.5
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.0
INFO: Installing Media v0.3.0
INFO: Installing Missings v0.2.7
INFO: Installing MuladdMacro v0.0.2
INFO: Installing NLSolversBase v4.3.0
INFO: Installing NLsolve v1.0.1
INFO: Installing NaNMath v0.3.1
INFO: Installing NamedTuples v4.0.0
INFO: Installing OrdinaryDiffEq v3.3.0
INFO: Installing PDMats v0.8.0
INFO: Installing Parameters v0.8.1
INFO: Installing Polynomials v0.2.1
INFO: Installing QuadGK v0.2.0
INFO: Installing RandomMatrices v0.3.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.14.6
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing Rmath v0.3.2
INFO: Installing Roots v0.5.0
INFO: Installing SHA v0.5.6
INFO: Installing SimpleTraits v0.6.0
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing TableTraits v0.1.0
INFO: Installing URIParser v0.3.1
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building GSL
INFO: Package database updated

>>> 'Pkg.test("RandomMatrices")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1600.98046875 MB free)
Uptime: 31814.0 sec
Load Avg:  0.92529296875  0.96337890625  0.95166015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1814394 s        961 s      94032 s     830520 s         31 s
#2  3499 MHz     436829 s       6364 s      47343 s    2633470 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.1
 - RandomMatrices                0.3.0
51 additional packages:
 - BinDeps                       0.8.7
 - Calculus                      0.2.2
 - Combinatorics                 0.5.0
 - CommonSubexpressions          0.0.1
 - Compat                        0.56.0
 - DataStructures                0.7.4
 - DiffBase                      0.3.2
 - DiffEqBase                    3.6.2
 - DiffEqDiffTools               0.4.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.3
 - Distances                     0.5.0
 - Distributions                 0.15.0
 - ForwardDiff                   0.7.3
 - FunctionWrappers              0.1.0
 - GSL                           0.3.6
 - GenericSVD                    0.1.0
 - IterTools                     0.2.1
 - IteratorInterfaceExtensions   0.0.2
 - Juno                          0.4.0
 - LineSearches                  3.2.5
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - Media                         0.3.0
 - Missings                      0.2.7
 - MuladdMacro                   0.0.2
 - NLSolversBase                 4.3.0
 - NLsolve                       1.0.1
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.0
 - Nullables                     0.0.3
 - OrdinaryDiffEq                3.3.0
 - PDMats                        0.8.0
 - Parameters                    0.8.1
 - Polynomials                   0.2.1
 - QuadGK                        0.2.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Rmath                         0.3.2
 - Roots                         0.5.0
 - SHA                           0.5.6
 - SimpleTraits                  0.6.0
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - StatsFuns                     0.5.0
 - TableTraits                   0.1.0
 - URIParser                     0.3.1
INFO: Testing RandomMatrices
Error During Test
  Test threw an exception of type MethodError
  Expression: pdf(TracyWidom, t) > 0
  MethodError: no method matching getindex(::Void, ::Int64)
  Stacktrace:
   [1] (::RandomMatrices.#deq#17)(::Array{BigFloat,1}, ::Void, ::Float64) at /home/vagrant/.julia/v0.6/RandomMatrices/src/densities/TracyWidom.jl:68
   [2] ode_determine_initdt(::Array{BigFloat,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::DiffEqBase.#ODE_DEFAULT_NORM, ::DiffEqBase.ODEProblem{Array{BigFloat,1},Float64,false,Void,RandomMatrices.#deq#17,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern8,Array{BigFloat,1},Float64,Void,Float64,Float64,Array{Array{BigFloat,1},1},DiffEqBase.ODESolution{BigFloat,2,Array{Array{BigFloat,1},1},Void,Void,Array{Float64,1},Array{Array{Array{BigFloat,1},1},1},DiffEqBase.ODEProblem{Array{BigFloat,1},Float64,false,Void,RandomMatrices.#deq#17,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Vern8,OrdinaryDiffEq.InterpolationData{RandomMatrices.#deq#17,Array{Array{BigFloat,1},1},Array{Float64,1},Array{Array{Array{BigFloat,1},1},1},OrdinaryDiffEq.Vern8ConstantCache{BigFloat,Float64}}},RandomMatrices.#deq#17,Void,OrdinaryDiffEq.Vern8ConstantCache{BigFloat,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1}},Array{BigFloat,1}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/initdt.jl:126
   [3] auto_dt_reset! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/integrator_interface.jl:240 [inlined]
   [4] #init#1331(::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Void, ::Bool, ::Bool, ::Float64, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Int64, ::Rational{Int64}, ::Int64, ::Int64, ::Rational{Int64}, ::Bool, ::Int64, ::Rational{Int64}, ::Rational{Int64}, ::Int64, ::Float64, ::Float64, ::DiffEqBase.#ODE_DEFAULT_NORM, ::DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN, ::DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::String, ::DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE, ::Void, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.ODEProblem{Array{BigFloat,1},Float64,false,Void,RandomMatrices.#deq#17,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Vern8, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:314
   [5] (::DiffEqBase.#kw##init)(::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.ODEProblem{Array{BigFloat,1},Float64,false,Void,RandomMatrices.#deq#17,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Vern8, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0
   [6] #solve#1330(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{BigFloat,1},Float64,false,Void,RandomMatrices.#deq#17,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Vern8, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:6
   [7] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODEProblem{Array{BigFloat,1},Float64,false,Void,RandomMatrices.#deq#17,Void,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Vern8, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0 (repeats 2 times)
   [8] _solve_painleve_ii(::Float64, ::Float64) at /home/vagrant/.julia/v0.6/RandomMatrices/src/densities/TracyWidom.jl:77
   [9] pdf(::RandomMatrices.TracyWidom, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/RandomMatrices/src/densities/TracyWidom.jl:41
   [10] pdf(::Type{RandomMatrices.TracyWidom}, ::Float64) at /home/vagrant/.julia/v0.6/RandomMatrices/src/densities/TracyWidom.jl:46
   [11] include_from_node1(::String) at ./loading.jl:576
   [12] include(::String) at ./sysimg.jl:14
   [13] include_from_node1(::String) at ./loading.jl:576
   [14] include(::String) at ./sysimg.jl:14
   [15] process_options(::Base.JLOptions) at ./client.jl:305
   [16] _start() at ./client.jl:371
ERROR: LoadError: LoadError: There was an error during testing
while loading /home/vagrant/.julia/v0.6/RandomMatrices/test/densities/TracyWidom.jl, in expression starting on line 12
while loading /home/vagrant/.julia/v0.6/RandomMatrices/test/runtests.jl, in expression starting on line 11
===========================[ ERROR: RandomMatrices ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/RandomMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: RandomMatrices had test errors

>>> End of log
