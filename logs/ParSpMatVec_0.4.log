>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1197.8125 MB free)
Uptime: 20032.0 sec
Load Avg:  0.92529296875  0.9814453125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz     948686 s       5669 s      74217 s     779250 s         29 s
#2  3495 MHz     674034 s       1163 s      63629 s    1200847 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1405	 ParSpMatVec=0.0254	 speedup=5.5326
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1405	 ParSpMatVec=0.0094	 speedup=14.9825
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1405	 ParSpMatVec=0.0128	 speedup=10.9857
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1405	 ParSpMatVec=0.0159	 speedup=8.8260
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1405	 ParSpMatVec=0.0154	 speedup=9.1336
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1295	 ParSpMatVec=0.0437	 speedup=2.9611
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1295	 ParSpMatVec=0.0130	 speedup=9.9689
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1295	 ParSpMatVec=0.0151	 speedup=8.5864
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1295	 ParSpMatVec=0.0139	 speedup=9.2938
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1295	 ParSpMatVec=0.0134	 speedup=9.6383

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0413	 ParSpMatVec=0.0284	 speedup=1.4519
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0413	 ParSpMatVec=0.0216	 speedup=1.9147
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0413	 ParSpMatVec=0.0168	 speedup=2.4555
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0413	 ParSpMatVec=0.0131	 speedup=3.1631
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0413	 ParSpMatVec=0.0167	 speedup=2.4707

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0432	 ParSpMatVec=0.0397	 speedup=1.0891
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0432	 ParSpMatVec=0.0026	 speedup=16.8442
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0432	 ParSpMatVec=0.0023	 speedup=18.7922
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0432	 ParSpMatVec=0.0020	 speedup=22.0278
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0432	 ParSpMatVec=0.0024	 speedup=18.1668

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0085	 ParSpMatVec=0.0453	 speedup=0.1878
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0085	 ParSpMatVec=0.0043	 speedup=1.9674
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0085	 ParSpMatVec=0.0034	 speedup=2.4665
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0085	 ParSpMatVec=0.0027	 speedup=3.2080
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0085	 ParSpMatVec=0.0031	 speedup=2.7510

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0487	 ParSpMatVec=0.0480	 speedup=1.0143
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0487	 ParSpMatVec=0.0114	 speedup=4.2884
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0487	 ParSpMatVec=0.0029	 speedup=16.8932
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0487	 ParSpMatVec=0.0028	 speedup=17.1257
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0487	 ParSpMatVec=0.0027	 speedup=18.1535

INFO: ParSpMatVec tests passed

>>> End of log
