>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1208.03125 MB free)
Uptime: 15438.0 sec
Load Avg:  1.00390625  1.0185546875  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     741024 s       3667 s      61942 s     581304 s         34 s
#2  3499 MHz     475668 s       4523 s      54178 s     953451 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.21.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1266	 ParSpMatVec=0.0256	 speedup=4.9524
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1266	 ParSpMatVec=0.0082	 speedup=15.3922
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1266	 ParSpMatVec=0.0149	 speedup=8.4929
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1266	 ParSpMatVec=0.0112	 speedup=11.2921
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1266	 ParSpMatVec=0.0069	 speedup=18.3265
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1287	 ParSpMatVec=0.0469	 speedup=2.7449
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1287	 ParSpMatVec=0.0136	 speedup=9.4947
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1287	 ParSpMatVec=0.0143	 speedup=8.9808
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1287	 ParSpMatVec=0.0134	 speedup=9.6257
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1287	 ParSpMatVec=0.0145	 speedup=8.8465

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0290	 ParSpMatVec=0.0163	 speedup=1.7757
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0290	 ParSpMatVec=0.0109	 speedup=2.6510
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0290	 ParSpMatVec=0.0136	 speedup=2.1334
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0290	 ParSpMatVec=0.0170	 speedup=1.7105
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0290	 ParSpMatVec=0.0142	 speedup=2.0469

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0396	 ParSpMatVec=0.0391	 speedup=1.0128
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0396	 ParSpMatVec=0.0023	 speedup=16.9062
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0396	 ParSpMatVec=0.0022	 speedup=18.2873
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0396	 ParSpMatVec=0.0030	 speedup=13.3003
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0396	 ParSpMatVec=0.0010	 speedup=40.8022

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0067	 ParSpMatVec=0.0266	 speedup=0.2532
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0067	 ParSpMatVec=0.0041	 speedup=1.6607
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0067	 ParSpMatVec=0.0025	 speedup=2.6490
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0067	 ParSpMatVec=0.0040	 speedup=1.7005
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0067	 ParSpMatVec=0.0026	 speedup=2.5512

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0488	 ParSpMatVec=0.0514	 speedup=0.9502
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0488	 ParSpMatVec=0.0045	 speedup=10.8619
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0488	 ParSpMatVec=0.0017	 speedup=28.6339
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0488	 ParSpMatVec=0.0026	 speedup=18.8019
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0488	 ParSpMatVec=0.0030	 speedup=16.4349

INFO: ParSpMatVec tests passed

>>> End of log
