>>> 'Pkg.add("PolynomialRoots")' log
INFO: Cloning cache of PolynomialRoots from https://github.com/giordano/PolynomialRoots.jl.git
INFO: Installing PolynomialRoots v0.0.4
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PolynomialRoots
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PolynomialRoots")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (695.4140625 MB free)
Uptime: 23171.0 sec
Load Avg:  0.9931640625  0.9482421875  0.93994140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1331838 s         61 s     122710 s     579486 s         26 s
#2  3500 MHz     426488 s       6061 s      59236 s    1774132 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - PolynomialRoots               0.0.4
1 additional packages:
 - Compat                        0.24.0
INFO: Testing PolynomialRoots
INFO: Testing random polynomials...
 poly1[1] = -7.7790559345804144 - 2.2323893801049532im
 poly1[2] = -9.151136351395536 + 3.8493307615205374im
 poly1[3] = 4.757465323257822 + 9.164990486047571im
 poly1[4] = 8.227295474468747 - 6.779484119519927im
 poly1[5] = -9.297846972544818 + 0.6965427478404518im
 poly1[6] = 0.46863105450979603 - 0.3325764090324199im
 poly2[1] = 4.832982310438503 + 5.33036777561389im
 poly2[2] = 3.9506607404367386 - 2.5871086462451753im
 poly2[3] = -6.5957264250198255 + 4.127763111714398im
 poly2[4] = 4.365670120020626 + 4.591651892587052im
 poly2[5] = -5.965168171019819 - 9.274162416141763im
 poly2[6] = 7.024153559546722 - 9.697884234588603im
ERROR: LoadError: assertion failed: |zeros(length(res1)) - PolynomialRoots.evalpoly(res1,poly1)| <= 2.0e-12
  zeros(length(res1)) = [0.0,0.0,0.0,0.0,0.0]
  PolynomialRoots.evalpoly(res1,poly1) = Complex{Float64}[1.74623e-10+0.0im,7.10543e-15+8.88178e-15im,1.77636e-15-3.33067e-15im,1.77636e-15+1.77636e-15im,0.0-1.77636e-15im]
  difference = 1.7462298274040222e-10 > 2.0e-12
 in test_approx_eq(::Array{Float64,1}, ::Array{Complex{Float64},1}, ::Float64, ::String, ::String) at ./test.jl:865
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl, in expression starting on line 96
===========================[ ERROR: PolynomialRoots ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PolynomialRoots had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
