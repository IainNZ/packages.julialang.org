>>> 'Pkg.add("Cuba")' log
[ Info: Cloning cache of Cuba from https://github.com/giordano/Cuba.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing Cuba v0.4.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building Cuba @ Main none:10
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_linux` is deprecated, use `Sys.islinux` instead.
│   caller = top-level scope at build.jl:41
└ @ Core build.jl:41
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:55
└ @ Core build.jl:55
INFO: Downloading Cuba source...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   155    0   155    0     0   1182      0 --:--:-- --:--:-- --:--:--  1192
  0     0    0  712k    0     0  1679k      0 --:--:-- --:--:-- --:--:-- 1679k
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:60
└ @ Core build.jl:60
INFO: Building libcuba...
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for gfortran... gfortran
checking whether we are using the GNU Fortran compiler... yes
checking whether gfortran accepts -g... yes
checking for ranlib... ranlib
checking for a BSD-compatible install... /usr/bin/install -c
checking for an ANSI C-conforming const... yes
checking for inline... inline
checking for long double with more range or precision than double... yes
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for size_t... yes
checking for ssize_t... yes
checking for pid_t... yes
checking for powl... yes
checking for erf... yes
checking vfork.h usability... no
checking vfork.h presence... no
checking for vfork.h... no
checking for fork... yes
checking for vfork... yes
checking for working fork... yes
checking for working vfork... (cached) yes
checking for working alloca.h... yes
checking for alloca... yes
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking for shmget... yes
checking for getloadavg... yes
checking for variable-size arrays... yes
checking for MathLink... no
checking for qmake... no
configure: creating ./config.status
config.status: creating makefile
config.status: creating config.h
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/vegas -DNOUNDERSCORE -c -o Vegas.o ./src/vegas/Vegas.c
ar rv libcuba.a Vegas.o
ar: creating libcuba.a
a - Vegas.o
rm -f Vegas.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/vegas -c -o Vegas_.o ./src/vegas/Vegas.c
ar rv libcuba.a Vegas_.o
a - Vegas_.o
rm -f Vegas_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/vegas -DLONGLONGINT -DNOUNDERSCORE -c -o llVegas.o ./src/vegas/Vegas.c
ar rv libcuba.a llVegas.o
a - llVegas.o
rm -f llVegas.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/vegas -DLONGLONGINT -c -o llVegas_.o ./src/vegas/Vegas.c
ar rv libcuba.a llVegas_.o
a - llVegas_.o
rm -f llVegas_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/suave -DNOUNDERSCORE -c -o Suave.o ./src/suave/Suave.c
ar rv libcuba.a Suave.o
a - Suave.o
rm -f Suave.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/suave -c -o Suave_.o ./src/suave/Suave.c
ar rv libcuba.a Suave_.o
a - Suave_.o
rm -f Suave_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/suave -DLONGLONGINT -DNOUNDERSCORE -c -o llSuave.o ./src/suave/Suave.c
ar rv libcuba.a llSuave.o
a - llSuave.o
rm -f llSuave.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/suave -DLONGLONGINT -c -o llSuave_.o ./src/suave/Suave.c
ar rv libcuba.a llSuave_.o
a - llSuave_.o
rm -f llSuave_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/divonne -DNOUNDERSCORE -c -o Divonne.o ./src/divonne/Divonne.c
ar rv libcuba.a Divonne.o
a - Divonne.o
rm -f Divonne.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/divonne -c -o Divonne_.o ./src/divonne/Divonne.c
ar rv libcuba.a Divonne_.o
a - Divonne_.o
rm -f Divonne_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/divonne -DLONGLONGINT -DNOUNDERSCORE -c -o llDivonne.o ./src/divonne/Divonne.c
ar rv libcuba.a llDivonne.o
a - llDivonne.o
rm -f llDivonne.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/divonne -DLONGLONGINT -c -o llDivonne_.o ./src/divonne/Divonne.c
ar rv libcuba.a llDivonne_.o
a - llDivonne_.o
rm -f llDivonne_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/cuhre -DNOUNDERSCORE -c -o Cuhre.o ./src/cuhre/Cuhre.c
ar rv libcuba.a Cuhre.o
a - Cuhre.o
rm -f Cuhre.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/cuhre -c -o Cuhre_.o ./src/cuhre/Cuhre.c
ar rv libcuba.a Cuhre_.o
a - Cuhre_.o
rm -f Cuhre_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/cuhre -DLONGLONGINT -DNOUNDERSCORE -c -o llCuhre.o ./src/cuhre/Cuhre.c
ar rv libcuba.a llCuhre.o
a - llCuhre.o
rm -f llCuhre.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/cuhre -DLONGLONGINT -c -o llCuhre_.o ./src/cuhre/Cuhre.c
ar rv libcuba.a llCuhre_.o
a - llCuhre_.o
rm -f llCuhre_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -DNOUNDERSCORE -c -o Fork.o ./src/common/Fork.c
ar rv libcuba.a Fork.o
a - Fork.o
rm -f Fork.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -c -o Fork_.o ./src/common/Fork.c
ar rv libcuba.a Fork_.o
a - Fork_.o
rm -f Fork_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -DNOUNDERSCORE -c -o Global.o ./src/common/Global.c
ar rv libcuba.a Global.o
a - Global.o
rm -f Global.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -c -o Global_.o ./src/common/Global.c
ar rv libcuba.a Global_.o
a - Global_.o
rm -f Global_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -c -o Data.o ./src/common/Data.c
ar rv libcuba.a Data.o
a - Data.o
rm -f Data.o
ranlib libcuba.a
ar x libcuba.a
gcc -shared -o libcuba.so *.o -lm
rm *.o
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:77
└ @ Core build.jl:77
INFO: libcuba successfully installed!
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Cuba
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Cuba")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2526603 s        111 s     130516 s     708492 s         25 s
       #2  3499 MHz     566789 s         48 s      58336 s    3251405 s          0 s
       
  Memory: 2.93927001953125 GB (754.953125 MB free)
  Uptime: 39373.0 sec
  Load Avg:  0.9892578125  0.9853515625  0.96533203125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Cuba                          0.4.0
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
[ Info: Testing Cuba @ Base.Pkg.Entry entry.jl:723
ERROR: LoadError: syntax: extra token "Integrand" after end of expression
Stacktrace:
 [1] include at ./boot.jl:295 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] include(::Module, ::String) at ./sysimg.jl:26
 [4] top-level scope
 [5] eval at ./boot.jl:298 [inlined]
 [6] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Cuba/src/Cuba.jl:121
ERROR: LoadError: Failed to precompile Cuba to /home/vagrant/.julia/lib/v0.7/Cuba.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:295 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:323
 [10] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/Cuba/test/runtests.jl:22
┌ Error: ------------------------------------------------------------
│ # Testing failed for Cuba
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Cuba/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: Cuba had test errors

>>> End of log
