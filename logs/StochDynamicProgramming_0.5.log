>>> 'Pkg.add("StochDynamicProgramming")' log
INFO: Cloning cache of StochDynamicProgramming from https://github.com/JuliaOpt/StochDynamicProgramming.jl.git
INFO: Installing AxisAlgorithms v0.1.6
INFO: Installing BinDeps v0.7.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.6.1
INFO: Installing DiffBase v0.1.0
INFO: Installing Distributions v0.13.0
INFO: Installing DualNumbers v0.3.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Interpolations v0.6.2
INFO: Installing Iterators v0.3.1
INFO: Installing JuMP v0.17.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NaNMath v0.2.6
INFO: Installing PDMats v0.7.0
INFO: Installing ProgressMeter v0.3.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ratios v0.1.0
INFO: Installing ReverseDiffSparse v0.7.3
INFO: Installing Rmath v0.1.7
INFO: Installing SHA v0.3.3
INFO: Installing ShowItLikeYouBuildIt v0.0.1
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing StochDynamicProgramming v0.3.0
INFO: Installing URIParser v0.2.0
INFO: Installing WoodburyMatrices v0.2.2
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of StochDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("StochDynamicProgramming")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (966.45703125 MB free)
Uptime: 42956.0 sec
Load Avg:  1.0029296875  1.0146484375  1.01416015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz    2746452 s       6188 s     217019 s     820352 s         95 s
#2  3495 MHz     944544 s         78 s     111805 s    3123554 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - StochDynamicProgramming       0.3.0
27 additional packages:
 - AxisAlgorithms                0.1.6
 - BinDeps                       0.7.0
 - Calculus                      0.2.2
 - Compat                        0.28.0
 - DataStructures                0.6.1
 - DiffBase                      0.1.0
 - Distributions                 0.13.0
 - DualNumbers                   0.3.0
 - ForwardDiff                   0.4.2
 - Interpolations                0.6.2
 - Iterators                     0.3.1
 - JuMP                          0.17.1
 - MathProgBase                  0.6.4
 - NaNMath                       0.2.6
 - PDMats                        0.7.0
 - ProgressMeter                 0.3.4
 - QuadGK                        0.1.2
 - Ratios                        0.1.0
 - ReverseDiffSparse             0.7.3
 - Rmath                         0.1.7
 - SHA                           0.3.3
 - ShowItLikeYouBuildIt          0.0.1
 - SpecialFunctions              0.2.0
 - StatsBase                     0.17.0
 - StatsFuns                     0.5.0
 - URIParser                     0.2.0
 - WoodburyMatrices              0.2.2
INFO: Computing test dependencies for StochDynamicProgramming...
INFO: Installing Cbc v0.3.2
INFO: Installing Clp v0.3.1
INFO: Installing FactCheck v0.4.3
INFO: Building Cbc
INFO: Testing StochDynamicProgramming
Probability functions
8 facts verified.
Utils functions
INFO: extract_vector_from_3Dmatrix is now deprecated. Use collect instead.
3 facts verified.
SDDP algorithm: 1D case
  > Linear cost
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in build_terminal_cost!(::StochDynamicProgramming.LinearSPModel, ::JuMP.Model, ::StochDynamicProgramming.PolyhedralFunction) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:218
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:336
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in build_terminal_cost!(::StochDynamicProgramming.LinearSPModel, ::JuMP.Model, ::StochDynamicProgramming.PolyhedralFunction) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:219
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:336
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #solve_one_step_one_alea#20(::Bool, ::Bool, ::Function, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/oneStepOneAleaProblem.jl:55
 in (::StochDynamicProgramming.#kw##solve_one_step_one_alea)(::Array{Any,1}, ::StochDynamicProgramming.#solve_one_step_one_alea, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:268
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:348
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #solve_one_step_one_alea#20(::Bool, ::Bool, ::Function, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/oneStepOneAleaProblem.jl:56
 in (::StochDynamicProgramming.#kw##solve_one_step_one_alea)(::Array{Any,1}, ::StochDynamicProgramming.#solve_one_step_one_alea, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:268
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:348
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #solve_one_step_one_alea#20(::Bool, ::Bool, ::Function, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/oneStepOneAleaProblem.jl:57
 in (::StochDynamicProgramming.#kw##solve_one_step_one_alea)(::Array{Any,1}, ::StochDynamicProgramming.#solve_one_step_one_alea, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:268
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:348
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in add_cut_to_model!(::StochDynamicProgramming.LinearSPModel, ::JuMP.Model, ::Int64, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:200
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:298
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:348
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in add_cut_to_model!(::StochDynamicProgramming.LinearSPModel, ::JuMP.Model, ::Int64, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:201
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:298
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:348
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in add_cut_to_model!(::StochDynamicProgramming.LinearSPModel, ::JuMP.Model, ::Int64, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:202
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:298
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:348
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in add_cut_to_model!(::StochDynamicProgramming.LinearSPModel, ::JuMP.Model, ::Int64, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:203
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:298
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:348
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in add_cuts_to_model!(::StochDynamicProgramming.LinearSPModel, ::Int64, ::JuMP.Model, ::StochDynamicProgramming.PolyhedralFunction) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:484
 in hotstart_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:376
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:79
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:95
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in add_cuts_to_model!(::StochDynamicProgramming.LinearSPModel, ::Int64, ::JuMP.Model, ::StochDynamicProgramming.PolyhedralFunction) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:485
 in hotstart_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:376
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:79
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:95
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
Initialize cuts
Pass nÂ° 2	Lower-bound: -1.3440e+01	Time: 0.19s
Compute final upper-bound with 1000 scenarios...

############################################################
SDDP CONVERGENCE
- Exact lower bound:          -1.3440e+01 [Gap < -0.39%]
- Estimation of upper-bound:  -1.3457e+01
- Upper-bound's s.t.d:        1.1249e+00
- Confidence interval (95%):  [-1.3527e+01 , -1.3387e+01]
############################################################
  > Value functions calculation
  > Hotstart
  > Cuts pruning
  > Quadratic regularization
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in solve_one_step_one_alea(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/oneStepOneAleaProblem.jl:100
 in #forward_simulations#21(::Bool, ::Function, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{JuMP.Model,1}, ::Array{Float64,3}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:128
 in (::StochDynamicProgramming.#kw##forward_simulations)(::Array{Any,1}, ::StochDynamicProgramming.#forward_simulations, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{JuMP.Model,1}, ::Array{Float64,3}) at ./<missing>:0
 in forward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/forwardBackwardIterations.jl:44
 in run_SDDP!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:136
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:44
 in (::##105#180{StochDynamicProgramming.SDDPparameters})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:309
 in do_fact(::##105#180{StochDynamicProgramming.SDDPparameters}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:308 [inlined]
 in (::##104#179{Clp.ClpMathProgSolverInterface.ClpSolver,Float64,Int64,Int64})() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:178
 in context(::##104#179{Clp.ClpMathProgSolverInterface.ClpSolver,Float64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:171
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
  > Final cost
WARNING: getvariable is deprecated, use getindex instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in getvariable(::JuMP.Model, ::Vararg{Any,N}) at ./deprecated.jl:30
 in (::#fcost#182)(::StochDynamicProgramming.LinearSPModel, ::JuMP.Model) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:184
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:340
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.5/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##106#181)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:189
 in context(::##106#181, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl:182
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
  > Piecewise linear cost
  > SMIP
  > Stopping criterion
  > Dump
  > Compare parameters
32 facts verified.
SDDP algorithm: 2D case
  > Linear cost
  > Dump
10 facts verified.
Indexation for SDP
6 facts verified.
SDP algorithm
  > Compare StochDynProgModel constructors
  > Solve and simulate using SDP
22 facts verified.
SDDP algorithm: 1D case
  > Extensive solving
  > Unsolvable extensive formulation
WARNING: Not solved to optimality, status: Infeasible
2 facts verified.
INFO: StochDynamicProgramming tests passed
INFO: Removing Cbc v0.3.2
INFO: Removing Clp v0.3.1
INFO: Removing FactCheck v0.4.3

>>> End of log
