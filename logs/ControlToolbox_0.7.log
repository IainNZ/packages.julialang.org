>>> 'Pkg.add("ControlToolbox")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of ControlToolbox from https://github.com/JuliaSystems/ControlToolbox.jl.git
[ Info: Cloning cache of LTISystems from https://github.com/JuliaSystems/LTISystems.jl.git
[ Info: Cloning cache of PolynomialMatrices from https://github.com/neveritt/PolynomialMatrices.jl.git
[ Info: Cloning cache of RationalFunctions from https://github.com/aytekinar/RationalFunctions.jl.git
[ Info: Installing BinDeps v0.8.6
[ Info: Installing Calculus v0.2.2
[ Info: Installing CommonSubexpressions v0.0.1
[ Info: Installing ControlToolbox v0.1.0
[ Info: Installing DataStructures v0.7.4
[ Info: Installing DiffBase v0.3.2
[ Info: Installing DiffEqBase v2.10.2
[ Info: Installing DiffEqDiffTools v0.2.1
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.3
[ Info: Installing Distances v0.5.0
[ Info: Installing ForwardDiff v0.7.3
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing GenericSVD v0.1.0
[ Info: Installing Juno v0.4.0
[ Info: Installing LTISystems v0.1.0
[ Info: Installing LineSearches v3.2.5
[ Info: Installing LinearMaps v1.0.4
[ Info: Installing MacroTools v0.4.0
[ Info: Installing MathProgBase v0.7.0
[ Info: Installing Media v0.3.0
[ Info: Installing Missings v0.2.6
[ Info: Installing MuladdMacro v0.0.2
[ Info: Installing NLSolversBase v3.1.0
[ Info: Installing NLsolve v0.13.0
[ Info: Installing NaNMath v0.3.1
[ Info: Installing Optim v0.11.0
[ Info: Installing OrdinaryDiffEq v2.37.0
[ Info: Installing Parameters v0.8.1
[ Info: Installing PolynomialMatrices v0.2.0
[ Info: Installing Polynomials v0.2.1
[ Info: Installing PositiveFactorizations v0.1.0
[ Info: Installing RationalFunctions v0.1.1
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing RecursiveArrayTools v0.14.6
[ Info: Installing Reexport v0.1.0
[ Info: Installing Requires v0.4.3
[ Info: Installing Roots v0.5.0
[ Info: Installing SHA v0.5.6
[ Info: Installing SimpleTraits v0.5.1
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StaticArrays v0.6.6
[ Info: Installing URIParser v0.3.0
[ Info: Building SpecialFunctions
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Package database updated

>>> 'Pkg.test("ControlToolbox")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.3738
Commit 251a501def (2018-02-06 20:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2621752 s       2201 s     137602 s     822725 s         32 s
       #2  3499 MHz     712907 s       5957 s      60196 s    3356600 s          1 s
       
  Memory: 2.93927001953125 GB (771.3671875 MB free)
  Uptime: 42129.0 sec
  Load Avg:  0.92236328125  0.953125  0.95068359375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ControlToolbox                0.1.0
 - JSON                          0.16.4
44 additional packages:
 - BinDeps                       0.8.6
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.52.0
 - DataStructures                0.7.4
 - DiffBase                      0.3.2
 - DiffEqBase                    2.10.2
 - DiffEqDiffTools               0.2.1
 - DiffResults                   0.0.3
 - DiffRules                     0.0.3
 - Distances                     0.5.0
 - ForwardDiff                   0.7.3
 - FunctionWrappers              0.1.0
 - GenericSVD                    0.1.0
 - Juno                          0.4.0
 - LTISystems                    0.1.0
 - LineSearches                  3.2.5
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - MathProgBase                  0.7.0
 - Media                         0.3.0
 - Missings                      0.2.6
 - MuladdMacro                   0.0.2
 - NLSolversBase                 3.1.0
 - NLsolve                       0.13.0
 - NaNMath                       0.3.1
 - Nullables                     0.0.3
 - Optim                         0.11.0
 - OrdinaryDiffEq                2.37.0
 - Parameters                    0.8.1
 - PolynomialMatrices            0.2.0
 - Polynomials                   0.2.1
 - PositiveFactorizations        0.1.0
 - RationalFunctions             0.1.1
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Roots                         0.5.0
 - SHA                           0.5.6
 - SimpleTraits                  0.5.1
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - URIParser                     0.3.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for ControlToolbox...
[ Info: Installing NLopt v0.3.6
[ Info: Building NLopt
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NLopt/deps/build.jl:30.
│ Use `mutable struct` instead.
└ @ nothing build.jl:30
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NLopt/deps/build.jl:56
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Testing ControlToolbox
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PositiveFactorizations/src/PositiveFactorizations.jl:10.
│ Use `struct` instead.
└ @ nothing PositiveFactorizations.jl:10
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: Base.BLAS is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:2
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:3
┌ Warning: Deprecated syntax `parametric method syntax Base.cholfact{T}(::Type{Positive{T}}, A::AbstractMatrix, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:11.
│ Use `Base.cholfact(#s1::Type{Positive{T}}, A::AbstractMatrix, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T)) where T` instead.
└ @ nothing cholesky.jl:11
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:11
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:11
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:11
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:11
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:11
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:11
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:12
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:12
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:12
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:12
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:12
WARNING: Base.cholfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:12
┌ Warning: Deprecated syntax `parametric method syntax Base.ldltfact{T}(::Type{Positive{T}}, A::AbstractMatrix, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:15.
│ Use `Base.ldltfact(#s5::Type{Positive{T}}, A::AbstractMatrix, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T)) where T` instead.
└ @ nothing cholesky.jl:15
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:14
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:14
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:14
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:14
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:14
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:14
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:20
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:20
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:20
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:20
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:20
WARNING: Base.ldltfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:20
┌ Warning: Deprecated syntax `parametric method syntax Base.cholfact!{T <: AbstractFloat}(::Type{Positive{T}}, A::AbstractMatrix{T}, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:22.
│ Use `Base.cholfact!(#s5::Type{Positive{T}}, A::AbstractMatrix{T}, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T)) where T <: AbstractFloat` instead.
└ @ nothing cholesky.jl:22
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:22
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:22
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:22
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:22
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:22
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:22
┌ Warning: Deprecated syntax `parametric method syntax Base.cholfact!{T <: AbstractFloat}(::Type{Positive}, A::AbstractMatrix{T}, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:23.
│ Use `Base.cholfact!(#s5::Type{Positive}, A::AbstractMatrix{T}, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T)) where T <: AbstractFloat` instead.
└ @ nothing cholesky.jl:23
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:23
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:23
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:23
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:23
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:23
WARNING: Base.cholfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:23
┌ Warning: Deprecated syntax `parametric method syntax Base.ldltfact!{T <: AbstractFloat}(::Type{Positive{T}}, A::AbstractMatrix{T}, pivot::Type{Val{false}} = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:27.
│ Use `Base.ldltfact!(#s5::Type{Positive{T}}, A::AbstractMatrix{T}, pivot::Type{Val{false}} = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T)) where T <: AbstractFloat` instead.
└ @ nothing cholesky.jl:27
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:26
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:26
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:26
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:26
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:26
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:26
┌ Warning: Deprecated syntax `parametric method syntax Base.ldltfact!{T <: AbstractFloat}(::Type{Positive{T}}, A::AbstractMatrix{T}, pivot::Type{Val{true}}; tol = default_tol(A), blocksize = default_blocksize(T))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:60.
│ Use `Base.ldltfact!(#s6::Type{Positive{T}}, A::AbstractMatrix{T}, pivot::Type{Val{true}}; tol = default_tol(A), blocksize = default_blocksize(T)) where T <: AbstractFloat` instead.
└ @ nothing cholesky.jl:60
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:59
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:59
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:59
┌ Warning: Deprecated syntax `parametric method syntax Base.ldltfact!{T <: AbstractFloat}(::Type{Positive}, A::AbstractMatrix{T}, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:79.
│ Use `Base.ldltfact!(#s6::Type{Positive}, A::AbstractMatrix{T}, pivot = Val{false}; tol = default_tol(A), blocksize = default_blocksize(T)) where T <: AbstractFloat` instead.
└ @ nothing cholesky.jl:79
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:79
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:79
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:79
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:79
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:79
WARNING: Base.ldltfact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:79
┌ Warning: Deprecated syntax `parametric method syntax update_columns!{T <: BlasFloat}(dest::StridedMatrix{T}, d::Number, c::StridedVector{T})` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:181.
│ Use `update_columns!(dest::StridedMatrix{T}, d::Number, c::StridedVector{T}) where T <: BlasFloat` instead.
└ @ nothing cholesky.jl:181
┌ Warning: Deprecated syntax `parametric method syntax update_columns!{T <: BlasFloat}(dest::StridedMatrix{T}, d::Number, x::StridedVector{T}, y::StridedVector{T})` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:187.
│ Use `update_columns!(dest::StridedMatrix{T}, d::Number, x::StridedVector{T}, y::StridedVector{T}) where T <: BlasFloat` instead.
└ @ nothing cholesky.jl:187
┌ Warning: Deprecated syntax `parametric method syntax update_columns!{T <: BlasFloat}(dest::StridedMatrix{T}, d::AbstractVector, C::StridedMatrix{T})` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:193.
│ Use `update_columns!(dest::StridedMatrix{T}, d::AbstractVector, C::StridedMatrix{T}) where T <: BlasFloat` instead.
└ @ nothing cholesky.jl:193
┌ Warning: Deprecated syntax `parametric method syntax floattype{T <: AbstractFloat}(::Type{T})` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:269.
│ Use `floattype(#unused#::Type{T}) where T <: AbstractFloat` instead.
└ @ nothing cholesky.jl:269
┌ Warning: Deprecated syntax `parametric method syntax floattype{T <: Integer}(::Type{T})` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:270.
│ Use `floattype(#unused#::Type{T}) where T <: Integer` instead.
└ @ nothing cholesky.jl:270
┌ Warning: Deprecated syntax `parametric method syntax default_blocksize{T}(::Type{T})` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/cholesky.jl:276.
│ Use `default_blocksize(#unused#::Type{T}) where T` instead.
└ @ nothing cholesky.jl:276
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:1
┌ Warning: Deprecated syntax `parametric method syntax Base.eigfact{T}(::Type{Positive{T}}, A::AbstractMatrix{T}, args...; tol = default_tol(A))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:4.
│ Use `Base.eigfact(#s6::Type{Positive{T}}, A::AbstractMatrix{T}, args...; tol = default_tol(A)) where T` instead.
└ @ nothing eig.jl:4
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:3
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:3
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:3
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:14
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:14
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:14
┌ Warning: Deprecated syntax `parametric method syntax Base.eigfact{T}(::Type{Positive{T}}, A::AbstractMatrix, args...; tol = default_tol(A))` around /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:15.
│ Use `Base.eigfact(#s6::Type{Positive{T}}, A::AbstractMatrix, args...; tol = default_tol(A)) where T` instead.
└ @ nothing eig.jl:15
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:15
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:15
WARNING: Base.eigfact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/PositiveFactorizations/src/eig.jl:15
WARNING: importing deprecated binding Base.gradient into NLSolversBase.
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:60
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:60
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:61
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:61
WARNING: importing deprecated binding Base.clear! into LineSearches.
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/types.jl:20
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/types.jl:20
WARNING: importing deprecated binding Base.Associative into LineSearches.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/backtracking.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/strongwolfe.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/morethuente.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:446
WARNING: importing deprecated binding Base.@sprintf into LineSearches.
WARNING: Base.@sprintf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:319
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/static.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: importing deprecated binding Base.@printf into Optim.
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:43
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:49
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:93
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:93
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:103
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:103
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/types.jl:112
WARNING: importing deprecated binding Base.Void into Optim.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/objective_types.jl:24
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/objective_types.jl:38
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/objective_types.jl:170
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/objective_types.jl:170
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/objective_types.jl:170
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/objective_types.jl:171
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/objective_types.jl:171
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/Manifolds.jl:34
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/Manifolds.jl:37
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/zeroth_order/nelder_mead.jl:84
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/zeroth_order/nelder_mead.jl:84
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/zeroth_order/nelder_mead.jl:89
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/zeroth_order/nelder_mead.jl:89
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/zeroth_order/nelder_mead.jl:98
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/zeroth_order/nelder_mead.jl:98
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:25
WARNING: Base.A_ldiv_B! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:36
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:36
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:38
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:38
WARNING: Base.A_ldiv_B! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:47
WARNING: importing deprecated binding Base.Diagonal into Optim.
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:47
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:48
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:48
WARNING: Base.A_ldiv_B! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:57
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:58
WARNING: Base.A_ldiv_B! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/precon.jl:66
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/gradient_descent.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/gradient_descent.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/gradient_descent.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/cg.jl:44
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/cg.jl:44
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/cg.jl:44
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/l_bfgs.jl:82
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/l_bfgs.jl:82
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/first_order/l_bfgs.jl:82
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/second_order/newton.jl:30
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/second_order/newton.jl:30
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/second_order/newton.jl:30
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/second_order/krylov_trust_region.jl:1.
│ Use `struct` instead.
└ @ nothing krylov_trust_region.jl:1
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/second_order/krylov_trust_region.jl:9.
│ Use `struct` instead.
└ @ nothing krylov_trust_region.jl:9
┌ Warning: Deprecated syntax `parametric method syntax initial_state{T}(method::KrylovTrustRegion, options, d, initial_x::Array{T})` around /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/second_order/krylov_trust_region.jl:58.
│ Use `initial_state(method::KrylovTrustRegion, options, d, initial_x::Array{T}) where T` instead.
└ @ nothing krylov_trust_region.jl:58
┌ Warning: Deprecated syntax `parametric method syntax cg_steihaug!{T}(objective::TwiceDifferentiableHV, state::KrylovTrustRegionState{T}, method::KrylovTrustRegion)` around /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/second_order/krylov_trust_region.jl:119.
│ Use `cg_steihaug!(objective::TwiceDifferentiableHV, state::KrylovTrustRegionState{T}, method::KrylovTrustRegion) where T` instead.
└ @ nothing krylov_trust_region.jl:119
┌ Warning: Deprecated syntax `parametric method syntax update_state!{T}(objective::TwiceDifferentiableHV, state::KrylovTrustRegionState{T}, method::KrylovTrustRegion)` around /home/vagrant/.julia/v0.7/Optim/src/multivariate/solvers/second_order/krylov_trust_region.jl:172.
│ Use `update_state!(objective::TwiceDifferentiableHV, state::KrylovTrustRegionState{T}, method::KrylovTrustRegion) where T` instead.
└ @ nothing krylov_trust_region.jl:172
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:2
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:7
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:7
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:16
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:22
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:26
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:26
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:35
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:41
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:41
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:41
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:41
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:41
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:41
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:41
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/Optim/src/univariate/printing.jl:41
WARNING: importing deprecated binding Base.dot into RationalFunctions.
WARNING: could not import Base.num into RationalFunctions
WARNING: could not import Base.den into RationalFunctions
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:52.
│ Use `struct` instead.
└ @ nothing type.jl:52
┌ Warning: Deprecated syntax `parametric method syntax (::Type{RationalFunction}){U <: Number, V <: Number}(num::Poly{U}, den::Poly{V}, ::Type{Val{:conj}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:59.
│ Use `(::Type{RationalFunction})(num::Poly{U}, den::Poly{V}, #unused#::Type{Val{:conj}}) where {U <: Number, V <: Number}` instead.
└ @ nothing type.jl:59
┌ Warning: Deprecated syntax `parametric method syntax (::Type{RationalFunction}){U <: Number, V <: Number}(num::Poly{U}, den::Poly{V}, ::Type{Val{:notc}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:67.
│ Use `(::Type{RationalFunction})(num::Poly{U}, den::Poly{V}, #unused#::Type{Val{:notc}}) where {U <: Number, V <: Number}` instead.
└ @ nothing type.jl:67
┌ Warning: Deprecated syntax `parametric method syntax (::Type{RationalFunction}){U <: Number, V <: Number}(num::Poly{U}, den::Poly{V})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:75.
│ Use `(::Type{RationalFunction})(num::Poly{U}, den::Poly{V}) where {U <: Number, V <: Number}` instead.
└ @ nothing type.jl:75
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Poly, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:84.
│ Use `RationalFunction(num::Poly, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:84
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Number, den::Poly, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:88.
│ Use `RationalFunction(num::Number, den::Poly, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:88
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Poly, den::Number, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:91.
│ Use `RationalFunction(num::Poly, den::Number, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:91
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Vector, den::Poly, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:94.
│ Use `RationalFunction(num::Vector, den::Poly, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:94
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Poly, den::Vector, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:97.
│ Use `RationalFunction(num::Poly, den::Vector, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:97
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Vector, den::Vector, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:102.
│ Use `RationalFunction(num::Vector, den::Vector, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:102
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Number, den::Number, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:105.
│ Use `RationalFunction(num::Number, den::Number, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:105
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Vector, den::Number, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:108.
│ Use `RationalFunction(num::Vector, den::Number, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:108
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S}(num::Number, den::Vector, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:111.
│ Use `RationalFunction(num::Number, den::Vector, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc}) where S` instead.
└ @ nothing type.jl:111
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S, U <: Number}(num::Vector{U}, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:115.
│ Use `RationalFunction(num::Vector{U}, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc}) where {S, U <: Number}` instead.
└ @ nothing type.jl:115
┌ Warning: Deprecated syntax `parametric method syntax RationalFunction{S, U <: Number}(num::U, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/type.jl:119.
│ Use `RationalFunction(num::U, var::SymbolLike = :x, conj::Type{Val{S}} = Val{:notc}) where {S, U <: Number}` instead.
└ @ nothing type.jl:119
┌ Warning: Deprecated syntax `parametric method syntax summary{T, S, U, V}(::RationalFunction{Val{T}, Val{S}, U, V})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/printing.jl:1.
│ Use `summary(#unused#::RationalFunction{Val{T}, Val{S}, U, V}) where {T, S, U, V}` instead.
└ @ nothing printing.jl:1
┌ Warning: Deprecated syntax `parametric method syntax _compact{T, S}(stream, ::Base.MIME{:text/plain}, r::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/printing.jl:5.
│ Use `_compact(stream, #unused#::Base.MIME{:text/plain}, r::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing printing.jl:5
┌ Warning: Deprecated syntax `parametric method syntax _compact{T, S}(stream, ::Base.MIME{:text/latex}, r::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/printing.jl:11.
│ Use `_compact(stream, #unused#::Base.MIME{:text/latex}, r::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing printing.jl:11
┌ Warning: Deprecated syntax `parametric method syntax _full{T, S}(stream, m::Base.MIME{:text/plain}, r::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/printing.jl:22.
│ Use `_full(stream, m::Base.MIME{:text/plain}, r::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing printing.jl:22
┌ Warning: Deprecated syntax `parametric method syntax _full{T, S}(stream, m::Base.MIME{:text/latex}, r::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/printing.jl:33.
│ Use `_full(stream, m::Base.MIME{:text/latex}, r::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing printing.jl:33
┌ Warning: Deprecated syntax `parametric method syntax promote_rule{T, S, U1, V1, U2, V2}(::Type{RationalFunction{Val{T}, Val{S}, U1, V1}}, ::Type{RationalFunction{Val{T}, Val{S}, U2, V2}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/conversions.jl:3.
│ Use `promote_rule(#unused#::Type{RationalFunction{Val{T}, Val{S}, U1, V1}}, #unused#::Type{RationalFunction{Val{T}, Val{S}, U2, V2}}) where {T, S, U1, V1, U2, V2}` instead.
└ @ nothing conversions.jl:3
┌ Warning: Deprecated syntax `parametric method syntax convert{T, S, U1, V1, U2, V2}(::Type{RationalFunction{Val{T}, Val{S}, U1, V1}}, r::RationalFunction{Val{T}, Val{S}, U2, V2})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/conversions.jl:6.
│ Use `convert(#unused#::Type{RationalFunction{Val{T}, Val{S}, U1, V1}}, r::RationalFunction{Val{T}, Val{S}, U2, V2}) where {T, S, U1, V1, U2, V2}` instead.
└ @ nothing conversions.jl:6
┌ Warning: Deprecated syntax `parametric method syntax convert{T, S, U, V}(::Type{RationalFunction{Val{T}, Val{S}, U, V}}, r::RationalFunction{Val{T}, Val{S}, U, V})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/conversions.jl:9.
│ Use `convert(#unused#::Type{RationalFunction{Val{T}, Val{S}, U, V}}, r::RationalFunction{Val{T}, Val{S}, U, V}) where {T, S, U, V}` instead.
└ @ nothing conversions.jl:9
┌ Warning: Deprecated syntax `parametric method syntax convert{T, S1, S2, U1, V1, U2, V2}(::Type{RationalFunction{Val{T}, Val{S1}, U1, V1}}, r::RationalFunction{Val{T}, Val{S2}, U2, V2})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/conversions.jl:12.
│ Use `convert(#unused#::Type{RationalFunction{Val{T}, Val{S1}, U1, V1}}, r::RationalFunction{Val{T}, Val{S2}, U2, V2}) where {T, S1, S2, U1, V1, U2, V2}` instead.
└ @ nothing conversions.jl:12
┌ Warning: Deprecated syntax `parametric method syntax promote_rule{T, S, U, V, Y <: Number}(::Type{RationalFunction{Val{T}, Val{S}, U, V}}, ::Type{Y})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/conversions.jl:17.
│ Use `promote_rule(#unused#::Type{RationalFunction{Val{T}, Val{S}, U, V}}, #unused#::Type{Y}) where {T, S, U, V, Y <: Number}` instead.
└ @ nothing conversions.jl:17
┌ Warning: Deprecated syntax `parametric method syntax convert{T, S, U, V}(::Type{RationalFunction{Val{T}, Val{S}, U, V}}, n::Number)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/conversions.jl:19.
│ Use `convert(#unused#::Type{RationalFunction{Val{T}, Val{S}, U, V}}, n::Number) where {T, S, U, V}` instead.
└ @ nothing conversions.jl:19
┌ Warning: Deprecated syntax `parametric method syntax promote_rule{T, S, U, V, Y <: Number}(::Type{RationalFunction{Val{T}, Val{S}, U, V}}, ::Type{Poly{Y}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/conversions.jl:24.
│ Use `promote_rule(#unused#::Type{RationalFunction{Val{T}, Val{S}, U, V}}, #unused#::Type{Poly{Y}}) where {T, S, U, V, Y <: Number}` instead.
└ @ nothing conversions.jl:24
┌ Warning: Deprecated syntax `parametric method syntax convert{T, S, U, V}(::Type{RationalFunction{Val{T}, Val{S}, U, V}}, p::Poly)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/conversions.jl:26.
│ Use `convert(#unused#::Type{RationalFunction{Val{T}, Val{S}, U, V}}, p::Poly) where {T, S, U, V}` instead.
└ @ nothing conversions.jl:26
┌ Warning: Deprecated syntax `parametric method syntax copy{T, S}(r::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:2.
│ Use `copy(r::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:2
┌ Warning: Deprecated syntax `parametric method syntax eltype{T, S, U, V}(::Type{RationalFunction{T, S, U, V}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:5.
│ Use `eltype(#unused#::Type{RationalFunction{T, S, U, V}}) where {T, S, U, V}` instead.
└ @ nothing methods.jl:5
┌ Warning: Deprecated syntax `parametric method syntax eltype{T, S, U, V}(r::RationalFunction{T, S, U, V})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:6.
│ Use `eltype(r::RationalFunction{T, S, U, V}) where {T, S, U, V}` instead.
└ @ nothing methods.jl:6
┌ Warning: Deprecated syntax `parametric method syntax variable{T, S, U, V}(::Type{RationalFunction{Val{T}, Val{S}, U, V}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:42.
│ Use `variable(#unused#::Type{RationalFunction{Val{T}, Val{S}, U, V}}) where {T, S, U, V}` instead.
└ @ nothing methods.jl:42
┌ Warning: Deprecated syntax `parametric method syntax variable{T, S, U, V}(r::RationalFunction{Val{T}, Val{S}, U, V})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:44.
│ Use `variable(r::RationalFunction{Val{T}, Val{S}, U, V}) where {T, S, U, V}` instead.
└ @ nothing methods.jl:44
┌ Warning: Deprecated syntax `parametric method syntax one{T, S, U, V}(::Type{RationalFunction{Val{T}, Val{S}, U, V}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:84.
│ Use `one(#unused#::Type{RationalFunction{Val{T}, Val{S}, U, V}}) where {T, S, U, V}` instead.
└ @ nothing methods.jl:84
┌ Warning: Deprecated syntax `parametric method syntax one{T, S}(r::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:86.
│ Use `one(r::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:86
┌ Warning: Deprecated syntax `parametric method syntax zero{T, S, U, V}(::Type{RationalFunction{Val{T}, Val{S}, U, V}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:88.
│ Use `zero(#unused#::Type{RationalFunction{Val{T}, Val{S}, U, V}}) where {T, S, U, V}` instead.
└ @ nothing methods.jl:88
┌ Warning: Deprecated syntax `parametric method syntax zero{T, S}(r::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:90.
│ Use `zero(r::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:90
┌ Warning: Deprecated syntax `parametric method syntax hash{T, S}(r::RationalFunction{Val{T}, Val{S}}, h::UInt)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:94.
│ Use `hash(r::RationalFunction{Val{T}, Val{S}}, h::UInt) where {T, S}` instead.
└ @ nothing methods.jl:94
┌ Warning: Deprecated syntax `parametric method syntax =={T, S}(r1::RationalFunction{T, S}, r2::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:97.
│ Use `==(r1::RationalFunction{T, S}, r2::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:97
┌ Warning: Deprecated syntax `parametric method syntax isequal{T, S}(r1::RationalFunction{T, S}, r2::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:101.
│ Use `isequal(r1::RationalFunction{T, S}, r2::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:101
┌ Warning: Deprecated syntax `parametric method syntax eps{T <: AbstractFloat}(::Type{T})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:105.
│ Use `eps(#unused#::Type{T}) where T <: AbstractFloat` instead.
└ @ nothing methods.jl:105
┌ Warning: Deprecated syntax `parametric method syntax eps{T <: AbstractFloat}(::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:106.
│ Use `eps(#unused#::Type{Complex{T}}) where T <: AbstractFloat` instead.
└ @ nothing methods.jl:106
┌ Warning: Deprecated syntax `parametric method syntax eps{T}(::Type{T})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:107.
│ Use `eps(#unused#::Type{T}) where T` instead.
└ @ nothing methods.jl:107
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T, S, U1, V1, U2, V2}(r1::RationalFunction{Val{T}, Val{S}, U1, V1}, r2::RationalFunction{Val{T}, Val{S}, U2, V2}; rtol::Real = sqrt(eps(promote_type(U1, V2, U2, V2))), atol::Real = 0)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:112.
│ Use `isapprox(r1::RationalFunction{Val{T}, Val{S}, U1, V1}, r2::RationalFunction{Val{T}, Val{S}, U2, V2}; rtol::Real = sqrt(eps(promote_type(U1, V2, U2, V2))), atol::Real = 0) where {T, S, U1, V1, U2, V2}` instead.
└ @ nothing methods.jl:112
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T1, S1, T2, S2}(r1::RationalFunction{Val{T1}, Val{S1}}, r2::RationalFunction{Val{T2}, Val{S2}}; rtol::Real = 0, atol::Real = 0)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:120.
│ Use `isapprox(r1::RationalFunction{Val{T1}, Val{S1}}, r2::RationalFunction{Val{T2}, Val{S2}}; rtol::Real = 0, atol::Real = 0) where {T1, S1, T2, S2}` instead.
└ @ nothing methods.jl:120
┌ Warning: Deprecated syntax `parametric method syntax (r::RationalFunction{T, Val{:conj}}){T}(x::Number)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:146.
│ Use `(r::RationalFunction{T, Val{:conj}})(x::Number) where T` instead.
└ @ nothing methods.jl:146
┌ Warning: Deprecated syntax `parametric method syntax (r::RationalFunction{T, Val{:conj}}){T}(x::Real)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:147.
│ Use `(r::RationalFunction{T, Val{:conj}})(x::Real) where T` instead.
└ @ nothing methods.jl:147
┌ Warning: Deprecated syntax `parametric method syntax inv{T, S}(r::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:198.
│ Use `inv(r::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:198
┌ Warning: Deprecated syntax `parametric method syntax conj{T, S}(r::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:205.
│ Use `conj(r::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing methods.jl:205
┌ Warning: Deprecated syntax `parametric method syntax conj{T, S, U, V}(m::AbstractArray{RationalFunction{Val{T}, Val{S}, U, V}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:210.
│ Use `conj(m::AbstractArray{RationalFunction{Val{T}, Val{S}, U, V}}) where {T, S, U, V}` instead.
└ @ nothing methods.jl:210
┌ Warning: Deprecated syntax `parametric method syntax derivative{T, S}(r::RationalFunction{T, S}, n::Int = 1)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:219.
│ Use `derivative(r::RationalFunction{T, S}, n::Int = 1) where {T, S}` instead.
└ @ nothing methods.jl:219
┌ Warning: Deprecated syntax `parametric method syntax reduce{T, S}(r::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:245.
│ Use `reduce(r::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:245
┌ Warning: Deprecated syntax `parametric method syntax +{T, S}(r1::RationalFunction{Val{T}, Val{S}}, r2::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:255.
│ Use `+(r1::RationalFunction{Val{T}, Val{S}}, r2::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing methods.jl:255
┌ Warning: Deprecated syntax `parametric method syntax +{T1, S1, T2, S2}(r1::RationalFunction{Val{T1}, Val{S1}}, r2::RationalFunction{Val{T2}, Val{S2}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:266.
│ Use `+(r1::RationalFunction{Val{T1}, Val{S1}}, r2::RationalFunction{Val{T2}, Val{S2}}) where {T1, S1, T2, S2}` instead.
└ @ nothing methods.jl:266
┌ Warning: Deprecated syntax `parametric method syntax *{T, S}(r1::RationalFunction{Val{T}, Val{S}}, r2::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:271.
│ Use `*(r1::RationalFunction{Val{T}, Val{S}}, r2::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing methods.jl:271
┌ Warning: Deprecated syntax `parametric method syntax *{T1, S1, T2, S2}(r1::RationalFunction{Val{T1}, Val{S1}}, r2::RationalFunction{Val{T2}, Val{S2}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:277.
│ Use `*(r1::RationalFunction{Val{T1}, Val{S1}}, r2::RationalFunction{Val{T2}, Val{S2}}) where {T1, S1, T2, S2}` instead.
└ @ nothing methods.jl:277
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:281
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:281
┌ Warning: Deprecated syntax `parametric method syntax /{T, S}(r1::RationalFunction{Val{T}, Val{S}}, r2::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:284.
│ Use `/(r1::RationalFunction{Val{T}, Val{S}}, r2::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing methods.jl:284
┌ Warning: Deprecated syntax `parametric method syntax /{T1, S1, T2, S2}(r1::RationalFunction{Val{T1}, Val{S1}}, r2::RationalFunction{Val{T2}, Val{S2}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:290.
│ Use `/(r1::RationalFunction{Val{T1}, Val{S1}}, r2::RationalFunction{Val{T2}, Val{S2}}) where {T1, S1, T2, S2}` instead.
└ @ nothing methods.jl:290
┌ Warning: Deprecated syntax `parametric method syntax -{T, S}(r::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:294.
│ Use `-(r::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:294
┌ Warning: Deprecated syntax `function .+(...)`.
│ Use `function Base.broadcast(::typeof(+), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .*(...)`.
│ Use `function Base.broadcast(::typeof(*), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function ./(...)`.
│ Use `function Base.broadcast(::typeof(/), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .-(...)`.
│ Use `function Base.broadcast(::typeof(-), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T, S, U, V, Z <: Number}(r::RationalFunction{T, S, U, V}, n::Z; rtol::Real = sqrt(eps(promote_type(U, V, Z))), atol::Real = 0)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:307.
│ Use `isapprox(r::RationalFunction{T, S, U, V}, n::Z; rtol::Real = sqrt(eps(promote_type(U, V, Z))), atol::Real = 0) where {T, S, U, V, Z <: Number}` instead.
└ @ nothing methods.jl:307
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T, S, U, V, Z <: Number}(n::Z, r::RationalFunction{T, S, U, V}; rtol::Real = sqrt(eps(promote_type(U, V, Z))), atol::Real = 0)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:310.
│ Use `isapprox(n::Z, r::RationalFunction{T, S, U, V}; rtol::Real = sqrt(eps(promote_type(U, V, Z))), atol::Real = 0) where {T, S, U, V, Z <: Number}` instead.
└ @ nothing methods.jl:310
┌ Warning: Deprecated syntax `parametric method syntax +{T, S}(r::RationalFunction{T, S}, n::Number)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:313.
│ Use `+(r::RationalFunction{T, S}, n::Number) where {T, S}` instead.
└ @ nothing methods.jl:313
┌ Warning: Deprecated syntax `parametric method syntax *{T, S}(r::RationalFunction{T, S}, n::Number)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:315.
│ Use `*(r::RationalFunction{T, S}, n::Number) where {T, S}` instead.
└ @ nothing methods.jl:315
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:317
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:317
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:318
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:318
┌ Warning: Deprecated syntax `parametric method syntax /{T, S}(r::RationalFunction{T, S}, n::Number)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:319.
│ Use `/(r::RationalFunction{T, S}, n::Number) where {T, S}` instead.
└ @ nothing methods.jl:319
┌ Warning: Deprecated syntax `parametric method syntax /{T, S}(n::Number, r::RationalFunction{T, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:320.
│ Use `/(n::Number, r::RationalFunction{T, S}) where {T, S}` instead.
└ @ nothing methods.jl:320
┌ Warning: Deprecated syntax `function .+(...)`.
│ Use `function Base.broadcast(::typeof(+), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .*(...)`.
│ Use `function Base.broadcast(::typeof(*), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function ./(...)`.
│ Use `function Base.broadcast(::typeof(/), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .-(...)`.
│ Use `function Base.broadcast(::typeof(-), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .+(...)`.
│ Use `function Base.broadcast(::typeof(+), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .*(...)`.
│ Use `function Base.broadcast(::typeof(*), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function ./(...)`.
│ Use `function Base.broadcast(::typeof(/), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .-(...)`.
│ Use `function Base.broadcast(::typeof(-), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `parametric method syntax =={T, S}(r::RationalFunction{Val{T}, S}, p::Poly)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:336.
│ Use `==(r::RationalFunction{Val{T}, S}, p::Poly) where {T, S}` instead.
└ @ nothing methods.jl:336
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T, S, U, V, Z <: Number}(r::RationalFunction{Val{T}, S, U, V}, p::Poly{Z}; rtol::Real = sqrt(eps(promote_type(U, V, Z))), atol::Real = 0)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:343.
│ Use `isapprox(r::RationalFunction{Val{T}, S, U, V}, p::Poly{Z}; rtol::Real = sqrt(eps(promote_type(U, V, Z))), atol::Real = 0) where {T, S, U, V, Z <: Number}` instead.
└ @ nothing methods.jl:343
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T, S, U, V, Z <: Number}(p::Poly{Z}, r::RationalFunction{Val{T}, S, U, V}; rtol::Real = sqrt(eps(promote_type(U, V, Z))), atol::Real = 0)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:350.
│ Use `isapprox(p::Poly{Z}, r::RationalFunction{Val{T}, S, U, V}; rtol::Real = sqrt(eps(promote_type(U, V, Z))), atol::Real = 0) where {T, S, U, V, Z <: Number}` instead.
└ @ nothing methods.jl:350
┌ Warning: Deprecated syntax `parametric method syntax +{T, S}(r::RationalFunction{Val{T}, S}, p::Poly)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:354.
│ Use `+(r::RationalFunction{Val{T}, S}, p::Poly) where {T, S}` instead.
└ @ nothing methods.jl:354
┌ Warning: Deprecated syntax `parametric method syntax *{T, S}(r::RationalFunction{Val{T}, S}, p::Poly)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:363.
│ Use `*(r::RationalFunction{Val{T}, S}, p::Poly) where {T, S}` instead.
└ @ nothing methods.jl:363
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:370
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:370
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:371
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:371
┌ Warning: Deprecated syntax `parametric method syntax /{T, S}(r::RationalFunction{Val{T}, S}, p::Poly)` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:374.
│ Use `/(r::RationalFunction{Val{T}, S}, p::Poly) where {T, S}` instead.
└ @ nothing methods.jl:374
┌ Warning: Deprecated syntax `parametric method syntax /{T, S}(p::Poly, r::RationalFunction{Val{T}, S})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:382.
│ Use `/(p::Poly, r::RationalFunction{Val{T}, S}) where {T, S}` instead.
└ @ nothing methods.jl:382
┌ Warning: Deprecated syntax `function .+(...)`.
│ Use `function Base.broadcast(::typeof(+), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .*(...)`.
│ Use `function Base.broadcast(::typeof(*), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function ./(...)`.
│ Use `function Base.broadcast(::typeof(/), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .-(...)`.
│ Use `function Base.broadcast(::typeof(-), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .+(...)`.
│ Use `function Base.broadcast(::typeof(+), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .*(...)`.
│ Use `function Base.broadcast(::typeof(*), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function ./(...)`.
│ Use `function Base.broadcast(::typeof(/), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `function .-(...)`.
│ Use `function Base.broadcast(::typeof(-), ...)` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `parametric method syntax solve{T, S}(lhs::RationalFunction{Val{T}, Val{S}}, rhs::RationalFunction{Val{T}, Val{S}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:428.
│ Use `solve(lhs::RationalFunction{Val{T}, Val{S}}, rhs::RationalFunction{Val{T}, Val{S}}) where {T, S}` instead.
└ @ nothing methods.jl:428
┌ Warning: Deprecated syntax `parametric method syntax solve{T1, S1, T2, S2}(lhs::RationalFunction{Val{T1}, Val{S1}}, rhs::RationalFunction{Val{T2}, Val{S2}})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:434.
│ Use `solve(lhs::RationalFunction{Val{T1}, Val{S1}}, rhs::RationalFunction{Val{T2}, Val{S2}}) where {T1, S1, T2, S2}` instead.
└ @ nothing methods.jl:434
┌ Warning: Deprecated syntax `parametric method syntax residue{T <: Number}(num::Vector{T}, den::Vector{T})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:520.
│ Use `residue(num::Vector{T}, den::Vector{T}) where T <: Number` instead.
└ @ nothing methods.jl:520
┌ Warning: Deprecated syntax `parametric method syntax residue{T <: Number, S <: Number, U <: Number}(r::Vector{T}, p::Vector{S}, k::Vector{U})` around /home/vagrant/.julia/v0.7/RationalFunctions/src/methods.jl:557.
│ Use `residue(r::Vector{T}, p::Vector{S}, k::Vector{U}) where {T <: Number, S <: Number, U <: Number}` instead.
└ @ nothing methods.jl:557
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: importing deprecated binding Base.A_ldiv_B! into DiffEqBase.
┌ Warning: Deprecated syntax `parametric method syntax realtype{T}(::Type{T})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/utils.jl:41.
│ Use `realtype(#unused#::Type{T}) where T` instead.
└ @ nothing utils.jl:41
┌ Warning: Deprecated syntax `parametric method syntax realtype{T}(::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/utils.jl:42.
│ Use `realtype(#unused#::Type{Complex{T}}) where T` instead.
└ @ nothing utils.jl:42
ERROR: LoadError: LoadError: UndefVarError: TypeName not defined
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:295 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1066
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/DiffEqBase/src/DiffEqBase.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:295 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1066
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] top-level scope
 [11] eval at ./boot.jl:298 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/DiffEqBase/src/utils.jl:46
in expression starting at /home/vagrant/.julia/v0.7/DiffEqBase/src/DiffEqBase.jl:175
ERROR: LoadError: Failed to precompile DiffEqBase to /home/vagrant/.julia/lib/v0.7/DiffEqBase.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1211
 [3] _require(::Base.PkgId) at ./loading.jl:974
 [4] require(::Module, ::Symbol) at ./loading.jl:874
 [5] include at ./boot.jl:295 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1066
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] top-level scope
 [9] eval at ./boot.jl:298 [inlined]
 [10] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/LTISystems/src/LTISystems.jl:9
ERROR: LoadError: LoadError: Failed to precompile LTISystems to /home/vagrant/.julia/lib/v0.7/LTISystems.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1211
 [3] _require(::Base.PkgId) at ./loading.jl:1003
 [4] require(::Module, ::Symbol) at ./loading.jl:874
 [5] include at ./boot.jl:295 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1066
 [7] _require(::Base.PkgId) at ./loading.jl:993
 [8] require(::Module, ::Symbol) at ./loading.jl:874
 [9] include at ./boot.jl:295 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1066
 [11] include(::Module, ::String) at ./sysimg.jl:26
 [12] exec_options(::Base.JLOptions) at ./client.jl:332
 [13] _start() at ./client.jl:448
in expression starting at /home/vagrant/.julia/v0.7/ControlToolbox/src/ControlToolbox.jl:8
in expression starting at /home/vagrant/.julia/v0.7/ControlToolbox/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for ControlToolbox
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ControlToolbox/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:298 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:734
[ Info: Removing NLopt v0.3.6
ERROR: ControlToolbox had test errors

>>> End of log
